import{Aa as g1,Db as S1,Eb as N1,Fb as T1,Gb as Py,Hb as _1,Ib as C1,R as o1,Ra as wr,Rb as E1,V as l1,X as u1,Xa as Oy,Ya as Ly,Yb as Dh,_ as Jo,ab as $h,c as s1,da as d1,fa as p1,fb as y1,g as i1,ga as h1,gb as Ah,ha as My,hc as $1,ia as c1,ma as m1,mb as Yo,nb as Qo,ob as Cs,pb as b1,qb as x1,rb as v1,sa as dd,sb as Or,ta as _s,tb as Lr,ua as f1,ub as el,vb as Fh,wb as w1,yb as k1,zb as I1}from"./chunk-MJJLD7AI.js";import{a as On,b as Ca,c as Ts}from"./chunk-HZ6M6AS2.js";function VD(e){e||(d1(VD),e=Jo(m1));let t=new s1(n=>e.onDestroy(n.next.bind(n)));return n=>n.pipe(o1(t))}var $ye=(()=>{class e{constructor(){this.viewPortSubject=new i1(!1),this.viewPortChanges=this.viewPortSubject.asObservable(),this.refResize=()=>this.viewPortSubject.next(!0),this.refOrientationChange=()=>this.viewPortSubject.next(!0),window.addEventListener("resize",this.refResize),window.addEventListener("orientationchange",this.refOrientationChange)}ngOnDestroy(){window.removeEventListener("resize",this.refResize),window.removeEventListener("orientationchange",this.refOrientationChange)}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275prov=l1({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();var UD=Object.defineProperty,GD=(e=>typeof Ts<"u"?Ts:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof Ts<"u"?Ts:t)[n]}):e)(function(e){if(typeof Ts<"u")return Ts.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),px=(e,t)=>{for(var n in t)UD(e,n,{get:t[n],enumerable:!0})},HD={};px(HD,{Abs:()=>Dl,Acos:()=>pi,Acosh:()=>hi,AdadeltaOptimizer:()=>Fv,AdagradOptimizer:()=>Dv,AdamOptimizer:()=>Rv,AdamaxOptimizer:()=>Mv,Add:()=>is,AddN:()=>ci,All:()=>Rl,Any:()=>Ml,ArgMax:()=>Ol,ArgMin:()=>Ll,Asin:()=>mi,Asinh:()=>fi,Atan:()=>gi,Atan2:()=>bi,Atanh:()=>yi,AvgPool:()=>xi,AvgPool3D:()=>Pl,AvgPool3DGrad:()=>ep,AvgPoolGrad:()=>Qd,BackendWasm:()=>pF,BatchMatMul:()=>vi,BatchToSpaceND:()=>zl,Bincount:()=>Bl,BitwiseAnd:()=>Wl,BroadcastArgs:()=>tp,BroadcastTo:()=>DI,Callback:()=>u_,CallbackList:()=>_2,Cast:()=>wi,Ceil:()=>ki,ClipByValue:()=>os,Complex:()=>Wc,ComplexAbs:()=>np,Concat:()=>Vl,Conv2D:()=>Ii,Conv2DBackpropFilter:()=>Vc,Conv2DBackpropInput:()=>Si,Conv3D:()=>Ni,Conv3DBackpropFilterV2:()=>Ul,Conv3DBackpropInputV2:()=>Gl,Cos:()=>Ti,Cosh:()=>_i,CropAndResize:()=>jl,Cumprod:()=>Hl,Cumsum:()=>Ci,CustomCallback:()=>E2,DataStorage:()=>Pc,DenseBincount:()=>rp,DepthToSpace:()=>ql,DepthwiseConv2dNative:()=>Ei,DepthwiseConv2dNativeBackpropFilter:()=>Uc,DepthwiseConv2dNativeBackpropInput:()=>Gc,Diag:()=>ap,Dilation2D:()=>$i,Dilation2DBackpropFilter:()=>ml,Dilation2DBackpropInput:()=>cl,Draw:()=>Hc,ENV:()=>gx,EarlyStopping:()=>d_,Einsum:()=>jc,Elu:()=>Fi,EluGrad:()=>Kl,Environment:()=>AI,Equal:()=>Xl,Erf:()=>Di,Exp:()=>Ri,ExpandDims:()=>Zl,Expm1:()=>Mi,FFT:()=>qc,Fill:()=>sp,FlipLeftRight:()=>Jl,Floor:()=>Oi,FloorDiv:()=>Li,FromPixels:()=>uc,FusedBatchNorm:()=>Pi,FusedConv2D:()=>qs,FusedDepthwiseConv2D:()=>Ks,GPGPUContext:()=>ac,GatherNd:()=>Ql,GatherV2:()=>Yl,GraphModel:()=>Fw,Greater:()=>eu,GreaterEqual:()=>zi,History:()=>C2,IFFT:()=>Kc,Identity:()=>Bi,Imag:()=>Xc,InputSpec:()=>At,IsFinite:()=>Wi,IsInf:()=>Vi,IsNan:()=>Ui,KernelBackend:()=>Jd,LRN:()=>qi,LRNGrad:()=>ou,LayerVariable:()=>g2,LayersModel:()=>ca,LeakyRelu:()=>Gi,Less:()=>tu,LessEqual:()=>nu,LinSpace:()=>ru,Log:()=>Hi,Log1p:()=>ji,LogSoftmax:()=>MI,LogicalAnd:()=>au,LogicalNot:()=>su,LogicalOr:()=>iu,LogicalXor:()=>RI,LowerBound:()=>OR,MathBackendCPU:()=>Mw,MathBackendWebGL:()=>r$,MatrixBandPart:()=>LR,Max:()=>Ki,MaxPool:()=>Zi,MaxPool3D:()=>lu,MaxPool3DGrad:()=>op,MaxPoolGrad:()=>ip,MaxPoolWithArgmax:()=>lp,Maximum:()=>Xi,Mean:()=>Ji,Min:()=>Yi,Minimum:()=>Qi,MirrorPad:()=>eo,Mod:()=>to,MomentumOptimizer:()=>Ov,Multinomial:()=>uu,Multiply:()=>no,Neg:()=>du,NonMaxSuppressionV3:()=>hu,NonMaxSuppressionV4:()=>cu,NonMaxSuppressionV5:()=>mu,NotEqual:()=>pu,OP_SCOPE_SUFFIX:()=>wx,OneHot:()=>ro,OnesLike:()=>fu,Optimizer:()=>ka,OptimizerConstructors:()=>UN,Pack:()=>gu,PadV2:()=>ao,Pool:()=>PR,Pow:()=>so,Prelu:()=>io,Prod:()=>oo,RMSPropOptimizer:()=>Lv,RNN:()=>fs,RaggedGather:()=>Zc,RaggedRange:()=>Jc,RaggedTensorToTensor:()=>Yc,Range:()=>up,Rank:()=>ib,Real:()=>Qc,RealDiv:()=>Ai,Reciprocal:()=>lo,Reduction:()=>cn,Relu:()=>uo,Relu6:()=>co,Reshape:()=>yu,ResizeBilinear:()=>ho,ResizeBilinearGrad:()=>xu,ResizeNearestNeighbor:()=>po,ResizeNearestNeighborGrad:()=>bu,Reverse:()=>mo,RotateWithOffset:()=>Ru,Round:()=>fo,Rsqrt:()=>go,SGDOptimizer:()=>Mm,ScatterNd:()=>vu,SearchSorted:()=>ku,Select:()=>Iu,Selu:()=>yo,Sequential:()=>lw,Sigmoid:()=>wo,Sign:()=>vo,Sin:()=>bo,Sinh:()=>xo,Slice:()=>Su,Softmax:()=>No,Softplus:()=>ko,SpaceToBatchND:()=>Nu,SparseFillEmptyRows:()=>dp,SparseReshape:()=>_u,SparseSegmentMean:()=>pp,SparseSegmentSum:()=>hp,SparseToDense:()=>Cu,SplitV:()=>Tu,Sqrt:()=>Io,Square:()=>cp,SquaredDifference:()=>To,StaticRegexReplace:()=>mp,Step:()=>us,StridedSlice:()=>Eu,StringNGrams:()=>fp,StringSplit:()=>gp,StringToHashBucketFast:()=>yp,Sub:()=>_o,Sum:()=>So,SymbolicTensor:()=>Ar,Tan:()=>Co,Tanh:()=>Eo,Tensor:()=>De,TensorBuffer:()=>Ft,TensorScatterUpdate:()=>wu,Tile:()=>ls,TopK:()=>$u,Transform:()=>Au,Transpose:()=>ha,Unique:()=>bp,Unpack:()=>Fu,UnsortedSegmentSum:()=>xp,UpperBound:()=>zR,Variable:()=>Xs,ZerosLike:()=>Du,_FusedMatMul:()=>js,abs:()=>$t,acos:()=>_x,acosh:()=>Cx,add:()=>Z,addN:()=>lS,all:()=>am,any:()=>Od,argMax:()=>Js,argMin:()=>Ex,asin:()=>$x,asinh:()=>Ax,atan:()=>Fx,atan2:()=>Dx,atanh:()=>Rx,avgPool:()=>xa,avgPool3d:()=>Ox,backend:()=>Ix,backend_util:()=>T,basicLSTMCell:()=>hS,batchNorm:()=>$o,batchNorm2d:()=>Lx,batchNorm3d:()=>Px,batchNorm4d:()=>zx,batchToSpaceND:()=>Tp,bincount:()=>Bx,bitwiseAnd:()=>cS,booleanMaskAsync:()=>nN,broadcastArgs:()=>mS,broadcastTo:()=>Ws,broadcast_util:()=>Mu,browser:()=>zp,buffer:()=>Oe,callbacks:()=>eq,cast:()=>oe,ceil:()=>Wx,clipByValue:()=>ln,clone:()=>qr,complex:()=>fa,concat:()=>ot,concat1d:()=>Vx,concat2d:()=>Ux,concat3d:()=>Gx,concat4d:()=>Hx,constraints:()=>v2,conv1d:()=>sm,conv2d:()=>gn,conv2dTranspose:()=>im,conv3d:()=>qx,conv3dTranspose:()=>Kx,copyRegisteredKernels:()=>UR,cos:()=>_p,cosh:()=>om,cosineWindow:()=>$m,cumprod:()=>zd,cumsum:()=>lm,customGrad:()=>Yr,data:()=>R_,denseBincount:()=>cc,deprecationWarn:()=>kx,depthToSpace:()=>Xx,depthwiseConv2d:()=>Ao,deregisterOp:()=>rq,device_util:()=>Ip,diag:()=>gS,dilation2d:()=>Zx,disableDeprecationWarnings:()=>wM,dispose:()=>_e,disposeVariables:()=>kM,div:()=>ce,divNoNan:()=>Jx,dot:()=>Yx,dropout:()=>_v,einsum:()=>Ms,elu:()=>Ou,enableDebugMode:()=>vM,enableProdMode:()=>xM,enclosingPowerOfTwo:()=>Cv,engine:()=>cr,ensureShape:()=>bS,env:()=>G,equal:()=>Gn,erf:()=>um,euclideanNorm:()=>tv,exp:()=>un,expandDims:()=>Kt,expm1:()=>nv,eye:()=>dm,fft:()=>Lp,fill:()=>Un,findBackend:()=>CM,findBackendFactory:()=>EM,floor:()=>Pu,floorDiv:()=>rm,forceHalfFloat:()=>s$,fused:()=>Sl,gather:()=>zu,gatherND:()=>iN,gather_util:()=>Bv,getBackend:()=>XI,getGradient:()=>ab,getKernel:()=>Dd,getKernelsForBackend:()=>dc,getThreadsCount:()=>yfe,gpgpu_util:()=>ME,grad:()=>oL,grads:()=>lL,greater:()=>wn,greaterEqual:()=>va,ifft:()=>Il,imag:()=>Cp,image:()=>tr,inTopKAsync:()=>oN,initializers:()=>S2,input:()=>U2,io:()=>rn,irfft:()=>Im,isFinite:()=>rv,isInf:()=>av,isNaN:()=>sv,keep:()=>Lt,kernel_impls:()=>na,layers:()=>N2,leakyRelu:()=>Ep,less:()=>xl,lessEqual:()=>ps,linalg:()=>Av,linspace:()=>IS,loadGraphModel:()=>u5,loadGraphModelSync:()=>d5,loadLayersModel:()=>FH,localResponseNormalization:()=>iv,log:()=>Hn,log1p:()=>$p,logSigmoid:()=>ov,logSoftmax:()=>hm,logSumExp:()=>Ap,logicalAnd:()=>gr,logicalNot:()=>Fp,logicalOr:()=>cm,logicalXor:()=>lv,losses:()=>xN,lowerBound:()=>NS,matMul:()=>Re,math:()=>$N,max:()=>sr,maxPool:()=>Ht,maxPool3d:()=>uv,maxPoolWithArgmax:()=>TS,maximum:()=>ta,mean:()=>wt,memory:()=>hc,meshgrid:()=>_S,metrics:()=>i_,min:()=>bl,minimum:()=>Za,mirrorPad:()=>dv,mod:()=>pv,model:()=>MH,models:()=>o_,moments:()=>Dp,movingAverage:()=>rN,mul:()=>P,multiRNNCell:()=>CS,multinomial:()=>ES,neg:()=>mt,nextFrame:()=>Wv,norm:()=>Lu,notEqual:()=>ei,oneHot:()=>vl,ones:()=>Cn,onesLike:()=>jn,op:()=>L,outerProduct:()=>$S,pad:()=>Dr,pad1d:()=>AS,pad2d:()=>FS,pad3d:()=>DS,pad4d:()=>RS,pool:()=>hv,pow:()=>Jr,prelu:()=>Mp,print:()=>Tx,prod:()=>cv,profile:()=>IM,raggedGather:()=>MS,raggedRange:()=>OS,raggedTensorToTensor:()=>LS,rand:()=>PS,randomGamma:()=>VS,randomNormal:()=>fm,randomStandardNormal:()=>US,randomUniform:()=>hs,randomUniformInt:()=>GS,range:()=>ti,ready:()=>TM,real:()=>wl,reciprocal:()=>bv,registerBackend:()=>nm,registerCallbackConstructor:()=>LH,registerGradient:()=>OI,registerKernel:()=>vp,registerOp:()=>nq,regularizers:()=>l_,relu:()=>tt,relu6:()=>gm,removeBackend:()=>_M,reshape:()=>B,reverse:()=>lr,reverse1d:()=>HS,reverse2d:()=>jS,reverse3d:()=>qS,reverse4d:()=>KS,rfft:()=>Pp,round:()=>ym,rsqrt:()=>bm,scalar:()=>ve,scatterND:()=>aN,scatter_util:()=>Tm,searchSorted:()=>mm,selu:()=>xm,separableConv2d:()=>Bu,sequential:()=>OH,serialization:()=>ne,setBackend:()=>NM,setPlatform:()=>$M,setThreadsCount:()=>gfe,setWasmPath:()=>mfe,setWasmPaths:()=>ffe,setWebGLContext:()=>sE,setdiff1dAsync:()=>XS,shared:()=>Ow,sigmoid:()=>fr,sign:()=>xv,signal:()=>bN,sin:()=>vm,sinh:()=>wm,slice:()=>Ue,slice1d:()=>Op,slice2d:()=>km,slice3d:()=>Wu,slice4d:()=>kl,slice_util:()=>zt,softmax:()=>cs,softplus:()=>Fo,spaceToBatchND:()=>Rp,sparse:()=>vN,sparseToDense:()=>sN,spectral:()=>yN,split:()=>En,sqrt:()=>Jt,square:()=>it,squaredDifference:()=>Sm,squeeze:()=>ms,stack:()=>Dt,step:()=>Do,stridedSlice:()=>vv,string:()=>wN,sub:()=>he,sum:()=>fe,sumOutType:()=>tm,tan:()=>wv,tanh:()=>Xa,tensor:()=>fn,tensor1d:()=>Qe,tensor2d:()=>Kr,tensor3d:()=>Nm,tensor4d:()=>Ja,tensor5d:()=>ZS,tensor6d:()=>JS,tensorScatterUpdate:()=>QS,tensor_util:()=>Tr,test_util:()=>zS,tidy:()=>W,tile:()=>Vn,time:()=>SM,topk:()=>Iv,train:()=>Fs,transpose:()=>Me,truncatedNormal:()=>Cm,unique:()=>Sv,unregisterGradient:()=>VR,unregisterKernel:()=>WR,unsortedSegmentSum:()=>Em,unstack:()=>Nt,upcastType:()=>ir,upperBound:()=>eN,util:()=>w,valueAndGrad:()=>uL,valueAndGrads:()=>dL,variable:()=>Nv,variableGrads:()=>SS,version:()=>Sfe,version_converter:()=>h5,version_core:()=>RW,version_cpu:()=>c8,version_layers:()=>ow,version_wasm:()=>bfe,version_webgl:()=>nee,webgl:()=>ree,webgl_util:()=>aE,where:()=>Zt,whereAsync:()=>Tv,zeros:()=>kt,zerosLike:()=>Ge});var jD=Object.create,hx=Object.defineProperty,qD=Object.getOwnPropertyDescriptor,KD=Object.getOwnPropertyNames,XD=Object.getPrototypeOf,ZD=Object.prototype.hasOwnProperty,Mt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ce=(e,t)=>{for(var n in t)hx(e,n,{get:t[n],enumerable:!0})},JD=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of KD(t))!ZD.call(e,a)&&a!==n&&hx(e,a,{get:()=>t[a],enumerable:!(r=qD(t,a))||r.enumerable});return e},ss=(e,t,n)=>(n=e!=null?jD(XD(e)):{},JD(t||!e||!e.__esModule?hx(n,"default",{value:e,enumerable:!0}):n,e)),YD=Mt((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,M,z){this.low=S|0,this.high=M|0,this.unsigned=!!z}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,M){var z,U,H;return M?(S>>>=0,(H=0<=S&&S<256)&&(U=i[S],U)?U:(z=u(S,(S|0)<0?-1:0,!0),H&&(i[S]=z),z)):(S|=0,(H=-128<=S&&S<128)&&(U=s[S],U)?U:(z=u(S,S<0?-1:0,!1),H&&(s[S]=z),z))}r.fromInt=o;function l(S,M){if(isNaN(S))return M?v:x;if(M){if(S<0)return v;if(S>=g)return A}else{if(S<=-y)return D;if(S+1>=y)return E}return S<0?l(-S,M).neg():u(S%f|0,S/f|0,M)}r.fromNumber=l;function u(S,M,z){return new r(S,M,z)}r.fromBits=u;var d=Math.pow;function h(S,M,z){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof M=="number"?(z=M,M=!1):M=!!M,z=z||10,z<2||36<z)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return h(S.substring(1),M,z).neg();for(var H=l(d(z,8)),q=x,K=0;K<S.length;K+=8){var J=Math.min(8,S.length-K),Q=parseInt(S.substring(K,K+J),z);if(J<8){var ee=l(d(z,J));q=q.mul(ee).add(l(Q))}else q=q.mul(H),q=q.add(l(Q))}return q.unsigned=M,q}r.fromString=h;function p(S,M){return typeof S=="number"?l(S,M):typeof S=="string"?h(S,M):u(S.low,S.high,typeof M=="boolean"?M:S.unsigned)}r.fromValue=p;var c=65536,m=1<<24,f=c*c,g=f*f,y=g/2,b=o(m),x=o(0);r.ZERO=x;var v=o(0,!0);r.UZERO=v;var I=o(1);r.ONE=I;var N=o(1,!0);r.UONE=N;var _=o(-1);r.NEG_ONE=_;var E=u(-1,2147483647,!1);r.MAX_VALUE=E;var A=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var D=u(0,-2147483648,!1);r.MIN_VALUE=D;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(D)){var M=l(S),z=this.div(M),U=z.mul(M).sub(this);return z.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var H=l(d(S,6),this.unsigned),q=this,K="";;){var J=q.div(H),Q=q.sub(J.mul(H)).toInt()>>>0,ee=Q.toString(S);if(q=J,q.isZero())return ee+K;for(;ee.length<6;)ee="0"+ee;K=""+ee+K}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,M=31;M>0&&!(S&1<<M);M--);return this.high!=0?M+33:M+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=p(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=p(S)),this.eq(S))return 0;var M=this.isNegative(),z=S.isNegative();return M&&!z?-1:!M&&z?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=p(S));var M=this.high>>>16,z=this.high&65535,U=this.low>>>16,H=this.low&65535,q=S.high>>>16,K=S.high&65535,J=S.low>>>16,Q=S.low&65535,ee=0,re=0,te=0,ae=0;return ae+=H+Q,te+=ae>>>16,ae&=65535,te+=U+J,re+=te>>>16,te&=65535,re+=z+K,ee+=re>>>16,re&=65535,ee+=M+q,ee&=65535,u(te<<16|ae,ee<<16|re,this.unsigned)},F.subtract=function(S){return a(S)||(S=p(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=p(S)),n){var M=n.mul(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(D))return S.isOdd()?D:x;if(S.eq(D))return this.isOdd()?D:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var z=this.high>>>16,U=this.high&65535,H=this.low>>>16,q=this.low&65535,K=S.high>>>16,J=S.high&65535,Q=S.low>>>16,ee=S.low&65535,re=0,te=0,ae=0,se=0;return se+=q*ee,ae+=se>>>16,se&=65535,ae+=H*ee,te+=ae>>>16,ae&=65535,ae+=q*Q,te+=ae>>>16,ae&=65535,te+=U*ee,re+=te>>>16,te&=65535,te+=H*Q,re+=te>>>16,te&=65535,te+=q*J,re+=te>>>16,te&=65535,re+=z*ee+U*Q+H*J+q*K,re&=65535,u(ae<<16|se,re<<16|te,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=p(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?v:x;var z,U,H;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return v;if(S.gt(this.shru(1)))return N;H=v}else{if(this.eq(D)){if(S.eq(I)||S.eq(_))return D;if(S.eq(D))return I;var q=this.shr(1);return z=q.div(S).shl(1),z.eq(x)?S.isNegative()?I:_:(U=this.sub(S.mul(z)),H=z.add(U.div(S)),H)}else if(S.eq(D))return this.unsigned?v:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();H=x}for(U=this;U.gte(S);){z=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var K=Math.ceil(Math.log(z)/Math.LN2),J=K<=48?1:d(2,K-48),Q=l(z),ee=Q.mul(S);ee.isNegative()||ee.gt(U);)z-=J,Q=l(z,this.unsigned),ee=Q.mul(S);Q.isZero()&&(Q=I),H=H.add(Q),U=U.sub(ee)}return H},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=p(S)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return u(M,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return u(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=p(S)),u(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=p(S)),u(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=p(S)),u(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):u(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):u(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var M=this.high;if(S<32){var z=this.low;return u(z>>>S|M<<32-S,M>>>S,this.unsigned)}else return S===32?u(M,0,this.unsigned):u(M>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,M=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},r.fromBytes=function(S,M,z){return z?r.fromBytesLE(S,M):r.fromBytesBE(S,M)},r.fromBytesLE=function(S,M){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,M)},r.fromBytesBE=function(S,M){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],M)}}),QD=Mt(()=>{}),eR=Mt(()=>{}),tR=Mt((e,t)=>{(function(n,r,a){function s(u){var d=this,h=l();d.next=function(){var p=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=p-(d.c=p|0)},d.c=1,d.s0=h(" "),d.s1=h(" "),d.s2=h(" "),d.s0-=h(u),d.s0<0&&(d.s0+=1),d.s1-=h(u),d.s1<0&&(d.s1+=1),d.s2-=h(u),d.s2<0&&(d.s2+=1),h=null}function i(u,d){return d.c=u.c,d.s0=u.s0,d.s1=u.s1,d.s2=u.s2,d}function o(u,d){var h=new s(u),p=d&&d.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&i(p,h),c.state=function(){return i(h,{})}),c}function l(){var u=4022871197,d=function(h){h=String(h);for(var p=0;p<h.length;p++){u+=h.charCodeAt(p);var c=.02519603282416938*u;u=c>>>0,c-=u,c*=u,u=c>>>0,c-=u,u+=c*4294967296}return(u>>>0)*23283064365386963e-26};return d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),nR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:d+=l;for(var h=0;h<d.length+64;h++)u.x^=d.charCodeAt(h)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),rR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:d+=l;for(var h=0;h<d.length+64;h++)u.x^=d.charCodeAt(h)|0,h==d.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),aR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.x,p=u.i,c,m,f;return c=h[p],c^=c>>>7,m=c^c<<24,c=h[p+1&7],m^=c^c>>>10,c=h[p+3&7],m^=c^c>>>3,c=h[p+4&7],m^=c^c<<7,c=h[p+7&7],c=c^c<<13,m^=c^c<<9,h[p]=m,u.i=p+1&7,m};function d(h,p){var c,m,f=[];if(p===(p|0))m=f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],h.x=f,h.i=0,c=256;c>0;--c)h.next()}d(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(h.x&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),sR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.w,p=u.X,c=u.i,m,f;return u.w=h=h+1640531527|0,f=p[c+34&127],m=p[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=p[c]=f^m,u.i=c,f+(h^h>>>16)|0};function d(h,p){var c,m,f,g,y,b=[],x=128;for(p===(p|0)?(m=p,p=null):(p=p+"\0",m=0,x=Math.max(x,p.length)),f=0,g=-32;g<x;++g)p&&(m^=p.charCodeAt((g+32)%p.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=m+y,f=c==0?f+1:0);for(f>=128&&(b[(p&&p.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],c=b[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,b[f]=m^c;h.w=y,h.X=b,h.i=f}d(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(h.X&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),iR=Mt((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.next=function(){var p=u.b,c=u.c,m=u.d,f=u.a;return p=p<<25^p>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-p|0,u.b=p=p<<20^p>>>12^c,u.c=c=c-m|0,u.d=m<<16^c>>>16^f,u.a=f-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):d+=l;for(var h=0;h<d.length+20;h++)u.b^=d.charCodeAt(h)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),oR=Mt(()=>{}),lR=Mt((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,l="random",u=a.pow(s,i),d=a.pow(2,o),h=d*2,p=s-1,c;function m(I,N,_){var E=[];N=N==!0?{entropy:!0}:N||{};var A=b(y(N.entropy?[I,v(r)]:I??x(),3),E),D=new f(E),F=function(){for(var S=D.g(i),M=u,z=0;S<d;)S=(S+z)*s,M*=s,z=D.g(1);for(;S>=h;)S/=2,M/=2,z>>>=1;return(S+z)/M};return F.int32=function(){return D.g(4)|0},F.quick=function(){return D.g(4)/4294967296},F.double=F,b(v(D.S),r),(N.pass||_||function(S,M,z,U){return U&&(U.S&&g(U,D),S.state=function(){return g(D,{})}),z?(a[l]=S,M):S})(F,A,"global"in N?N.global:this==a,N.state)}function f(I){var N,_=I.length,E=this,A=0,D=E.i=E.j=0,F=E.S=[];for(_||(I=[_++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[D=p&D+I[A%_]+(N=F[A])],F[D]=N;(E.g=function(S){for(var M,z=0,U=E.i,H=E.j,q=E.S;S--;)M=q[U=p&U+1],z=z*s+q[p&(q[U]=q[H=p&H+M])+(q[H]=M)];return E.i=U,E.j=H,z})(s)}function g(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function y(I,N){var _=[],E=typeof I,A;if(N&&E=="object")for(A in I)try{_.push(y(I[A],N-1))}catch{}return _.length?_:E=="string"?I:I+"\0"}function b(I,N){for(var _=I+"",E,A=0;A<_.length;)N[p&A]=p&(E^=N[p&A]*19)+_.charCodeAt(A++);return v(N)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),v(I)}catch{var N=n.navigator,_=N&&N.plugins;return[+new Date,n,_,n.screen,v(r)]}}function v(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=m;try{c=oR()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):a["seed"+l]=m})(typeof self<"u"?self:e,[],Math)}),Lc=Mt((e,t)=>{var n=tR(),r=nR(),a=rR(),s=aR(),i=sR(),o=iR(),l=lR();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),xI=Mt(()=>{}),cx=Mt(()=>{}),vI=Mt(()=>{}),uR=Mt(()=>{}),dR=Mt(()=>{}),pR=Mt(()=>{}),hR=Mt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return ue.buffer!=Ae&&at(ue.buffer),ht}function i(){return ue.buffer!=Ae&&at(ue.buffer),Rn}function o(){return ue.buffer!=Ae&&at(ue.buffer),Ct}function l(){return ue.buffer!=Ae&&at(ue.buffer),en}function u(){return ue.buffer!=Ae&&at(ue.buffer),In}function d(){return ue.buffer!=Ae&&at(ue.buffer),Jn}function h(){return ue.buffer!=Ae&&at(ue.buffer),Sn}var p=typeof a<"u"?a:{},c,m;p.ready=new Promise(function(R,j){c=R,m=j});var f;typeof process<"u"&&process.listeners&&(f={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},p),y=[],b="./this.program",x=(R,j)=>{throw j},v=typeof window=="object",I=typeof importScripts=="function",N=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_=p.ENVIRONMENT_IS_PTHREAD||!1,E="";function A(R){return p.locateFile?p.locateFile(R,E):E+R}var D,F,S,M;function z(R){R instanceof Ss||Q("exiting due to exception: "+R)}if(N){var U=cx(),H=vI();I?E=H.dirname(E)+"/":E=__dirname+"/",D=(j,le)=>(j=Ho(j)?new URL(j):H.normalize(j),U.readFileSync(j,le?void 0:"utf8")),S=j=>{var le=D(j,!0);return le.buffer||(le=new Uint8Array(le)),le},F=(j,le,Ne)=>{j=Ho(j)?new URL(j):H.normalize(j),U.readFile(j,function(Fe,$e){Fe?Ne(Fe):le($e.buffer)})},process.argv.length>1&&(b=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(j){if(!(j instanceof Ss))throw j}),process.on("unhandledRejection",function(j){throw j}),x=(j,le)=>{if(dr())throw process.exitCode=j,le;z(le),process.exit(j)},p.inspect=function(){return"[Emscripten Module object]"};let R;try{R=uR()}catch(j){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),j}global.Worker=R.Worker}else(v||I)&&(I?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",N||(D=R=>{var j=new XMLHttpRequest;return j.open("GET",R,!1),j.send(null),j.responseText},I&&(S=R=>{var j=new XMLHttpRequest;return j.open("GET",R,!1),j.responseType="arraybuffer",j.send(null),new Uint8Array(j.response)}),F=(R,j,le)=>{var Ne=new XMLHttpRequest;Ne.open("GET",R,!0),Ne.responseType="arraybuffer",Ne.onload=()=>{if(Ne.status==200||Ne.status==0&&Ne.response){j(Ne.response);return}le()},Ne.onerror=le,Ne.send(null)}),M=R=>document.title=R);N&&typeof performance>"u"&&(global.performance=dR().performance);var q=console.log.bind(console),K=console.warn.bind(console);N&&(q=R=>U.writeSync(1,R+`
`),K=R=>U.writeSync(2,R+`
`));var J=p.print||q,Q=p.printErr||K;Object.assign(p,g),g=null,p.arguments&&(y=p.arguments),p.thisProgram&&(b=p.thisProgram),p.quit&&(x=p.quit);var ee=4,re=Atomics.load,te=Atomics.store,ae=Atomics.compareExchange,se;p.wasmBinary&&(se=p.wasmBinary);var xe=p.noExitRuntime||!0;typeof WebAssembly!="object"&&Is("no native wasm support detected");var ue,be,ke=!1,Se;function Le(R,j){R||Is(j)}var We=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function dt(R,j,le){j>>>=0;for(var Ne=j+le,Fe=j;R[Fe]&&!(Fe>=Ne);)++Fe;if(Fe-j>16&&R.buffer&&We)return We.decode(R.buffer instanceof SharedArrayBuffer?R.slice(j,Fe):R.subarray(j,Fe));for(var $e="";j<Fe;){var me=R[j++];if(!(me&128)){$e+=String.fromCharCode(me);continue}var we=R[j++]&63;if((me&224)==192){$e+=String.fromCharCode((me&31)<<6|we);continue}var vt=R[j++]&63;if((me&240)==224?me=(me&15)<<12|we<<6|vt:me=(me&7)<<18|we<<12|vt<<6|R[j++]&63,me<65536)$e+=String.fromCharCode(me);else{var Qn=me-65536;$e+=String.fromCharCode(55296|Qn>>10,56320|Qn&1023)}}return $e}function Ye(R,j){return R>>>=0,R?dt(i(),R,j):""}function Ze(R,j,le,Ne){if(le>>>=0,!(Ne>0))return 0;for(var Fe=le,$e=le+Ne-1,me=0;me<R.length;++me){var we=R.charCodeAt(me);if(we>=55296&&we<=57343){var vt=R.charCodeAt(++me);we=65536+((we&1023)<<10)|vt&1023}if(we<=127){if(le>=$e)break;j[le++>>>0]=we}else if(we<=2047){if(le+1>=$e)break;j[le++>>>0]=192|we>>6,j[le++>>>0]=128|we&63}else if(we<=65535){if(le+2>=$e)break;j[le++>>>0]=224|we>>12,j[le++>>>0]=128|we>>6&63,j[le++>>>0]=128|we&63}else{if(le+3>=$e)break;j[le++>>>0]=240|we>>18,j[le++>>>0]=128|we>>12&63,j[le++>>>0]=128|we>>6&63,j[le++>>>0]=128|we&63}}return j[le>>>0]=0,le-Fe}function Je(R,j,le){return Ze(R,i(),j,le)}var Ae,ht,Rn,Ct,Zn,en,In,Jn,Sn;_&&(Ae=p.buffer);function at(R){Ae=R,p.HEAP8=ht=new Int8Array(R),p.HEAP16=Ct=new Int16Array(R),p.HEAP32=en=new Int32Array(R),p.HEAPU8=Rn=new Uint8Array(R),p.HEAPU16=Zn=new Uint16Array(R),p.HEAPU32=In=new Uint32Array(R),p.HEAPF32=Jn=new Float32Array(R),p.HEAPF64=Sn=new Float64Array(R)}var Nn=p.INITIAL_MEMORY||16777216;if(_)ue=p.wasmMemory,Ae=p.buffer;else if(p.wasmMemory)ue=p.wasmMemory;else if(ue=new WebAssembly.Memory({initial:Nn/65536,maximum:65536,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),N&&Q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ue&&(Ae=ue.buffer),Nn=Ae.byteLength,at(Ae);var Mn,aa=[],Uo=[],Mr=[],nd=!1;function dr(){return xe}function Sa(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)tf(p.preRun.shift());ad(aa)}function Ut(){nd=!0,!_&&ad(Uo)}function nh(){if(!_){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)q0(p.postRun.shift());ad(Mr)}}function tf(R){aa.unshift(R)}function nf(R){Uo.unshift(R)}function q0(R){Mr.unshift(R)}var Na=0,Go=null,sa=null;function rf(R){Na++,p.monitorRunDependencies&&p.monitorRunDependencies(Na)}function rh(R){if(Na--,p.monitorRunDependencies&&p.monitorRunDependencies(Na),Na==0&&(Go!==null&&(clearInterval(Go),Go=null),sa)){var j=sa;sa=null,j()}}function Is(R){p.onAbort&&p.onAbort(R),R="Aborted("+R+")",Q(R),ke=!0,Se=1,R+=". Build with -sASSERTIONS for more info.";var j=new WebAssembly.RuntimeError(R);throw m(j),j}var af="data:application/octet-stream;base64,";function ah(R){return R.startsWith(af)}function Ho(R){return R.startsWith("file://")}var on;on="tfjs-backend-wasm-threaded-simd.wasm",ah(on)||(on=A(on));function sh(R){try{if(R==on&&se)return new Uint8Array(se);if(S)return S(R);throw"both async and sync fetching of the wasm failed"}catch(j){Is(j)}}function sf(){if(!se&&(v||I)){if(typeof fetch=="function"&&!Ho(on))return fetch(on,{credentials:"same-origin"}).then(function(R){if(!R.ok)throw"failed to load wasm binary file at '"+on+"'";return R.arrayBuffer()}).catch(function(){return sh(on)});if(F)return new Promise(function(R,j){F(on,function(le){R(new Uint8Array(le))},j)})}return Promise.resolve().then(function(){return sh(on)})}function of(){var R={env:bh,wasi_snapshot_preview1:bh};function j(me,we){var vt=me.exports;if(p.asm=vt,gf(p.asm._emscripten_tls_init),Mn=p.asm.__indirect_function_table,nf(p.asm.__wasm_call_ctors),be=we,!_){var Qn=Ee.unusedWorkers.length;Ee.unusedWorkers.forEach(function(oa){Ee.loadWasmModuleToWorker(oa,function(){--Qn||rh("wasm-instantiate")})})}}_||rf("wasm-instantiate");function le(me){j(me.instance,me.module)}function Ne(me){return sf().then(function(we){return WebAssembly.instantiate(we,R)}).then(function(we){return we}).then(me,function(we){Q("failed to asynchronously prepare wasm: "+we),Is(we)})}function Fe(){return!se&&typeof WebAssembly.instantiateStreaming=="function"&&!ah(on)&&!Ho(on)&&!N&&typeof fetch=="function"?fetch(on,{credentials:"same-origin"}).then(function(me){var we=WebAssembly.instantiateStreaming(me,R);return we.then(le,function(vt){return Q("wasm streaming compile failed: "+vt),Q("falling back to ArrayBuffer instantiation"),Ne(le)})}):Ne(le)}if(p.instantiateWasm)try{var $e=p.instantiateWasm(R,j);return $e}catch(me){Q("Module.instantiateWasm callback failed with error: "+me),m(me)}return Fe().catch(m),{}}var K0,X0,ih={};function Ss(R){this.name="ExitStatus",this.message="Program terminated with exit("+R+")",this.status=R}function lf(R){var j=Ee.pthreads[R];delete Ee.pthreads[R],j.terminate(),Fy(R),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf(j),1),j.pthread_ptr=0}function uf(R){var j=Ee.pthreads[R];j.postMessage({cmd:"cancel"})}function rd(R){var j=Ee.pthreads[R];Le(j),Ee.returnWorkerToPool(j)}function df(R){var j=Ee.getNewWorker();if(!j)return 6;Ee.runningWorkers.push(j),Ee.pthreads[R.pthread_ptr]=j,j.pthread_ptr=R.pthread_ptr;var le={cmd:"run",start_routine:R.startRoutine,arg:R.arg,pthread_ptr:R.pthread_ptr};return j.runPthread=()=>{N&&j.ref(),j.postMessage(le,R.transferList),delete j.runPthread},j.loaded&&j.runPthread(),0}var oh={varargs:void 0,get:function(){oh.varargs+=4;var R=l()[oh.varargs-4>>>2];return R},getStr:function(R){var j=Ye(R);return j}};function lh(R){if(_)return Ta(1,1,R);Se=R,dr()||(Ee.terminateAllThreads(),p.onExit&&p.onExit(R),ke=!0),x(R,new Ss(R))}function pf(R,j){if(Se=R,!j&&_)throw dh(R),"unwind";lh(R)}var uh=pf;function hf(R){if(R instanceof Ss||R=="unwind")return Se;x(1,R)}var Ee={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){_?Ee.initWorker():Ee.initMainThread()},initMainThread:function(){for(var R=8;R--;)Ee.allocateUnusedWorker()},initWorker:function(){xe=!1},setExitStatus:function(R){Se=R},terminateAllThreads:function(){for(var R of Object.values(Ee.pthreads))Ee.returnWorkerToPool(R);for(var R of Ee.unusedWorkers)R.terminate();Ee.unusedWorkers=[]},returnWorkerToPool:function(R){var j=R.pthread_ptr;delete Ee.pthreads[j],Ee.unusedWorkers.push(R),Ee.runningWorkers.splice(Ee.runningWorkers.indexOf(R),1),R.pthread_ptr=0,N&&R.unref(),Fy(j)},receiveObjectTransfer:function(R){},threadInitTLS:function(){Ee.tlsInitFunctions.forEach(R=>R())},loadWasmModuleToWorker:function(R,j){R.onmessage=$e=>{var me=$e.data,we=me.cmd;if(R.pthread_ptr&&(Ee.currentProxiedOperationCallerThread=R.pthread_ptr),me.targetThread&&me.targetThread!=Sh()){var vt=Ee.pthreads[me.targetThread];vt?vt.postMessage(me,me.transferList):Q('Internal error! Worker sent a message "'+we+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),Ee.currentProxiedOperationCallerThread=void 0;return}we==="processProxyingQueue"?sd(me.queue):we==="spawnThread"?df(me):we==="cleanupThread"?rd(me.thread):we==="killThread"?lf(me.thread):we==="cancelThread"?uf(me.thread):we==="loaded"?(R.loaded=!0,N&&R.unref(),j&&j(R),R.runPthread&&R.runPthread()):we==="print"?J("Thread "+me.threadId+": "+me.text):we==="printErr"?Q("Thread "+me.threadId+": "+me.text):we==="alert"?alert("Thread "+me.threadId+": "+me.text):me.target==="setimmediate"?R.postMessage(me):we==="callHandler"?p[me.handler](...me.args):we&&Q("worker sent an unknown command "+we),Ee.currentProxiedOperationCallerThread=void 0},R.onerror=$e=>{var me="worker sent an error!";throw Q(me+" "+$e.filename+":"+$e.lineno+": "+$e.message),$e},N&&(R.on("message",function($e){R.onmessage({data:$e})}),R.on("error",function($e){R.onerror($e)}),R.on("detachedExit",function(){}));var le=[],Ne=["onExit","onAbort","print","printErr"];for(var Fe of Ne)p.hasOwnProperty(Fe)&&le.push(Fe);R.postMessage({cmd:"load",handlers:le,urlOrBlob:p.mainScriptUrlOrBlob||r,wasmMemory:ue,wasmModule:be})},allocateUnusedWorker:function(){var R,j=A("tfjs-backend-wasm-threaded-simd.worker.js");R=new Worker(j),Ee.unusedWorkers.push(R)},getNewWorker:function(){return Ee.unusedWorkers.length==0&&(Ee.allocateUnusedWorker(),Ee.loadWasmModuleToWorker(Ee.unusedWorkers[0])),Ee.unusedWorkers.pop()}};p.PThread=Ee;function ad(R){for(;R.length>0;)R.shift()(p)}function cf(){var R=Sh(),j=l()[R+52>>>2],le=l()[R+56>>>2],Ne=j-le;t1(j,Ne),Nh(j)}p.establishStackSpace=cf;function dh(R){if(_)return Ta(2,0,R);try{uh(R)}catch(j){hf(j)}}var jo=[];function mf(R){var j=jo[R];return j||(R>=jo.length&&(jo.length=R+1),jo[R]=j=Mn.get(R)),j}function ff(R,j){var le=mf(R)(j);dr()?Ee.setExitStatus(le):e1(le)}p.invokeEntryPoint=ff;function gf(R){Ee.tlsInitFunctions.push(R)}function yf(R){J0(R,!I,1,!v),Ee.threadInitTLS()}function bf(R){_?postMessage({cmd:"cleanupThread",thread:R}):rd(R)}function ph(R,j,le,Ne){return _?Ta(3,1,R,j,le,Ne):hh(R,j,le,Ne)}function hh(R,j,le,Ne){if(typeof SharedArrayBuffer>"u")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Fe=[],$e=0;if(_&&(Fe.length===0||$e))return ph(R,j,le,Ne);if($e)return $e;var me={startRoutine:le,pthread_ptr:R,arg:Ne,transferList:Fe};return _?(me.cmd="spawnThread",postMessage(me,Fe),0):df(me)}function xf(){return 65536}var vf=!0;function wf(){return vf}function sd(R){Atomics.store(l(),R>>2,1),Sh()&&Q0(R),Atomics.compareExchange(l(),R>>2,1,0)}p.executeNotifiedProxyingQueue=sd;function kf(R,j,le,Ne){if(R==j)setTimeout(()=>sd(Ne));else if(_)postMessage({targetThread:R,cmd:"processProxyingQueue",queue:Ne});else{var Fe=Ee.pthreads[R];if(!Fe)return;Fe.postMessage({cmd:"processProxyingQueue",queue:Ne})}return 1}function If(R,j,le){return-1}function Sf(){Is("")}function Ns(R){Ns.shown||(Ns.shown={}),Ns.shown[R]||(Ns.shown[R]=1,N&&(R="warning: "+R),Q(R))}function Nf(){N||I||Ns("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Tf(){return Date.now()}function ch(){return 4294901760}function _f(){return ch()}var id;N?id=()=>{var R=process.hrtime();return R[0]*1e3+R[1]/1e6}:id=()=>performance.timeOrigin+performance.now();function Cf(R,j,le){i().copyWithin(R>>>0,j>>>0,j+le>>>0)}function Ef(){return N?pR().cpus().length:navigator.hardwareConcurrency}function $f(R){var j=Dy(),le=R();return Nh(j),le}function Ta(R,j){var le=arguments.length-2,Ne=arguments;return $f(()=>{for(var Fe=le,$e=Th(Fe*8),me=$e>>3,we=0;we<le;we++){var vt=Ne[2+we];h()[me+we>>>0]=vt}return Y0(R,Fe,$e,j)})}var od=[];function Af(R,j,le){od.length=j;for(var Ne=le>>3,Fe=0;Fe<j;Fe++)od[Fe]=h()[Ne+Fe>>>0];var $e=R<0,me=$e?ih[-R-1]:Bf[R];return me.apply(null,od)}function Ff(R){try{return ue.grow(R-Ae.byteLength+65535>>>16),at(ue.buffer),1}catch{}}function Df(R){var j=i().length;if(R=R>>>0,R<=j)return!1;var le=ch();if(R>le)return!1;let Ne=(vt,Qn)=>vt+(Qn-vt%Qn)%Qn;for(var Fe=1;Fe<=4;Fe*=2){var $e=j*(1+.2/Fe);$e=Math.min($e,R+100663296);var me=Math.min(le,Ne(Math.max(R,$e),65536)),we=Ff(me);if(we)return!0}return!1}function Rf(){throw"unwind"}function mh(R){return _?Ta(4,1,R):52}function fh(R,j,le,Ne,Fe){return _?Ta(5,1,R,j,le,Ne,Fe):70}var Mf=[null,[],[]];function Of(R,j){var le=Mf[R];j===0||j===10?((R===1?J:Q)(dt(le,0)),le.length=0):le.push(j)}function gh(R,j,le,Ne){if(_)return Ta(6,1,R,j,le,Ne);for(var Fe=0,$e=0;$e<le;$e++){var me=u()[j>>>2],we=u()[j+4>>>2];j+=8;for(var vt=0;vt<we;vt++)Of(R,i()[me+vt>>>0]);Fe+=we}return u()[Ne>>>2]=Fe,0}function yh(R){var j=p["_"+R];return j}function Lf(R,j){s().set(R,j>>>0)}function Pf(R,j,le,Ne,Fe){var $e={string:er=>{var Zo=0;if(er!=null&&er!==0){var a1=(er.length<<2)+1;Zo=Th(a1),Je(er,Zo,a1)}return Zo},array:er=>{var Zo=Th(er.length);return Lf(er,Zo),Zo}};function me(er){return j==="string"?Ye(er):j==="boolean"?!!er:er}var we=yh(R),vt=[],Qn=0;if(Ne)for(var oa=0;oa<Ne.length;oa++){var r1=$e[le[oa]];r1?(Qn===0&&(Qn=Dy()),vt[oa]=r1(Ne[oa])):vt[oa]=Ne[oa]}var Ry=we.apply(null,vt);function WD(er){return Qn!==0&&Nh(Qn),me(er)}return Ry=WD(Ry),Ry}function zf(R,j,le,Ne){le=le||[];var Fe=le.every(me=>me==="number"||me==="boolean"),$e=j!=="string";return $e&&Fe&&!Ne?yh(R):function(){return Pf(R,j,le,arguments,Ne)}}Ee.init();var Bf=[null,lh,dh,ph,mh,fh,gh],bh={__emscripten_init_main_thread_js:yf,__emscripten_thread_cleanup:bf,__pthread_create_js:hh,_emscripten_default_pthread_stack_size:xf,_emscripten_get_now_is_monotonic:wf,_emscripten_notify_task_queue:kf,_emscripten_set_offscreencanvas_size:If,abort:Sf,emscripten_check_blocking_allowed:Nf,emscripten_date_now:Tf,emscripten_get_heap_max:_f,emscripten_get_now:id,emscripten_memcpy_big:Cf,emscripten_num_logical_cores:Ef,emscripten_receive_on_main_thread_js:Af,emscripten_resize_heap:Df,emscripten_unwind_to_js_event_loop:Rf,exit:uh,fd_close:mh,fd_seek:fh,fd_write:gh,memory:ue||p.wasmMemory},Z0=of(),Wf=p.___wasm_call_ctors=function(){return(Wf=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},Vf=p._init=function(){return(Vf=p._init=p.asm.init).apply(null,arguments)},Uf=p._init_with_threads_count=function(){return(Uf=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},Gf=p._get_threads_count=function(){return(Gf=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},Hf=p._register_tensor=function(){return(Hf=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},jf=p._dispose_data=function(){return(jf=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},qf=p._dispose=function(){return(qf=p._dispose=p.asm.dispose).apply(null,arguments)},Kf=p._Abs=function(){return(Kf=p._Abs=p.asm.Abs).apply(null,arguments)},Xf=p._Acos=function(){return(Xf=p._Acos=p.asm.Acos).apply(null,arguments)},Zf=p._Acosh=function(){return(Zf=p._Acosh=p.asm.Acosh).apply(null,arguments)},Jf=p._Add=function(){return(Jf=p._Add=p.asm.Add).apply(null,arguments)},Yf=p._AddN=function(){return(Yf=p._AddN=p.asm.AddN).apply(null,arguments)},Qf=p._All=function(){return(Qf=p._All=p.asm.All).apply(null,arguments)},eg=p._Any=function(){return(eg=p._Any=p.asm.Any).apply(null,arguments)},tg=p._ArgMax=function(){return(tg=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},ng=p._ArgMin=function(){return(ng=p._ArgMin=p.asm.ArgMin).apply(null,arguments)},rg=p._Asin=function(){return(rg=p._Asin=p.asm.Asin).apply(null,arguments)},ag=p._Asinh=function(){return(ag=p._Asinh=p.asm.Asinh).apply(null,arguments)},sg=p._Atan=function(){return(sg=p._Atan=p.asm.Atan).apply(null,arguments)},ig=p._Atan2=function(){return(ig=p._Atan2=p.asm.Atan2).apply(null,arguments)},og=p._Atanh=function(){return(og=p._Atanh=p.asm.Atanh).apply(null,arguments)},lg=p._AvgPool=function(){return(lg=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},ug=p._AvgPool3D=function(){return(ug=p._AvgPool3D=p.asm.AvgPool3D).apply(null,arguments)},dg=p._AvgPool3DGrad=function(){return(dg=p._AvgPool3DGrad=p.asm.AvgPool3DGrad).apply(null,arguments)},pg=p._AvgPoolGrad=function(){return(pg=p._AvgPoolGrad=p.asm.AvgPoolGrad).apply(null,arguments)},hg=p._BatchMatMul=function(){return(hg=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},cg=p._Bincount=function(){return(cg=p._Bincount=p.asm.Bincount).apply(null,arguments)},mg=p._BitwiseAnd=function(){return(mg=p._BitwiseAnd=p.asm.BitwiseAnd).apply(null,arguments)},fg=p._Ceil=function(){return(fg=p._Ceil=p.asm.Ceil).apply(null,arguments)},gg=p._ClipByValue=function(){return(gg=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},yg=p._Conv2D=function(){return(yg=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},bg=p._Conv2DBackpropInput=function(){return(bg=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},xg=p._Conv3D=function(){return(xg=p._Conv3D=p.asm.Conv3D).apply(null,arguments)},vg=p._Conv3DBackpropFilterV2=function(){return(vg=p._Conv3DBackpropFilterV2=p.asm.Conv3DBackpropFilterV2).apply(null,arguments)},wg=p._Conv3DBackpropInputV2=function(){return(wg=p._Conv3DBackpropInputV2=p.asm.Conv3DBackpropInputV2).apply(null,arguments)},kg=p._Cos=function(){return(kg=p._Cos=p.asm.Cos).apply(null,arguments)},Ig=p._Cosh=function(){return(Ig=p._Cosh=p.asm.Cosh).apply(null,arguments)},Sg=p._CropAndResize=function(){return(Sg=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},Ng=p._Cumprod=function(){return(Ng=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},Tg=p._Cumsum=function(){return(Tg=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},_g=p._DenseBincount=function(){return(_g=p._DenseBincount=p.asm.DenseBincount).apply(null,arguments)},Cg=p._DepthToSpace=function(){return(Cg=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},Eg=p._DepthwiseConv2dNative=function(){return(Eg=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},$g=p._Diag=function(){return($g=p._Diag=p.asm.Diag).apply(null,arguments)},Ag=p._Dilation2D=function(){return(Ag=p._Dilation2D=p.asm.Dilation2D).apply(null,arguments)},Fg=p._Dilation2DBackpropFilter=function(){return(Fg=p._Dilation2DBackpropFilter=p.asm.Dilation2DBackpropFilter).apply(null,arguments)},Dg=p._Dilation2DBackpropInput=function(){return(Dg=p._Dilation2DBackpropInput=p.asm.Dilation2DBackpropInput).apply(null,arguments)},Rg=p._Elu=function(){return(Rg=p._Elu=p.asm.Elu).apply(null,arguments)},Mg=p._EluGrad=function(){return(Mg=p._EluGrad=p.asm.EluGrad).apply(null,arguments)},Og=p._Equal=function(){return(Og=p._Equal=p.asm.Equal).apply(null,arguments)},Lg=p._Erf=function(){return(Lg=p._Erf=p.asm.Erf).apply(null,arguments)},Pg=p._Exp=function(){return(Pg=p._Exp=p.asm.Exp).apply(null,arguments)},zg=p._Expm1=function(){return(zg=p._Expm1=p.asm.Expm1).apply(null,arguments)},Bg=p._FlipLeftRight=function(){return(Bg=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},Wg=p._Floor=function(){return(Wg=p._Floor=p.asm.Floor).apply(null,arguments)},Vg=p._FloorDiv=function(){return(Vg=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},Ug=p._FusedBatchNorm=function(){return(Ug=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},Gg=p._FusedConv2D=function(){return(Gg=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},Hg=p._FusedDepthwiseConv2D=function(){return(Hg=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},jg=p._Gather=function(){return(jg=p._Gather=p.asm.Gather).apply(null,arguments)},qg=p._GatherNd=function(){return(qg=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},Kg=p._Greater=function(){return(Kg=p._Greater=p.asm.Greater).apply(null,arguments)},Xg=p._GreaterEqual=function(){return(Xg=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},Zg=p._IsFinite=function(){return(Zg=p._IsFinite=p.asm.IsFinite).apply(null,arguments)},Jg=p._IsInf=function(){return(Jg=p._IsInf=p.asm.IsInf).apply(null,arguments)},Yg=p._IsNan=function(){return(Yg=p._IsNan=p.asm.IsNan).apply(null,arguments)},Qg=p._LRN=function(){return(Qg=p._LRN=p.asm.LRN).apply(null,arguments)},ey=p._LRNGrad=function(){return(ey=p._LRNGrad=p.asm.LRNGrad).apply(null,arguments)},ty=p._LeakyRelu=function(){return(ty=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},ny=p._Less=function(){return(ny=p._Less=p.asm.Less).apply(null,arguments)},ry=p._LessEqual=function(){return(ry=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},ay=p._LinSpace=function(){return(ay=p._LinSpace=p.asm.LinSpace).apply(null,arguments)},sy=p._Log=function(){return(sy=p._Log=p.asm.Log).apply(null,arguments)},iy=p._Log1p=function(){return(iy=p._Log1p=p.asm.Log1p).apply(null,arguments)},oy=p._LogicalAnd=function(){return(oy=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},ly=p._LogicalNot=function(){return(ly=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},uy=p._LogicalOr=function(){return(uy=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},dy=p._LogicalXor=function(){return(dy=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},py=p._Max=function(){return(py=p._Max=p.asm.Max).apply(null,arguments)},hy=p._MaxPool=function(){return(hy=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},cy=p._MaxPool3D=function(){return(cy=p._MaxPool3D=p.asm.MaxPool3D).apply(null,arguments)},my=p._MaxPool3DGrad=function(){return(my=p._MaxPool3DGrad=p.asm.MaxPool3DGrad).apply(null,arguments)},fy=p._MaxPoolGrad=function(){return(fy=p._MaxPoolGrad=p.asm.MaxPoolGrad).apply(null,arguments)},gy=p._MaxPoolWithArgmax=function(){return(gy=p._MaxPoolWithArgmax=p.asm.MaxPoolWithArgmax).apply(null,arguments)},yy=p._Maximum=function(){return(yy=p._Maximum=p.asm.Maximum).apply(null,arguments)},by=p._Mean=function(){return(by=p._Mean=p.asm.Mean).apply(null,arguments)},xy=p._Min=function(){return(xy=p._Min=p.asm.Min).apply(null,arguments)},vy=p._Minimum=function(){return(vy=p._Minimum=p.asm.Minimum).apply(null,arguments)},wy=p._MirrorPad=function(){return(wy=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},ky=p._Mod=function(){return(ky=p._Mod=p.asm.Mod).apply(null,arguments)},Iy=p._Multinomial=function(){return(Iy=p._Multinomial=p.asm.Multinomial).apply(null,arguments)},Sy=p._Multiply=function(){return(Sy=p._Multiply=p.asm.Multiply).apply(null,arguments)},Ny=p._Neg=function(){return(Ny=p._Neg=p.asm.Neg).apply(null,arguments)},Ty=p._NonMaxSuppressionV3=function(){return(Ty=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},_y=p._NonMaxSuppressionV4=function(){return(_y=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},xh=p._NonMaxSuppressionV5=function(){return(xh=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},vh=p._NotEqual=function(){return(vh=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},ld=p._OneHot=function(){return(ld=p._OneHot=p.asm.OneHot).apply(null,arguments)},Cy=p._PadV2=function(){return(Cy=p._PadV2=p.asm.PadV2).apply(null,arguments)},Ey=p._Pow=function(){return(Ey=p._Pow=p.asm.Pow).apply(null,arguments)},qo=p._Prelu=function(){return(qo=p._Prelu=p.asm.Prelu).apply(null,arguments)},wh=p._Prod=function(){return(wh=p._Prod=p.asm.Prod).apply(null,arguments)},Ko=p._RealDiv=function(){return(Ko=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},Xo=p._Reciprocal=function(){return(Xo=p._Reciprocal=p.asm.Reciprocal).apply(null,arguments)},$y=p._Relu=function(){return($y=p._Relu=p.asm.Relu).apply(null,arguments)},X=p._Relu6=function(){return(X=p._Relu6=p.asm.Relu6).apply(null,arguments)},ie=p._ResizeBilinear=function(){return(ie=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},Ie=p._ResizeBilinearGrad=function(){return(Ie=p._ResizeBilinearGrad=p.asm.ResizeBilinearGrad).apply(null,arguments)},je=p._ResizeNearestNeighbor=function(){return(je=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},gt=p._ResizeNearestNeighborGrad=function(){return(gt=p._ResizeNearestNeighborGrad=p.asm.ResizeNearestNeighborGrad).apply(null,arguments)},yt=p._Reverse=function(){return(yt=p._Reverse=p.asm.Reverse).apply(null,arguments)},Ve=p._RotateWithOffset=function(){return(Ve=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},Be=p._Round=function(){return(Be=p._Round=p.asm.Round).apply(null,arguments)},Et=p._Rsqrt=function(){return(Et=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},Yn=p._ScatterNd=function(){return(Yn=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},ia=p._SearchSorted=function(){return(ia=p._SearchSorted=p.asm.SearchSorted).apply(null,arguments)},kh=p._SelectV2=function(){return(kh=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},ud=p._Selu=function(){return(ud=p._Selu=p.asm.Selu).apply(null,arguments)},Ay=p._Sigmoid=function(){return(Ay=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},Tn=p._Sign=function(){return(Tn=p._Sign=p.asm.Sign).apply(null,arguments)},_a=p._Sin=function(){return(_a=p._Sin=p.asm.Sin).apply(null,arguments)},Ih=p._Sinh=function(){return(Ih=p._Sinh=p.asm.Sinh).apply(null,arguments)},uD=p._Softmax=function(){return(uD=p._Softmax=p.asm.Softmax).apply(null,arguments)},dD=p._Softplus=function(){return(dD=p._Softplus=p.asm.Softplus).apply(null,arguments)},pD=p._SparseFillEmptyRows=function(){return(pD=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},hD=p._SparseReshape=function(){return(hD=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},cD=p._SparseSegmentReduction=function(){return(cD=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},mD=p._SparseToDense=function(){return(mD=p._SparseToDense=p.asm.SparseToDense).apply(null,arguments)},fD=p._Sqrt=function(){return(fD=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},gD=p._Square=function(){return(gD=p._Square=p.asm.Square).apply(null,arguments)},yD=p._SquaredDifference=function(){return(yD=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},bD=p._Step=function(){return(bD=p._Step=p.asm.Step).apply(null,arguments)},xD=p._StridedSlice=function(){return(xD=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},vD=p._Sub=function(){return(vD=p._Sub=p.asm.Sub).apply(null,arguments)},wD=p._Sum=function(){return(wD=p._Sum=p.asm.Sum).apply(null,arguments)},kD=p._Tan=function(){return(kD=p._Tan=p.asm.Tan).apply(null,arguments)},ID=p._Tanh=function(){return(ID=p._Tanh=p.asm.Tanh).apply(null,arguments)},SD=p._TensorScatterUpdate=function(){return(SD=p._TensorScatterUpdate=p.asm.TensorScatterUpdate).apply(null,arguments)},ND=p._Tile=function(){return(ND=p._Tile=p.asm.Tile).apply(null,arguments)},TD=p._TopK=function(){return(TD=p._TopK=p.asm.TopK).apply(null,arguments)},_D=p._Transform=function(){return(_D=p._Transform=p.asm.Transform).apply(null,arguments)},CD=p._Transpose=function(){return(CD=p._Transpose=p.asm.Transpose).apply(null,arguments)},ED=p.__FusedMatMul=function(){return(ED=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},$D=p._malloc=function(){return($D=p._malloc=p.asm.malloc).apply(null,arguments)},AD=p._free=function(){return(AD=p._free=p.asm.free).apply(null,arguments)},FD=p.__emscripten_tls_init=function(){return(FD=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},Sh=p._pthread_self=function(){return(Sh=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},DD=p.___errno_location=function(){return(DD=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},J0=p.__emscripten_thread_init=function(){return(J0=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},RD=p.__emscripten_thread_crashed=function(){return(RD=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},MD=p._emscripten_main_thread_process_queued_calls=function(){return(MD=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},OD=p._emscripten_main_browser_thread_id=function(){return(OD=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},Y0=p._emscripten_run_in_main_runtime_thread_js=function(){return(Y0=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},LD=p._emscripten_dispatch_to_thread_=function(){return(LD=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Q0=p.__emscripten_proxy_execute_task_queue=function(){return(Q0=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Fy=p.__emscripten_thread_free_data=function(){return(Fy=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},e1=p.__emscripten_thread_exit=function(){return(e1=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},t1=p._emscripten_stack_set_limits=function(){return(t1=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},Dy=p.stackSave=function(){return(Dy=p.stackSave=p.asm.stackSave).apply(null,arguments)},Nh=p.stackRestore=function(){return(Nh=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},Th=p.stackAlloc=function(){return(Th=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},PD=p.dynCall_iijjiiii=function(){return(PD=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},zD=p.dynCall_jiji=function(){return(zD=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=dr,p.wasmMemory=ue,p.cwrap=zf,p.ExitStatus=Ss,p.PThread=Ee;var _h;sa=function R(){_h||n1(),_h||(sa=R)};function n1(R){if(R=R||y,Na>0)return;if(_){c(p),Ut(),startWorker(p);return}if(Sa(),Na>0)return;function j(){_h||(_h=!0,p.calledRun=!0,!ke&&(Ut(),c(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),nh()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),j()},1)):j()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();n1();var Ch;f&&(Ch={uncaughtException:process.listeners("uncaughtException").filter(function(R){return!f.uncaughtException.indexOf(R)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(R){return!f.unhandledRejection.indexOf(R)>-1})});var Eh;if(typeof WasmBackendModule<"u")Eh=WasmBackendModule;else if(typeof a<"u")Eh=a;else throw new Error("Could not find wasm module in post.js");if(Ch){var BD=Eh._dispose;Eh._dispose=function(){BD(),Ch.uncaughtException.forEach(function(R){process.removeListener("uncaughtException",R)}),Ch.unhandledRejection.forEach(function(R){process.removeListener("unhandledRejection",R)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),cR=Mt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),mR=Mt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(X,ie){i=X,o=ie});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),d=[],h="./this.program",p=(X,ie)=>{throw ie},c=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(X){return s.locateFile?s.locateFile(X,g):g+X}var b,x,v,I;function N(X){X instanceof Go||D("exiting due to exception: "+X)}if(f){var _=cx(),E=vI();m?g=E.dirname(g)+"/":g=__dirname+"/",b=(X,ie)=>(X=Sa(X)?new URL(X):E.normalize(X),_.readFileSync(X,ie?void 0:"utf8")),v=X=>{var ie=b(X,!0);return ie.buffer||(ie=new Uint8Array(ie)),ie},x=(X,ie,Ie)=>{X=Sa(X)?new URL(X):E.normalize(X),_.readFile(X,function(je,gt){je?Ie(je):ie(gt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof Go))throw X}),process.on("unhandledRejection",function(X){throw X}),p=(X,ie)=>{if(Rn())throw process.exitCode=X,ie;N(ie),process.exit(X)},s.inspect=function(){return"[Emscripten Module object]"}}else(c||m)&&(m?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",b=X=>{var ie=new XMLHttpRequest;return ie.open("GET",X,!1),ie.send(null),ie.responseText},m&&(v=X=>{var ie=new XMLHttpRequest;return ie.open("GET",X,!1),ie.responseType="arraybuffer",ie.send(null),new Uint8Array(ie.response)}),x=(X,ie,Ie)=>{var je=new XMLHttpRequest;je.open("GET",X,!0),je.responseType="arraybuffer",je.onload=()=>{if(je.status==200||je.status==0&&je.response){ie(je.response);return}Ie()},je.onerror=Ie,je.send(null)},I=X=>document.title=X);var A=s.print||console.log.bind(console),D=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&(h=s.thisProgram),s.quit&&(p=s.quit);var F=4,S;s.wasmBinary&&(S=s.wasmBinary);var M=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Mr("no native wasm support detected");var z,U=!1,H;function q(X,ie){X||Mr(ie)}var K=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function J(X,ie,Ie){ie>>>=0;for(var je=ie+Ie,gt=ie;X[gt]&&!(gt>=je);)++gt;if(gt-ie>16&&X.buffer&&K)return K.decode(X.subarray(ie,gt));for(var yt="";ie<gt;){var Ve=X[ie++];if(!(Ve&128)){yt+=String.fromCharCode(Ve);continue}var Be=X[ie++]&63;if((Ve&224)==192){yt+=String.fromCharCode((Ve&31)<<6|Be);continue}var Et=X[ie++]&63;if((Ve&240)==224?Ve=(Ve&15)<<12|Be<<6|Et:Ve=(Ve&7)<<18|Be<<12|Et<<6|X[ie++]&63,Ve<65536)yt+=String.fromCharCode(Ve);else{var Yn=Ve-65536;yt+=String.fromCharCode(55296|Yn>>10,56320|Yn&1023)}}return yt}function Q(X,ie){return X>>>=0,X?J(se,X,ie):""}function ee(X,ie,Ie,je){if(Ie>>>=0,!(je>0))return 0;for(var gt=Ie,yt=Ie+je-1,Ve=0;Ve<X.length;++Ve){var Be=X.charCodeAt(Ve);if(Be>=55296&&Be<=57343){var Et=X.charCodeAt(++Ve);Be=65536+((Be&1023)<<10)|Et&1023}if(Be<=127){if(Ie>=yt)break;ie[Ie++>>>0]=Be}else if(Be<=2047){if(Ie+1>=yt)break;ie[Ie++>>>0]=192|Be>>6,ie[Ie++>>>0]=128|Be&63}else if(Be<=65535){if(Ie+2>=yt)break;ie[Ie++>>>0]=224|Be>>12,ie[Ie++>>>0]=128|Be>>6&63,ie[Ie++>>>0]=128|Be&63}else{if(Ie+3>=yt)break;ie[Ie++>>>0]=240|Be>>18,ie[Ie++>>>0]=128|Be>>12&63,ie[Ie++>>>0]=128|Be>>6&63,ie[Ie++>>>0]=128|Be&63}}return ie[Ie>>>0]=0,Ie-gt}function re(X,ie,Ie){return ee(X,se,ie,Ie)}var te,ae,se,xe,ue,be,ke,Se,Le;function We(X){te=X,s.HEAP8=ae=new Int8Array(X),s.HEAP16=xe=new Int16Array(X),s.HEAP32=be=new Int32Array(X),s.HEAPU8=se=new Uint8Array(X),s.HEAPU16=ue=new Uint16Array(X),s.HEAPU32=ke=new Uint32Array(X),s.HEAPF32=Se=new Float32Array(X),s.HEAPF64=Le=new Float64Array(X)}var dt=s.INITIAL_MEMORY||16777216,Ye,Ze=[],Je=[],Ae=[],ht=!1;function Rn(){return M}function Ct(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)In(s.preRun.shift());sa(Ze)}function Zn(){ht=!0,sa(Je)}function en(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)Sn(s.postRun.shift());sa(Ae)}function In(X){Ze.unshift(X)}function Jn(X){Je.unshift(X)}function Sn(X){Ae.unshift(X)}var at=0,Nn=null,Mn=null;function aa(X){at++,s.monitorRunDependencies&&s.monitorRunDependencies(at)}function Uo(X){if(at--,s.monitorRunDependencies&&s.monitorRunDependencies(at),at==0&&(Nn!==null&&(clearInterval(Nn),Nn=null),Mn)){var ie=Mn;Mn=null,ie()}}function Mr(X){s.onAbort&&s.onAbort(X),X="Aborted("+X+")",D(X),U=!0,H=1,X+=". Build with -sASSERTIONS for more info.";var ie=new WebAssembly.RuntimeError(X);throw o(ie),ie}var nd="data:application/octet-stream;base64,";function dr(X){return X.startsWith(nd)}function Sa(X){return X.startsWith("file://")}var Ut;Ut="tfjs-backend-wasm.wasm",dr(Ut)||(Ut=y(Ut));function nh(X){try{if(X==Ut&&S)return new Uint8Array(S);if(v)return v(X);throw"both async and sync fetching of the wasm failed"}catch(ie){Mr(ie)}}function tf(){if(!S&&(c||m)){if(typeof fetch=="function"&&!Sa(Ut))return fetch(Ut,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+Ut+"'";return X.arrayBuffer()}).catch(function(){return nh(Ut)});if(x)return new Promise(function(X,ie){x(Ut,function(Ie){X(new Uint8Array(Ie))},ie)})}return Promise.resolve().then(function(){return nh(Ut)})}function nf(){var X={env:rd,wasi_snapshot_preview1:rd};function ie(Ve,Be){var Et=Ve.exports;s.asm=Et,z=s.asm.memory,We(z.buffer),Ye=s.asm.__indirect_function_table,Jn(s.asm.__wasm_call_ctors),Uo("wasm-instantiate")}aa("wasm-instantiate");function Ie(Ve){ie(Ve.instance)}function je(Ve){return tf().then(function(Be){return WebAssembly.instantiate(Be,X)}).then(function(Be){return Be}).then(Ve,function(Be){D("failed to asynchronously prepare wasm: "+Be),Mr(Be)})}function gt(){return!S&&typeof WebAssembly.instantiateStreaming=="function"&&!dr(Ut)&&!Sa(Ut)&&!f&&typeof fetch=="function"?fetch(Ut,{credentials:"same-origin"}).then(function(Ve){var Be=WebAssembly.instantiateStreaming(Ve,X);return Be.then(Ie,function(Et){return D("wasm streaming compile failed: "+Et),D("falling back to ArrayBuffer instantiation"),je(Ie)})}):je(Ie)}if(s.instantiateWasm)try{var yt=s.instantiateWasm(X,ie);return yt}catch(Ve){D("Module.instantiateWasm callback failed with error: "+Ve),o(Ve)}return gt().catch(o),{}}var q0,Na;function Go(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}function sa(X){for(;X.length>0;)X.shift()(s)}function rf(){Mr("")}function rh(){return 4294901760}function Is(){return rh()}function af(X,ie,Ie){se.copyWithin(X>>>0,ie>>>0,ie+Ie>>>0)}function ah(X){try{return z.grow(X-te.byteLength+65535>>>16),We(z.buffer),1}catch{}}function Ho(X){var ie=se.length;X=X>>>0;var Ie=rh();if(X>Ie)return!1;let je=(Et,Yn)=>Et+(Yn-Et%Yn)%Yn;for(var gt=1;gt<=4;gt*=2){var yt=ie*(1+.2/gt);yt=Math.min(yt,X+100663296);var Ve=Math.min(Ie,je(Math.max(X,yt),65536)),Be=ah(Ve);if(Be)return!0}return!1}var on={varargs:void 0,get:function(){on.varargs+=4;var X=be[on.varargs-4>>>2];return X},getStr:function(X){var ie=Q(X);return ie}};function sh(X){return 52}function sf(X,ie,Ie,je,gt){return 70}var of=[null,[],[]];function K0(X,ie){var Ie=of[X];ie===0||ie===10?((X===1?A:D)(J(Ie,0)),Ie.length=0):Ie.push(ie)}function X0(X,ie,Ie,je){for(var gt=0,yt=0;yt<Ie;yt++){var Ve=ke[ie>>>2],Be=ke[ie+4>>>2];ie+=8;for(var Et=0;Et<Be;Et++)K0(X,se[Ve+Et>>>0]);gt+=Be}return ke[je>>>2]=gt,0}function ih(X){var ie=s["_"+X];return ie}function Ss(X,ie){ae.set(X,ie>>>0)}function lf(X,ie,Ie,je,gt){var yt={string:Tn=>{var _a=0;if(Tn!=null&&Tn!==0){var Ih=(Tn.length<<2)+1;_a=ld(Ih),re(Tn,_a,Ih)}return _a},array:Tn=>{var _a=ld(Tn.length);return Ss(Tn,_a),_a}};function Ve(Tn){return ie==="string"?Q(Tn):ie==="boolean"?!!Tn:Tn}var Be=ih(X),Et=[],Yn=0;if(je)for(var ia=0;ia<je.length;ia++){var kh=yt[Ie[ia]];kh?(Yn===0&&(Yn=xh()),Et[ia]=kh(je[ia])):Et[ia]=je[ia]}var ud=Be.apply(null,Et);function Ay(Tn){return Yn!==0&&vh(Yn),Ve(Tn)}return ud=Ay(ud),ud}function uf(X,ie,Ie,je){Ie=Ie||[];var gt=Ie.every(Ve=>Ve==="number"||Ve==="boolean"),yt=ie!=="string";return yt&&gt&&!je?ih(X):function(){return lf(X,ie,Ie,arguments,je)}}var rd={abort:rf,emscripten_get_heap_max:Is,emscripten_memcpy_big:af,emscripten_resize_heap:Ho,fd_close:sh,fd_seek:sf,fd_write:X0},df=nf(),oh=s.___wasm_call_ctors=function(){return(oh=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},lh=s._init=function(){return(lh=s._init=s.asm.init).apply(null,arguments)},pf=s._init_with_threads_count=function(){return(pf=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},uh=s._get_threads_count=function(){return(uh=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},hf=s._register_tensor=function(){return(hf=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},Ee=s._dispose_data=function(){return(Ee=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},ad=s._dispose=function(){return(ad=s._dispose=s.asm.dispose).apply(null,arguments)},cf=s._Abs=function(){return(cf=s._Abs=s.asm.Abs).apply(null,arguments)},dh=s._Acos=function(){return(dh=s._Acos=s.asm.Acos).apply(null,arguments)},jo=s._Acosh=function(){return(jo=s._Acosh=s.asm.Acosh).apply(null,arguments)},mf=s._Add=function(){return(mf=s._Add=s.asm.Add).apply(null,arguments)},ff=s._AddN=function(){return(ff=s._AddN=s.asm.AddN).apply(null,arguments)},gf=s._All=function(){return(gf=s._All=s.asm.All).apply(null,arguments)},yf=s._Any=function(){return(yf=s._Any=s.asm.Any).apply(null,arguments)},bf=s._ArgMax=function(){return(bf=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},ph=s._ArgMin=function(){return(ph=s._ArgMin=s.asm.ArgMin).apply(null,arguments)},hh=s._Asin=function(){return(hh=s._Asin=s.asm.Asin).apply(null,arguments)},xf=s._Asinh=function(){return(xf=s._Asinh=s.asm.Asinh).apply(null,arguments)},vf=s._Atan=function(){return(vf=s._Atan=s.asm.Atan).apply(null,arguments)},wf=s._Atan2=function(){return(wf=s._Atan2=s.asm.Atan2).apply(null,arguments)},sd=s._Atanh=function(){return(sd=s._Atanh=s.asm.Atanh).apply(null,arguments)},kf=s._AvgPool=function(){return(kf=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},If=s._AvgPool3D=function(){return(If=s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},Sf=s._AvgPool3DGrad=function(){return(Sf=s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},Ns=s._AvgPoolGrad=function(){return(Ns=s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},Nf=s._BatchMatMul=function(){return(Nf=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},Tf=s._Bincount=function(){return(Tf=s._Bincount=s.asm.Bincount).apply(null,arguments)},ch=s._BitwiseAnd=function(){return(ch=s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},_f=s._Ceil=function(){return(_f=s._Ceil=s.asm.Ceil).apply(null,arguments)},id=s._ClipByValue=function(){return(id=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},Cf=s._Conv2D=function(){return(Cf=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},Ef=s._Conv2DBackpropInput=function(){return(Ef=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},$f=s._Conv3D=function(){return($f=s._Conv3D=s.asm.Conv3D).apply(null,arguments)},Ta=s._Conv3DBackpropFilterV2=function(){return(Ta=s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},od=s._Conv3DBackpropInputV2=function(){return(od=s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},Af=s._Cos=function(){return(Af=s._Cos=s.asm.Cos).apply(null,arguments)},Ff=s._Cosh=function(){return(Ff=s._Cosh=s.asm.Cosh).apply(null,arguments)},Df=s._CropAndResize=function(){return(Df=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},Rf=s._Cumprod=function(){return(Rf=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},mh=s._Cumsum=function(){return(mh=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},fh=s._DenseBincount=function(){return(fh=s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},Mf=s._DepthToSpace=function(){return(Mf=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},Of=s._DepthwiseConv2dNative=function(){return(Of=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},gh=s._Diag=function(){return(gh=s._Diag=s.asm.Diag).apply(null,arguments)},yh=s._Dilation2D=function(){return(yh=s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},Lf=s._Dilation2DBackpropFilter=function(){return(Lf=s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},Pf=s._Dilation2DBackpropInput=function(){return(Pf=s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},zf=s._Elu=function(){return(zf=s._Elu=s.asm.Elu).apply(null,arguments)},Bf=s._EluGrad=function(){return(Bf=s._EluGrad=s.asm.EluGrad).apply(null,arguments)},bh=s._Equal=function(){return(bh=s._Equal=s.asm.Equal).apply(null,arguments)},Z0=s._Erf=function(){return(Z0=s._Erf=s.asm.Erf).apply(null,arguments)},Wf=s._Exp=function(){return(Wf=s._Exp=s.asm.Exp).apply(null,arguments)},Vf=s._Expm1=function(){return(Vf=s._Expm1=s.asm.Expm1).apply(null,arguments)},Uf=s._FlipLeftRight=function(){return(Uf=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},Gf=s._Floor=function(){return(Gf=s._Floor=s.asm.Floor).apply(null,arguments)},Hf=s._FloorDiv=function(){return(Hf=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},jf=s._FusedBatchNorm=function(){return(jf=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},qf=s._FusedConv2D=function(){return(qf=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},Kf=s._FusedDepthwiseConv2D=function(){return(Kf=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},Xf=s._Gather=function(){return(Xf=s._Gather=s.asm.Gather).apply(null,arguments)},Zf=s._GatherNd=function(){return(Zf=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},Jf=s._Greater=function(){return(Jf=s._Greater=s.asm.Greater).apply(null,arguments)},Yf=s._GreaterEqual=function(){return(Yf=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},Qf=s._IsFinite=function(){return(Qf=s._IsFinite=s.asm.IsFinite).apply(null,arguments)},eg=s._IsInf=function(){return(eg=s._IsInf=s.asm.IsInf).apply(null,arguments)},tg=s._IsNan=function(){return(tg=s._IsNan=s.asm.IsNan).apply(null,arguments)},ng=s._LRN=function(){return(ng=s._LRN=s.asm.LRN).apply(null,arguments)},rg=s._LRNGrad=function(){return(rg=s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},ag=s._LeakyRelu=function(){return(ag=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},sg=s._Less=function(){return(sg=s._Less=s.asm.Less).apply(null,arguments)},ig=s._LessEqual=function(){return(ig=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},og=s._LinSpace=function(){return(og=s._LinSpace=s.asm.LinSpace).apply(null,arguments)},lg=s._Log=function(){return(lg=s._Log=s.asm.Log).apply(null,arguments)},ug=s._Log1p=function(){return(ug=s._Log1p=s.asm.Log1p).apply(null,arguments)},dg=s._LogicalAnd=function(){return(dg=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},pg=s._LogicalNot=function(){return(pg=s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},hg=s._LogicalOr=function(){return(hg=s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},cg=s._LogicalXor=function(){return(cg=s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},mg=s._Max=function(){return(mg=s._Max=s.asm.Max).apply(null,arguments)},fg=s._MaxPool=function(){return(fg=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},gg=s._MaxPool3D=function(){return(gg=s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},yg=s._MaxPool3DGrad=function(){return(yg=s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},bg=s._MaxPoolGrad=function(){return(bg=s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},xg=s._MaxPoolWithArgmax=function(){return(xg=s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},vg=s._Maximum=function(){return(vg=s._Maximum=s.asm.Maximum).apply(null,arguments)},wg=s._Mean=function(){return(wg=s._Mean=s.asm.Mean).apply(null,arguments)},kg=s._Min=function(){return(kg=s._Min=s.asm.Min).apply(null,arguments)},Ig=s._Minimum=function(){return(Ig=s._Minimum=s.asm.Minimum).apply(null,arguments)},Sg=s._MirrorPad=function(){return(Sg=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},Ng=s._Mod=function(){return(Ng=s._Mod=s.asm.Mod).apply(null,arguments)},Tg=s._Multinomial=function(){return(Tg=s._Multinomial=s.asm.Multinomial).apply(null,arguments)},_g=s._Multiply=function(){return(_g=s._Multiply=s.asm.Multiply).apply(null,arguments)},Cg=s._Neg=function(){return(Cg=s._Neg=s.asm.Neg).apply(null,arguments)},Eg=s._NonMaxSuppressionV3=function(){return(Eg=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},$g=s._NonMaxSuppressionV4=function(){return($g=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},Ag=s._NonMaxSuppressionV5=function(){return(Ag=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},Fg=s._NotEqual=function(){return(Fg=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},Dg=s._OneHot=function(){return(Dg=s._OneHot=s.asm.OneHot).apply(null,arguments)},Rg=s._PadV2=function(){return(Rg=s._PadV2=s.asm.PadV2).apply(null,arguments)},Mg=s._Pow=function(){return(Mg=s._Pow=s.asm.Pow).apply(null,arguments)},Og=s._Prelu=function(){return(Og=s._Prelu=s.asm.Prelu).apply(null,arguments)},Lg=s._Prod=function(){return(Lg=s._Prod=s.asm.Prod).apply(null,arguments)},Pg=s._RealDiv=function(){return(Pg=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},zg=s._Reciprocal=function(){return(zg=s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},Bg=s._Relu=function(){return(Bg=s._Relu=s.asm.Relu).apply(null,arguments)},Wg=s._Relu6=function(){return(Wg=s._Relu6=s.asm.Relu6).apply(null,arguments)},Vg=s._ResizeBilinear=function(){return(Vg=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},Ug=s._ResizeBilinearGrad=function(){return(Ug=s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},Gg=s._ResizeNearestNeighbor=function(){return(Gg=s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},Hg=s._ResizeNearestNeighborGrad=function(){return(Hg=s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},jg=s._Reverse=function(){return(jg=s._Reverse=s.asm.Reverse).apply(null,arguments)},qg=s._RotateWithOffset=function(){return(qg=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},Kg=s._Round=function(){return(Kg=s._Round=s.asm.Round).apply(null,arguments)},Xg=s._Rsqrt=function(){return(Xg=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},Zg=s._ScatterNd=function(){return(Zg=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},Jg=s._SearchSorted=function(){return(Jg=s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},Yg=s._SelectV2=function(){return(Yg=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},Qg=s._Selu=function(){return(Qg=s._Selu=s.asm.Selu).apply(null,arguments)},ey=s._Sigmoid=function(){return(ey=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},ty=s._Sign=function(){return(ty=s._Sign=s.asm.Sign).apply(null,arguments)},ny=s._Sin=function(){return(ny=s._Sin=s.asm.Sin).apply(null,arguments)},ry=s._Sinh=function(){return(ry=s._Sinh=s.asm.Sinh).apply(null,arguments)},ay=s._Softmax=function(){return(ay=s._Softmax=s.asm.Softmax).apply(null,arguments)},sy=s._Softplus=function(){return(sy=s._Softplus=s.asm.Softplus).apply(null,arguments)},iy=s._SparseFillEmptyRows=function(){return(iy=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},oy=s._SparseReshape=function(){return(oy=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},ly=s._SparseSegmentReduction=function(){return(ly=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},uy=s._SparseToDense=function(){return(uy=s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},dy=s._Sqrt=function(){return(dy=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},py=s._Square=function(){return(py=s._Square=s.asm.Square).apply(null,arguments)},hy=s._SquaredDifference=function(){return(hy=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},cy=s._Step=function(){return(cy=s._Step=s.asm.Step).apply(null,arguments)},my=s._StridedSlice=function(){return(my=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},fy=s._Sub=function(){return(fy=s._Sub=s.asm.Sub).apply(null,arguments)},gy=s._Sum=function(){return(gy=s._Sum=s.asm.Sum).apply(null,arguments)},yy=s._Tan=function(){return(yy=s._Tan=s.asm.Tan).apply(null,arguments)},by=s._Tanh=function(){return(by=s._Tanh=s.asm.Tanh).apply(null,arguments)},xy=s._TensorScatterUpdate=function(){return(xy=s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},vy=s._Tile=function(){return(vy=s._Tile=s.asm.Tile).apply(null,arguments)},wy=s._TopK=function(){return(wy=s._TopK=s.asm.TopK).apply(null,arguments)},ky=s._Transform=function(){return(ky=s._Transform=s.asm.Transform).apply(null,arguments)},Iy=s._Transpose=function(){return(Iy=s._Transpose=s.asm.Transpose).apply(null,arguments)},Sy=s.__FusedMatMul=function(){return(Sy=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},Ny=s._malloc=function(){return(Ny=s._malloc=s.asm.malloc).apply(null,arguments)},Ty=s._free=function(){return(Ty=s._free=s.asm.free).apply(null,arguments)},_y=s.___errno_location=function(){return(_y=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},xh=s.stackSave=function(){return(xh=s.stackSave=s.asm.stackSave).apply(null,arguments)},vh=s.stackRestore=function(){return(vh=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ld=s.stackAlloc=function(){return(ld=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},Cy=s.dynCall_iijjiiii=function(){return(Cy=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},Ey=s.dynCall_jiji=function(){return(Ey=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=uf;var qo;Mn=function X(){qo||wh(),qo||(Mn=X)};function wh(X){if(X=X||d,at>0||(Ct(),at>0))return;function ie(){qo||(qo=!0,s.calledRun=!0,!U&&(Zn(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),en()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ie()},1)):ie()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();wh();var Ko;l&&(Ko={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var Xo;if(typeof a<"u")Xo=a;else if(typeof WasmBackendModuleThreadedSimd<"u")Xo=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ko){var $y=Xo._dispose;Xo._dispose=function(){$y(),Ko.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Ko.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),Pc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Jd=class{refCount(e){return Ln("refCount")}incRef(e){return Ln("incRef")}timerAvailable(){return!0}time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}readToGPU(e,t){return Ln("readToGPU")}numDataIds(){return Ln("numDataIds")}disposeData(e,t){return Ln("disposeData")}write(e,t,n){return Ln("write")}move(e,t,n,r,a){return Ln("move")}createTensorFromGPUData(e,t,n){return Ln("createTensorFromGPUData")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Ln("dispose")}};function Ln(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function wI(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ic(e,t,n)}function fR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ic(e,n,r),ic(t,n,r)}function Ad(e,t,n){return Math.max(e,Math.min(t,n))}function gR(e){return e%2===0?e:e+1}function ic(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function yR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function bR(e,t){let n=Math.random();return t*n+(1-n)*e}function xR(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function xn(e,t,n=""){$(ya(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function di(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function nt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function vR(e){return e.length===0}function kI(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==null&&t[n]!==null&&e[n]!==t[n])return!1;return!0}function ya(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function hl(e){return e%1===0}function wR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function kR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function IR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return wI(t),t}function Td(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function SR(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function NR(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function br(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),$(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>hl(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function II(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:br(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function SI(e,t){return mx(e,t)}function mx(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function NI(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function TI(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function TR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function oc(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function _I(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function La(e){return typeof e=="string"||e instanceof String}function CI(e){return typeof e=="boolean"}function EI(e){return typeof e=="number"}function Yd(e){return Array.isArray(e)?Yd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":EI(e)?"float32":La(e)?"string":CI(e)?"bool":"float32"}function Ga(e){return!!(e&&e.constructor&&e.call&&e.apply)}function lc(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Fl(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $I(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<s;l++)a[l]=$I(e+l*o,i,n,r)}return a}function ll(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $I(0,e,t,n)}function _R(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function fx(e,t){let n=zc(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function zc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function CR(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return ll(e,new Float32Array(n));if(t==="int32")return ll(e,new Int32Array(n));if(t==="bool")return ll(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Xn(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ER(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function $R(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Bc(e){return e&&e.then&&typeof e.then=="function"}var F1="tfjsflags",AI=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=AR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Bc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);F1 in e&&e[F1].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=DR(n,r)})}};function AR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(FR(t,r[0],r[1]),r.join("="))),t}function FR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function DR(e,t){let n=t.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:t}function G(){return gx}var gx=null;function RR(e){gx=e}var zy;function FI(){if(zy==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");zy=e}return zy}function MR(){let e=FI();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function yx(e,t){let n=MR();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Dl="Abs",pi="Acos",hi="Acosh",is="Add",ci="AddN",Rl="All",Ml="Any",Ol="ArgMax",Ll="ArgMin",mi="Asin",fi="Asinh",gi="Atan",yi="Atanh",bi="Atan2",xi="AvgPool",Qd="AvgPoolGrad",Pl="AvgPool3D",ep="AvgPool3DGrad",vi="BatchMatMul",zl="BatchToSpaceND",Bl="Bincount",Wl="BitwiseAnd",DI="BroadcastTo",tp="BroadcastArgs",wi="Cast",ki="Ceil",os="ClipByValue",Wc="Complex",np="ComplexAbs",Vl="Concat",Ii="Conv2D",Vc="Conv2DBackpropFilter",Si="Conv2DBackpropInput",Ni="Conv3D",Ul="Conv3DBackpropFilterV2",Gl="Conv3DBackpropInputV2",Ti="Cos",_i="Cosh",Hl="Cumprod",Ci="Cumsum",jl="CropAndResize",rp="DenseBincount",ql="DepthToSpace",Ei="DepthwiseConv2dNative",Uc="DepthwiseConv2dNativeBackpropFilter",Gc="DepthwiseConv2dNativeBackpropInput",ap="Diag",$i="Dilation2D",cl="Dilation2DBackpropInput",ml="Dilation2DBackpropFilter",Hc="Draw",Ai="RealDiv",jc="Einsum",Fi="Elu",Kl="EluGrad",Di="Erf",Xl="Equal",Ri="Exp",Zl="ExpandDims",Mi="Expm1",qc="FFT",sp="Fill",Jl="FlipLeftRight",Oi="Floor",Li="FloorDiv",Pi="FusedBatchNorm",Yl="GatherV2",Ql="GatherNd",eu="Greater",zi="GreaterEqual",Bi="Identity",Kc="IFFT",Xc="Imag",Wi="IsFinite",Vi="IsInf",Ui="IsNan",Gi="LeakyRelu",tu="Less",nu="LessEqual",ru="LinSpace",Hi="Log",ji="Log1p",au="LogicalAnd",su="LogicalNot",iu="LogicalOr",RI="LogicalXor",MI="LogSoftmax",OR="LowerBound",qi="LRN",ou="LRNGrad",LR="MatrixBandPart",Ki="Max",Xi="Maximum",Zi="MaxPool",ip="MaxPoolGrad",lu="MaxPool3D",op="MaxPool3DGrad",lp="MaxPoolWithArgmax",Ji="Mean",Yi="Min",Qi="Minimum",eo="MirrorPad",to="Mod",uu="Multinomial",no="Multiply",du="Neg",pu="NotEqual",hu="NonMaxSuppressionV3",cu="NonMaxSuppressionV4",mu="NonMaxSuppressionV5",fu="OnesLike",ro="OneHot",gu="Pack",ao="PadV2",PR="Pool",so="Pow",io="Prelu",oo="Prod",Zc="RaggedGather",Jc="RaggedRange",Yc="RaggedTensorToTensor",up="Range",Qc="Real",lo="Reciprocal",uo="Relu",yu="Reshape",po="ResizeNearestNeighbor",bu="ResizeNearestNeighborGrad",ho="ResizeBilinear",xu="ResizeBilinearGrad",co="Relu6",mo="Reverse",fo="Round",go="Rsqrt",vu="ScatterNd",wu="TensorScatterUpdate",ku="SearchSorted",Iu="Select",yo="Selu",Su="Slice",bo="Sin",xo="Sinh",vo="Sign",wo="Sigmoid",ko="Softplus",Io="Sqrt",So="Sum",Nu="SpaceToBatchND",Tu="SplitV",No="Softmax",dp="SparseFillEmptyRows",_u="SparseReshape",pp="SparseSegmentMean",hp="SparseSegmentSum",Cu="SparseToDense",To="SquaredDifference",cp="Square",mp="StaticRegexReplace",Eu="StridedSlice",fp="StringNGrams",gp="StringSplit",yp="StringToHashBucketFast",_o="Sub",Co="Tan",Eo="Tanh",ls="Tile",$u="TopK",Au="Transform",ha="Transpose",bp="Unique",Fu="Unpack",xp="UnsortedSegmentSum",zR="UpperBound",Du="ZerosLike",us="Step",uc="FromPixels",Ru="RotateWithOffset",js="_FusedMatMul",qs="FusedConv2D",Ks="FusedDepthwiseConv2D";function Oa(...e){G().getBool("IS_TEST")||G().getBool("PROD")||console.warn(...e)}function BR(...e){G().getBool("IS_TEST")||G().getBool("PROD")||console.log(...e)}var fl=yx("kernelRegistry",()=>new Map),Fd=yx("gradRegistry",()=>new Map);function Dd(e,t){let n=bx(e,t);return fl.get(n)}function ab(e){return Fd.get(e)}function dc(e){let t=fl.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function vp(e){let{kernelName:t,backendName:n}=e,r=bx(t,n);fl.has(r)&&Oa(`The kernel '${t}' for backend '${n}' is already registered`),fl.set(r,e)}function OI(e){let{kernelName:t}=e;Fd.has(t)&&G().getBool("DEBUG")&&Oa(`Overriding the gradient for '${t}'`),Fd.set(t,e)}function WR(e,t){let n=bx(e,t);if(!fl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);fl.delete(n)}function VR(e){if(!Fd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Fd.delete(e)}function UR(e,t){dc(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});vp(r)})}function bx(e,t){return`${t}_${e}`}var w={};Ce(w,{arraysEqual:()=>ya,arraysEqualWithNull:()=>kI,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Xn,assertNonNull:()=>di,assertShapesMatch:()=>xn,bytesFromStringArray:()=>_I,bytesPerElement:()=>oc,checkConversionForErrors:()=>NI,clamp:()=>Ad,computeStrides:()=>Fl,convertBackendValuesAndArrayBuffer:()=>_R,createScalarValue:()=>XR,createShuffledIndices:()=>IR,decodeString:()=>pc,distSquared:()=>xR,encodeString:()=>kp,fetch:()=>JR,fingerPrint64:()=>KR,flatten:()=>Ha,getArrayFromDType:()=>mx,getTypedArrayFromDType:()=>SI,hasEncodingLoss:()=>TR,hexToLong:()=>wp,indexToLoc:()=>$R,inferDtype:()=>Yd,inferFromImplicitShape:()=>NR,isBoolean:()=>CI,isFunction:()=>Ga,isInt:()=>hl,isNumber:()=>EI,isPromise:()=>Bc,isScalarShape:()=>vR,isString:()=>La,isTypedArray:()=>qt,isValidDtype:()=>TI,locToIndex:()=>ER,makeOnesTypedArray:()=>fx,makeZerosNestedTypedArray:()=>CR,makeZerosTypedArray:()=>zc,nearestDivisor:()=>lc,nearestLargerEven:()=>gR,now:()=>Rd,parseAxisParam:()=>br,randUniform:()=>bR,repeatedTry:()=>SR,rightPad:()=>Td,shuffle:()=>wI,shuffleCombo:()=>fR,sizeFromShape:()=>nt,sizeToSquarishShape:()=>kR,squeezeShape:()=>II,sum:()=>yR,swap:()=>ic,tanh:()=>wR,toNestedArray:()=>ll,toTypedArray:()=>em});function LI(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var D1=ss(YD()),Rs=D1.default||D1;function wp(e){return Rs.fromString(e,!0,16)}var PI=wp("c3a5c85c97cb3127"),As=wp("b492b66fbe98f273"),hn=wp("9ae16a3b2f90404f");function sb(e){return e.xor(e.shru(47))}function zI(e,t,n){let r=e.slice(t,t+n);return Rs.fromBytes(Array.from(r),!0,!0)}function ct(e,t){return zI(e,t,8)}function R1(e,t){return zI(e,t,4)}function jt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Wa(e,t,n=wp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function GR(e,t,n,r,a,s){a=a.add(e),s=jt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(jt(a,44)),[a.add(r),s.add(i)]}function Rh(e,t,n,r){return GR(ct(e,t),ct(e,t+8),ct(e,t+16),ct(e,t+24),n,r)}function HR(e,t=e.length){if(t>=8){let n=hn.add(t*2),r=ct(e,0).add(hn),a=ct(e,t-8),s=jt(a,37).mul(n).add(r),i=jt(r,25).add(a).mul(n);return Wa(s,i,n)}if(t>=4){let n=hn.add(t*2),r=R1(e,0);return Wa(r.shl(3).add(t),R1(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return sb(hn.mul(s).xor(PI.mul(i))).mul(hn)}return hn}function jR(e,t=e.length){let n=hn.add(t*2),r=ct(e,0).mul(As),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(hn);return Wa(jt(r.add(a),43).add(jt(s,30)).add(i),r.add(jt(a.add(hn),18)).add(s),n)}function qR(e,t=e.length){let n=hn.add(t*2),r=ct(e,0).mul(hn),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(hn),o=jt(r.add(a),43).add(jt(s,30)).add(i),l=Wa(o,r.add(jt(a.add(hn),18)).add(s),n),u=ct(e,16).mul(n),d=ct(e,24),h=o.add(ct(e,t-32)).mul(n),p=l.add(ct(e,t-24)).mul(n);return Wa(jt(u.add(d),43).add(jt(h,30)).add(p),u.add(jt(d.add(r),18)).add(h),n)}function KR(e,t=e.length){let n=Rs.fromNumber(81,!0);if(t<=32)return t<=16?HR(e,t):jR(e,t);if(t<=64)return qR(e,t);let r=n,a=n.mul(As).add(113),s=sb(a.mul(hn).add(113)).mul(hn),i=[Rs.UZERO,Rs.UZERO],o=[Rs.UZERO,Rs.UZERO];r=r.mul(hn).add(ct(e,0));let l=0,u=(t-1>>6)*64,d=u+(t-1&63)-63;do r=jt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(As),a=jt(a.add(i[1]).add(ct(e,l+48)),42).mul(As),r=r.xor(o[1]),a=a.add(i[0]).add(ct(e,l+40)),s=jt(s.add(o[0]),33).mul(As),i=Rh(e,l,i[1].mul(As),r.add(o[0])),o=Rh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u);let h=As.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=jt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(h),a=jt(a.add(i[1]).add(ct(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ct(e,l+40))),s=jt(s.add(o[0]),33).mul(h),i=Rh(e,l,i[1].mul(h),r.add(o[0])),o=Rh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],Wa(Wa(i[0],o[0],h).add(sb(a).mul(PI)).add(s),Wa(i[1],o[1],h).add(r),h)}function XR(e,t){return t==="string"?kp(e):em([e],t)}function ZR(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function em(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ha(e)),G().getBool("DEBUG")&&NI(e,t),ZR(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Rd(){return G().platform.now()}function JR(e,t){return G().platform.fetch(e,t)}function kp(e,t="utf-8"){return t=t||"utf-8",G().platform.encode(e,t)}function pc(e,t="utf-8"){return t=t||"utf-8",G().platform.decode(e,t)}function qt(e){return G().platform.isTypedArray!=null?G().platform.isTypedArray(e):LI(e)}function Ha(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||Bc(e)||e==null||qt(e)&&n)t.push(e);else if(Array.isArray(e)||qt(e))for(let r=0;r<e.length;++r)Ha(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)Ha(e[a],t,n)}return t}var YR=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new eM)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=Rd();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:Rd()-i})}if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(u=>{QR(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function QR(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var eM=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?Td(`${r}ms`,9):r.error,o=Td(e,25),l=t.rank,u=t.size,d=Td(t.shape.toString(),14),h="";for(let p in a){let c=a[p];if(c!=null){let m=c.shape||t.shape,f=m.length;h+=`${p}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${d}	%c${u}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function tM(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],d=u.inputs;for(let h in d){let p=d[h],c=!1;for(let m=0;m<t.length;m++)if(r[p.id]){u.outputs.forEach(f=>r[f.id]=!0),c=!0,a[u.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],d=u.inputs;for(let h=0;h<u.outputs.length;h++)if(s[u.outputs[h].id]){for(let p in d)s[d[p].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(a[u.id]&&i[u.id]){let d={};for(let p in u.inputs){let c=u.inputs[p];r[c.id]&&(d[p]=c)}let h=Object.assign({},u);h.inputs=d,h.outputs=u.outputs,o.push(h)}}return o}function nM(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let d=s.inputs[l];if(!ya(u.shape,d.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(e[d.id]==null)e[d.id]=u;else{let h=e[d.id];e[d.id]=r(h,u),h.dispose()}}}}var M1=20,pd=3,By=7;function rM(e,t,n,r){let a=Fl(t),s=aM(e,t,n,a),i=t.length,o=Jh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function aM(e,t,n,r){let a=nt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?yd(e):e;if(o>1)for(let u=0;u<a/s;u++){let d=u*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],gd(l[d+h],0,n).length)}return i}function gd(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(By))} + ${parseFloat(e[1].toFixed(By))}j`:La(e)?r=`'${e}'`:n==="bool"?r=BI(e):r=parseFloat(e.toFixed(By)).toString(),Td(r,t)}function BI(e){return e===0?"false":"true"}function Jh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=yd(e);return[gd(f[0],0,n)]}return n==="bool"?[BI(e[0])]:[e[0].toString()]}if(l===1){if(o>M1){let f=pd*i,g=Array.from(e.slice(0,f)),y=Array.from(e.slice((o-pd)*i,o*i));return n==="complex64"&&(g=yd(g),y=yd(y)),["["+g.map((b,x)=>gd(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>gd(b,a[o-pd+x],n)).join(", ")+"]"]}return["["+(n==="complex64"?yd(e):Array.from(e)).map((f,g)=>gd(f,a[g],n)).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>M1){for(let f=0;f<pd;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,!1))}p.push("...");for(let f=o-pd;f<o;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,f===o-1))}}else for(let f=0;f<o;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,f===o-1))}let c=l===2?",":"";p[0]="["+(o>0?p[0]+c:"");for(let f=1;f<p.length-1;f++)p[f]=" "+p[f]+c;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":m),p}function yd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ft=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=nt(e),n!=null){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||mx(t,this.size),this.strides=Fl(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Nr().makeTensor(this.values,this.shape,this.dtype)}},Nr=null,al=null,sM=null;function iM(e){Nr=e}function oM(e){al=e}function lM(e){sM=e}var De=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=nt(e),this.strides=Fl(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return al.buffer(this.shape,this.dtype,e)}bufferSync(){return al.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ll(this.shape,e,this.dtype==="complex64")}arraySync(){return ll(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Nr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>pc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Nr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Nr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>pc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Nr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Nr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return al.print(this,e)}clone(){return this.throwIfDisposed(),al.clone(this)}toString(e=!1){let t=this.dataSync();return rM(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),al.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Nr().makeVariable(this,e,t,n)}};Object.defineProperty(De,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return yx("Tensor",()=>De)}Y();var Xs=class extends De{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ya(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Nr().disposeTensor(this),this.dataId=e.dataId,Nr().incRef(this,null)}dispose(){Nr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Xs,Symbol.hasInstance,{value:e=>e instanceof De&&e.assign!=null&&e.assign instanceof Function});var Tr={};Ce(Tr,{assertTypesMatch:()=>UI,getTensorsInContainer:()=>xx,isTensorInList:()=>dM,makeTypesMatch:()=>St});var ib;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(ib||(ib={}));var ob;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(ob||(ob={}));var lb;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(lb||(lb={}));var ub;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(ub||(ub={}));var db;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(db||(db={}));var uM={float32:ub,int32:ob,bool:lb,complex64:db};function ir(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return uM[e][t]}function tm(e){return ir(e,"int32")}function WI(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function VI(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function St(e,t){if(e.dtype===t.dtype)return[e,t];let n=ir(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function UI(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function dM(e,t){return t.some(n=>n.id===e.id)}function xx(e){let t=[];return GI(e,t,new Set),t}function GI(e,t,n){if(e==null)return;if(e instanceof De){t.push(e);return}if(!pM(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),GI(s,t,n))}}function pM(e){return Array.isArray(e)||typeof e=="object"}function Wy(e){return e.kernelName!=null}var O1=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},vx=class pb{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new O1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(Oa(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new YR(this.backendInstance),!0}setupRegisteredKernels(){dc(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){dc(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=n.factory();if(r&&!(r instanceof Jd)&&typeof r.then=="function"){let a=++this.pendingBackendInitId,s=r.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Oa(`Initialization of backend ${t} failed`),Oa(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return Oa(`Initialization of backend ${t} failed`),Oa(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n],{success:a,asyncInit:s}=this.initializeBackend(r);if(s||a)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){let r=this.state.tensorInfo.get(n),a=r.backend,s=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),r.backend=t,t.move(n,s,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let a;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,n,r){t();try{let a=r();return n(),a}catch(a){throw n(),a}}nextTensorId(){return pb.nextTensorId++}nextVariableId(){return pb.nextVariableId++}clone(t){let n=O.runKernel(Bi,{x:t}),r={x:t},a=i=>({x:()=>{let o="float32",l={x:i},u={dtype:o};return O.runKernel(wi,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[n],a,s,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,Dd(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){let a=this.backend.numDataIds(),s=0;r.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l,u=Wy(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Wy(t)){let{kernelName:m,inputs:f,attrs:g}=t;this.backendName==null&&this.backend;let y=Dd(m,this.backendName);$(y!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:f,attrs:g,backend:this.backend});let x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,x);let v=x.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){let I=this.getTensorsForGradient(m,f,v);r=this.saveTensorsForBackwardMode(I)}return v}}else{let{forwardFunc:m}=t,f=g=>{a&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,f));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:d,attrs:h}=t,p=Wy(t)?null:t.backwardsFunc,c;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(c=this.profiler.profileKernel(u,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),n=c.outputs)}),a&&this.addTapeNode(u,d,n,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(m=>d[m]!=null?d[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,n,r){let a=ab(t);if(a!=null){let s=a.inputsToSave||[],i=a.outputsToSave||[],o;a.saveAllInputs?($(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=s.map(u=>n[u]);let l=r.filter((u,d)=>i[d]);return o.concat(l)}return[]}makeTensor(t,n,r,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",a=a||this.backend;let s=t;r==="string"&&La(t[0])&&(s=t.map(l=>kp(l)));let i=a.write(s,n,r),o=new De(n,r,i,this.nextTensorId());if(this.trackTensor(o,a),r==="string"){let l=this.state.tensorInfo.get(i),u=_I(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(t,n,r,a){r=r||"float32";let s={dataId:t,shape:n,dtype:r};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,n){let{dataId:r,shape:a,dtype:s}=t,i=new De(a,s,r,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(t,n=!0,r,a){r=r||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));let s=new Xs(t,n,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*oc(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Xs||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let r=t.size*oc(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,a,s,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:s},l=ab(t);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=u=>(u=u.map((d,h)=>{if(d==null){let p=r[h],c=zc(p.size,p.dtype);return this.makeTensor(c,p.shape,p.dtype)}return d}),a(u.length>1?u:u[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){let n=xx(t),r=new Set(n.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!r.has(i.id)&&i.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(s=>{!s.kept&&s.scopeId===a.id&&this.track(s)})}gradients(t,n,r,a=!1){if($(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));$(s instanceof De,()=>"The result y returned by f() must be a tensor.");let i=tM(this.state.activeTape,n,s);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=r??hM(s.shape),nM(o,i,u=>this.tidy(u),cM);let l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let d of u.saved)d.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return $(Ga(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{$(n.every(o=>o instanceof De),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,a={};n.forEach((o,l)=>{a[l]=o});let s=(o,l)=>(r=t(...n,l),$(r.value instanceof De,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Ga(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(o,l)=>{let u=r.gradFunc(o,l),d=Array.isArray(u)?u:[u];$(d.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(d.every(p=>p instanceof De),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let h={};return d.forEach((p,c)=>{h[c]=()=>p}),h};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){let n=Rd(),r=await this.backend.time(t);return r.wallMs=Rd()-n,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new O1;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};vx.nextTensorId=0;vx.nextVariableId=0;function hM(e){let t=fx(nt(e),"float32");return O.makeTensor(t,e,"float32")}function HI(){let e=FI();if(e._tfengine==null){let t=new AI(e);e._tfengine=new vx(t)}return RR(e._tfengine.ENV),iM(()=>e._tfengine),e._tfengine}var O=HI();function cM(e,t){let n={a:e,b:t};return O.runKernel(is,n)}var Ip={};Ce(Ip,{isBrowser:()=>jI,isMobile:()=>gM,mockIsMobile:()=>fM});function mM(){return typeof navigator<"u"&&navigator!=null}var hb;function fM(e){hb=e}function gM(e){if(hb!==void 0)return hb;if(e||mM()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function jI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var An=G();An.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});An.registerFlag("IS_BROWSER",()=>jI());An.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");An.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));An.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));An.registerFlag("PROD",()=>!1);An.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>An.getBool("DEBUG"));An.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);An.registerFlag("IS_TEST",()=>!1);An.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>An.getBool("DEBUG"));An.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);An.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);An.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Zr(e,t){let n=e;if(qt(e))return t==="string"?[]:[e.length];if(WI(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(VI(e))return[e.buffer.size/(t==null?4:oc(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||qt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&qI(e,r,[]),r}function qI(e,t,n){if(n=n||[],!Array.isArray(e)&&!qt(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)qI(e[a],r,n.concat(a))}function L1(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function C(e,t,n,r="numeric"){if(e instanceof Y())return L1(r,e.dtype,t,n),e;let a=Yd(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),L1(r,a,t,n),e==null||!qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Zr(e,a);!qt(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?em(e,a):Ha(e,[],!0);return O.makeTensor(i,s,a)}function Md(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>C(a,`${t}[${s}]`,n,r))}var wx="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+wx;let a=(...s)=>{O.startScope(n);try{let i=r(...s);return Bc(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function yM(e,t){let n=C(e,"real","complex"),r=C(t,"imag","complex");xn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return O.runKernel(Wc,a)}var fa=L({complex_:yM});function ds(e,t,n,r){if(r==null)r=Yd(e);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(VI(e)||WI(e)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return O.backend.createTensorFromGPUData(e,t||n,r)}if(!qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Xn(t);let a=nt(t),s=nt(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==nt(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!qt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?em(e,r):Ha(e,[],!0),O.makeTensor(e,t,r)}function fn(e,t,n){let r=Zr(e,n);return ds(e,t,r,n)}var Zs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ba=class KI{static join(t){return new KI(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(r=>qt(r)?r.buffer:r),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let n=0;for(let r=0;r<t.length;r++){let a=t[r];r!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=n+a.byteLength;this.shards.push({buffer:a,start:n,end:s}),n=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,n=isNaN(Number(n))?0:n,t=Math.max(0,t),n=Math.min(this.byteLength,n),n<=t)return new ArrayBuffer(0);let r=this.findShardForByte(t);if(r===-1)throw new Error(`Could not find start shard for byte ${t}`);let a=n-t,s=new ArrayBuffer(a),i=new Uint8Array(s),o=0;for(let l=r;l<this.shards.length;l++){let u=this.shards[l],d=t+o-u.start,h=o,p=Math.min(n,u.end)-u.start,c=new Uint8Array(u.buffer,d,p-d);if(i.set(c,h),o+=c.length,n<u.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function n(a){return t<a.start?-1:t>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let r=bM(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}};function bM(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(s===0)return a;s<0?r=a:n=a+1}return-1}function xM(){G().set("PROD",!0)}function vM(){G().set("DEBUG",!0)}function wM(){G().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function kx(e){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}lM(kx);function kM(){O.disposeVariables()}function cr(){return O}function hc(){return O.memory()}function IM(e){return O.profile(e)}function W(e,t){return O.tidy(e,t)}function _e(e){xx(e).forEach(t=>t.dispose())}function Lt(e){return O.keep(e)}function SM(e){return O.time(e)}function NM(e){return O.setBackend(e)}function TM(){return O.ready()}function XI(){return O.backendName}function _M(e){O.removeBackend(e)}function CM(e){return O.findBackend(e)}function EM(e){return O.findBackendFactory(e)}function nm(e,t,n=1){return O.registerBackend(e,t,n)}function Ix(){return O.backend}function $M(e,t){G().setPlatform(e,t)}var ja=4;async function AM(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let d=new Promise(async h=>{let p=await l.bytes(),c=p.reduce((g,y)=>g+y.length,0)+ja*p.length,m=new Uint8Array(c),f=0;for(let g=0;g<p.length;g++){let y=p[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=ja,m.set(y,f),f+=y.length}h(m)});r.push(d)}else r.push(l.data());t!=null&&(u.group=t),n.push(u)}let s=await Promise.all(r);return{data:RM(s),specs:n}}function ZI(e,t){let n=new ba(e),r={},a=0;for(let s of t){let i=FM(s,(o,l)=>n.slice(a+o,a+l));r[s.name]=JI(s,n.slice(a,a+i)),a+=i}return r}function FM(e,t){let n=nt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Zs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=ja+new Uint32Array(t(a,a+ja))[0];return a}else r=Zs[e.dtype];return n*r}async function DM(e,t){let n=nt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Zs[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=ja+new Uint32Array(await t(a,a+ja))[0];return a}else r=Zs[e.dtype];return n*r}function JI(e,t){let n=e.name,r=e.dtype,a=e.shape,s=nt(a),i,o=0;if("quantization"in e){let l=e.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${e.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${e.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${e.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Zs[l.dtype],d=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(d.length);for(let h=0;h<d.length;h++){let p=d[h];i[h]=p*l.scale+l.min}}else if(l.dtype==="float16")i=WM()(d);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(d.length);for(let h=0;h<d.length;h++){let p=d[h];i[h]=Math.round(p*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*u}else if(r==="string"){let l=nt(e.shape);i=[];for(let u=0;u<l;u++){let d=new Uint32Array(t.slice(o,o+ja))[0];o+=ja;let h=new Uint8Array(t.slice(o,o+d));i.push(h),o+=d}}else{let l=Zs[r];if(r==="float32")i=new Float32Array(t);else if(r==="int32")i=new Int32Array(t);else if(r==="bool")i=new Uint8Array(t);else if(r==="complex64"){i=new Float32Array(t);let u=new Float32Array(i.length/2),d=new Float32Array(i.length/2);for(let m=0;m<u.length;m++)u[m]=i[m*2],d[m]=i[m*2+1];let h=fn(u,a,"float32"),p=fn(d,a,"float32"),c=fa(h,p);return h.dispose(),p.dispose(),c}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*l}return fn(i,a,r)}async function P1(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:a,value:s}=await e.read();if(a&&s==null){let o=n-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}let i=new Uint8Array(r.length+s.byteLength);i.set(r,0),i.set(new Uint8Array(s),r.length),r=i}return r.buffer}async function YI(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let i=await DM(s,async(u,d)=>(a=await P1(r,a,d),a.slice(u,d)));a=await P1(r,a,i);let o=a.slice(0,i);a=a.slice(i);let l=JI(s,o);if(n[s.name]=l,XI()==="webgpu"){let u=Ix();"uploadToGPU"in u&&nt(l.shape)>=G().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n}function RM(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var Sx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function z1(e){return Sx?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function MM(e){if(Sx)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function OM(e){if(Sx){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function LM(e){return ba.join(e)}function B1(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function QI(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function eS(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}async function Nx(e,t){let n,r;return e.weightsManifest!=null&&([n,r]=await t(e.weightsManifest)),eS(e,n,r)}function Sp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:z1(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:z1(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new ba(e.weightData).byteLength}}function cb(e){let t=[];for(let n of e)t.push(...n.weights);return t}function PM(){let e=n=>{let r=n<<13,a=0;for(;!(r&8388608);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function zM(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function BM(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function WM(){let e=PM(),t=zM(),n=BM();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var or=class Ir{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ir.instance==null&&(Ir.instance=new Ir),Ir.instance}static registerSaveRouter(t){Ir.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ir.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ir.getHandlers(t,"save")}static getLoadHandlers(t,n){return Ir.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return(n==="load"?Ir.getInstance().loadRouters:Ir.getInstance().saveRouters).forEach(s=>{let i=s(t,r);i!==null&&a.push(i)}),a}},VM=e=>or.registerSaveRouter(e),UM=e=>or.registerLoadRouter(e),GM=e=>or.getSaveHandlers(e),HM=(e,t)=>or.getLoadHandlers(e,t),mb="tensorflowjs",fb=1,zs="models_store",Pa="model_info_store";function tS(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function gb(e){let t=e.result;t.createObjectStore(zs,{keyPath:"modelPath"}),t.createObjectStore(Pa,{keyPath:"modelPath"})}var gl=(()=>{let e=class{constructor(t){if(this.indexedDB=tS(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((r,a)=>{let s=this.indexedDB.open(mb,fb);s.onupgradeneeded=()=>gb(s),s.onsuccess=()=>{let i=s.result;if(n==null){let o=i.transaction(zs,"readonly"),l=o.objectStore(zs).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=u=>(i.close(),a(l.error)),o.oncomplete=()=>i.close()}else{n.weightData=ba.join(n.weightData);let o=Sp(n),l=i.transaction(Pa,"readwrite"),u=l.objectStore(Pa),d;try{d=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(p){return a(p)}let h;d.onsuccess=()=>{h=i.transaction(zs,"readwrite");let p=h.objectStore(zs),c;try{c=p.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:o})}catch(m){return a(m)}c.onsuccess=()=>r({modelArtifactsInfo:o}),c.onerror=m=>{u=l.objectStore(Pa);let f=u.delete(this.modelPath);f.onsuccess=()=>(i.close(),a(c.error)),f.onerror=g=>(i.close(),a(c.error))}},d.onerror=p=>(i.close(),a(d.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},s.onerror=i=>a(s.error)})}};return e.URL_SCHEME="indexeddb://",e})(),nS=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gl.URL_SCHEME)?jM(e.slice(gl.URL_SCHEME.length)):null;or.registerSaveRouter(nS);or.registerLoadRouter(nS);function jM(e){return new gl(e)}function qM(e){return e.startsWith(gl.URL_SCHEME)?e.slice(gl.URL_SCHEME.length):e}var KM=class{constructor(){this.indexedDB=tS()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(mb,fb);n.onupgradeneeded=()=>gb(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Pa,"readonly"),s=a.objectStore(Pa).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=qM(e),new Promise((t,n)=>{let r=this.indexedDB.open(mb,fb);r.onupgradeneeded=()=>gb(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(Pa,"readwrite"),i=s.objectStore(Pa),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),d=()=>{l=a.transaction(zs,"readwrite");let h=l.objectStore(zs).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=p=>n(o.error)};u.onsuccess=d,u.onerror=h=>(d(),a.close(),n(o.error))}},o.onerror=u=>(a.close(),n(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})}},pa="/",sl="tensorflowjs_models",rS="info",XM="model_topology",ZM="weight_specs",JM="weight_data",YM="model_metadata";function aS(e){return{info:[sl,e,rS].join(pa),topology:[sl,e,XM].join(pa),weightSpecs:[sl,e,ZM].join(pa),weightData:[sl,e,JM].join(pa),modelMetadata:[sl,e,YM].join(pa)}}function sS(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function QM(e){let t=e.split(pa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(pa)}function eO(e){return e.startsWith(yl.URL_SCHEME)?e.slice(yl.URL_SCHEME.length):e}var yl=(()=>{let e=class{constructor(t){if(!G().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=aS(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Sp(t),s=ba.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,MM(s));let i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw sS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=a;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let o=JSON.parse(s);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,o.signature!=null&&(n.signature=o.signature),o.userDefinedMetadata!=null&&(n.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(n.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(n.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(n.trainingConfig=o.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=OM(i),n}};return e.URL_SCHEME="localstorage://",e})(),iS=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(yl.URL_SCHEME)?tO(e.slice(yl.URL_SCHEME.length)):null;or.registerSaveRouter(iS);or.registerLoadRouter(iS);function tO(e){return new yl(e)}var nO=class{constructor(){$(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=sl+pa,n=pa+rS;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=QM(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=eO(e);let t=aS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return sS(t),n}},ul="://",qa=class Aa{constructor(){this.managers={}}static getInstance(){return Aa.instance==null&&(Aa.instance=new Aa),Aa.instance}static registerManager(t,n){$(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(ul)&&(t=t.slice(0,t.indexOf(ul))),$(t.length>0,()=>"scheme must not be an empty string.");let r=Aa.getInstance();$(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=Aa.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(Aa.getInstance().managers)}};function Yh(e){if(e.indexOf(ul)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${qa.getSchemes().join(",")}`);return{scheme:e.split(ul)[0],path:e.split(ul)[1]}}async function oS(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=or.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=or.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Yh(e).scheme,l=Yh(e).path,u=o===Yh(e).scheme,d=await a.load();n&&u&&await qa.getManager(o).removeModel(l);let h=await i.save(d);return n&&!u&&await qa.getManager(o).removeModel(l),h.modelArtifactsInfo}async function rO(){let e=qa.getSchemes(),t={};for(let n of e){let r=await qa.getManager(n).listModels();for(let a in r){let s=n+ul+a;t[s]=r[a]}}return t}async function aO(e){let t=Yh(e);return qa.getManager(t.scheme).removeModel(t.path)}async function sO(e,t){return oS(e,t,!1)}async function iO(e,t){return oS(e,t,!0)}var oO=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!G().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return LI(e)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new oO);try{qa.registerManager(yl.URL_SCHEME,new nO)}catch{}try{qa.registerManager(gl.URL_SCHEME,new KM)}catch{}}var lO={importFetch:()=>QD()},Vy,uO=class{constructor(){this.util=eR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return G().global.fetch!=null?G().global.fetch(e,t):(Vy==null&&(Vy=lO.importFetch()),Vy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};G().get("IS_NODE")&&!G().get("IS_BROWSER")&&G().setPlatform("node",new uO);function Oe(e,t="float32",n){return t=t||"float32",Xn(e),new Ft(e,t,n)}function dO(e,t){let n=C(e,"x","cast");if(!TI(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return O.runKernel(wi,r,a)}var oe=L({cast_:dO});function pO(e){let t={x:C(e,"x","clone","string_or_numeric")};return O.runKernel(Bi,t)}var qr=L({clone_:pO});function Tx(e,t=!1){console.log(e.toString(t))}HI();var hO={buffer:Oe,cast:oe,clone:qr,print:Tx};oM(hO);function cO(e,t){let n=C(e,"a","add"),r=C(t,"b","add");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(is,a)}var Z=L({add_:cO});function mO(e,t){let n=C(e,"a","floorDiv"),r=C(t,"b","floorDiv");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(Li,a)}var rm=L({floorDiv_:mO});function fO(e,t){let n=C(e,"a","div"),r=C(t,"b","div");if([n,r]=St(n,r),n.dtype==="int32"&&r.dtype==="int32")return rm(n,r);let a={a:n,b:r},s={};return O.runKernel(Ai,a,s)}var ce=L({div_:fO});function gO(e,t){let n=C(e,"a","mul"),r=C(t,"b","mul");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(no,a)}var P=L({mul_:gO});function yO(e){let t=C(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return O.runKernel(np,n)}else{let n={x:t};return O.runKernel(Dl,n)}}var $t=L({abs_:yO});function bO(e){let t={x:C(e,"x","acos")};return O.runKernel(pi,t)}var _x=L({acos_:bO});function xO(e){let t={x:C(e,"x","acosh")};return O.runKernel(hi,t)}var Cx=L({acosh_:xO});function vO(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>C(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ya(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return O.runKernel(ci,r)}var lS=L({addN_:vO});function wO(e,t=null,n=!1){let r={x:C(e,"x","all","bool")},a={axis:t,keepDims:n};return O.runKernel(Rl,r,a)}var am=L({all_:wO});function kO(e,t=null,n=!1){let r={x:C(e,"x","any","bool")},a={axis:t,keepDims:n};return O.runKernel(Ml,r,a)}var Od=L({any_:kO});function IO(e,t=0){let n={x:C(e,"x","argMax")},r={axis:t};return O.runKernel(Ol,n,r)}var Js=L({argMax_:IO});function SO(e,t=0){let n={x:C(e,"x","argMin")},r={axis:t};return O.runKernel(Ll,n,r)}var Ex=L({argMin_:SO});function NO(e){let t={x:C(e,"x","asin")};return O.runKernel(mi,t)}var $x=L({asin_:NO});function TO(e){let t={x:C(e,"x","asinh")};return O.runKernel(fi,t)}var Ax=L({asinh_:TO});function _O(e){let t={x:C(e,"x","atan")};return O.runKernel(gi,t)}var Fx=L({atan_:_O});function CO(e,t){let n=C(e,"a","atan2"),r=C(t,"b","atan2");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(bi,a)}var Dx=L({atan2_:CO});function EO(e){let t={x:C(e,"x","atanh")};return O.runKernel(yi,t)}var Rx=L({atanh_:EO});function $O(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=pS(a);return Np(e,o,n,s,r,null,null,l)}function uS(e,t,n,r,a,s,i="channelsLast"){let[o,l]=Ld(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Np(e,u,n,r,a,s,!1,i)}function AO(e,t,n,r,a,s,i="NDHWC"){let[o,l,u]=yb(t),d,h;if(i==="NDHWC")h="channelsLast",d=[o,l,u,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",d=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return dS(e,d,n,r,a,!1,h,s)}function Np(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,d,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,d,h]=e;else if(o==="channelsFirst")[l,h,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,c,,m]=t,[f,g]=Ld(n),[y,b]=Ld(r),x=dl(p,y),v=dl(c,b),{padInfo:I,outHeight:N,outWidth:_}=RO(a,u,d,f,g,x,v,s,o),E=i?m*h:m,A;return o==="channelsFirst"?A=[l,E,N,_]:o==="channelsLast"&&(A=[l,N,_,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:N,outWidth:_,outChannels:E,padInfo:I,strideHeight:f,strideWidth:g,filterHeight:p,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function dS(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,d,h,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,d,h,p]=e;else if(i==="channelsFirst")[l,p,u,d,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=yb(n),[v,I,N]=yb(r),_=dl(c,v),E=dl(m,I),A=dl(f,N),{padInfo:D,outDepth:F,outHeight:S,outWidth:M}=MO(a,u,d,h,y,b,x,_,E,A,o),z=s?g*p:g,U;return i==="channelsFirst"?U=[l,z,F,S,M]:i==="channelsLast"&&(U=[l,F,S,M,z]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:h,inChannels:p,outDepth:F,outHeight:S,outWidth:M,outChannels:z,padInfo:D,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:_,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:I,dilationWidth:N,inShape:e,outShape:U,filterShape:t}}function FO(e,t,n,r,a){r==null&&(r=Mx(e,t,n));let s=e[0],i=e[1],o=Pd((s-t+2*r)/n+1,a),l=Pd((i-t+2*r)/n+1,a);return[o,l]}function DO(e,t,n,r,a,s){a==null&&(a=Mx(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Pd((e[o]-t[o]+2*a)/r[o]+1,s));return i}function Mx(e,t,n,r=1){let a=dl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ld(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function yb(e){return typeof e=="number"?[e,e,e]:e}function dl(e,t){return t<=1?e:e+(e-1)*(t-1)}function RO(e,t,n,r,a,s,i,o,l){let u,d,h;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=FO([t,n],s,r,e,o);d=p[0],h=p[1]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a);let p=Math.max(0,(d-1)*r+s-t),c=Math.max(0,(h-1)*a+i-n),m=Math.floor(p/2),f=p-m,g=Math.floor(c/2),y=c-g;u={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];u={top:p,bottom:c,left:m,right:f,type:p===0&&c===0&&m===0&&f===0?"VALID":"EXPLICIT"},d=Pd((t-s+p+c)/r+1,o),h=Pd((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:d,outWidth:h}}function MO(e,t,n,r,a,s,i,o,l,u,d){let h,p,c,m;if(e==="valid"&&(e=0),typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=DO([t,n,r,1],[o,l,u],1,[a,s,i],e,d);p=f[0],c=f[1],m=f[2]}else if(e==="same"){p=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let f=(p-1)*a+o-t,g=(c-1)*s+l-n,y=(m-1)*i+u-r,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),I=g-v,N=Math.floor(y/2),_=y-N;h={top:v,bottom:I,left:N,right:_,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:p,outHeight:c,outWidth:m}}function Pd(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ka(e){let[t,n,r]=Ld(e);return t===1&&n===1&&r===1}function ea(e,t){return Ka(e)||Ka(t)}function Ys(e){return Ld(e).every(t=>t>0)}function pS(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function vn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")$(hl(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{$(hl(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function OO(e,t){let n={x:C(e,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(yu,n,r)}var B=L({reshape_:OO});function LO(e,t,n,r,a){let s=C(e,"x","avgPool","float32"),i=1;$(ea(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),vn("avgPool",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(xi,u,d);return h=oe(h,s.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var xa=L({avgPool_:LO});function PO(e,t,n,r,a,s="NDHWC"){let i=C(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),vn("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(Pl,u,d);return h=oe(h,o.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Ox=L({avgPool3d_:PO});function zO(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=Md(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return qr(n[0]);let r=n,a={axis:t};return O.runKernel(Vl,r,a)}var ot=L({concat_:zO});function BO(e,t,n=!1,r=!1){let a=C(e,"a","matMul"),s=C(t,"b","matMul");[a,s]=St(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return O.runKernel(vi,i,o)}var Re=L({matMul_:BO});function WO(e){let t={x:C(e,"x","sigmoid","float32")};return O.runKernel(wo,t)}var fr=L({sigmoid_:WO});function VO(e,t,n){let r=C(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return O.runKernel(Su,a,s)}var Ue=L({slice_:VO});function UO(e){let t={x:C(e,"x","tanh","float32")};return O.runKernel(Eo,t)}var Xa=L({tanh_:UO});function GO(e,t,n,r,a,s){let i=C(e,"forgetBias","basicLSTMCell"),o=C(t,"lstmKernel","basicLSTMCell"),l=C(n,"lstmBias","basicLSTMCell"),u=C(r,"data","basicLSTMCell"),d=C(a,"c","basicLSTMCell"),h=C(s,"h","basicLSTMCell"),p=ot([u,h],1),c=Re(p,o),m=Z(c,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Ue(m,[0,0],y),x=Ue(m,[0,g],y),v=Ue(m,[0,g*2],y),I=Ue(m,[0,g*3],y),N=Z(P(fr(b),Xa(x)),P(d,fr(Z(i,v)))),_=P(Xa(N),fr(I));return[N,_]}var hS=L({basicLSTMCell_:GO});function HO(e,t,n){let r=C(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);$(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return O.runKernel(zl,s,i)}var Tp=L({batchToSpaceND_:HO});function jO(e){let t;return e.rank===0||e.rank===1?t=B(e,[1,1,1,e.size]):e.rank===2?t=B(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function qO(e,t,n,r,a,s){s==null&&(s=.001);let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;r!=null&&(d=C(r,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:jO(i),scale:u,offset:d,mean:o,variance:l},p={varianceEpsilon:s},c=O.runKernel(Pi,h,p);return B(c,i.shape)}var $o=L({batchNorm_:qO});function KO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),$o(i,o,l,d,u,s)}var Lx=L({batchNorm2d_:KO});function XO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),$o(i,o,l,d,u,s)}var Px=L({batchNorm3d_:XO});function ZO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),$o(i,o,l,d,u,s)}var zx=L({batchNorm4d_:ZO});function JO(e,t,n){let r=C(e,"x","bincount"),a=C(t,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return O.runKernel(Bl,s,i)}var Bx=L({bincount_:JO});function YO(e,t){let n=C(e,"x","bitwiseAnd"),r=C(t,"y","bitwiseAnd");if(!ya(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return O.runKernel(Wl,a)}var cS=L({bitwiseAnd_:YO});function QO(e,t){let n=C(e,"s0","broadcastArgs","int32"),r=C(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return O.runKernel(tp,a)}var mS=L({broadcastArgs_:QO});function e3(e,t){let n=C(e,"broadcastTo","x"),r=n.shape;if(Xn(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=B(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return qr(n);let i={x:n},o={reps:s};return O.runKernel(ls,i,o)}var Ws=L({broadcastTo_:e3});function t3(e){let t={x:C(e,"x","ceil","float32")};return O.runKernel(ki,t)}var Wx=L({ceil_:t3});function Un(e,t,n){Xn(e),n=n||Yd(t);let r={shape:e,value:t,dtype:n};return O.runKernel(sp,{},r)}function n3(e,t,n){let r=C(e,"x","clipByValue");if($(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Un(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return O.runKernel(os,a,s)}var ln=L({clipByValue_:n3});function r3(e){return ot(e,0)}var Vx=L({concat1d_:r3});function a3(e,t){return ot(e,t)}var Ux=L({concat2d_:a3});function s3(e,t){return ot(e,t)}var Gx=L({concat3d_:s3});function i3(e,t){return ot(e,t)}var Hx=L({concat4d_:i3});function o3(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),vn("conv2d",r,i);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),$(ea(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(Ys(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(Ys(n),()=>"Error in conv2D: Strides should be larger than 0.");let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(Ii,p,c);return d?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var gn=L({conv2d_:o3});function l3(e,t,n,r,a="NWC",s=1,i){let o=C(e,"x","conv1d"),l=C(t,"filter","conv1d"),u=o,d=!1;o.rank===2&&(d=!0,u=B(o,[1,o.shape[0],o.shape[1]])),$(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),vn("conv1d",r,i),$(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(ea(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(Ys(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(Ys(n),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=B(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=gn(p,h,[1,n],r,"NHWC",[1,s],i);return d?B(c,[c.shape[2],c.shape[3]]):B(c,[c.shape[0],c.shape[2],c.shape[3]])}var sm=L({conv1d_:l3});function u3(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let d=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];$(d===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`),$(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),vn("conv2dDerInput",a,i);let p={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=O.runKernel(Si,p,c);return u?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var jx=L({conv2DBackpropInput_:u3});function d3(e,t,n,r,a,s){let i=C(e,"x","conv2dTranspose"),o=C(t,"filter","conv2dTranspose");return jx(n,i,o,r,a,"NHWC",s)}var im=L({conv2dTranspose_:d3});function p3(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=C(e,"x","conv3d"),o=C(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(ea(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(Ys(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(Ys(n),()=>"Error in conv3D: Strides should be larger than 0.");let d={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=O.runKernel(Ni,d,h);return u?B(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var qx=L({conv3d_:p3});function h3(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=O.runKernel(Gl,d,h);return o?B(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var fS=L({conv3DBackpropInput_:h3});function c3(e,t,n,r,a){let s=C(e,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return fS(n,s,i,r,a)}var Kx=L({conv3dTranspose_:c3});function m3(e){let t={x:C(e,"x","cos","float32")};return O.runKernel(Ti,t)}var _p=L({cos_:m3});function f3(e){let t={x:C(e,"x","cosh","float32")};return O.runKernel(_i,t)}var om=L({cosh_:f3});function g3(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Hl,a,s)}var zd=L({cumprod_:g3});function y3(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Ci,a,s)}var lm=L({cumsum_:y3});function b3(e,t,n,r=!1){let a=C(e,"x","denseBincount"),s=C(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return O.runKernel(rp,i,o)}var cc=L({denseBincount_:b3});function x3(e,t,n="NHWC"){let r=C(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return O.runKernel(ql,o,l)}var Xx=L({depthToSpace_:x3});function v3(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),vn("depthwiseConv2d",r,i);let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(Ei,p,c);return d?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ao=L({depthwiseConv2d_:v3});function w3(e){let t={x:C(e,"x","diag")};return O.runKernel(ap,t)}var gS=L({diag_:w3});function k3(e,t,n,r,a=[1,1],s="NHWC"){let i=C(e,"x","dilation2d"),o=C(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),$(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let d={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=O.runKernel($i,d,h);return u?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zx=L({dilation2d_:k3}),Mu={};Ce(Mu,{assertAndGetBroadcastShape:()=>lt,getBroadcastDims:()=>yS,getReductionAxes:()=>Rt});function yS(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function Rt(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function lt(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r[n-a-1]=i;else if(i===1)r[n-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r[n-a-1]=s}return r}function I3(e,t){let n=C(e,"a","equal","string_or_numeric"),r=C(t,"b","equal","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Xl,a)}var Gn=L({equal_:I3});function S3(e,t,n){let r=C(t,"a","where"),a=C(n,"b","where"),s=C(e,"condition","where","bool"),i=lt(lt(s.shape,r.shape),a.shape),o=Ws(s,i),l=Ws(r,i),u=Ws(a,i),d={condition:o,t:l,e:u};return O.runKernel(Iu,d)}var Zt=L({where_:S3});function N3(e){let t={x:C(e,"x","zerosLike")};return O.runKernel(Du,t)}var Ge=L({zerosLike_:N3});function T3(e,t){let n=C(e,"a","div"),r=C(t,"b","div");[n,r]=St(n,r);let a=ce(n,r),s=Ge(a),i=Gn(r,s);return Zt(i,s,a)}var Jx=L({divNoNan_:T3});function _3(e,t){let n=C(e,"t1","dot"),r=C(t,"t2","dot");$((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=B(n,[1,-1]),o=B(r,[-1,1]),l=Re(i,o);return B(l,[])}else if(n.rank===1&&r.rank===2){let i=B(n,[1,-1]),o=B(r,[r.shape[0],r.shape[1]]),l=Re(i,o);return B(l,[l.size])}else if(n.rank===2&&r.rank===1){let i=B(r,[-1,1]),o=Re(n,i);return B(o,[o.size])}else{let i=B(r,[r.shape[0],r.shape[1]]);return Re(n,i)}}var Yx=L({dot_:_3});function C3(e,...t){let n=t.map((a,s)=>C(a,`tensors${s}`,"einsum")),r={equation:e};return O.runKernel(jc,n,r)}var Ms=L({einsum_:C3});function E3(e){let t={x:C(e,"x","elu","float32")};return O.runKernel(Fi,t)}var Ou=L({elu_:E3});function $3(e,t){let n=C(e,"x","ensureShape","string_or_numeric");if(!kI(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var bS=L({ensureShape_:$3});function A3(e){let t=C(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=oe(t,"float32"));let n={x:t};return O.runKernel(Di,n)}var um=L({erf_:A3});function Qx(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function xS(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function vS(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function Qs(e,t){let n=t.map(r=>1);return xS(e,n,t)}function F3(e,t,n){$(Qx(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function wS(e,t){if(Qx(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function ev(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function D3(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function R3(e,t=null,n=!1){let r={x:C(e,"x","max")},a={reductionIndices:t,keepDims:n};return O.runKernel(Ki,r,a)}var sr=L({max_:R3});function M3(e,t=null,n=!1){let r={x:C(e,"x","min")},a={axis:t,keepDims:n};return O.runKernel(Yi,r,a)}var bl=L({min_:M3});function O3(e,t){let n=C(e,"base","pow"),r=C(t,"exp","pow");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(so,a)}var Jr=L({pow_:O3});function ve(e,t){if((qt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&qt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ds(e,[],[],t)}function L3(e){let t={x:C(e,"x","sqrt","float32")};return O.runKernel(Io,t)}var Jt=L({sqrt_:L3});function P3(e){let t=C(e,"x","square"),n={};return O.runKernel("Square",{x:t},n)}var it=L({square_:P3});function z3(e,t=null,n=!1){let r=C(e,"x","sum");r.dtype==="bool"&&(r=oe(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(So,a,s)}var fe=L({sum_:z3});function B3(e,t="euclidean",n=null,r=!1){e=C(e,"x","norm");let a=kS(e,t,n),s=a.shape;if(r){let i=br(n,e.shape);s=Qs(a.shape,i)}return B(a,s)}function kS(e,t,n=null){if(e.rank===0)return $t(e);if(e.rank!==1&&n===null)return kS(B(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return fe($t(e),n);if(t===1/0)return sr($t(e),n);if(t===-1/0)return bl($t(e),n);if(t==="euclidean"||t===2)return Jt(fe(Jr($t(e),ve(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return sr(fe($t(e),n[0]),n[1]-1);if(t===1/0)return sr(fe($t(e),n[1]),n[0]);if(t===-1/0)return bl(fe($t(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Jt(fe(it(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Lu=L({norm_:B3});function W3(e,t=null,n=!1){return Lu(e,"euclidean",t,n)}var tv=L({euclideanNorm_:W3});function V3(e){let t={x:C(e,"x","exp")};return O.runKernel(Ri,t)}var un=L({exp_:V3});function U3(e,t=0){let n=C(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return O.runKernel(Zl,r,a)}var Kt=L({expandDims_:U3});function G3(e){let t={x:C(e,"x","expm1")};return O.runKernel(Mi,t)}var nv=L({expm1_:G3});function H3(e,t){let n=C(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return O.runKernel(ls,r,a)}var Vn=L({tile_:H3});function j3(e,t,n,r="float32"){t==null&&(t=e);let a=Oe([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=B(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Vn(Kt(i,0),[n[0],1,1]);if(n.length===2)return Vn(Kt(Kt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Vn(Kt(Kt(Kt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var dm=L({eye_:j3});function q3(e){let t={x:C(e,"x","floor","float32")};return O.runKernel(Oi,t)}var Pu=L({floor_:q3});function K3(e,t,n=0,r=0){let a=C(e,"x","gather"),s=C(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return O.runKernel(Yl,i,o)}var zu=L({gather_:K3});function X3(e,t){let n=C(e,"a","greater","string_or_numeric"),r=C(t,"b","greater","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(eu,a)}var wn=L({greater_:X3});function Z3(e,t){let n=C(e,"a","greaterEqual","string_or_numeric"),r=C(t,"b","greaterEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(zi,a)}var va=L({greaterEqual_:Z3});function J3(e){let t={input:C(e,"input","imag")};return O.runKernel(Xc,t)}var Cp=L({imag_:J3});function Y3(e){let t={x:C(e,"x","isFinite")};return O.runKernel(Wi,t)}var rv=L({isFinite_:Y3});function Q3(e){let t={x:C(e,"x","isInf")};return O.runKernel(Vi,t)}var av=L({isInf_:Q3});function eL(e){let t={x:C(e,"x","isNaN")};return O.runKernel(Ui,t)}var sv=L({isNaN_:eL});function tL(e,t=.2){let n={x:C(e,"x","leakyRelu")},r={alpha:t};return O.runKernel(Gi,n,r)}var Ep=L({leakyRelu_:tL});function nL(e,t){let n=C(e,"a","less","string_or_numeric"),r=C(t,"b","less","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(tu,a)}var xl=L({less_:nL});function rL(e,t){let n=C(e,"a","lessEqual","string_or_numeric"),r=C(t,"b","lessEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(nu,a)}var ps=L({lessEqual_:rL});function IS(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return O.runKernel(ru,{},r)}function aL(e,t=5,n=1,r=1,a=.5){let s=C(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(hl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=B(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=O.runKernel(qi,l,u);return o?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var iv=L({localResponseNormalization_:aL});function sL(e){let t={x:C(e,"x","log","float32")};return O.runKernel(Hi,t)}var Hn=L({log_:sL});function iL(e){let t={x:C(e,"x","log1p")};return O.runKernel(ji,t)}var $p=L({log1p_:iL});function oL(e){return $(Ga(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=C(t,"x","tf.grad","string_or_numeric"),a=n!=null?C(n,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(r),[r],a);return a!=null&&xn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),pm(i),i[0]})}}function lL(e){return $(Ga(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Md(t,"args","tf.grads","string_or_numeric"),a=n!=null?C(n,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...r),r,a);return a!=null&&xn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(i),i})}}function uL(e){return $(Ga(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof De,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof De,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=O.gradients(()=>e(t),[t],n);return pm(r),{grad:r[0],value:a}}}function dL(e){return $(Ga(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof De),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof De,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=O.gradients(()=>e(...t),t,n);return n!=null&&xn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(r.grads),r}}function SS(e,t){$(Ga(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(u=>u instanceof Xs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in O.registeredVariables)t.push(O.registeredVariables[u])}let r=n?t.filter(u=>!u.trainable):null,a=t.length;t=t.filter(u=>u.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);$(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,d)=>{o[d]!=null&&(l[u.name]=o[d])}),r?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Yr(e){return O.customGrad(e)}function pm(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function pL(e){let t={x:C(e,"x","neg")};return O.runKernel(du,t)}var mt=L({neg_:pL});function hL(e){let t={x:C(e,"x","softplus")};return O.runKernel(ko,t)}var Fo=L({softplus_:hL});function cL(e){let t=C(e,"x","logSigmoid");return Yr(n=>({value:mt(Fo(mt(n))),gradFunc:r=>P(r,fr(mt(n)))}))(t)}var ov=L({logSigmoid_:cL});function mL(e,t){let n=C(e,"a","sub"),r=C(t,"b","sub");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(_o,a)}var he=L({sub_:mL});function fL(e,t=-1){let n=C(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Yr((r,a)=>{let s=sr(r,t,!0),i=he(r,s),o=he(oe(i,"float32"),Hn(fe(un(i),t,!0)));return a([o]),{value:o,gradFunc:(l,u)=>{let[d]=u,h=!0,p=un(d);return he(l,P(fe(l,t,h),p))}}})(n)}var hm=L({logSoftmax_:fL});function gL(e,t=null,n=!1){let r=C(e,"x","logSumExp"),a=br(t,r.shape),s=sr(r,a,!0),i=he(r,s),o=un(i),l=fe(o,a),u=Hn(l),d=Z(B(s,u.shape),u);if(n){let h=Qs(d.shape,a);return B(d,h)}return d}var Ap=L({logSumExp_:gL});function yL(e,t){let n=C(e,"a","logicalAnd","bool"),r=C(t,"b","logicalAnd","bool");lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(au,a)}var gr=L({logicalAnd_:yL});function bL(e){let t={x:C(e,"x","logicalNot","bool")};return O.runKernel(su,t)}var Fp=L({logicalNot_:bL});function xL(e,t){let n=C(e,"a","logicalOr","bool"),r=C(t,"b","logicalOr","bool");lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(iu,a)}var cm=L({logicalOr_:xL});function vL(e,t){let n=C(e,"a","logicalXor","bool"),r=C(t,"b","logicalXor","bool");return lt(n.shape,r.shape),gr(cm(e,t),Fp(gr(e,t)))}var lv=L({logicalXor_:vL}),Mh=2147483648;function wL(e,t,n="left"){let r=C(e,"sortedSequence","searchSorted"),a=C(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=B(r,[-1,s]),l=B(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(nt(l.shape)>=Mh)throw new Error(`values tensor size must less than ${Mh}`);if(o.shape[1]>=Mh)throw new Error(`trailing dim_size must less than ${Mh} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return O.runKernel(ku,u,d)}var mm=L({searchSorted_:wL});function NS(e,t){return mm(e,t,"left")}function kL(e,t,n,r,a){let s=C(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(ea(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),vn("maxPool",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(Zi,u,d);return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ht=L({maxPool_:kL});function IL(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=C(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),vn("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(lu,u,d);return l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var uv=L({maxPool3d_:IL});function SL(e,t,n,r,a=!1){let s={x:C(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=O.runKernel(lp,s,i);return{result:o[0],indexes:o[1]}}var TS=L({maxPoolWithArgmax_:SL});function NL(e,t){let n=C(e,"a","maximum"),r=C(t,"b","maximum");[n,r]=St(n,r),n.dtype==="bool"&&(n=oe(n,"int32"),r=oe(r,"int32")),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Xi,a)}var ta=L({maximum_:NL});function TL(e,t=null,n=!1){let r={x:C(e,"x","mean")},a={axis:t,keepDims:n};return O.runKernel(Ji,r,a)}var wt=L({mean_:TL});function kt(e,t="float32"){if(Xn(e),t==="complex64"){let r=kt(e,"float32"),a=kt(e,"float32");return fa(r,a)}let n=zc(nt(e),t);return O.makeTensor(n,e,t)}function Cn(e,t="float32"){if(Xn(e),t==="complex64"){let r=Cn(e,"float32"),a=kt(e,"float32");return fa(r,a)}let n=fx(nt(e),t);return O.makeTensor(n,e,t)}function _S(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=C(e,"x","meshgrid",e instanceof De?e.dtype:"float32");if(t===void 0)return[r];let a=C(t,"y","meshgrid",t instanceof De?t.dtype:"float32"),s=nt(r.shape),i=nt(a.shape);return n==="xy"?(r=B(r,[1,-1]),a=B(a,[-1,1]),[Re(Cn([i,1],r.dtype),r),Re(a,Cn([1,s],a.dtype))]):(r=B(r,[-1,1]),a=B(a,[1,-1]),[Re(r,Cn([1,i],r.dtype)),Re(Cn([s,1],a.dtype),a)])}function _L(e,t){let n=C(e,"a","minimum"),r=C(t,"b","minimum");[n,r]=St(n,r),n.dtype==="bool"&&(n=oe(n,"int32"),r=oe(r,"int32")),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Qi,a)}var Za=L({minimum_:_L});function CL(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=C(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return O.runKernel(eo,i,s)}var dv=L({mirrorPad_:CL});function EL(e,t){let n=C(e,"a","mod"),r=C(t,"b","mod");[n,r]=St(n,r);let a={a:n,b:r};return O.runKernel(to,a)}var pv=L({mod_:EL});function $L(e,t=null,n=!1){e=C(e,"x","moments");let r=br(t,e.shape),a=wt(e,r,n),s=a.shape;n||(s=Qs(a.shape,r));let i=it(he(oe(e,"float32"),B(a,s))),o=wt(i,r,n);return{mean:a,variance:o}}var Dp=L({moments_:$L});function AL(e,t,n,r){let a=C(t,"data","multiRNNCell"),s=Md(n,"c","multiRNNCell"),i=Md(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let p=e[h](o,s[h],i[h]);l.push(p[0]),l.push(p[1]),o=p[1]}let u=[],d=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),d.push(l[h+1]);return[u,d]}var CS=L({multiRNNCell_:AL});function FL(e,t,n,r=!1){let a=C(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?B(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=O.runKernel(uu,o,l);return i===1?B(u,[u.size]):u}var ES=L({multinomial_:FL});function DL(e,t){let n=C(e,"a","notEqual","string_or_numeric"),r=C(t,"b","notEqual","string_or_numeric");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(pu,a)}var ei=L({notEqual_:DL});function RL(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return O.runKernel(ro,s,i)}var vl=L({oneHot_:RL});function ML(e){let t={x:C(e,"x","onesLike")};return O.runKernel(fu,t)}var jn=L({onesLike_:ML});function OL(e,t){let n=C(e,"v1","outerProduct"),r=C(t,"v2","outerProduct");$(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=B(n,[-1,1]),s=B(r,[1,-1]);return Re(a,s)}var $S=L({outerProduct_:OL});function LL(e,t,n=0){let r=C(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return O.runKernel(ao,s,a)}var Dr=L({pad_:LL});function PL(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Dr(e,[t],n)}var AS=L({pad1d_:PL});function zL(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var FS=L({pad2d_:zL});function BL(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var DS=L({pad3d_:BL});function WL(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var RS=L({pad4d_:WL});function VL(e,t,n){let r=C(e,"x","spaceToBatchND");$(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return O.runKernel(Nu,a,s)}var Rp=L({spaceToBatchND_:VL});function UL(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=C(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(ea(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let d=uS(l.shape,t,s,a,r),h=[d.dilationHeight,d.dilationWidth],p;r==="same"?p=HL([d.filterHeight,d.filterWidth],h):p=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[m,f]=GL([d.inHeight,d.inWidth],h,p),g=c?r:"valid",y=c?l:Rp(l,h,m),b=(n==="avg"?()=>xa(y,t,s,g,i):()=>Ht(y,t,s,g,i))(),x=c?b:Tp(b,h,f);return u?B(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function GL(e,t,n){let r=n.map(d=>d[0]),a=n.map(d=>d[1]),s=e.concat(r,a),i=t.map((d,h)=>(d-s[h]%d)%d),o=a.map((d,h)=>d+i[h]),l=t.map((d,h)=>[r[h],o[h]]),u=t.map((d,h)=>[0,i[h]]);return[l,u]}function HL(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var hv=L({pool_:UL});function jL(e,t){let n=C(e,"x","prelu"),r=C(t,"alpha","prelu"),a={x:n,alpha:r};return O.runKernel(io,a)}var Mp=L({prelu_:jL});function qL(e,t=null,n=!1){let r=C(e,"x","prod");r.dtype==="bool"&&(r=oe(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(oo,a,s)}var cv=L({prod_:qL});function KL(e,t,n,r){let a=e.map((d,h)=>C(d,`tensors${h}`,"raggedGather","int32")),s=C(t,"paramsDenseValues","raggedGather"),i=C(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=O.runKernel(Zc,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var MS=L({raggedGather_:KL});function XL(e,t,n){let r=C(e,"starts","raggedRange"),a=C(t,"limits","raggedRange",r.dtype),s=C(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=O.runKernel(Jc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var OS=L({raggedRange_:XL});function ZL(e,t,n,r,a){let s=C(e,"shape","raggedTensorToTensor","int32"),i=C(t,"values","raggedTensorToTensor"),o=C(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((h,p)=>C(h,`tensors${p}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},d={rowPartitionTypes:a};return O.runKernel(Yc,u,d)}var LS=L({raggedTensorToTensor_:ZL});function JL(e,t,n){Xn(e);let r=nt(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return O.makeTensor(a,e,n)}var PS=L({rand_:JL}),mv=ss(Lc()),zS={};Ce(zS,{TEST_EPSILON_FLOAT16:()=>BS,createVideoElement:()=>sP,encodeStrings:()=>WS,expectArrayBuffersEqual:()=>aP,expectArraysClose:()=>QL,expectArraysEqual:()=>tP,expectNumbersClose:()=>nP,expectPromiseToFail:()=>eP,expectValuesInRange:()=>rP,play:()=>iP,testEpsilon:()=>fv});var YL=.001,BS=.1;function QL(e,t,n){return n==null&&(n=fv()),bb(e,t,(r,a)=>gv(r,a,n))}function fv(){return O.backend.floatPrecision()===32?YL:BS}function bb(e,t,n){let r=!0;if((qt(e)||qt(t))&&(r=!1),qt(e)&&qt(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Zr(e),o=Zr(t);if(!ya(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=qt(e)?e:Ha(e),s=qt(t)?t:Ha(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function eP(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function tP(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return La(e)||La(e[0])||La(t)||La(t[0])?bb(e,n,(r,a)=>r==a):bb(e,t,(r,a)=>gv(r,a,0))}function nP(e,t,n){if(n==null&&(n=fv()),!gv(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function gv(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function rP(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function aP(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function WS(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?WS(n):e[t]=kp(n)}return e}function sP(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}async function iP(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var yv=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=mv.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},oP=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=mv.alea(a.toString()),this.randn=new yv(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},lP=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=mv.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function uP(e,t,n=1,r="float32",a){if(Xn(e),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new oP(t,n,r,a),i=Oe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var VS=L({randomGamma_:uP});function dP(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new yv(t,n,r,!1,a),i=Oe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var fm=L({randomNormal_:dP});function pP(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return fm(e,0,1,t,n)}var US=L({randomStandardNormal_:pP});function hP(e,t=0,n=1,r="float32",a){Xn(e);let s=Oe(e,r),i=new lP(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var hs=L({randomUniform_:hP});function cP(e,t,n,r){return hs(e,t,n,"int32",r)}var GS=L({randomUniformInt_:cP});function ti(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return O.runKernel(up,{},a)}function mP(e){let t={input:C(e,"input","real")};return O.runKernel(Qc,t)}var wl=L({real_:mP});function fP(e){let t={x:C(e,"x","reciprocal")};return O.runKernel(lo,t)}var bv=L({reciprocal_:fP});function gP(e){let t={x:C(e,"x","relu")};return O.runKernel(uo,t)}var tt=L({relu_:gP});function yP(e){let t={x:C(e,"x","relu6")};return O.runKernel(co,t)}var gm=L({relu6_:yP});function bP(e,t){let n={x:C(e,"x","reverse")},r={dims:t};return O.runKernel(mo,n,r)}var lr=L({reverse_:bP});function xP(e){let t=C(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),lr(t,0)}var HS=L({reverse1d_:xP});function vP(e,t){let n=C(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),lr(n,t)}var jS=L({reverse2d_:vP});function wP(e,t){let n=C(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),lr(n,t)}var qS=L({reverse3d_:wP});function kP(e,t){let n=C(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),lr(n,t)}var KS=L({reverse4d_:kP});function IP(e){let t={x:C(e,"x","round")};return O.runKernel(fo,t)}var ym=L({round_:IP});function SP(e){let t={x:C(e,"x","rsqrt","float32")};return O.runKernel(go,t)}var bm=L({rsqrt_:SP});function NP(e){let t={x:C(e,"x","selu")};return O.runKernel(yo,t)}var xm=L({selu_:NP});function TP(e,t,n,r,a,s=[1,1],i="NHWC"){let o=C(e,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(n,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(o.rank===3&&(h=!0,d=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let p=l.shape[2],c=l.shape[3];$(u.shape[2]===p*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${u.shape[2]}.`);let m=Ao(d,l,r,a,i,s),f=gn(m,u,1,"valid",i);return h?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Bu=L({separableConv2d_:TP});async function _P(e,t){let n=C(e,"x","setdiff1d"),r=C(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let d=0;d<a.length;d++)i.has(a[d])||o++;let l=new Ft([o],n.dtype),u=new Ft([o],"int32");for(let d=0,h=0;d<a.length;d++)i.has(a[d])||(l.values[h]=a[d],u.values[h]=d,h++);return[l.toTensor(),u.toTensor()]}var XS=_P;function CP(e){let t={x:C(e,"x","sign")};return O.runKernel(vo,t)}var xv=L({sign_:CP});function EP(e){let t={x:C(e,"x","sin","float32")};return O.runKernel(bo,t)}var vm=L({sin_:EP});function $P(e){let t={x:C(e,"x","sinh")};return O.runKernel(xo,t)}var wm=L({sinh_:$P});function AP(e,t,n){let r=C(e,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ue(r,[t],[n])}var Op=L({slice1d_:AP});function FP(e,t,n){let r=C(e,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var km=L({slice2d_:FP});function DP(e,t,n){let r=C(e,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var Wu=L({slice3d_:DP});function RP(e,t,n){let r=C(e,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var kl=L({slice4d_:RP});function MP(e,t=-1){let n=C(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return O.runKernel(No,r,a)}var cs=L({softmax_:MP});function OP(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(qc,t)}var Lp=L({fft_:OP});function LP(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(Kc,t)}var Il=L({ifft_:LP});function PP(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=B(e,[n,t]);r=Il(a)}else{let a=[n,2*(t-1)],s=B(wl(e),[n,t]),i=B(Cp(e),[n,t]),o=lr(Ue(s,[0,1],[n,t-2]),1),l=P(lr(Ue(i,[0,1],[n,t-2]),1),ve(-1)),u=ot([s,o],1),d=ot([i,l],1),h=B(fa(u,d),[a[0],a[1]]);r=Il(h)}if(r=wl(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=B(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var Im=L({irfft_:PP});function zP(e,t,n=0){let r={x:C(e,"x","split")},a={numOrSizeSplits:t,axis:n};return O.runKernel(Tu,r,a)}var En=L({split_:zP});function BP(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,a=Ue(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,a=ot([e,kt(m)],e.shape.length-1),n=t}else a=e;let s=Ge(a),i=B(fa(a,s),[r,n]),o=Lp(i),l=Math.floor(n/2)+1,u=wl(o),d=Cp(o),h=En(u,[l,n-l],u.shape.length-1),p=En(d,[l,n-l],d.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,B(fa(h[0],p[0]),c)}var Pp=L({rfft_:BP});function WP(e,t){let n=C(e,"a","squaredDifference"),r=C(t,"b","squaredDifference");[n,r]=St(n,r),lt(n.shape,r.shape);let a={a:n,b:r},s={};return O.runKernel(To,a,s)}var Sm=L({squaredDifference_:WP});function VP(e,t){let n=C(e,"x","squeeze","string_or_numeric");return B(n,II(n.shape,t).newShape)}var ms=L({squeeze_:VP});function UP(e,t=0){let n=Md(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return O.runKernel(gu,r,a)}var Dt=L({stack_:UP});function GP(e,t=0){let n={x:C(e,"x","step")},r={alpha:t};return O.runKernel(us,n,r)}var Do=L({step_:GP});function HP(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:C(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return O.runKernel(Eu,u,d)}var vv=L({stridedSlice_:HP});function jP(e){let t={x:C(e,"x","tan","float32")};return O.runKernel(Co,t)}var wv=L({tan_:jP});function Qe(e,t){di(e);let n=Zr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ds(e,null,n,t)}function Kr(e,t,n){if(di(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Zr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ds(e,t,r,n)}function Nm(e,t,n){if(di(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Zr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ds(e,t,r,n)}function Ja(e,t,n){if(di(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Zr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ds(e,t,r,n)}function ZS(e,t,n){if(di(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Zr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ds(e,t,r,n)}function JS(e,t,n){if(di(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Zr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ds(e,t,r,n)}var Tm={};Ce(Tm,{calculateShapes:()=>YS,validateInput:()=>_m,validateUpdateShape:()=>kv});function kv(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function _m(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}kv(n,t,e)}function YS(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a,l=nt(t.shape)/o,u=[...Fl(n.slice(0,a)),1],d=nt(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:d}}function qP(e,t,n){let r=C(e,"tensor","tensorScatterupdate"),a=C(t,"indices","tensorScatterupdate","int32"),s=C(n,"updates","tensorScatterupdate");if(_m(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return O.runKernel(wu,i,o)}var QS=L({tensorScatterUpdate_:qP});function KP(e,t=1,n=!0){let r=C(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=O.runKernel($u,s,i);return{values:o,indices:l}}var Iv=L({topk_:KP});function XP(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new yv(t,n,r,!0,a),i=Oe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Cm=L({truncatedNormal_:XP});function ZP(e,t=0){let n=C(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=O.runKernel(bp,r,a);return{values:s,indices:i}}var Sv=L({unique_:ZP});function JP(e,t,n){let r=C(e,"x","unsortedSegmentSum"),a=C(t,"segmentIds","unsortedSegmentSum","int32");$(hl(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return O.runKernel(xp,s,i)}var Em=L({unsortedSegmentSum_:JP});function YP(e,t=0){let n=C(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return O.runKernel(Fu,r,a)}var Nt=L({unstack_:YP});function eN(e,t){return mm(e,t,"right")}function Nv(e,t=!0,n,r){return O.makeVariable(e,t,n,r)}function tN(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Oe(e,"int32"),a=Oe([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function QP(e){let t=C(e,"condition","whereAsync","bool"),n=await t.data(),r=tN(t.shape,n);return e!==t&&t.dispose(),r}var Tv=QP;async function ez(e,t,n){let r=C(e,"tensor","boolMask"),a=C(t,"mask","boolMask","bool"),s=n??0,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),xn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=B(r,u),h=B(a,[-1]),p=await Tv(h),c=ms(p,[1]),m=zu(d,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),d.dispose(),h.dispose(),p.dispose(),m}var nN=ez;function tz(e,t,n){let r=C(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?W(()=>{let i=wl(r),o=Cp(r);return i=O.runKernel(ha,{x:i},s),o=O.runKernel(ha,{x:o},s),n&&(o=mt(o)),fa(i,o)}):O.runKernel(ha,a,s)}var Me=L({transpose_:tz});function nz(e,t,n,r,a=!0){let s=C(e,"v","movingAverage"),i=C(t,"x","movingAverage"),o=C(n,"decay","movingAverage");UI(s,i),$(ya(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ve(1),u=he(l,o),d=P(he(i,s),u);if(a){$(r!=null,()=>"When using zeroDebias: true, step is required.");let h=C(r,"step","movingAverage");d=ce(d,he(l,Jr(o,h)))}return Z(s,d)}var rN=L({movingAverage_:nz});function rz(e,t,n){Xn(n);let r=C(e,"indices","scatterND","int32"),a=C(t,"updates","scatterND");_m(a,r,n);let s={indices:r,updates:a},i={shape:n};return O.runKernel(vu,s,i)}var aN=L({scatterND_:rz});function az(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function sz(e,t,n,r=0){Xn(n);let a=C(e,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense","string_or_numeric"),i=C(r,"defaultValue","sparseToDense",s.dtype);az(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return O.runKernel(Cu,o,l)}var sN=L({sparseToDense_:sz});function iz(e,t){let n=C(t,"indices","gatherND","int32"),r={params:C(e,"x","gatherND","string_or_numeric"),indices:n};return O.runKernel(Ql,r)}var iN=L({gatherND_:iz});function oz(e,t){if(t==null)return e.shape.slice();if(ya(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function lz(e,t,n,r){let a=C(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof De?a.clone():a;let s=oz(a,n),i=1-t,o=ce(Pu(Z(hs(s,0,1,"float32",r),i)),i);return P(a,o)}var _v=L({dropout_:lz});function Cv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $m(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Qe(a,"float32")}async function uz(e,t,n=1){let r=C(e,"predictions","inTopK"),a=C(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),xn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],d=SI("bool",l);for(let h=0;h<l;h++){let p=h*u,c=i.subarray(p,p+u),m=[];for(let f=0;f<c.length;f++)m.push({value:c[f],index:f});m.sort((f,g)=>g.value-f.value),d[h]=0;for(let f=0;f<n;f++)if(m[f].index===o[h]){d[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),fn(d,a.shape,"bool")}var oN=uz,Sl={};Ce(Sl,{conv2d:()=>hz,depthwiseConv2d:()=>gz,matMul:()=>bz});function dz(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],d=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),$(d===n[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`),vn("conv2dDerFilter",a,i);let h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return O.runKernel(Vc,h,p)}var Ev=L({conv2DBackpropFilter_:dz});function Am(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return P(e,Do(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Fm(e,t){let n=t,r=Rt(e.shape,t.shape);return r.length>0&&(n=fe(n,r)),B(n,e.shape)}function Dm(e,t,n,r){if(t==="linear")return e;if(t==="relu")return tt(e);if(t==="elu")return Ou(e);if(t==="relu6")return gm(e);if(t==="prelu")return Mp(e,n);if(t==="leakyrelu")return Ep(e,r);if(t==="sigmoid")return fr(e);throw new Error(`Unknown fused activation ${t}.`)}var Rm=(e,t)=>!(e>0)||t==="linear";function pz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",Rm(O.state.gradientDepth,l)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=gn(e,t,n,r,a,s,i);return o!=null&&(N=Z(N,o)),Dm(N,l,u,d)}let h=C(e,"x","conv2d","float32"),p=C(t,"filter","conv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),vn("fused conv2d",r,i);let f=a==="NHWC"?c.shape[3]:c.shape[1];$(p.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${p.shape[2]}.`),$(ea(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=Np(c.shape,p.shape,n,s,r,i),y;o!=null&&(y=C(o,"bias","fused conv2d"),[y]=St(y,h),a==="NHWC"?lt(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(u!=null){let N=u.shape;if($(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)$(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{lt(N,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=C(u,"prelu weights","fused conv2d")}let x=(N,_)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,D,F]=_,S=Am(N,D,l);$(Ka(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let M=jx(A.shape,S,E,n,r),z=Ev(A,S,E.shape,n,r),U=[M,z];if(F!=null){let H=Fm(F,S);U.push(H)}return U},v={x:c,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Yr((N,_,E)=>{let A=O.runKernel(qs,v,I);return E([_,N,A]),m&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,p):Yr((N,_,E,A)=>{let D=O.runKernel(qs,v,I);return A([_,N,D,E]),m&&(D=B(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:x}})(c,p,y)}var hz=L({fusedConv2d_:pz});function cz(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return O.runKernel(Uc,u,d)}var lN=L({depthwiseConv2dNativeBackpropFilter_:cz});function mz(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=O.runKernel(Gc,u,d);return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var uN=L({depthwiseConv2dNativeBackpropInput_:mz});function fz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(Rm(O.state.gradientDepth,l)===!1){let I=Ao(e,t,n,r,a,s,i);return o!=null&&(I=Z(I,o)),Dm(I,l,u,d)}let h=C(e,"x","depthwiseConv2d","float32"),p=C(t,"filter","depthwiseConv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),$(c.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),s==null&&(s=[1,1]),$(ea(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),vn("fused depthwiseConv2d",r,i);let f=Np(c.shape,p.shape,n,s,r,i,!0),g;o!=null&&(g=C(o,"bias","fused conv2d"),[g]=St(g,h),lt(f.outShape,g.shape));let y;u!=null&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let b=(I,N)=>{$(Ka(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,E,A,D]=N,F=Am(I,A,l),S=uN(E.shape,F,_,n,r,s,i),M=lN(E,F,_.shape,n,r,s,i);if(D!=null){let z=Fm(g,F);return[S,M,z]}return[S,M]},x={x:c,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Yr((I,N,_)=>{let E=O.runKernel(Ks,x,v);return _([N,I,E]),m&&(E=B(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,p):Yr((I,N,_,E)=>{let A=O.runKernel(Ks,x,v);return E([N,I,A,_]),m&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,p,g)}var gz=L({fusedDepthwiseConv2d_:fz});function yz({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Rm(O.state.gradientDepth,s)===!1){let D=Re(e,t,n,r);return a!=null&&(D=Z(D,a)),Dm(D,s,i,o)}let l=C(e,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=St(l,u);let d=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=nt(m),y=nt(f);$(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=lt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,c]),x=n?B(l,[g,d,p]):B(l,[g,p,d]),v=r?B(u,[y,c,h]):B(u,[y,h,c]),I;a!=null&&(I=C(a,"bias","fused matMul"),[I]=St(I,l),lt(b,I.shape));let N;i!=null&&(N=C(i,"prelu weights","fused matMul"));let _=(D,F)=>{let[S,M,z,U]=F,H=Am(B(D,z.shape),z,s),q,K;if(!n&&!r?(q=Re(H,M,!1,!0),K=Re(S,H,!0,!1)):!n&&r?(q=Re(H,M,!1,!1),K=Re(H,S,!0,!1)):n&&!r?(q=Re(M,H,!1,!0),K=Re(S,H,!1,!1)):(q=Re(M,H,!0,!0),K=Re(H,S,!0,!0)),a!=null){let J=Fm(U,H);return[q,K,J]}else return[q,K]},E={a:x,b:v,bias:I,preluActivationWeights:N},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?Yr((D,F,S)=>{let M=O.runKernel(js,E,A);return S([D,F,M]),{value:B(M,b),gradFunc:_}})(x,v):Yr((D,F,S,M)=>{let z=O.runKernel(js,E,A);return M([D,F,z,S]),{value:B(z,b),gradFunc:_}})(x,v,I)}var bz=L({fusedMatMul_:yz});function xz(e){return $m(e,.54,.46)}var vz=L({hammingWindow_:xz});function wz(e){return $m(e,.5,.5)}var dN=L({hannWindow_:wz});function kz(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ue(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=ot([Ue(e,s,t-o),Un([o],a)]);i.push(l),s+=n}return i.length===0?Kr([],[0,t]):B(ot(i),[i.length,t])}var pN=L({frame_:kz});function Iz(e,t,n,r,a=dN){r==null&&(r=Cv(t));let s=pN(e,t,n),i=P(s,a(t));return Pp(i,r)}var Sz=L({stft_:Iz});function Nz(e,t,n,r,a="bilinear",s=0){let i=C(e,"image","cropAndResize"),o=C(t,"boxes","cropAndResize","float32"),l=C(n,"boxInd","cropAndResize","int32"),u=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let d={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return O.runKernel(jl,d,h)}var Tz=L({cropAndResize_:Nz});function _z(e){let t=C(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return O.runKernel(Jl,n,{})}var Cz=L({flipLeftRight_:_z});function Ez(e){let t=C(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Vn(t,a)}var $z=L({grayscaleToRGB_:Ez});function Az(e){let t=C(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),$(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a=t.dtype,s=oe(t,"float32"),i=Qe([.2989,.587,.114]),o;switch(t.rank){case 2:o=Ms("ij,j->i",s,i);break;case 3:o=Ms("ijk,k->ij",s,i);break;case 4:o=Ms("ijkl,l->ijk",s,i);break;case 5:o=Ms("ijklm,m->ijkl",s,i);break;case 6:o=Ms("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Kt(o,-1),oe(o,a)}var Fz=L({rgbToGrayscale_:Az});function Dz(e,t,n=0,r=.5){let a=C(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return O.runKernel(Ru,s,i)}var Rz=L({rotateWithOffset_:Dz});function Vu(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function Mz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppression","float32"),i=C(t,"scores","nonMaxSuppression","float32"),o=Vu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return O.runKernel(hu,{boxes:s,scores:i},l)}var Oz=L({nonMaxSuppression_:Mz});function Lz(e,t,n){let r=Pz(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Pz(e,t,n){return Bz(e,t,n||zz)}function zz(e,t){return e>t?1:e<t?-1:0}function Bz(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function hN(e,t,n,r,a){return $v(e,t,n,r,a,0)}function cN(e,t,n,r,a,s){return $v(e,t,n,r,a,0,!1,s,!0)}function mN(e,t,n,r,a,s){return $v(e,t,n,r,a,s,!0)}function $v(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(W1);let d=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let v=!1;for(let I=h.length-1;I>=x;--I){let N=Wz(e,b,h[I]);if(N>=r){v=!0;break}if(g.score=g.score*Vz(r,d,N),g.score<=a)break}g.suppressBeginIndex=h.length,v||(g.score===y?(h.push(b),p.push(g.score)):g.score>a&&Lz(u,g,W1))}let c=h.length,m=n-c;o&&m>0&&(h.push(...new Array(m).fill(0)),p.push(...new Array(m).fill(0)));let f={selectedIndices:h};return i&&(f.selectedScores=p),l&&(f.validOutputs=c),f}function Wz(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-s)*(l-i),m=(h-u)*(p-d);if(c<=0||m<=0)return 0;let f=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(c+m-x)}function Vz(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function W1(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function Uz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppressionAsync"),i=C(t,"scores","nonMaxSuppressionAsync"),o=Vu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=hN(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qe(h,"int32")}var Gz=Uz;function Hz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=Vu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=O.runKernel(mu,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}var jz=L({nonMaxSuppressionWithScore_:Hz});async function qz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=Vu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:c}=mN(d,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(p,"int32"),selectedScores:Qe(c)}}var Kz=qz;function Xz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=Vu(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},m=O.runKernel(cu,p,c);return{selectedIndices:m[0],validOutputs:m[1]}}var Zz=L({nonMaxSuppressionPadded_:Xz});async function Jz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=Vu(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=cN(p,c,u,d,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(m,"int32"),validOutputs:ve(f,"int32")}}var Yz=Jz;function Qz(e,t,n=!1,r=!1){let a=C(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=O.runKernel(ho,o,l);return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var fN=L({resizeBilinear_:Qz});function eB(e,t,n=!1,r=!1){let a=C(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=O.runKernel(po,o,l);return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var gN=L({resizeNearestNeighbor_:eB});function tB(e,t="binary",n=!1,r=.5){let a=C(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],u=P(Qe([r]),255),d,h,p,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[d,h,p]=En(a,[1,1,1],-1);let f=P(d,s),g=P(h,i),y=P(p,o);c=Z(Z(f,g),y)}else c=e;if(t==="otsu"){let f=Bx(oe(ym(c),"int32"),fn([]),256);u=nB(f,l)}let m=n?ps(c,u):wn(c,u);return oe(P(m,255),"int32")}function nB(e,t){let n=Qe([-1]),r=Qe([0]),a=Qe([0]),s,i,o,l,u,d;for(let h=0;h<e.size-1;h++){s=Ue(e,0,h+1),i=Ue(e,h+1),u=ce(fe(s),t),d=ce(fe(i),t);let p=fe(P(s,ti(0,s.size)));o=ce(p,fe(s));let c=Un(i.shape,s.size),m=Z(ti(0,i.size),c),f=P(i,m);l=ce(fe(f),fe(i));let g=he(o,l),y=he(o,l),b=P(u,d);a=P(P(b,g),y);let x=wn(a,r);r=Zt(x,a,r),n=Zt(x,Qe([h]),n)}return n}var rB=L({threshold_:tB});function aB(e,t,n="nearest",r="constant",a=0,s){let i=C(e,"image","transform","float32"),o=C(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return O.runKernel(Au,l,u)}var sB=L({transform_:aB});function iB(e,t,n){let r=C(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,l;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=C(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Zt(xl(t,0),s,Za(t,s))),typeof n=="number"?($(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=C(n<0?i:n,"numUpper","bandPart")):($(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Zt(xl(n,0),i,Za(n,i)));let u=B(ti(0,s,1,"int32"),[-1,1]),d=ti(0,i,1,"int32"),h=he(u,d),p=gr(ps(h,o),va(h,mt(l))),c=kt([s,i],r.dtype);return B(Dt(Nt(B(r,[-1,s,i])).map(m=>Zt(p,m,c))),a)}var oB=L({bandPart_:iB});function lB(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=En(e,e.shape[0],0).map(a=>ms(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(O.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=P(fe(P(n[i],s)),n[i]);s=he(s,o)}return ce(s,Lu(s,"euclidean"))}));return t?Dt(n,0):n}var uB=L({gramSchmidt_:lB});function dB(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return V1(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),r=Nt(B(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(l=>{let[u,d]=V1(l,t);a.push(u),s.push(d)});let i=B(Dt(a,0),e.shape),o=B(Dt(s,0),e.shape);return[i,o]}}function V1(e,t=!1){return O.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=dm(n),s=qr(e),i=Kr([[1]],[1,1]),o=qr(i),l=n>=r?r:n;for(let u=0;u<l;++u){let d=s,h=o,p=a;[o,s,a]=O.tidy(()=>{let c=Ue(s,[u,u],[n-u,1]),m=Lu(c),f=Ue(s,[u,u],[1,1]),g=Zt(wn(f,0),Kr([[-1]]),Kr([[1]])),y=he(f,P(g,m)),b=ce(c,y);b.shape[0]===1?o=qr(i):o=ot([i,Ue(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=mt(ce(Re(g,y),m)),v=Ue(s,[u,0],[n-u,r]),I=P(x,o),N=Me(o);if(u===0)s=he(v,Re(I,Re(N,v)));else{let A=he(v,Re(I,Re(N,v)));s=ot([Ue(s,[0,0],[u,r]),A],0)}let _=Me(I),E=Ue(a,[0,u],[n,a.shape[1]-u]);if(u===0)a=he(E,Re(Re(E,o),_));else{let A=he(E,Re(Re(E,o),_));a=ot([Ue(a,[0,0],[n,u]),A],1)}return[o,s,a]}),_e([d,h,p])}return!t&&n>r&&(a=Ue(a,[0,0],[n,r]),s=Ue(s,[0,0],[r,r])),[a,s]})}var pB=L({qr_:dB}),cn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(cn||(cn={}));function hB(e,t,n=cn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=C(t,"weights","computeWeightedLoss"));let s=a==null?r:P(r,a);if(n===cn.NONE)return s;if(n===cn.SUM)return fe(s);if(n===cn.MEAN){if(a==null)return wt(s);{let i=r.size/a.size,o=ce(fe(s),fe(a));return i>1?ce(o,ve(i)):o}}if(n===cn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return ce(fe(s),ve(r.size));{let i=P(a,Cn(r.shape)),o=oe(fe(ei(i,ve(0))),"float32");return ce(fe(s),o)}}throw Error(`Unknown reduction: ${n}`)}var wa=L({computeWeightedLoss_:hB});function cB(e,t,n,r=cn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=C(n,"weights","absoluteDifference")),xn(a.shape,s.shape,"Error in absoluteDifference: ");let o=$t(he(a,s));return wa(o,i,r)}var mB=L({absoluteDifference_:cB});function fB(e,t,n,r,a=cn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),o=null;r!=null&&(o=C(r,"weights","cosineDistance")),xn(s.shape,i.shape,"Error in cosineDistance: ");let l=ve(1),u=he(l,fe(P(s,i),n,!0));return wa(u,o,a)}var gB=L({cosineDistance_:fB});function yB(e,t,n,r=cn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;n!=null&&(i=C(n,"weights","hingeLoss")),xn(a.shape,s.shape,"Error in hingeLoss: ");let o=ve(1);a=he(P(ve(2),a),o);let l=tt(he(o,P(a,s)));return wa(l,i,r)}var bB=L({hingeLoss_:yB});function xB(e,t,n,r=1,a=cn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),o=null;n!=null&&(o=C(n,"weights","huberLoss")),xn(s.shape,i.shape,"Error in huberLoss: ");let l=ve(r),u=$t(he(i,s)),d=Za(u,l),h=he(u,d),p=Z(P(ve(.5),it(d)),P(l,h));return wa(p,o,a)}var vB=L({huberLoss_:xB});function wB(e,t,n,r=1e-7,a=cn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","logLoss"),i=C(t,"predictions","logLoss"),o=null;n!=null&&(o=C(n,"weights","logLoss")),xn(s.shape,i.shape,"Error in logLoss: ");let l=ve(1),u=ve(r),d=mt(P(s,Hn(Z(i,u)))),h=P(he(l,s),Hn(Z(he(l,i),u))),p=he(d,h);return wa(p,o,a)}var kB=L({logLoss_:wB});function IB(e,t,n,r=cn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=C(n,"weights","meanSquaredError")),xn(a.shape,s.shape,"Error in meanSquaredError: ");let o=Sm(a,s);return wa(o,i,r)}var SB=L({meanSquaredError_:IB});function NB(e,t){let n=C(e,"labels","sigmoidCrossEntropyWithLogits"),r=C(t,"logits","sigmoidCrossEntropyWithLogits");xn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=tt(r),s=P(r,n),i=$p(un(mt($t(r))));return Z(he(a,s),i)}function TB(e,t,n,r=0,a=cn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","sigmoidCrossEntropy")),xn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=ve(r),d=ve(1),h=ve(.5);s=Z(P(s,he(d,u)),P(h,u))}let l=NB(s,i);return wa(l,o,a)}var _B=L({sigmoidCrossEntropy_:TB});function CB(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Yr((r,a,s)=>{let i=Ap(a,[n],!0),o=he(oe(a,"float32"),i);s([r,o]);let l=mt(P(o,r));return{value:fe(l,[n]),gradFunc:(u,d)=>{let[h,p]=d,c=Qs(u.shape,[n]);return[P(B(u,c),he(oe(h,"float32"),un(p))),P(B(u,c),he(un(p),oe(h,"float32")))]}}})(e,t)}function EB(e,t,n,r=0,a=cn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","softmaxCrossEntropy")),xn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let u=ve(r),d=ve(1),h=ve(s.shape[1]);s=Z(P(s,he(d,u)),ce(u,h))}let l=CB(s,i);return wa(l,o,a)}var $B=L({softmaxCrossEntropy_:EB});function AB(e,t,n,r){let a=C(e,"indices","sparseFillEmptyRows","int32"),s=C(t,"values","sparseFillEmptyRows"),i=C(n,"denseShape","sparseFillEmptyRows","int32"),o=C(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=O.runKernel(dp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var FB=L({sparseFillEmptyRows_:AB});function DB(e,t,n){let r=C(e,"inputIndices","sparseReshape","int32"),a=C(t,"inputShape","sparseReshape","int32"),s=C(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=O.runKernel(_u,i);return{outputIndices:o[0],outputShape:o[1]}}var RB=L({sparseReshape_:DB});function MB(e,t,n){let r=C(e,"data","sparseSegmentMean"),a=C(t,"indices","sparseSegmentMean","int32"),s=C(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(pp,i)}var OB=L({sparseSegmentMean_:MB});function LB(e,t,n){let r=C(e,"data","sparseSegmentSum"),a=C(t,"indices","sparseSegmentSum","int32"),s=C(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(hp,i)}var PB=L({sparseSegmentSum_:LB});function zB(e,t,n,r,a,s,i,o){let l=C(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=O.runKernel(fp,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}var BB=L({stringNGrams_:zB});function WB(e,t,n=!0){let r=C(e,"input","stringSplit","string"),a=C(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=O.runKernel(gp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var VB=L({stringSplit_:WB});function UB(e,t){let n=C(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return O.runKernel(yp,a,r)}var GB=L({stringToHashBucketFast_:UB});function HB(e,t,n,r=!0){let a=C(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return O.runKernel(mp,{x:a},s)}var jB=L({staticRegexReplace_:HB}),yN={fft:Lp,ifft:Il,rfft:Pp,irfft:Im},bN={hammingWindow:vz,hannWindow:dN,frame:pN,stft:Sz},tr={flipLeftRight:Cz,grayscaleToRGB:$z,resizeNearestNeighbor:gN,resizeBilinear:fN,rgbToGrayscale:Fz,rotateWithOffset:Rz,cropAndResize:Tz,nonMaxSuppression:Oz,nonMaxSuppressionAsync:Gz,nonMaxSuppressionWithScore:jz,nonMaxSuppressionWithScoreAsync:Kz,nonMaxSuppressionPadded:Zz,nonMaxSuppressionPaddedAsync:Yz,threshold:rB,transform:sB},Av={bandPart:oB,gramSchmidt:uB,qr:pB},xN={absoluteDifference:mB,computeWeightedLoss:wa,cosineDistance:gB,hingeLoss:bB,huberLoss:vB,logLoss:kB,meanSquaredError:SB,sigmoidCrossEntropy:_B,softmaxCrossEntropy:$B},vN={sparseFillEmptyRows:FB,sparseReshape:RB,sparseSegmentMean:OB,sparseSegmentSum:PB},wN={stringNGrams:BB,stringSplit:VB,stringToHashBucketFast:GB,staticRegexReplace:jB},ne={};Ce(ne,{Serializable:()=>kN,SerializationMap:()=>IN,getRegisteredName:()=>KB,registerClass:()=>SN});var qB=new Map,xb=new Map,kN=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},IN=class il{constructor(){this.classNameMap={}}static getMap(){return il.instance==null&&(il.instance=new il),il.instance}static register(t){il.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function SN(e,t,n){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);let r=n,a=t+">"+r;return IN.register(e),qB.set(a,e),xb.set(e,a),e}function KB(e){return xb.has(e)?xb.get(e):e.className}var ka=class extends kN{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return _e(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return SS(e,t)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ka,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Fv=class extends ka{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:W(()=>Ge(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;W(()=>{let l=Z(P(i,this.rho),P(it(s),1-this.rho)),u=P(ce(Jt(Z(o,this.epsilon)),Jt(Z(i,this.epsilon))),s),d=Z(P(o,this.rho),P(it(u),1-this.rho));i.assign(l),o.assign(d);let h=Z(P(u,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(e=>e.variable)),_e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Dv=class extends ka{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:W(()=>Un(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;W(()=>{let i=Z(s,it(a));s.assign(i);let o=Z(P(ce(a,Jt(Z(i,O.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Rv=class extends ka{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=ve(t).variable(),this.accBeta2=ve(n).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=he(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>Ge(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>Ge(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedSecondMoment[s].variable,h=Z(P(u,this.beta1),P(l,1-this.beta1)),p=Z(P(d,this.beta2),P(it(l),1-this.beta2)),c=ce(h,n),m=ce(p,r);u.assign(h),d.assign(p);let f=Z(P(ce(c,Z(Jt(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(Jr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Jr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Mv=class extends ka{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=ve(0).variable(),this.accBeta1=ve(t).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=ce(-this.learningRate,Z(P(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:Ge(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:Ge(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedWeightedInfNorm[s].variable,h=Z(P(u,this.beta1),P(l,1-this.beta1)),p=P(d,this.beta2),c=$t(l),m=ta(p,c);u.assign(h),d.assign(m);let f=Z(P(ce(r,n),ce(h,Z(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Mm=class extends ka{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=O.registeredVariables[t];W(()=>{let s=Z(P(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Lt(ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Ov=class extends Mm{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:W(()=>Ge(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&W(()=>{let i,o=Z(P(this.m,a),s);this.useNesterov?i=Z(P(this.c,Z(s,P(o,this.m))),r):i=Z(P(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Lv=class extends ka{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:W(()=>Ge(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:W(()=>Ge(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;W(()=>{let l=Z(P(i,this.decay),P(it(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[n].variable,d=Z(P(u,this.decay),P(s,1-this.decay)),h=ce(P(s,this.learningRate),Jt(he(l,Z(it(d),this.epsilon)))),p=Z(P(o,this.momentum),h);i.assign(l),u.assign(d),o.assign(p);let c=he(r,p);r.assign(c)}else{let u=Z(P(i,this.decay),P(it(s),1-this.decay)),d=Z(P(o,this.momentum),ce(P(s,this.learningRate),Jt(Z(u,this.epsilon))));i.assign(u),o.assign(d);let h=he(r,d);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},XB=[Fv,Dv,Rv,Mv,Ov,Lv,Mm];function ZB(){for(let e of XB)SN(e)}var rn={};Ce(rn,{CompositeArrayBuffer:()=>ba,browserFiles:()=>rW,browserHTTPRequest:()=>uW,concatenateArrayBuffers:()=>LM,copyModel:()=>sO,decodeWeights:()=>ZI,decodeWeightsStream:()=>YI,encodeWeights:()=>AM,fromMemory:()=>pW,fromMemorySync:()=>EN,getLoadHandlers:()=>HM,getModelArtifactsForJSON:()=>Nx,getModelArtifactsForJSONSync:()=>eS,getModelArtifactsInfoForJSON:()=>Sp,getSaveHandlers:()=>GM,getWeightSpecs:()=>cb,http:()=>zv,isHTTPScheme:()=>kb,listModels:()=>rO,loadWeights:()=>sW,moveModel:()=>iO,registerLoadRouter:()=>UM,registerSaveRouter:()=>VM,removeModel:()=>aO,weightsLoaderFactory:()=>TN,withSaveHandler:()=>hW,withSaveHandlerSync:()=>cW});var JB="model",YB=".json",QB=".weights.bin";function U1(e){return new Promise(t=>setTimeout(t)).then(e)}var vb=(()=>{let e=class wb{constructor(n){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");n.startsWith(wb.URL_SCHEME)&&(n=n.slice(wb.URL_SCHEME.length)),(n==null||n.length===0)&&(n=JB),this.modelJsonFileName=n+YB,this.weightDataFileName=n+QB}async save(n){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let r=ba.join(n.weightData),a=window.URL.createObjectURL(new Blob([r],{type:"application/octet-stream"}));if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=[{paths:["./"+this.weightDataFileName],weights:n.weightSpecs}],i=QI(n,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=o,await U1(()=>l.dispatchEvent(new MouseEvent("click"))),n.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=a,await U1(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Sp(n)}}}};return e.URL_SCHEME="downloads://",e})(),eW=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=Nx(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>B1(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=B1(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},tW=e=>G().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vb.URL_SCHEME)?nW(e.slice(vb.URL_SCHEME.length)):null;or.registerSaveRouter(tW);function nW(e="model"){return new vb(e)}function rW(e){return new eW(e)}function G1(e,t,n,r){i(e),n=n??0,r=r??1,o(n,r);let a=0,s=l=>(l.then(u=>{let d=n+ ++a/e.length*(r-n);return t(d),u}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function NN(e,t){t==null&&(t={});let n=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,r=e.map(s=>n(s,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?await Promise.all(r):await G1(r,t.onProgress,0,.5)).map(s=>s.arrayBuffer());return t.onProgress==null?await Promise.all(a):await G1(a,t.onProgress,.5,1)}function aW(e,t){var n;let r=t.fetchFunc==null?G().platform.fetch:t.fetchFunc,a=0,s;return(n=t.onProgress)===null||n===void 0||n.call(t,0),new ReadableStream({pull:async i=>{for(var o;a<e.length;){s||(s=(await r(e[a],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=await s.read();if(l){a++,s=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,a/e.length);continue}i.enqueue(u);return}i.close()}})}async function sW(e,t="",n,r){return TN(a=>NN(a,{requestInit:r}))(e,t,n)}function TN(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,m)=>{let f=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Zs[y]*nt(g.shape),x=()=>{a[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((v,I)=>{v===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(c=>c)){let c=r.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,m,f)=>(m&&c.push(f),c),[]),u=[];l.forEach(c=>{t[c].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;u.push(f)})});let d=await e(u),h={},p=0;return l.forEach(c=>{let m=t[c].paths.length,f=new ba(d.slice(p,p+m));s[c].forEach(g=>{let y=f.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=ZI(y,[g.manifestEntry]);for(let x in b)h[x]=b[x]}),p+=m}),h}}var iW="application/octet-stream",oW="application/json",Pv=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=G().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=QI(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:oW}),"model.json"),e.weightData!=null){let s=ba.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:iW}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Sp(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return Nx(e,t=>this.loadWeights(t))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=cb(e.weightsManifest),r=()=>aW(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=lW(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let l of o.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):s.push(a+l+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e),n=cb(e),r=await NN(t,this.loadOptions);return[n,r]}};Pv.URL_SCHEME_REGEX=/^https?:\/\//;function lW(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function kb(e){return e.match(Pv.URL_SCHEME_REGEX)!=null}var _N=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>kb(r)):n=kb(e),n)return zv(e,t)}return null};or.registerSaveRouter(_N);or.registerLoadRouter(_N);function zv(e,t){return new Pv(e,t)}function uW(e,t){return zv(e,t)}var Uy=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},CN=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},dW=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function pW(e,t,n,r){let a=arguments;return new dW(EN(...a))}function EN(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Uy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function hW(e){return new CN(e)}function cW(e){return new CN(e)}var $N={};Ce($N,{confusionMatrix:()=>fW});function mW(e,t,n){let r=C(e,"labels","confusionMatrix"),a=C(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=vl(oe(r,"int32"),n),i=vl(oe(a,"int32"),n),o=Me(s),l=Re(o,i);return oe(l,"int32")}var fW=L({confusionMatrix_:mW}),zp={};Ce(zp,{draw:()=>IW,fromPixels:()=>SW,fromPixelsAsync:()=>vW,toPixels:()=>kW});var Es,H1=!1;function AN(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(Dd(uc,O.backendName)!=null){let p={pixels:e},c={numChannels:t};return O.runKernel(uc,p,c)}let[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)d=e.data;else if(s||a||o){if(Es==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Es=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Es=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Es.canvas.width=l,Es.canvas.height=u,Es.drawImage(e,0,0,l,u),d=Es.getImageData(0,0,l,u).data}let h;if(t===4)h=new Int32Array(d);else{let p=l*u;h=new Int32Array(p*t);for(let c=0;c<p;c++)for(let m=0;m<t;++m)h[c*t+m]=d[c*4+m]}return Nm(h,[u,l,t],"int32")}function gW(e){return e!=null&&e.data instanceof Uint8Array}function yW(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function bW(e){return e!=null&&e.width!==0&&e.height!==0}function xW(e){return yW()&&!(e instanceof ImageBitmap)&&bW(e)&&!gW(e)}async function vW(e,t=3){let n=null;if(G().getBool("WRAP_TO_IMAGEBITMAP")&&xW(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return AN(n,t)}function FN(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function wW(e){let t=e?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function kW(e,t){let n=C(e,"img","toPixels");if(!(e instanceof De)){let u=n;n=oe(u,"int32"),u.dispose()}FN(n);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2],i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let d=[0,0,0,255];for(let p=0;p<s;p++){let c=i[u*s+p];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(d[0]=c*o,d[1]=c*o,d[2]=c*o):d[p]=c*o}let h=u*4;l[h+0]=Math.round(d[0]),l[h+1]=Math.round(d[1]),l[h+2]=Math.round(d[2]),l[h+3]=Math.round(d[3])}if(t!=null){H1||Dd(Hc,O.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),H1=!0),t.width=a,t.height=r;let u=t.getContext("2d"),d=new ImageData(l,a,r);u.putImageData(d,0,0)}return n!==e&&n.dispose(),l}function IW(e,t,n){let r=C(e,"img","draw");if(!(e instanceof De)){let i=r;r=oe(i,"int32"),i.dispose()}FN(r),wW(n?.imageOptions);let a={image:r},s={canvas:t,options:n};O.runKernel(Hc,a,s)}var SW=L({fromPixels_:AN}),Bv={};Ce(Bv,{prepareAndValidate:()=>DN});function DN(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(nt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let d=[...Fl(e.shape).map(h=>h/u),1].slice(0,s);return[l,i,u,d]}var zt={};Ce(zt,{assertParamsValid:()=>TW,computeFlatOffset:()=>AW,computeOutShape:()=>CW,getNormalizedAxes:()=>EW,isSliceContinous:()=>$W,maskToAxes:()=>_W,parseSliceParams:()=>VN,sliceInfo:()=>FW,startForAxis:()=>BN,startIndicesWithElidedDims:()=>LN,stopForAxis:()=>WN,stopIndicesWithElidedDims:()=>PN,stridesForAxis:()=>zN,stridesWithElidedDims:()=>RN});var Ib=-2,NW=-1;function TW(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function _W(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function CW(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function RN(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function MN(e,t,n){return n<=e?n:n-(t-1)}function ON(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function EW(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){let c=t[0],m=n+1;d=LN(i,c,m,r,e),h=PN(o,c,m,a,e),p=RN(s,c,m,e)}else for(let c=0;c<u;c++)d[c]=BN(i,r,s,e,c,l),h[c]=WN(o,a,s,e,c,l),p[c]=zN(s,c,l);return{begin:d,end:h,strides:p}}function LN(e,t,n,r,a){let s=[...a],i=ON(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=MN(t,n,o),u=r[l];e&1<<l&&(u=0),s[o]=u}return s}function PN(e,t,n,r,a){let s=[...a],i=ON(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=MN(t,n,o),u=r[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=Ad(0,s[o],a[o])}return s}function zN(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function BN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=Ad(0,i,l-1),i}function WN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),o>0?i=Ad(0,i,l):i=Ad(-1,i,l-1),i}function $W(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function AW(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function VN(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function FW(e,t,n,r,a,s,i,o,l){let u;if(r==null?(u=new Array(t.length),u.fill(1)):u=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)d&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};DW(h,p);let c=!0,m=!0,f=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(p.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<b),v=e[b];if(v===-1){g.push(x?1:-1);continue}let I=[p.beginMask&1<<b,p.endMask&1<<b],N=[p.strides[b]>0?0:-1,p.strides[b]>0?v:v-1];if(x&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&p.strides[b]===1;let _=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(x){let F=p.begin[b]<0?v+p.begin[b]:p.begin[b];if(p.begin[b]=F,p.end[b]=p.begin[b]+1,F<0||F>=v)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=j1(p.begin[b],0,p.strides[b],v,I,N),p.end[b]=j1(p.end[b],1,p.strides[b],v,I,N);let D=p.strides[b]===1&&p.begin[b]===0&&p.end[b]===v;c=c&&D,m=m&&(b===0&&p.strides[b]===1||D)}else c=c&&p.strides[b]===1&&_,m=m&&(b===0&&p.strides[b]===1||_);let E,A=!1;if(p.beginValid&&p.endValid?(E=p.end[b]-p.begin[b],A=!0):x?(E=1,A=!0):_&&v>=0&&(p.strides[b]<0?E=-v:E=v,A=!0),A){let D;E===0||E<0!=p.strides[b]<0?D=0:D=Math.trunc(E/p.strides[b])+(E%p.strides[b]!==0?1:0),g.push(D)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){let x=p.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===Ib&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>p.finalShapeGatherIndices[x]!==Ib),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:p.begin,end:p.end,strides:p.strides}}function DW(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ib),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(NW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function j1(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var RW="4.21.0",UN=class{static sgd(e){return new Mm(e)}static momentum(e,t,n=!1){return new Ov(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Lv(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Rv(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Fv(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Mv(e,t,n,r,a)}static adagrad(e,t=.1){return new Dv(e,t)}},Fs=UN,MW=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function Wv(){return new Promise(e=>MW(()=>e()))}var T={};Ce(T,{ERF_A1:()=>ZW,ERF_A2:()=>JW,ERF_A3:()=>YW,ERF_A4:()=>QW,ERF_A5:()=>e4,ERF_P:()=>XW,PARALLELIZE_THRESHOLD:()=>Vv,RowPartitionType:()=>Vr,SELU_SCALE:()=>HN,SELU_SCALEALPHA:()=>GN,applyActivation:()=>Dm,assertAndGetBroadcastShape:()=>lt,assertAxesAreInnerMostDims:()=>F3,assertParamsConsistent:()=>OW,assignToTypedArray:()=>i4,axesAreInnerMostDims:()=>Qx,calculateShapes:()=>YS,checkEinsumDimSizes:()=>h4,checkPadOnDimRoundingMode:()=>vn,combineLocations:()=>xS,combineRaggedTensorToTensorShapes:()=>PW,complexWithEvenIndex:()=>r4,complexWithOddIndex:()=>a4,computeConv2DInfo:()=>Np,computeConv3DInfo:()=>dS,computeDefaultPad:()=>Mx,computeDilation2DInfo:()=>$O,computeOptimalWindowSize:()=>VW,computeOutAndReduceShapes:()=>vS,computeOutShape:()=>LW,computePool2DInfo:()=>uS,computePool3DInfo:()=>AO,convertConv2DDataFormat:()=>pS,decodeEinsumEquation:()=>d4,eitherStridesOrDilationsAreOne:()=>ea,expandShapeToKeepDim:()=>Qs,exponent:()=>l4,exponents:()=>o4,fromStringArrayToUint8:()=>D4,fromUint8ToStringArray:()=>F4,getAxesPermutation:()=>wS,getBroadcastDims:()=>yS,getComplexWithIndex:()=>s4,getEinsumComputePath:()=>c4,getEinsumPermutation:()=>p4,getFusedBiasGradient:()=>Fm,getFusedDyActivation:()=>Am,getImageCenter:()=>UW,getInnerMostAxes:()=>D3,getPermuted:()=>HW,getRaggedRank:()=>BW,getReductionAxes:()=>Rt,getReshaped:()=>GW,getReshapedPermuted:()=>jW,getRowPartitionTypesHelper:()=>zW,getSliceBeginCoords:()=>qW,getSliceSize:()=>KW,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>y4,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>b4,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>x4,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>k4,getSparseReshapeInputOutputMismatchErrorMessage:()=>S4,getSparseReshapeInputOutputMultipleErrorMessage:()=>I4,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>v4,getSparseReshapeNegativeOutputDimErrorMessage:()=>w4,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>C4,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>N4,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>T4,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>_4,getUndoAxesPermutation:()=>ev,isIdentityPermutation:()=>m4,log:()=>BR,mergeRealAndImagArrays:()=>t4,prepareAndValidate:()=>DN,prepareSplitSize:()=>g4,segment_util:()=>jN,shouldFuse:()=>Rm,slice_util:()=>zt,splitRealAndImagArrays:()=>n4,stridesOrDilationsArePositive:()=>Ys,tupleValuesAreOne:()=>Ka,upcastType:()=>ir,validateDefaultValueShape:()=>WW,validateInput:()=>_m,validateUpdateShape:()=>kv,warn:()=>Oa});function OW(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function LW(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Vr;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Vr||(Vr={}));function PW(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function zW(e){let t={FIRST_DIM_SIZE:Vr.FIRST_DIM_SIZE,VALUE_ROWIDS:Vr.VALUE_ROWIDS,ROW_LENGTHS:Vr.ROW_LENGTHS,ROW_SPLITS:Vr.ROW_SPLITS,ROW_LIMITS:Vr.ROW_LIMITS,ROW_STARTS:Vr.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function BW(e){return e.length===0?0:e[0]===Vr.FIRST_DIM_SIZE?e.length-1:e.length}function WW(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Vv=30;function VW(e){return e<=Vv?e:lc(e,Math.floor(Math.sqrt(e)))}function UW(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function GW(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function HW(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function jW(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function qW(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function KW(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var GN=1.7580993408473768,HN=1.0507009873554805,XW=.3275911,ZW=.254829592,JW=-.284496736,YW=1.421413741,QW=-1.453152027,e4=1.061405429;function t4(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function n4(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function r4(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function a4(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function s4(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function i4(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function o4(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function l4(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Gy="->",u4=/->/g,q1=",",K1="...";function d4(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(u4,"").length)/Gy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Gy}").`);let[r,a]=e.split(Gy);$(r.indexOf(K1)===-1,()=>`The ellipsis notation ("${K1}") is not supported yet.`);let s=r.split(q1),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<a.length;++p){let c=a[p];if(!s.some(m=>m.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let p=0;p<r.length;++p){let c=r[p];o.indexOf(c)===-1&&c!==q1&&o.push(c)}let l=new Array(s.length);for(let p=0;p<i;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let c=0;c<s[p].length;++c)l[p].push(o.indexOf(s[p][c]))}let u=o.length,d=a.length,h=[];for(let p=d;p<u;++p)h.push(p);return{allDims:o,summedDims:h,idDims:l}}function p4(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function h4(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function c4(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],l=f4(t,o);for(let u of l)s.indexOf(u)===-1&&(r[i].push(u),s.push(u))}return{path:n,steps:r}}function m4(e){return e.every((t,n)=>t===n)}function f4(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function g4(e,t,n=0){let r=[];if(typeof t=="number")$(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function y4(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function b4(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function x4(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function v4(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function w4(e,t){return`size ${e} must be non-negative, not ${t}`}function k4(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function I4(e,t){let n=nt(e),r=nt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function S4(e,t){let n=nt(e),r=nt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function N4(){return"segment ids must be >= 0"}function T4(){return"segment ids are not increasing"}function _4(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function C4(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var jN={};Ce(jN,{collectGatherOpShapeInfo:()=>A4,computeOutShape:()=>$4,segOpComputeOptimalWindowSize:()=>E4});function E4(e,t){let n=!1,r;for(e<=Vv?(r=e,n=!0):r=lc(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=lc(e,r+1);return r}function $4(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function A4(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),d*=e.shape[h];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function F4(e){try{return e.map(t=>pc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function D4(e){return e.map(t=>kp(t))}var na={};Ce(na,{nonMaxSuppressionV3Impl:()=>hN,nonMaxSuppressionV4Impl:()=>cN,nonMaxSuppressionV5Impl:()=>mN,whereImpl:()=>tN});ZB();var qN={kernelName:Dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,Do(oe(n,"float32"),-1))}}},R4={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=it(oe(n,"float32")),a=Jt(he(ve(1),r));return mt(ce(e,a))}}}},M4={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Jt(he(it(oe(n,"float32")),1));return ce(e,r)}}}},O4={kernelName:is,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=e,i=Rt(n.shape,a);return i.length>0&&(s=fe(s,i)),B(s,n.shape)},b:()=>{let s=e,i=Rt(r.shape,a);return i.length>0&&(s=fe(s,i)),B(s,r.shape)}}}},L4={kernelName:ci,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},P4={kernelName:Ol,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},z4={kernelName:Ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},B4={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,Jt(he(ve(1),it(oe(n,"float32")))))}}},W4={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Jt(Z(ve(1),it(oe(n,"float32"))));return ce(e,r)}}}},V4={kernelName:bi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=Z(it(n),it(r)),i=P(e,ce(r,s)),o=Rt(n.shape,a);return o.length>0&&(i=fe(i,o)),B(i,n.shape)},b:()=>{let s=Z(it(n),it(r)),i=mt(P(e,ce(n,s))),o=Rt(r.shape,a);return o.length>0&&(i=fe(i,o)),B(i,r.shape)}}}},U4={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,Z(it(oe(n,"float32")),1))}}},G4={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,he(ve(1),it(oe(n,"float32"))))}}};function H4(e,t,n,r,a,s){let i=C(e,"dy","avgPool3dGrad"),o=C(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;o.rank===4&&(d=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),vn("avgPool3dGrad",a,s);let h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=O.runKernel(ep,h,p);return d?B(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var j4=L({avgPool3dGrad_:H4}),q4={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>j4(e,r,a,s,i,o)}}};function K4(e,t,n,r,a){let s=C(e,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let d={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=O.runKernel(Qd,d,h);return u?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var X4=L({avgPoolGrad_:K4}),Z4={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>X4(e,r,a,s,i)}}},J4={kernelName:vi,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Re(e,a,!1,!0),b:()=>Re(r,e,!0,!1)}:!s&&i?{a:()=>Re(e,a,!1,!1),b:()=>Re(e,r,!0,!1)}:s&&!i?{a:()=>Re(a,e,!1,!0),b:()=>Re(r,e,!1,!1)}:{a:()=>Re(a,e,!0,!0),b:()=>Re(e,r,!0,!0)}}},Y4={kernelName:zl,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Rp(e,r,a)}}},Q4={kernelName:DI,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>fe(e,o,!0)}}},eV={kernelName:wi,gradFunc:e=>({x:()=>e.clone()})},tV={kernelName:ki,gradFunc:e=>({x:()=>Ge(e)})},nV={kernelName:os,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Zt(gr(va(r,a),ps(r,s)),e,Ge(e))}}},rV={kernelName:np,inputsToSave:["x"],gradFunc:qN.gradFunc},aV={kernelName:Vl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=br(a,t[0].shape)[0],i=r.map(o=>o[s]);return En(e,i,s).map(o=>()=>o)}},sV={kernelName:Ii,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(Ka(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>jx(r.shape,e,a,i,o,l),filter:()=>Ev(r,e,a.shape,i,o,l)}}},iV={kernelName:Si,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>gn(e,a,s,i,o,1,l),filter:()=>Ev(e,r,a.shape,s,i,o,l)}}};function oV(e,t,n,r,a){let s=e;e.rank===4&&(s=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return O.runKernel(Ul,o,l)}var lV=L({conv3DBackpropFilter_:oV}),uV={kernelName:Ni,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(Ka(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>fS(i.shape,e,o,a,s),filter:()=>lV(i,e,o.shape,a,s)}}},dV={kernelName:Ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(mt(vm(oe(n,"float32"))),e)}}},pV={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(wm(oe(n,"float32")),e)}}},hV={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=wS([a],r.rank),l=lm(e,a,s,!i);return o!=null&&(l=Me(l,o)),l}}}},cV={kernelName:Ei,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r??[1,1];$(Ka(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(ea(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),vn("depthwiseConv2d",s,i),{x:()=>uN(l.shape,e,u,a,s,o,i),filter:()=>lN(l,e,u.shape,a,s,o,i)}}},mV={kernelName:$i,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>O.runKernel(cl,s,n),filter:()=>O.runKernel(ml,i,n)}}},fV={kernelName:Fi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>O.runKernel(Kl,r)}}},gV={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=P(un(mt(it(n))),2/Math.sqrt(Math.PI));return{x:()=>P(e,r)}}},yV={kernelName:Ri,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,n)}}},bV={kernelName:Zl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>B(e,n.shape)}}},xV={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,un(n))}}},vV={kernelName:Oi,gradFunc:e=>({x:()=>Ge(e)})},wV={kernelName:Li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=ce(e,oe(r,"float32")),i=Rt(n.shape,a);return i.length>0?B(fe(s,i),n.shape):s},b:()=>{let s=P(e,oe(n,"float32")),i=Rt(r.shape,a);i.length>0&&(s=B(fe(s,i),r.shape));let o=it(r);return mt(ce(s,oe(o,"float32")))}}}},kV={kernelName:Pi,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o??ve(1),u=Rt(s.shape,a.shape),d=[];if(s.rank===1){for(let f=0;f<a.shape.length-1;++f)d.push(a.shape[f]);d.push(1)}let h=he(a,s),p=P(e,l),c=bm(Z(i,ve(r))),m=P(P(P(c,c),c),ve(-.5));return{x:()=>s.rank===1?B(P(P(e,Vn(B(c,[1,1,1,s.shape[0]]),d)),l),a.shape):B(P(P(e,c),l),a.shape),mean:()=>{let f=P(P(c,ve(-1)),p);return s.rank===1&&(f=fe(f,u)),B(f,s.shape)},variance:()=>{let f=P(P(m,h),p);return s.rank===1&&(f=fe(f,u)),B(f,s.shape)},scale:()=>{let f=P(h,c),g=P(e,f);return s.rank===1&&(g=fe(g,u)),B(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=fe(f,u)),B(f,s.shape)}}}},IV={kernelName:Yl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=br(s,r.shape)[0],l=(u,d,h)=>()=>{let p=u.shape,c=d.size,m=p.slice(0,o),f=m.length,g=p.slice(s,p.length).slice(1),y=g.length,b=X1(0,f),x=X1(f+1,f+1+y),v=Z1([m,[c],g]),I=B(h,v),N=B(d,[c]),_=Z1([[f],b,x]),E=Me(I,_),A=Em(E,N,u.shape[o]),D=ev(_);return A=Me(A,D),A};if(i===1){let u=r.shape[0],d=r.split(u,0);return{x:()=>Dt(d.map((h,p)=>l(h,a.slice(p,1),e.slice(p,1))())).reshape(r.shape),indices:()=>a}}else return{x:l(r,a,e),indices:()=>a}}};function X1(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Z1(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var SV={kernelName:zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ge(n),b:()=>Ge(r)}}},NV={kernelName:Bi,gradFunc:e=>({x:()=>oe(e,"float32")})},TV={kernelName:Wi,gradFunc:e=>({x:()=>Ge(e)})},_V={kernelName:Vi,gradFunc:e=>({x:()=>Ge(e)})},CV={kernelName:Ui,gradFunc:e=>({x:()=>Ge(e)})},EV={kernelName:Gi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=wn(r,0);return{x:()=>Zt(s,e,P(e,a))}}},$V={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,Z(n,1))}}},AV={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,oe(n,"float32"))}}},FV={kernelName:MI,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=un(r);return he(e,P(fe(e,a,!0),s))}}}};function DV(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return O.runKernel(ou,o,l)}var RV=L({localResponseNormalizationBackprop_:DV}),MV={kernelName:qi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>RV(r,a,e,s,i,o,l)}}};function KN(e,t,n,r){return t.rank<n.rank&&(t=B(t,Qs(t.shape,r))),e.rank<n.rank&&(e=B(e,Qs(e.shape,r))),{x:()=>P(e,oe(Gn(n,t),e.dtype))}}var J1={kernelName:Ki,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=br(a,s.shape),l=KN(e,i,s,o);return{x:()=>l.x()}}},OV={kernelName:Xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>P(e,oe(va(n,r),"float32")),b:()=>P(e,oe(xl(n,r),"float32"))}}};function LV(e,t,n,r,a,s,i){let o=C(e,"dy","maxPool3dGrad"),l=C(t,"input","maxPool3dGrad"),u=C(n,"output","maxPool3dGrad"),d=o,h=l,p=u,c=!1;l.rank===4&&(c=!0,d=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=B(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),vn("maxPool3dGrad",s,i);let m={dy:d,input:h,output:p},f={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(op,m,f);return c?B(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var PV=L({maxPool3dGrad_:LV}),zV={kernelName:lu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>PV(e,r,a,s,i,o,l)}}};function BV(e,t,n,r,a,s,i){let o=C(e,"dy","maxPoolGrad"),l=C(t,"input","maxPoolGrad"),u=C(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),vn("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(ip,d,h)}var WV=L({maxPoolGrad_:BV}),VV={kernelName:Zi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>WV(e,r,a,s,i,o)}}},UV={kernelName:Ji,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=br(a,r.shape),i=vS(r.shape,s)[1],o=nt(i);return{x:()=>{let l=r.shape.slice();s.forEach(d=>{l[d]=1});let u=B(e,l);return ce(P(u,Cn(r.shape,"float32")),o)}}}},GV={kernelName:Yi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=br(a,s.shape),l=KN(e,i,s,o);return{x:()=>l.x()}}},HV={kernelName:Qi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>P(e,oe(ps(n,r),"float32")),b:()=>P(e,oe(wn(n,r),"float32"))}}},jV={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},qV={kernelName:to,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=Rt(n.shape,a);return s.length>0?B(fe(e,s),n.shape):e},b:()=>{let s=P(e,mt(Pu(ce(n,r)))),i=Rt(r.shape,a);return i.length>0?B(fe(s,i),r.shape):s}}}},KV={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=P(e,oe(r,"float32")),i=Rt(n.shape,a);return i.length>0?B(fe(s,i),n.shape):s},b:()=>{let s=P(e,oe(n,"float32")),i=Rt(r.shape,a);return i.length>0?B(fe(s,i),r.shape):s}}}},XV={kernelName:du,gradFunc:e=>({x:()=>mt(e)})},ZV={kernelName:ro,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>kt(n.shape,"float32")}}},JV={kernelName:fu,gradFunc:e=>({x:()=>Ge(e)})},YV={kernelName:gu,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Nt(e,r).map(a=>()=>a)}},Y1={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},QV={kernelName:so,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=lt(s.shape,i.shape);return{a:()=>{let l=oe(i,"float32"),u=P(e,P(l,Jr(s,he(l,ve(1))))),d=Rt(s.shape,o);return d.length>0&&(u=fe(u,d)),B(u,s.shape)},b:()=>{let l=wn(s,0),u=Zt(l,Hn(s),Ge(s)),d=P(e,P(a,u)),h=Rt(i.shape,o);return h.length>0&&(d=fe(d,h)),B(d,i.shape)}}}},eU={kernelName:io,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=wn(n,0);return{x:()=>Zt(a,e,P(e,r)),alpha:()=>{let s=Zt(a,Ge(e),P(e,n)),i=Rt(r.shape,e.shape);return i.length>0&&(s=fe(s,i)),B(s,r.shape)}}}};function tU(e,t,n){let r=e.shape.slice();r[n]=1;let a=B(t,r),s=zd(e,n,!0,!1),i=zd(e,n,!0,!0),o=P(s,i);return P(a,o)}function nU(e,t,n){let r=e.shape.length,a=r-n.length,s=T.getAxesPermutation(n,r),i=e;s!=null&&(i=Me(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((h,p)=>h*p,1);o.push(l);let u=i.reshape(o),d=tU(u,t,a);if(d=d.reshape(i.shape),s!=null){let h=T.getUndoAxesPermutation(s);d=Me(d,h)}return d}var rU={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>nU(r,e,s)}}},aU={kernelName:Ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=ce(e,oe(r,"float32")),i=Rt(n.shape,a);return i.length>0?B(fe(s,i),n.shape):s},b:()=>{let s=P(e,oe(n,"float32")),i=Rt(r.shape,a);i.length>0&&(s=B(fe(s,i),r.shape));let o=it(r);return mt(ce(s,oe(o,"float32")))}}}},sU={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,mt(it(n)))}}},iU={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=P(ps(n,6),Do(n));return{x:()=>P(e,oe(r,"float32"))}}},oU={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,oe(Do(n),"float32"))}}},lU={kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n.shape)}}},uU={kernelName:ho,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(xu,a,n)}}},dU={kernelName:po,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(bu,a,n)}}},pU={kernelName:mo,gradFunc:(e,t,n)=>{let{dims:r}=n,a=br(r,e.shape);return{x:()=>lr(e,a)}}},hU={kernelName:fo,gradFunc:e=>({x:()=>Ge(e)})},cU={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>mt(ce(e,P(Jr(n,1.5),2)))}}},mU={kernelName:Iu,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>oe(Ge(n),"float32"),t:()=>P(e,oe(n,e.dtype)),e:()=>P(e,oe(Fp(n),e.dtype))}}},fU={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=wn(n,ve(0)),a=ve(GN),s=ve(HN),i=P(e,s),o=P(P(e,a),un(oe(n,"float32")));return Zt(r,i,o)}}}},gU={kernelName:wo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,P(n,he(ve(1),n)))}}},yU={kernelName:vo,gradFunc:e=>({x:()=>Ge(e)})},bU={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(_p(oe(n,"float32")),e)}}},xU={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(om(oe(n,"float32")),e)}}},vU={kernelName:Su,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=VN(r,a,s),u=[];for(let d=0;d<e.rank;d++)u.push([o[d],i[d]-o[d]-l[d]]);return{x:()=>Dr(e,u)}}},wU={kernelName:No,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=P(e,r);return{logits:()=>he(i,P(fe(i,[a],s),r))}}},kU={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,fr(n))}}},Q1={kernelName:Nu,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Tp(e,r,a)}}},ek={kernelName:Tu,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>ot(e,r)}}},IU={kernelName:Io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,P(Jt(oe(n,"float32")),2))}}},SU={kernelName:cp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,P(oe(n,"float32"),2))}}},NU={kernelName:To,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ve(2);return{a:()=>P(e,P(a,he(n,r))),b:()=>P(e,P(a,he(r,n)))}}},TU={kernelName:us,gradFunc:e=>({x:()=>Ge(e)})},_U={kernelName:_o,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n.shape,r.shape);return{a:()=>{let s=e,i=Rt(n.shape,a);return i.length>0&&(s=fe(s,i)),B(s,n.shape)},b:()=>{let s=e,i=Rt(r.shape,a);return i.length>0&&(s=fe(s,i)),B(mt(s),r.shape)}}}},CU={kernelName:So,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;br(s,r.shape).forEach(l=>{a[l]=1});let i=B(e,a),o=P(i,Cn(r.shape,"float32"));return{x:()=>o}}},EU={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ce(e,it(_p(n)))}}},$U={kernelName:Eo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(he(ve(1),it(n)),e)}}},AU={kernelName:ls,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=Ge(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=Z(s,Ue(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=Z(s,Ue(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=Z(s,Ue(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let u=0;u<a[3];++u)s=Z(s,Ue(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},FU={kernelName:ha,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=ev(a);return{x:()=>Me(e,s)}}},DU={kernelName:Fu,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Dt(e,a)}}},RU={kernelName:xp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>MU(e,n)}}};function MU(e,t){let n=ta(t,Ge(t)),r=zu(e,n),a=va(t,ve(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Kt(a,o+1);a=gr(a,Cn(r.shape,"bool"));let i=Ge(r);return Zt(a,r,i)}var OU={kernelName:Du,gradFunc:e=>({x:()=>Ge(e)})},LU=[qN,R4,M4,O4,L4,P4,z4,B4,W4,V4,U4,G4,q4,Z4,J4,Y4,Q4,eV,tV,nV,rV,aV,iV,sV,uV,dV,pV,hV,cV,mV,aU,fV,gV,yV,bV,xV,wV,vV,kV,IV,SV,NV,TV,_V,CV,EV,$V,AV,FV,MV,J1,J1,OV,zV,VV,UV,GV,HV,jV,qV,KV,XV,ZV,JV,YV,Y1,Y1,QV,eU,rU,sU,iU,oU,lU,uU,dU,pU,hU,cU,mU,fU,gU,yU,bU,xU,vU,wU,kU,Q1,Q1,ek,ek,IU,NU,SU,TU,_U,CU,EU,$U,AU,FU,DU,RU,OU];for(let e of LU)OI(e);Y().prototype.abs=function(){return this.throwIfDisposed(),$t(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),_x(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),Cx(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),Z(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),am(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),Od(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Js(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),Ex(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),B(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),oe(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),B(this,[e,t])};Y().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),B(this,[e,t,n])};Y().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),B(this,[e,t,n,r])};Y().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),B(this,[e,t,n,r,a])};Y().prototype.asin=function(){return this.throwIfDisposed(),$x(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),Ax(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),Fx(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),Dx(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),Rx(this)};Y().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),xa(this,e,t,n,r)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Tp(this,e,t)};Y().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),$o(this,e,t,n,r,a)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ws(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),oe(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),Wx(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ln(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof De&&(e=[e]),ot([this,...e],t)};Y().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),sm(this,e,t,n,r,a,s)};Y().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),im(this,e,t,n,r,a)};Y().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),gn(this,e,t,n,r,a,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),_p(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),om(this)};Y().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),zd(this,e,t,n)};Y().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),lm(this,e,t,n)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Xx(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ao(this,e,t,n,r,a,s)};Y().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Zx(this,e,t,n,r,a)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Jx(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),ce(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),Yx(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),Ou(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),Gn(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),um(this)};Y().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),tv(this,e,t)};Y().prototype.exp=function(){return this.throwIfDisposed(),un(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),Kt(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),nv(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),Lp(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),Pu(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),rm(this,e)};Y().prototype.gather=function(e,t,n){return this.throwIfDisposed(),zu(this,e,t,n)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),va(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),wn(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),Il(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),Im(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),rv(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),av(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),sv(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ep(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),ps(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),xl(this,e)};Y().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),iv(this,e,t,n,r)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),ov(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),hm(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ap(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),Hn(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),$p(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),gr(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),Fp(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),cm(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),lv(this,e)};Y().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Re(this,e,t,n)};Y().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Ht(this,e,t,n,r)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),sr(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),ta(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),wt(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),bl(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),Za(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),dv(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),pv(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),P(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),mt(this)};Y().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Lu(this,e,t,n)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),ei(this,e)};Y().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),vl(this,e,t,n)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),jn(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),Dr(this,e,t)};Y().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),hv(this,e,t,n,r,a,s)};Y().prototype.pow=function(e){return this.throwIfDisposed(),Jr(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),Mp(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),cv(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),bv(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),tt(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),gm(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),B(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),B(this,e)};Y().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),fN(this,e,t,n)};Y().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),gN(this,e,t,n)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),lr(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),Pp(this)};Y().prototype.round=function(){return this.throwIfDisposed(),ym(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),bm(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),xm(this)};Y().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Bu(this,e,t,n,r,a,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),fr(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),xv(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),vm(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),wm(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Ue(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),cs(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),Fo(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Rp(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),En(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),Jt(this)};Y().prototype.square=function(){return this.throwIfDisposed(),it(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Sm(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),ms(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof De?[this,e]:[this,...e];return Dt(n,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),Do(this,e)};Y().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),vv(this,e,t,n,r,a,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),he(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),fe(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),wv(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),Xa(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),Vn(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),oe(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),oe(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),oe(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),Iv(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),Me(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),Sv(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Em(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),Nt(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),Zt(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var Ra=class XN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,XN.prototype)}},Hr=class ZN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ZN.prototype)}},V=class JN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,JN.prototype)}},Pe=class YN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,YN.prototype)}},PU=class QN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,QN.prototype)}},e2=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function ni(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Ur(e,t){if(!e)throw new PU(t)}function tk(e,t){let n=0;for(let r of e)r===t&&n++;return n}function _n(e){return e.length===1?e[0]:e}function et(e){return Array.isArray(e)?e:[e]}function la(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Os(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var pr={};function Uv(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Sb(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Sb(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:Sb(r))}}}function Bp(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in pr)i=pr[s];else if(i=t[s],i==null)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in pr?[o,l]=pr.className:i in t&&([o,l]=t[i]),o==null)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let c of Object.keys(pr))u[c]=pr[c];for(let c of Object.keys(n))u[c]=n[c];let d=s.config;d.customObjects=u;let h=Object.assign({},pr);for(let c of Object.keys(n))pr[c]=n[c];Sb(s.config);let p=l(o,s.config,n,a);return pr=Object.assign({},h),p}else{let u=Object.assign({},pr);for(let h of Object.keys(n))pr[h]=n[h];let d=new o(s.config);return pr=Object.assign({},u),d}}}function zU(e,t){return e<t?-1:e>t?1:0}function Oh(e,t){return-1*zU(e,t)}function Va(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function BU(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ro(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Gv(e,t,n=0,r=1/0){return Ur(n>=0),Ur(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function Xt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Xt(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${t2(e)}.`)}function t2(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>t2(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function WU(e,t,n){let r=n!=null?n():w.now(),a;return(...s)=>{let i=n!=null?n():w.now();return i-r<t||(r=i,a=e(...s)),a}}function n2(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var VU=0;function r2(){return VU++}var Lh={};function Om(e=""){return e in Lh||(Lh[e]=0),Lh[e]+=1,e+Lh[e].toString()}var UU=["channelsFirst","channelsLast"],GU=["nearest","bilinear"],HU=["valid","same","causal"],jU=["max","avg"],qU=["sum","mul","concat","ave"],tl=new Map;function Tt(e){Ro(UU,"DataFormat",e)}function KU(e){Ro(GU,"InterpolationFormat",e)}function ur(e){Ro(HU,"PaddingMode",e)}function a2(e){Ro(jU,"PoolMode",e)}var _d=[],nk="/";function Vs(e,t){_d.push(e);try{let n=t();return _d.pop(),n}catch(n){throw _d.pop(),n}}function XU(){return _d.length===0?"":_d.join(nk)+nk}function s2(e){if(!o2(e))throw new Error("Not a valid tensor name: '"+e+"'");return XU()+e}function i2(e){if(!o2(e))throw new Error("Not a valid tensor name: '"+e+"'");tl.has(e)||tl.set(e,0);let t=tl.get(e);if(tl.set(e,tl.get(e)+1),t>0){let n=`${e}_${t}`;return tl.set(n,1),n}else return e}var ZU=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function o2(e){return!!e.match(ZU)}function JU(e){return e===parseInt(e.toString(),10)}function Ua(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Nl(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Ya(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Er(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var Hy;function Pt(){return Hy==null&&(Hy=Ix().epsilon()),Hy}function $r(){return"channelsLast"}function ga(e,t){return oe(e,t)}function Wp(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),B(e,n)}function YU(e,t){return W(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Wp(e,1);return Nb(n,[1,t,1])})}function QU(e){let t=[Ua(e.shape)];return B(e,t)}function eG(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ua(e.shape,1)];return B(e,t)}function Us(e,t,n){return W(()=>{switch(e.rank){case 1:return Op(e,t,n);case 2:return km(e,[t,0],[n,e.shape[1]]);case 3:return Wu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return kl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ue(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ue(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function jy(e,t,n){return W(()=>{switch(e.rank){case 1:return Op(e,t,n);case 2:return km(e,[0,t],[e.shape[0],n]);case 3:return Wu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return kl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ph(e,t,n,r){return W(()=>{switch(e.rank){case 1:return Op(e,t,n);case 2:switch(r){case 1:return Us(e,t,n);case 2:return jy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Us(e,t,n);case 2:return Wu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Us(e,t,n);case 2:return kl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return kl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jy(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Hv(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),ot(e,t)}function rk(e,t){switch(e.rank){case 1:return Vx([e,t]);case 2:return Ux([e,t],0);case 3:return Gx([e,t],0);case 4:return Hx([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Nb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Vn(e,t)}function Lm(e,t=0,n=1,r,a){return fm(e,t,n,r,a)}function Xr(e,t,n,r){if(e.rank<2||t.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Sl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tb(e.rank,r,$r()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=B(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},(p,c)=>c===0?t.rank-2:c<=t.rank-2?c-1:c);t=B(Me(t,d),[l,-1]);let h=[...a,...u];return B(Sl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tb(e.rank,r,$r()):null,activation:n}),h)}}function l2(e,t,n){return W(()=>(Array.isArray(t)?t=Qe(t,"int32"):t=oe(t,"int32"),zu(e,t,n)))}function Vp(e){return P(e,e)}function Tb(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1,1,1]):B(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,1,1,r[0]]):B(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1,1]):B(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,1,r[0]]):B(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?B(t,[1,r[0],1]):B(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?B(t,[1,1,r[0]]):B(t,[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Rr(e,t,n){return W(()=>(n==null&&(n=$r()),Tt(n),Z(e,Tb(e.rank,t,n))))}function tG(e,t=1){if(t!==1)throw new Pe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ou(e)}function nG(e){return W(()=>ce(e,Z($t(e),1)))}function u2(e,t,n,r){return W(()=>_v(e,t,n,r))}function rG(e){return W(()=>{let t=Z(.5,P(.2,e));return ln(t,0,1)})}function Up(e,t,n=!1){return n?e():t()}var aG=["fanIn","fanOut","fanAvg"],sG=["normal","uniform","truncatedNormal"];function iG(e){Ro(aG,"FanMode",e)}function oG(e){Ro(sG,"Distribution",e)}var xr=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},jv=class extends xr{apply(e,t){return kt(e,t)}};jv.className="Zeros";ne.registerClass(jv);var qv=(()=>{let e=class extends xr{apply(t,n){return Cn(t,n)}};return e.className="Ones",e})();ne.registerClass(qv);var d2=(()=>{let e=class extends xr{constructor(t){if(super(),typeof t!="object")throw new V(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new V(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return W(()=>P(ve(this.value),Cn(t,n)))}getConfig(){return{value:this.value}}};return e.className="Constant",e})();ne.registerClass(d2);var p2=(()=>{let e=class extends xr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return hs(t,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};return e.className="RandomUniform",e})();ne.registerClass(p2);var h2=(()=>{let e=class extends xr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Pe(`randomNormal does not support dType ${n}.`);return Lm(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};return e.className="RandomNormal",e})();ne.registerClass(h2);var c2=(()=>{let e=class extends xr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Pe(`truncatedNormal does not support dType ${n}.`);return Cm(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};return e.className="TruncatedNormal",e})();ne.registerClass(c2);var m2=(()=>{let e=class extends xr{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,n){return W(()=>{if(t.length!==2||t[0]!==t[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,dm(t[0]))})}getConfig(){return{gain:this.gain}}};return e.className="Identity",e})();ne.registerClass(m2);function lG(e,t="channelsLast"){let n,r;if(Tt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Ua(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Ua(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Ua(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var qn=(()=>{let e=class extends xr{constructor(t){if(super(),t.scale<0)throw new V(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,iG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,oG(this.distribution),this.seed=t.seed}apply(t,n){let r=lG(t),a=r[0],s=r[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(a+s)/2),this.distribution==="normal"){let o=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${n}.`);return Cm(t,0,o,n,this.seed)}else{let o=Math.sqrt(3*i);return hs(t,-o,o,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};return e.className="VarianceScaling",e})();ne.registerClass(qn);var Kv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="GlorotUniform",e})();ne.registerClass(Kv);var Xv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="GlorotNormal",e})();ne.registerClass(Xv);var Zv=(()=>{let e=class extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="HeNormal",e})();ne.registerClass(Zv);var Jv=(()=>{let e=class extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="HeUniform",e})();ne.registerClass(Jv);var Yv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="LeCunNormal",e})();ne.registerClass(Yv);var Qv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="LeCunUniform",e})();ne.registerClass(Qv);var f2=(()=>{let e=class extends xr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,n){return W(()=>{if(t.length<2)throw new Pe("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;let r=w.sizeFromShape(t.slice(0,-1)),a=t[t.length-1],s=r*a;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);let i=[Math.max(a,r),Math.min(a,r)],o=Lm(i,0,1,n,this.seed),l=Av.qr(o,!1),u=l[0],d=l[1].flatten().stridedSlice([0],[Math.min(a,r)*Math.min(a,r)],[Math.min(a,r)+1]);return u=P(u,d.sign()),r<a&&(u=u.transpose()),P(ve(this.gain),u.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}};return e.className="Orthogonal",e})();ne.registerClass(f2);var ak={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sk(e,t={}){return Bp(e,ne.SerializationMap.getMap().classNameMap,t,"initializer")}function It(e){return Uv(e)}function bt(e){if(typeof e=="string"){let t=e in ak?ak[e]:e;if(t==="GlorotNormal")return new Xv;if(t==="GlorotUniform")return new Kv;if(t==="HeNormal")return new Zv;if(t==="HeUniform")return new Jv;if(t==="LeCunNormal")return new Yv;if(t==="LeCunUniform")return new Qv;{let n={};return n.className=t,n.config={},sk(n)}}else return e instanceof xr?e:sk(e)}function _b(e){return Array.isArray(e)&&Array.isArray(e[0])}function mc(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Te(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ke(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function fc(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var ik="Variable",g2=class{constructor(e,t="float32",n=ik,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=r2(),n=n??ik,this.originalName=s2(n),this.name=i2(this.originalName),this.trainable_=r,this.constraint=a,this.val=Nv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),uG(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function uG(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Cb(e){return e.map(t=>t.read())}function ew(e){e.forEach(t=>{t[0].write(t[1])})}var At=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ar=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=r2(),s!=null&&(this.originalName=s2(s),this.name=i2(this.originalName)),this.rank=t.length}},dG=0,Pm=class{constructor(e,t){this.callArgs=t,this.id=dG++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},pG=0,ze=class extends ne.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=la(n)+"_"+Om(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Hr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return _n(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return _n(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ra(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ra(`Layer ${this.name} is not connected, no input to return.`);return _n(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ra(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ra(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return _n(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=et(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=et(this.inputSpec);if(t.length!==n.length)throw new V(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let a=t[r],s=n[r];if(s==null)continue;let i=a.rank;if(s.ndim!=null&&i!==s.ndim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&a.dtype!==s.dtype)throw new V(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){let o=a.shape;for(let l in s.axes){let u=Number(l),d=s.axes[l],h=u>=0?o[u]:o[o.length+u];if(d!=null&&[d,null].indexOf(h)===-1)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${d} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let l=s.shape[o],u=a.shape[o];if(l!=null&&u!=null&&l!==u)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=et(e),r=mG(e),a=fG(e);if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vs(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of et(e))s.push(i.shape);this.build(_n(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);let i=et(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=_n(o),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=hG(e),i=this.computeOutputShape(s),o,l=cG(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,d)=>new Ar(l,u,this,et(e),t,this.name,d)):o=new Ar(l,i,this,et(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ra(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ra(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Cb(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Cb(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!w.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ew(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():bt("zeros"));let l=r.apply(t,n),u=new g2(l,n,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),s==null&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=et(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=et(t),s=et(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s,i=null){let o=et(e);t=et(t),n=et(n),r=et(r),a=mc(a),s=mc(s);let l=[],u=[],d=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new Pm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function hG(e){e=et(e);let t=[];for(let n of e)t.push(n.shape);return _n(t)}function cG(e){return"float32"}function y2(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],u=y2(i,o,l);for(let d of u)a.indexOf(d)===-1&&a.push(d)}return a}}}function mG(e){let t=!0;for(let n of et(e))if(!(n instanceof Ar)){t=!1;break}return t}function fG(e){let t=!0;for(let n of et(e))if(n instanceof Ar){t=!1;break}return t}var Gp=(()=>{let e=class extends ze{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Om("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=t.dtype||"float32";this.batchInputShape=n,this.dtype=r,this.inputSpec=[{shape:n}];let a=new Ar(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};return e.className="InputLayer",e})();ne.registerClass(Gp);function b2(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Gp({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function gG(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return oe(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ol=class x2{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof x2)for(let n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(let n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=gG(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new V(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ar){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof Ar){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let n=this.name2Id[t];if(n==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}},gc=new e2,yc=new e2;function yG(e){gc?.setMaxEntries(e),yc?.setMaxEntries(e)}function bd(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],u=t.names();for(let m of o)u.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d=o.join(",")+"|"+t.names().sort().join(","),h=gc.get(d),p;if(h==null){let m=bG(i,t);h=m.sorted,p=m.recipientCounts,gc.put(d,h),yc.put(d,p)}p={},a||Object.assign(p,yc.get(d));let c=new ol(t);for(let m=0;m<h.length;++m){if(r!=null){let A=hc().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let f=h[m],g=f.sourceLayer;if(g instanceof Gp)continue;let y=[],b=[],x=[],v=!1;for(let A of f.inputs){let D=c.getValue(A),F=c.getMask(A);y.push(D),b.push(F),F!=null&&(v=!0),a||(p[A.name]--,p[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!D.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(D))}v&&(n=n||{},n.mask=b[0]);let I=et(g.apply(y,n)),N=null;g.supportsMasking&&(N=g.computeMask(y,b));let _=vG(f),E=Array.isArray(_)?_:[_];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(N)?N[0]:N);let D=o.indexOf(E[A].name);D!==-1&&(l[D]=I[A])}a||_e(x)}return c.disposeMasks(),s?l:l[0]}function bG(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=ok(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=ok(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:n,recipientCounts:xG(r)}}function xG(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ok(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&s.push(u)}}return{sorted:r,recipientMap:a}}function vG(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var wG=G();wG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,yG);var v2={};Ce(v2,{maxNorm:()=>kG,minMaxNorm:()=>NG,nonNeg:()=>SG,unitNorm:()=>IG});function tw(e,t){return W(()=>Jt(fe(P(e,e),t,!0)))}var Hp=class extends ne.Serializable{getConfig(){return{}}},nw=class extends Hp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=tw(e,this.axis),n=ln(t,0,this.maxValue);return P(e,ce(n,Z(Pt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};nw.className="MaxNorm";ne.registerClass(nw);var w2=(()=>{let e=class extends Hp{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>ce(t,Z(Pt(),tw(t,this.axis))))}getConfig(){return{axis:this.axis}}};return e.className="UnitNorm",e})();ne.registerClass(w2);var k2=(()=>{let e=class extends Hp{apply(t){return tt(t)}};return e.className="NonNeg",e})();ne.registerClass(k2);var I2=(()=>{let e=class extends Hp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>{let n=tw(t,this.axis),r=Z(P(this.rate,ln(n,this.minValue,this.maxValue)),P(1-this.rate,n));return P(t,ce(r,Z(Pt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};return e.className="MinMaxNorm",e})();ne.registerClass(I2);var lk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Bt(e){return Uv(e)}function uk(e,t={}){return Bp(e,ne.SerializationMap.getMap().classNameMap,t,"constraint")}function Wt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in lk?lk[e]:e,config:{}};return uk(t)}else return e instanceof Hp?e:uk(e)}function kG(e){return new nw(e)}function IG(e){return new w2(e)}function SG(){return new k2}function NG(e){return new I2(e)}var S2={};Ce(S2,{constant:()=>CG,glorotNormal:()=>MG,glorotUniform:()=>RG,heNormal:()=>OG,heUniform:()=>LG,identity:()=>FG,leCunNormal:()=>PG,leCunUniform:()=>zG,ones:()=>_G,orthogonal:()=>BG,randomNormal:()=>$G,randomUniform:()=>EG,truncatedNormal:()=>AG,varianceScaling:()=>DG,zeros:()=>TG});function TG(){return new jv}function _G(){return new qv}function CG(e){return new d2(e)}function EG(e){return new p2(e)}function $G(e){return new h2(e)}function AG(e){return new c2(e)}function FG(e){return new m2(e)}function DG(e){return new qn(e)}function RG(e){return new Kv(e)}function MG(e){return new Xv(e)}function OG(e){return new Zv(e)}function LG(e){return new Jv(e)}function PG(e){return new Yv(e)}function zG(e){return new Qv(e)}function BG(e){return new f2(e)}var N2={};Ce(N2,{Layer:()=>ze,RNN:()=>fs,RNNCell:()=>qp,activation:()=>M6,add:()=>G6,alphaDropout:()=>_j,average:()=>H6,averagePooling1d:()=>_w,averagePooling2d:()=>Cw,averagePooling3d:()=>Ew,avgPool1d:()=>ej,avgPool2d:()=>nj,avgPool3d:()=>aj,avgPooling1d:()=>tj,avgPooling2d:()=>rj,avgPooling3d:()=>sj,batchNormalization:()=>J6,bidirectional:()=>xj,categoryEncoding:()=>Fj,centerCrop:()=>$j,concatenate:()=>j6,conv1d:()=>T6,conv2d:()=>_6,conv2dTranspose:()=>C6,conv3d:()=>E6,conv3dTranspose:()=>$6,convLstm2d:()=>fj,convLstm2dCell:()=>gj,cropping2D:()=>F6,dense:()=>O6,depthwiseConv2d:()=>R6,dot:()=>Z6,dropout:()=>L6,elu:()=>v6,embedding:()=>U6,flatten:()=>z6,gaussianDropout:()=>Tj,gaussianNoise:()=>Nj,globalAveragePooling1d:()=>ij,globalAveragePooling2d:()=>oj,globalMaxPool1d:()=>wj,globalMaxPool2d:()=>kj,globalMaxPooling1d:()=>n_,globalMaxPooling2d:()=>r_,gru:()=>uj,gruCell:()=>dj,input:()=>U2,inputLayer:()=>x6,layerNormalization:()=>Y6,leakyReLU:()=>k6,lstm:()=>pj,lstmCell:()=>hj,masking:()=>Cj,maxPool1d:()=>Ij,maxPool2d:()=>Sj,maxPooling1d:()=>a_,maxPooling2d:()=>s_,maxPooling3d:()=>lj,maximum:()=>q6,minimum:()=>K6,multiply:()=>X6,permute:()=>V6,prelu:()=>I6,randomWidth:()=>Dj,reLU:()=>w6,repeatVector:()=>B6,rescaling:()=>Ej,reshape:()=>W6,resizing:()=>Aj,rnn:()=>yj,separableConv2d:()=>A6,simpleRNN:()=>cj,simpleRNNCell:()=>mj,softmax:()=>S6,spatialDropout1d:()=>P6,stackedRNNCells:()=>bj,thresholdedReLU:()=>N6,timeDistributed:()=>vj,upSampling2d:()=>D6,zeroPadding2d:()=>Q6});async function Fa(e){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];_e(r)}}function T2(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var dk;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(dk||(dk={}));var WG=125,Tl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},_2=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},VG=class extends Tl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=W(()=>Z(this.totals[r],P(a,n)));this.totals[r]=i,s?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:W(()=>{let r=P(ce(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Lt(t[n])}))}},C2=class extends Tl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},E2=class extends Tl{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Wv,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=WG),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=WU(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await Fa(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Fa(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Fa(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Fa(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Fa(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Fa(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Fa(e),await this.trainEnd(e))}};function $2(e,t){return e==null&&(e={}),e instanceof Tl?[e]:Array.isArray(e)&&e[0]instanceof Tl?e:et(e).map(n=>new E2(n,t))}var A2=(()=>{let e=class zr{constructor(){}static registerCallbackConstructor(n,r){w.assert(n>=0&&Number.isInteger(n),()=>`Verbosity level is expected to be an integer >= 0, but got ${n}`),zr.checkForDuplicate(r),zr.constructors[n]==null&&(zr.constructors[n]=[]),zr.constructors[n].push(r)}static checkForDuplicate(n){for(let r in zr.constructors)zr.constructors[+r].forEach(a=>{if(a===n)throw new V("Duplicate callback constructor.")})}static clear(){zr.constructors={}}static createCallbacks(n){let r=[];for(let a in zr.constructors){let s=+a;n>=s&&r.push(...zr.constructors[s])}return r.map(a=>new a)}};return e.constructors={},e})();function F2(e,t,n,r,a,s,i,o,l){let u=new C2,d=[new VG,...A2.createCallbacks(t)];e!=null&&d.push(...e),d.push(u);let h=new _2(d);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function _r(e,t={},n=!1){return Bp(e,ne.SerializationMap.getMap().classNameMap,t,"layer",n)}function bc(e,t){return W(()=>{e.dtype!=="float32"&&(e=oe(e,"float32"));let n=fe(Vp(e),t,!0),r=Un(n.shape,Pt()),a=Jt(ta(n,r));return ce(e,a)})}function Mo(e,t){return W(()=>wt(Vp(he(t,e)),-1))}function zm(e,t){return W(()=>wt($t(he(t,e)),-1))}function Uu(e,t){return W(()=>{let n=he(e,t),r=ln($t(e),Pt(),Number.MAX_VALUE),a=$t(ce(n,r));return P(100,wt(a,-1))})}function UG(e,t){return W(()=>{let n=ln(t,Pt(),Number.MAX_VALUE),r=Hn(Z(1,n)),a=ln(e,Pt(),Number.MAX_VALUE),s=Hn(Z(1,a));return wt(Vp(he(r,s)),-1)})}function GG(e,t){return W(()=>{let n=ta(0,he(1,P(e,t)));return wt(Vp(n),-1)})}function HG(e,t){return W(()=>{let n=ta(0,he(1,P(e,t)));return wt(n,-1)})}function jG(e,t){return W(()=>{let n=fe(P(e,t),-1),r=sr(P(he(1,e),t),-1);return ta(0,Z(1,he(r,n)))})}function qG(e,t){return W(()=>{let n=Math.log(2),r=he(t,e),a=he(Z(r,Fo(P(-2,r))),n);return wt(a,-1)})}function Bd(e,t,n=!1){return W(()=>{if(n)t=cs(t);else{let r=fe(t,t.shape.length-1,!0);t=ce(t,r)}return t=ln(t,Pt(),1-Pt()),mt(fe(P(oe(e,"float32"),Hn(t)),t.shape.length-1))})}function xc(e,t,n=!1){return W(()=>{let r=oe(Pu(QU(e)),"int32");t=ln(t,Pt(),1-Pt());let a=t.shape,s=B(vl(r,a[a.length-1]),a);return Bd(s,t,n)})}function KG(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let n=tt(t),r=mt($t(t));return Z(he(n,P(t,e)),$p(un(r)))})}function Bm(e,t){return W(()=>{let n;return n=ln(t,Pt(),1-Pt()),n=Hn(ce(n,he(1,n))),wt(KG(e,n),-1)})}function XG(e,t){return W(()=>{let n=ln(e,Pt(),1),r=ln(t,Pt(),1);return fe(P(e,Hn(ce(n,r))),-1)})}function ZG(e,t){return W(()=>{let n=Hn(Z(Pt(),t));return wt(he(t,P(e,n)),-1)})}function rw(e,t){return W(()=>{let n=bc(e,-1),r=bc(t,-1),a=P(n,r);return mt(fe(a,-1))})}var vc={meanSquaredError:Mo,meanAbsoluteError:zm,meanAbsolutePercentageError:Uu,meanSquaredLogarithmicError:UG,squaredHinge:GG,hinge:HG,categoricalHinge:jG,logcosh:qG,categoricalCrossentropy:Bd,sparseCategoricalCrossentropy:xc,binaryCrossentropy:Bm,kullbackLeiblerDivergence:XG,poisson:ZG,cosineProximity:rw};function qy(e){if(typeof e=="string"){if(e in vc)return vc[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function aw(e,t){return W(()=>{let n=P(.5,jn(t)),r=ga(wn(t,n),e.dtype);return wt(Gn(e,r),-1)})}function sw(e,t){return W(()=>ga(Gn(Js(e,-1),Js(t,-1)),"float32"))}function D2(e,t){return W(()=>oe(fe(gr(Gn(e,1),Gn(t,1))),"float32"))}function JG(e,t){return W(()=>oe(fe(gr(Gn(e,1),Gn(t,0))),"float32"))}function YG(e,t){return W(()=>oe(fe(gr(Gn(e,0),Gn(t,1))),"float32"))}function R2(e,t){return W(()=>{let n=D2(e,t),r=YG(e,t),a=Z(n,r);return oe(Zt(wn(a,0),ce(n,a),0),"float32")})}function QG(e,t){return W(()=>{let n=D2(e,t),r=JG(e,t),a=Z(n,r);return oe(Zt(wn(a,0),ce(n,a),0),"float32")})}function M2(e,t){return Bm(e,t)}function O2(e,t){return e.rank===t.rank&&(e=ms(e,[e.rank-1])),t=Js(t,-1),t.dtype!==e.dtype&&(t=oe(t,e.dtype)),oe(Gn(e,t),"float32")}function eH(e,t){return W(()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return ve(1).sub(n.div(r))})}var tH=Mo,nH=Mo,rH=zm,aH=zm,sH=Uu,iH=Uu,iw=Bd,oH=rw,L2=xc,wc={binaryAccuracy:aw,categoricalAccuracy:sw,precision:R2,categoricalCrossentropy:iw,sparseCategoricalCrossentropy:L2,mse:tH,MSE:nH,mae:rH,MAE:aH,mape:sH,MAPE:iH,cosine:oH};function lH(e){if(typeof e=="string"&&e in wc)return wc[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function zh(e){if(Ur(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(vc))if(vc[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(wc))if(wc[n]===e){t=n;break}return t!==void 0?t:e.name}}function uH(e){let t={Adagrad:()=>Fs.adagrad(.01),Adadelta:()=>Fs.adadelta(1,.95,Pt()),Adam:()=>Fs.adam(.001,.9,.999,Pt()),Adamax:()=>Fs.adamax(.002,.9,.999,Pt(),0),RMSProp:()=>Fs.rmsprop(.001,.9,0,Pt()),SGD:()=>Fs.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function pk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Eb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Eb(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Eb(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Eb(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function dH(e,t,n,r=console.log){let a=hH(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(d=>Math.floor(t*d)));let i;if(!a){s.push("Receives inputs"),i=[];for(let d in e.nodesByDepth)i.push(...e.nodesByDepth[d])}r("_".repeat(t)),kc(s,n,r),r("=".repeat(t));let o=e.layers;for(let d=0;d<o.length;++d)a?cH(o[d],n,r):mH(o[d],n,i,r),r((d===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=pH(e),u=fc(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function pH(e){let t;return e.collectedTrainableWeights!=null?t=fc(e.collectedTrainableWeights):t=fc(e.trainableWeights),t}function hH(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function kc(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function cH(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];kc(o,t,n)}function mH(e,t,n,r){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let p=0;p<h.inboundLayers.length;++p){let c=h.inboundLayers[p].name,m=h.nodeIndices[p],f=h.tensorIndices[p];i.push(`${c}[${m}][${f}]`)}let o=e.name,l=e.getClassName(),u=i.length===0?"":i[0],d=[`${o} (${l})`,s,a,e.countParams().toString(),u];kc(d,t,r);for(let h=1;h<i.length;++h)kc(["","","","",i[h]],t,r)}function P2(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Wd(e,t){if(e===null)return null;if(typeof e=="string")return Os(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];P2(t,a,s)?n.push(s):n.push(Wd(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=Os(r);n[s]=Wd(a,s)}}return n}}function $b(e,t){if(e==null)return null;if(typeof e=="string")return la(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];P2(t,a,s)?n.push(s):n.push($b(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=la(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=$b(a,r)}return n}}var ow="4.21.0",fH=e=>{let t=Object.keys(e);if(t.length===0)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},gH=class Br extends ze{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Om(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Va(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Va(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(I)}for(let b of this.inputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;Ur(v===0,"input layer has >1 nodes"),Ur(I===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let x=this.inputLayers[b];if(!(x instanceof Gp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let n={},r={},a={},s={},i={},o=[],l=(b,x,v,I,N,_)=>{(I==null||N==null||_==null)&&(I=b.sourceLayer,N=b.nodeIndex,_=b.tensorIndex);let E=I.inboundNodes[N];if(v.indexOf(E)!==-1)throw new Hr(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(x.indexOf(E)!==-1)return;this.containerNodes.add(Br.nodeKey(I,N)),I.id in i||(i[I.id]=Object.keys(i).length),v.indexOf(E)===-1&&v.push(E);let A=E.inboundLayers.length;for(let D=0;D<A;D++){let F=E.inputTensors[D],S=E.inboundLayers[D],M=E.nodeIndices[D],z=E.tensorIndices[D];l(F,x,v,S,M,z)}for(x.push(E);v.indexOf(E)>=0;)v.splice(v.indexOf(E),1);o.push(E)},u=[],d=[];for(let b of this.outputs)l(b,u,d);let h=o.slice().reverse();for(let b of h){r[b.id]=b,b.id in n||(n[b.id]=0);let x=n[b.id],v=a[b.outboundLayer.id]==null?0:a[b.outboundLayer.id];x=Math.max(x,v),a[b.outboundLayer.id]=x,s[b.outboundLayer.id]=b.outboundLayer,n[b.id]=x;for(let I=0;I<b.inboundLayers.length;I++){let N=b.inboundLayers[I],_=b.nodeIndices[I],E=N.inboundNodes[_],A=n[E.id]==null?0:n[E.id];n[E.id]=Math.max(x+1,A),r[E.id]=E}}let p={};for(let b in n){let x=n[b];x in p||(p[x]=[]),p[x].push(r[b])}let c={};for(let b in a){let x=a[b];x in c||(c[x]=[]),c[x].push(s[b])}let m=Object.keys(c).map(b=>parseInt(b,10)).sort(Oh);this.layers=[];for(let b of m){let x=c[b];x.sort((v,I)=>{let N=i[v.id],_=i[I.id];return N<_?-1:N>_?1:0});for(let v of x)v instanceof Br&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=c,m=Object.keys(p).map(b=>parseInt(b,10)).sort(Oh);let f=this.inputs.slice(),g=[];for(let b of m)for(let x of p[b]){let v=x.outboundLayer;if(v!=null){for(let I of x.inputTensors)if(f.indexOf(I)===-1)throw new Hr(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(let I of x.outputTensors)f.push(I);g.push(v.name)}}this.nodesByDepth=p;let y=this.layers.map(b=>b.name);for(let b of y){let x=y.filter(v=>v===b).length;if(x!==1)throw new Hr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){let r={},a=0,s=fH(t);s&&this.parseWeights(t);for(let o of this.layers)for(let[l,u]of o.weights.entries()){let d=s?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(r[d]!=null)throw new V(`Duplicate weight name: ${d}`);r[d]=u,a++}let i=[];for(let o in t){let l=o;if(r[o]==null){let u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(r[l]!=null)i.push([r[l],t[o]]);else if(n)throw new V(`Provided weight data has no target variable: ${o}`);delete r[l]}if(n){let o=[];for(let l in r)o.push(l);if(o.length>0)throw new V(`${o.length} of ${a} weights are not set: ${o}`)}ew(i)}parseWeights(t){for(let n in Object.keys(t)){let r=n.split("/"),a=["vars","layer_checkpoint_dependencies"],s=r.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");s!==n&&(t[s]=t[n],delete t[n])}}updatedConfig(){let t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${ow}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){let r=$b(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return W(()=>{t=et(t);let r=new ol;for(let a=0;a<this.inputs.length;++a)r.add(this.inputs[a],t[a]);return bd(this.outputs,r,n)})}computeMask(t,n){return W(()=>{t=et(t);let r;return n==null?r=ni(null,t.length):r=et(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let n=mc(t);if(n.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let o=0;o<n.length;o++){let l=this.inputLayers[o],u=n[o],d=l.name+"_0_0";r[d]=u}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Oh);if(a.length>1)for(let o of a){let l=this.nodesByDepth[o];for(let u of l){let d=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(d.id)!==-1)continue;let h=[];for(let f=0;f<u.inboundLayers.length;f++){let g=u.inboundLayers[f],y=u.nodeIndices[f],b=u.tensorIndices[f],x=`${g.name}_${y}_${b}`,v=r[x];h.push(v)}let p=d.computeOutputShape(_n(h)),c=mc(p),m=d.inboundNodes.indexOf(u);for(let f=0;f<c.length;f++){let g=`${d.name}_${m}_${f}`;r[g]=c[f]}}}let s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){let l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],d=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${d}`;i.push(h)}for(let o=0;o<i.length;o++){let l=i[o];Ur(l in r),s.push(r[l])}return _n(s)}runInternalGraph(t,n){n==null&&(n=ni(null,t.length));let r={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],d=t[l],h=n[l];r[u.id]=[d,h]}let a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Oh);for(let l of a){let u=this.nodesByDepth[l];for(let d of u){let h=d.outboundLayer,p=d.inputTensors,c=d.outputTensors,m=new Array;for(let f of p)f.id in r&&m.push(r[f.id]);if(m.length===p.length){let f={},g,y,b,x;if(d.callArgs!=null&&(f=d.callArgs),m.length===1){let[v,I]=m[0];f.mask==null&&(f.mask=I),b=et(h.call(v,f)),x=et(h.computeMask(v,I)),g=[v],y=[I]}else g=m.map(v=>v[0]),y=m.map(v=>v[1]),f.mask==null&&(f.mask=y),b=et(h.call(g,f)),x=et(h.computeMask(g,y));if(h.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<c.length;++v){let I=c[v],N=b[v],_=x[v];r[I.id]=[N,_]}}}}let s=[],i=[],o=[];for(let l of this.outputs){Ur(l.id in r,`Could not compute output ${l.name} : ${l.id}`);let[u,d]=r[l.id];o.push(u.shape),s.push(u),i.push(d)}return[s,i,o]}buildNodeConversionMap(t){let n={},r;for(let a of this.layers){r=a instanceof Br?1:0;for(let s=0;s<a.inboundNodes.length;s++){let i=Br.nodeKey(a,s);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null)return this.findLayer(n);if(t==null)throw new V("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let r of this.layers)if(r.name===t)return r;throw new V(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return W(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=Br.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let i of this.layers){let o=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){let p=i.inboundNodes[h],c=Br.nodeKey(i,h),m={};if(this.containerNodes.has(c)){if(p.callArgs)try{JSON.stringify(p.callArgs),m=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(p.inboundLayers.length>0){let f=[];for(let g=0;g<p.inboundLayers.length;g++){let y=p.inboundLayers[g],b=p.nodeIndices[g],x=p.tensorIndices[g],v=Br.nodeKey(y,b),I=n[v];I==null&&(I=0),f.push([y.name,I,x,m])}u.push(f)}}}let d={};d.name=i.name,d.className=o,d.config=l,d.inboundNodes=u,r.push(d)}t.layers=r;let a=[];for(let i=0;i<this.inputLayers.length;i++){let o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Br.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=n[u];d==null&&(d=0);let h=this.inputLayersTensorIndices[i];a.push([o.name,d,h])}t.inputLayers=a;let s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Br.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=n[u];d==null&&(d=0);let h=this.outputLayersTensorIndices[i];s.push([o.name,d,h])}return t.outputLayers=s,t}static fromConfig(t,n,r={},a=!1){let s={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){let b=[],x;for(let v of y){let I=v[0],N=v[1],_=v[2];if(x=v[3]==null?{}:v[3],!(I in s)){o(g,y);return}let E=s[I];if(E.inboundNodes.length<=N){o(g,y);return}let A=E.inboundNodes[N];b.push(A.outputTensors[_])}b.length>0&&g.apply(_n(b),x)}function u(g){let y=g.name,b=_r(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(a),s[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}let d=n.name,h=n.layers;for(let g of h)u(g);for(;!BU(i);)for(let g of h){let y=s[g.name];if(y.name in i){let b=i[y.name];delete i[y.name];for(let x of b)l(y,x)}}let p=[],c=[],m=n.inputLayers;for(let g of m){let y=g[0],b=g[1],x=g[2];Ur(y in s);let v=s[y].inboundNodes[b].outputTensors;p.push(v[x])}let f=n.outputLayers;for(let g of f){let y=g[0],b=g[1],x=g[2];Ur(y in s);let v=s[y].inboundNodes[b].outputTensors;c.push(v[x])}return new t({inputs:p,outputs:c,name:d})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function yH(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function z2(e,t){return yH(e,t,"classWeight")}async function B2(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=W(()=>{if(e.shape.length===1)return qr(e);if(e.shape.length===2){if(e.shape[1]>1)return Js(e,1);if(e.shape[1]===1)return B(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());_e(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Qe(i,"float32")}else return null}function bH(e,t){return P(e,t)}var xH=32;function W2(e,t){let n,r,a=t;n=a.xs,r=a.ys,w.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=hk("input",e.inputNames,n),i=hk("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function hk(e,t,n){if(n instanceof De)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function vH(e){if(e.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function wH(e,t,n){let r=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(ck(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=vH(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;a?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let d=$2(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:p,history:c}=F2(d,h,n.epochs,null,null,kH(t,n),null,a,u);p.setModel(e),e.history=c,await p.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await p.onEpochBegin(m);let y=0,b=0;for(r||(f=await t.iterator());!r||y<n.batchesPerEpoch;){let x=await f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:I}=W2(e,x.value),N={};N.batch=b,N.size=v[0].shape[0],await p.onBatchBegin(b,N);let _=[];if(n.classWeight!=null){let D=z2(n.classWeight,e.outputNames);for(let F=0;F<D.length;++F)_.push(await B2(I[F],null,D[F]))}let E=v.concat(I).concat(_),A=o(E);_e(E);for(let D=0;D<l.length;++D){let F=l[D],S=A[D];N[F]=S,Lt(S)}await p.onBatchEnd(b,N),T2(N),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let v;ck(n.validationData)?v=et(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=et(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?xH:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=v[I]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,g),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function kH(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function ck(e){return typeof e.iterator=="function"}function IH(e){return typeof e.next=="function"}async function SH(e,t,n){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new Pe("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=IH(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let u=await i.next();if(s=W(()=>{if(u.value){let{xs:d,ys:h}=W2(e,u.value),p=d.concat(h),c=W(()=>a(p));if(_e(p),l===0)for(let f=0;f<c.length;++f)s.push(ve(0));let m=p[0].shape[0];for(let f=0;f<c.length;++f){let g=c[f],y=s[f];s[f]=W(()=>Z(s[f],P(m,g))),l>0&&_e(y)}_e(c),o+=m,++l}return s}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let d=s[u];s[u]=ce(s[u],o),_e(d)}return _n(s)}function Ky(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function hd(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Us(r,t,n-t)):Us(e,t,n-t)}function Ab(e,t){return W(()=>e==null?null:Array.isArray(e)?e.map(n=>Ab(n,t)):l2(e,t.dtype==="int32"?t:oe(t,"int32")))}function Xy(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function V2(e){let t=[];e instanceof De&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(Wp(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function kr(e,t){if(e==null)return;let n=[];if(t instanceof De)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof De)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function NH(e){return e instanceof De}function Fb(e){return Array.isArray(e)}function mk(e){return!NH(e)&&!Fb(e)}function fk(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(Fb(e)&&e.length>0)i=!0;else if(mk(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(mk(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(Fb(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=V2(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=n[i][l];if(d!=null&&d>=0&&u!==d)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function TH(e,t,n){let r=Va(e.map(s=>s.shape[0]));r.sort();let a=Va(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!w.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function _H(e,t,n){let r=[Mo,Bm,Bd];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===Bd&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let d=0;d<l.length;++d){let h=l[d],p=u[d];if(p!=null&&h!==p)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gk(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=n[i][l];if(d!=null&&d!==u)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function CH(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var EH="layers-model",ca=class extends gH{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");dH(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=uH(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ka))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(qy(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>qy(s))}else{let s=qy(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vs("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=CH(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Vs("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",u,d,h;for(let p of o){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===Bm?["accuracy","acc"].indexOf(p)!==-1?d=aw:["crossentropy","ce"].indexOf(p)!==-1&&(d=M2):this.lossFunctions[s]===xc?["accuracy","acc"].indexOf(p)!==-1?d=O2:["crossentropy","ce"].indexOf(p)!==-1&&(d=L2):["accuracy","acc"].indexOf(p)!==-1?d=sw:["crossentropy","ce"].indexOf(p)!==-1&&(d=iw);let f;["accuracy","acc"].indexOf(p)!==-1?f="acc":["crossentropy","ce"].indexOf(p)!==-1&&(f="ce"),h=d,u=l+f}else h=lH(p),u=l+zh(p);let c;Vs(u,()=>{c=h}),a(s,u,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Ky(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return _n(o)}finally{kr(a[0],e),kr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),SH(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new ol;if(e instanceof De&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=bd(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ni(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let r=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let a=Xy(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let o=a[i][0],l=a[i][1],u=hd(e,o,l),d=[];if(Array.isArray(u))for(let p=0;p<u.length;++p)d.push({key:this.inputs[p],value:u[p]});else d.push({key:this.inputs[0],value:u});let h=new ol(d);return bd(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return _n(s.map(i=>ot(i,0)))})}predict(e,t={}){let n=V2(e);gk(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Ky(r),this.predictLoop(n,r)}finally{kr(n,e)}}predictOnBatch(e){gk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new Hr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===xc?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=fk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fk(t,this.feedOutputNames,a,!1,"target"),TH(e,t,null),_H(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let u=z2(r,this.outputNames);l=[];for(let d=0;d<u.length;++d)l.push(await B2(o[d],null,u[d]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return W(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Pe("Verbose mode is not implemented yet.");if(a!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let o=Xy(s,n),l=Qe(Er(0,s));for(let u=0;u<o.length;++u){let d=o[u][0],h=o[u][1],p=Us(l,d,h-d),c=Ab(t,p),m=e(c);if(u===0)for(let f=0;f<m.length;++f)i.push(ve(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=Z(i[f],P(h-d,g))}}for(let u=0;u<i.length;++u)i[u]=ce(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(tk(e,r)>1){let s=tk(e.slice(0,n),r);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let l=[];for(let p=0;p<this.inputs.length;++p)l.push({key:this.inputs[p],value:n[p]});let u=new ol(l),d=bd(this.outputs,u,{training:!0}),h;for(let p=0;p<this.lossFunctions.length;++p){let c=this.lossFunctions[p],m=c(r[p],d[p]);a[p]!=null&&(m=bH(m,a[p]));let f=wt(m);t.push(f),p===0?h=m:h=Z(h,m)}for(let p=0;p<this.metricsTensors.length;++p){let c;if(this.outputs.length>1&&p<this.outputs.length)c=t[p];else{let m=this.metricsTensors[p][0],f=this.metricsTensors[p][1];c=wt(m(r[f],d[f]))}Lt(c),s.push(c)}return h=wt(h),this.calculateLosses().forEach(p=>{h=Z(h,p)}),h},o=this.collectedTrainableWeights.map(l=>l.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new ol(s),o=bd(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],d=wt(u(a[l],o[l]));l===0?n=d:n=Z(n,d),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],d=this.metricsTensors[l][1],h=wt(u(a[d],o[d]));t.push(h)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,a,s,i,o,l,u,d,h;try{let p=n.batchSize==null?32:n.batchSize;Ky(p);let c=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,p);r=c[0],a=c[1],h=c[2];let m=!1,f;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)o=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let N=await this.standardizeUserData(o,l,null,null,!0,p);u=N[0],d=N[1],f=u.concat(d)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;let N=Math.floor(r[0].shape[0]*(1-n.validationSplit)),_=r[0].shape[0];u=hd(r,N,_),s=r,r=hd(r,0,N),d=hd(a,N,_),i=a,a=hd(a,0,N),f=u.concat(d)}else n.validationSteps!=null&&(m=!0);let g=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();let y=this.makeTrainFunction(),b=this.getDedupedMetricsNames(),x,v;m?(this.makeTestFunction(),x=this.testFunction,v=b.slice().concat(b.map(N=>"val_"+N))):(x=null,f=[],v=b.slice());let I=$2(n.callbacks,n.yieldEvery);return await this.fitLoop(y,g,b,p,n.epochs,n.verbose,I,x,f,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,kr(r,e),kr(a,t),kr(s,e),kr(i,t),kr(u,o),kr(d,l),h!=null&&_e(h)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,d,h,p,c){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(o!=null&&l!=null&&(m=!0),c!=null&&(m=!0,p==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,p,"steps_per_epoch"),g;f!=null&&(g=Er(0,f)),s==null&&(s=1);let{callbackList:y,history:b}=F2(i,s,a,h,f,p,r,m,d);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<a;++x){await y.onEpochBegin(x);let v={};if(p!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Pe("batch shuffling is not implemneted yet");u&&w.shuffle(g);let I=Qe(g),N=Xy(f,r);for(let _=0;_<N.length;++_){let E={};if(await y.onBatchBegin(_,E),W(()=>{let A=N[_][0],D=N[_][1],F=Us(I,A,D-A);E.batch=_,E.size=D-A;let S=Ab(t,F),M=e(S);for(let z=0;z<n.length;++z){let U=n[z],H=M[z];E[U]=H,Lt(H)}if(_===N.length-1&&m){let z=this.testLoop(o,l,r);for(let U=0;U<n.length;++U){let H=n[U],q=z[U];Lt(q),v["val_"+H]=q}}}),await y.onBatchEnd(_,E),T2(E),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,v),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return wH(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return _e(s),kr(n[0],e),kr(n[1],t),_n(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=hc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-hc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=la(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>la(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=la(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[la(zh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>la(zh(e)));{let e={};for(let t in this.metrics)e[t]=la(zh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Wd(e.optimizer_config),n=_r(t),r;if(typeof e.loss=="string")r=Os(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>Os(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=Os(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>Os(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=Os(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if(typeof e=="string"){let a=rn.getSaveHandlers(e);if(a.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new V(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await rn.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:EH,generatedBy:`TensorFlow.js tfjs-layers v${ow}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){r.trainingConfig=this.getTrainingConfig();let a="optimizer",{data:s,specs:i}=await rn.encodeWeights(await this.optimizer.getWeights(),a);n.specs.push(...i),n.data=rn.concatenateArrayBuffers([n.data,s])}return this.userDefinedMetadata!=null&&(pk(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){pk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ca.className="Model";ne.registerClass(ca);var $H=(()=>{let e=class extends ca{};return e.className="Functional",e})();ne.registerClass($H);async function AH(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=Wd(n),a=_r(r,t);if(e.weightsManifest!=null){let s=await rn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),_e(s)}return a}async function FH(e,t){if(t==null&&(t={}),typeof e=="string"){let n=rn.getLoadHandlers(e,t);if(n.length===0)n.push(rn.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return DH(e,void 0,t)}async function DH(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=_r(Wd(a),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:d}=RH(r.weightData,r.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&d.length>0&&await o.optimizer.setWeights(d),_e(u),_e(d.map(h=>h.tensor))}return o}function RH(e,t){let n=rn.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var lw=(()=>{let e=class Db extends ca{constructor(n){if(super({inputs:[],outputs:[]}),n=n||{},this.trainable=!0,this.built=!1,this.name=n.name!=null?n.name:Om("sequential_"),n.layers!=null)for(let r of n.layers)this.add(r)}checkShape(n){if(n.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new V(`Negative dimension size caused by adding layer ${n.name} with input shape [${n.inboundNodes[0].inputTensors[0].shape}]`)}add(n){let r=n instanceof Db||n instanceof ca,a;if(r){if(a=n,a.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(n.inboundNodes.length===0){if(n.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=b2({batchShape:n.batchInputShape,dtype:n.dtype,name:n.name+"_input"});n.apply(s)}if(r)this.outputs=a.outputs,this.inputs=a.inputs;else{if(n.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${n.name} which has ${n.inboundNodes.length} pre-existing inbound connections.`);if(n.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(n),this.outputs=[n.inboundNodes[0].outputTensors[0]],this.inputs=y2(this.outputs[0])}this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ni(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=n.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(n),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(n),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let n=this.layers.length-1;this.layers[n].outboundNodes=[],this.outputs=[this.layers[n].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(n,r){return this.model==null&&this.build(),this.model.call(n,r)}build(n){if(Ke(n),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ca({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(n,r,a=console.log){this.built||this.build(),super.summary(n,r,a)}setWeights(n){this.model==null&&this.build(),this.model.setWeights(n)}evaluate(n,r,a={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluate(n,r,a)}async evaluateDataset(n,r){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluateDataset(n,r)}predict(n,r={}){return this.model==null&&this.build(),this.model.predict(n,r)}predictOnBatch(n){return this.model==null&&this.build(),this.model.predictOnBatch(n)}compile(n){this.build(),this.model.compile(n),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(n){this.model.optimizer=n}async fit(n,r,a={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fit(n,r,a)}async fitDataset(n,r){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fitDataset(n,r)}async trainOnBatch(n,r){return this.model.trainOnBatch(n,r)}static fromConfig(n,r,a={},s=!1){let i,o={};if(r instanceof Array){if(r[0].className==null||r[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");i=r}else w.assert(r.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=r.layers,delete r.layers,o=r;let l=new n(o);if(!(l instanceof Db))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(let u of i){let d=_r(u,void 0,s);s&&d.setFastWeightInitDuringBuild(!0),l.add(d)}return l}set stopTraining(n){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=n}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let n=[];for(let r of this.layers){let a={};a.className=r.getClassName(),a.config=r.getConfig(),n.push(a)}return{name:this.name,layers:n}}};return e.className="Sequential",e})();ne.registerClass(lw);function MH(e){return new ca(e)}function OH(e){return new lw(e)}function U2(e){return b2(e)}function LH(e,t){A2.registerCallbackConstructor(e,t)}var dn=class extends ne.Serializable{getConfig(){return{}}},G2=class extends dn{apply(e,t=1){return tG(e,t)}};G2.className="elu";ne.registerClass(G2);var PH=(()=>{let e=class extends dn{apply(t){return xm(t)}};return e.className="selu",e})();ne.registerClass(PH);var zH=(()=>{let e=class extends dn{apply(t){return tt(t)}};return e.className="relu",e})();ne.registerClass(zH);var BH=(()=>{let e=class extends dn{apply(t){return W(()=>Za(6,tt(t)))}};return e.className="relu6",e})();ne.registerClass(BH);var WH=(()=>{let e=class extends dn{apply(t){return t}};return e.className="linear",e})();ne.registerClass(WH);var VH=(()=>{let e=class extends dn{apply(t){return fr(t)}};return e.className="sigmoid",e})();ne.registerClass(VH);var UH=(()=>{let e=class extends dn{apply(t){return rG(t)}};return e.className="hardSigmoid",e})();ne.registerClass(UH);var GH=(()=>{let e=class extends dn{apply(t){return Fo(t)}};return e.className="softplus",e})();ne.registerClass(GH);var HH=(()=>{let e=class extends dn{apply(t){return nG(t)}};return e.className="softsign",e})();ne.registerClass(HH);var jH=(()=>{let e=class extends dn{apply(t){return Xa(t)}};return e.className="tanh",e})();ne.registerClass(jH);var H2=(()=>{let e=class extends dn{apply(t,n=-1){return cs(t,n)}};return e.className="softmax",e})();ne.registerClass(H2);var qH=(()=>{let e=class extends dn{apply(t,n=-1){return hm(t,n)}};return e.className="logSoftmax",e})();ne.registerClass(qH);var KH=(()=>{let e=class extends dn{apply(t){return W(()=>W(()=>{let n=Math.sqrt(2),r=P(.5,Z(1,um(ce(t,n))));return P(t,r)}))}};return e.className="gelu",e})();ne.registerClass(KH);var XH=(()=>{let e=class extends dn{apply(t){return W(()=>P(.5,P(t,Z(1,Xa(P(Jt(ce(2,Math.PI)),Z(t,P(.044715,Jr(t,3)))))))))}};return e.className="gelu_new",e})();ne.registerClass(XH);var ZH=(()=>{let e=class extends dn{apply(t){return W(()=>P(t,Xa(Fo(t))))}};return e.className="mish",e})();ne.registerClass(ZH);var JH=(()=>{let e=class extends dn{apply(t,n=1){return W(()=>P(fr(P(t,n)),t))}};return e.className="swish",e})();ne.registerClass(JH);function Qa(e){return e.getClassName()}function Zy(e,t={}){return Bp(e,ne.SerializationMap.getMap().classNameMap,t,"activation")}function es(e){if(e==null){let t={};return t.className="linear",t.config={},Zy(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Zy(t)}else return e instanceof dn?e:Zy(e)}function uw(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var j2=class extends ne.Serializable{},jp=class extends j2{constructor(e){super(),uw(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=kt([1]);return this.hasL1&&(t=Z(t,fe(P(this.l1,$t(e))))),this.hasL2&&(t=Z(t,fe(P(this.l2,Vp(e))))),B(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};jp.className="L1L2";ne.registerClass(jp);function YH(e){return uw(e),new jp({l1:e!=null?e.l1:null,l2:0})}function QH(e){return uw(e),new jp({l2:e!=null?e.l2:null,l1:0})}var yk={l1l2:"L1L2"};function pt(e){return Uv(e)}function bk(e,t={}){return Bp(e,ne.SerializationMap.getMap().classNameMap,t,"regularizer")}function xt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in yk?yk[e]:e,config:{}};return bk(t)}else return e instanceof j2?e:bk(e)}var q2=(()=>{let e=class extends ze{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=Te(t);let r=tt(t);return this.maxValue!=null&&(r=ln(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ReLU",e})();ne.registerClass(q2);var K2=(()=>{let e=class extends ze{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let r=Te(t);return Ep(r,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}};return e.className="LeakyReLU",e})();ne.registerClass(K2);var X2=(()=>{let e=class extends ze{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=bt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=xt(t.alphaRegularizer),this.alphaConstraint=Wt(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Ke(t);let n=t.slice(1);if(this.sharedAxes!=null)for(let a of this.sharedAxes)n[a-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)r[a]=t[a];this.inputSpec=[new At({ndim:t.length,axes:r})],this.built=!0}call(t,n){return t=Te(t),Mp(t,this.alpha.read())}getConfig(){let t={alphaInitializer:It(this.alphaInitializer),alphaRegularizer:pt(this.alphaRegularizer),alphaConstraint:Bt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}};return e.className="PReLU",e})();ne.registerClass(X2);var Z2=(()=>{let e=class extends ze{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let r=Te(t);return Ou(r)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ELU",e})();ne.registerClass(Z2);var J2=(()=>{let e=class extends ze{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){let r=Te(t);return P(r,oe(wn(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ThresholdedReLU",e})();ne.registerClass(J2);var Y2=(()=>{let e=class extends ze{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new H2().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){return W(()=>{let r=Te(t),a=n.mask;if(a!=null){let s=P(he(Cn(r.shape),oe(a,r.dtype)),ve(-1e9));r=Z(r,s)}return this.axis instanceof Array?this.axis.length>1?un(he(r,Ap(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Softmax",e})();ne.registerClass(Y2);function pl(e,t,n){if(typeof e=="number")return ni(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!JU(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Cr(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function Gr(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Ya([n-t,0]);else if(r==="same")e=e*t;else throw new V(`Unsupport padding mode: ${r}.`);return e}function dw(e,t){return W(()=>(Tt(t),t==="channelsFirst"?Me(e,[0,2,3,1]):e))}function Q2(e,t){return W(()=>(Tt(t),t==="channelsFirst"?Me(e,[0,2,3,4,1]):e))}function e6(e,t,n,r=1,a="valid",s,i=1){return W(()=>{if(s==null&&(s=$r()),Tt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(s==="channelsFirst"&&(e=Me(e,[0,2,1])),a==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=sm(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Rr(o,n)),o})}function xk(e,t,n,r=[1,1],a="valid",s,i,o=null){return W(()=>{if(s==null&&(s=$r()),Tt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=dw(e,s);if(a==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sl.conv2d({x:l,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Me(l,[0,3,1,2])),l})}function t6(e,t,n,r=[1,1,1],a="valid",s,i){return W(()=>{if(s==null&&(s=$r()),Tt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Q2(e,s);if(a==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=qx(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Rr(o,n)),s==="channelsFirst"&&(o=Me(o,[0,4,1,2,3])),o})}var eT=class tT extends ze{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tT.verifyArgs(n),this.rank=t,Xt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pl(n.kernelSize,t,"kernelSize"),this.strides=pl(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,ur(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Tt(this.dataFormat),this.activation=es(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=bt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Wt(n.biasConstraint),this.biasRegularizer=xt(n.biasRegularizer),this.activityRegularizer=xt(n.activityRegularizer),this.dilationRate=pl(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ur("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Gv(t.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qa(this.activation),useBias:this.useBias,biasInitializer:It(this.biasInitializer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),biasConstraint:Bt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}},Wm=class nT extends eT{constructor(t,n){super(t,n),this.kernel=null,nT.verifyArgs(n),this.filters=n.filters,Xt(this.filters,"filters"),this.kernelInitializer=bt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Wt(n.kernelConstraint),this.kernelRegularizer=xt(n.kernelRegularizer)}build(t){t=Ke(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[n]}`);let r=t[n],a=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return W(()=>{t=Te(t);let r,a=this.bias==null?null:this.bias.read(),s=n2(this.activation.getClassName());if(s!=null&&this.rank===2)r=xk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)r=e6(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=xk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=t6(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Ke(t);let n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<r.length;++s){let i=Cr(r[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);n.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){let t={filters:this.filters,kernelInitializer:It(this.kernelInitializer),kernelRegularizer:pt(this.kernelRegularizer),kernelConstraint:Bt(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Vm=class rT extends Wm{constructor(t){super(2,t),rT.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Gv(t.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Vm.className="Conv2D";ne.registerClass(Vm);var pw=(()=>{let e=class aT extends Wm{constructor(n){super(3,n),aT.verifyArgs(n)}getConfig(){let n=super.getConfig();return delete n.rank,n}static verifyArgs(n){if(typeof n.kernelSize!="number"&&!(Array.isArray(n.kernelSize)&&(n.kernelSize.length===1||n.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(n.kernelSize)}.`)}};return e.className="Conv3D",e})();ne.registerClass(pw);var sT=(()=>{let e=class extends Vm{constructor(t){if(super(t),this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ke(t),t.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let r=t[n],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{let r=Te(t);if(r.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let a=r.shape,s=a[0],i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);let l=a[i],u=a[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.strides[0],c=this.strides[1],m=Gr(l,p,d,this.padding),f=Gr(u,c,h,this.padding),g=[s,m,f,this.filters];this.dataFormat!=="channelsLast"&&(r=Me(r,[0,2,3,1]));let y=im(r,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Me(y,[0,3,1,2])),this.bias!=null&&(y=Rr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=Ke(t);let n=t.slice(),r,a,s;this.dataFormat==="channelsFirst"?(r=1,a=2,s=3):(r=3,a=1,s=2);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[r]=this.filters,n[a]=Gr(n[a],l,i,this.padding),n[s]=Gr(n[s],u,o,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};return e.className="Conv2DTranspose",e})();ne.registerClass(sT);var iT=(()=>{let e=class extends pw{constructor(t){if(super(t),this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ke(t),t.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let r=t[n],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{let r=Te(t);if(r.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let a=r.shape,s=a[0],i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);let u=a[l],d=a[i],h=a[o],p=this.kernelSize[0],c=this.kernelSize[1],m=this.kernelSize[2],f=this.strides[0],g=this.strides[1],y=this.strides[2],b=Gr(u,f,p,this.padding),x=Gr(d,g,c,this.padding),v=Gr(h,y,m,this.padding),I=[s,b,x,v,this.filters];this.dataFormat!=="channelsLast"&&(r=Me(r,[0,2,3,4,1]));let N=Kx(r,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=Me(N,[0,4,1,2,3])),this.bias!==null&&(N=Rr(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(t){t=Ke(t);let n=t.slice(),r,a,s,i;this.dataFormat==="channelsFirst"?(r=1,a=2,s=3,i=4):(r=4,a=1,s=2,i=3);let o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],d=this.strides[0],h=this.strides[1],p=this.strides[2];return n[r]=this.filters,n[a]=Gr(n[a],d,o,this.padding),n[s]=Gr(n[s],h,l,this.padding),n[i]=Gr(n[i],p,u,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};return e.className="Conv3DTranspose",e})();ne.registerClass(iT);var n6=(()=>{let e=class extends Wm{constructor(t,n){if(super(t,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=bt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=xt(n.depthwiseRegularizer),this.depthwiseConstraint=Wt(n.depthwiseConstraint),this.pointwiseInitializer=bt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=xt(n.pointwiseRegularizer),this.pointwiseConstraint=Wt(n.pointwiseConstraint)}build(t){if(t=Ke(t),t.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);let r=t[n],a=this.kernelSize.concat([r,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(r*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{t=Te(t);let r;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Me(t,[0,2,3,1])),r=Bu(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Rr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Me(r,[0,3,1,2])),r})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=It(this.depthwiseInitializer),t.pointwiseInitializer=It(this.pointwiseInitializer),t.depthwiseRegularizer=pt(this.depthwiseRegularizer),t.pointwiseRegularizer=pt(this.pointwiseRegularizer),t.depthwiseConstraint=Bt(this.depthwiseConstraint),t.pointwiseConstraint=Bt(this.pointwiseConstraint),t}};return e.className="SeparableConv",e})(),oT=(()=>{let e=class extends n6{constructor(t){super(2,t)}};return e.className="SeparableConv2D",e})();ne.registerClass(oT);var lT=(()=>{let e=class uT extends Wm{constructor(n){super(1,n),uT.verifyArgs(n),this.inputSpec=[{ndim:3}]}getConfig(){let n=super.getConfig();return delete n.rank,delete n.dataFormat,n}static verifyArgs(n){if(typeof n.kernelSize!="number"&&!Gv(n.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(n.kernelSize)}.`)}};return e.className="Conv1D",e})();ne.registerClass(lT);var dT=(()=>{let e=class extends ze{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return W(()=>{if(t=Te(t),this.dataFormat==="channelsLast"){let r=Ph(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ph(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let r=Ph(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ph(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Cropping2D",e})();ne.registerClass(dT);var pT=(()=>{let e=class extends ze{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Tt(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,KU(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let n=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,r]}else{let n=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],n,r,t[3]]}}call(t,n){return W(()=>{let r=Te(t),a=r.shape;if(this.dataFormat==="channelsFirst"){r=Me(r,[0,2,3,1]);let s=this.size[0]*a[2],i=this.size[1]*a[3],o=this.interpolation==="nearest"?tr.resizeNearestNeighbor(r,[s,i]):tr.resizeBilinear(r,[s,i]);return Me(o,[0,3,1,2])}else{let s=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?tr.resizeNearestNeighbor(r,[s,i]):tr.resizeBilinear(r,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}};return e.className="UpSampling2D",e})();ne.registerClass(pT);function r6(e,t,n=[1,1],r="valid",a,s){return W(()=>{a==null&&(a=$r()),Tt(a);let i=dw(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ao(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=Me(i,[0,3,1,2])),i})}var hT=(()=>{let e=class extends eT{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=bt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Wt(t.depthwiseConstraint),this.depthwiseRegularizer=xt(t.depthwiseRegularizer)}build(t){if(t=Ke(t),t.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);let r=t[n],a=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return W(()=>{t=Te(t);let r=r6(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Rr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Ke(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Cr(n,this.kernelSize[0],this.padding,this.strides[0]),i=Cr(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,s,i]:[t[0],s,i,a]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=It(this.depthwiseInitializer),t.depthwiseRegularizer=pt(this.depthwiseRegularizer),t.depthwiseConstraint=Bt(this.depthwiseRegularizer),t}};return e.className="DepthwiseConv2D",e})();ne.registerClass(hT);function cT(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function mT(e,t,n,r=!1,a,s,i=!1,o=!1){return W(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Er(2,l));if(t=Me(t,u),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=oe(oe(a,"bool"),"float32"),a.rank===l-1&&(a=Kt(a,-1)),a=Me(a,u)),r&&(t=lr(t,0),a!=null&&(a=lr(a,0)));let d=[],h,p=n,c=t.shape[0],m=Nt(t),f;a!=null&&(f=Nt(a));for(let y=0;y<c;++y){let b=m[y],x=W(()=>e(b,p));if(a==null)h=x[0],p=x[1];else{let v=W(()=>{let I=f[y],N=he(jn(I),I),_=Z(P(x[0],I),P(p[0],N)),E=p.map((A,D)=>Z(P(x[1][D],I),P(A,N)));return{output:_,newStates:E}});h=v.output,p=v.newStates}o&&d.push(h)}let g;return o&&(g=Dt(d,1)),[h,g,p]})}var fs=(()=>{let e=class fT extends ze{constructor(n){super(n);let r;if(n.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(n.cell)?r=new cw({cells:n.cell}):r=n.cell,r.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=r,this.returnSequences=n.returnSequences==null?!1:n.returnSequences,this.returnState=n.returnState==null?!1:n.returnState,this.goBackwards=n.goBackwards==null?!1:n.goBackwards,this._stateful=n.stateful==null?!1:n.stateful,this.unroll=n.unroll==null?!1:n.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let n=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Er(0,n).map(r=>null)}else return this.states_}setStates(n){this.states_=n}computeOutputShape(n){_b(n)&&(n=n[0]),n=n;let r=this.cell.stateSize;Array.isArray(r)||(r=[r]);let a=r[0],s;if(this.returnSequences?s=[n[0],n[1],a]:s=[n[0],a],this.returnState){let i=[];for(let o of r)i.push([n[0],o]);return[s].concat(i)}else return s}computeMask(n,r){return W(()=>{Array.isArray(r)&&(r=r[0]);let a=this.returnSequences?r:null;if(this.returnState){let s=this.states.map(i=>null);return[a].concat(s)}else return a})}get states(){if(this.states_==null){let n=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,r=[];for(let a=0;a<n;++a)r.push(null);return r}else return this.states_}set states(n){this.states_=n}build(n){if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");_b(n)&&(n=n[0]),n=n;let r=this.stateful?n[0]:null,a=n.slice(2);this.inputSpec[0]=new At({shape:[r,null,...a]});let s=[n[0]].concat(n.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new At({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(n,r=!1){W(()=>{if(!this.stateful)throw new Ra("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape[0];if(a==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>kt([a,s])):this.states_=[kt([a,this.cell.stateSize])];else if(n==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>kt([a,s])):this.states_[0]=kt([a,this.cell.stateSize]);else{if(Array.isArray(n)||(n=[n]),n.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${n.length} state value(s). Input received: ${n}`);r===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let s=0;s<this.states_.length;++s){let i=n[s],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,l=[a,o];if(!w.arraysEqual(i.shape,l))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Lt(s.clone()))})}apply(n,r){let a=r==null?null:r.initialState,s=r==null?null:r.constants;r==null&&(r={});let i=cT(n,a,s,this.numConstants);n=i.inputs,a=i.initialState,s=i.constants;let o=[],l=[];if(a!=null){r.initialState=a,o=o.concat(a),this.stateSpec=[];for(let u of a)this.stateSpec.push(new At({shape:u.shape}));l=l.concat(this.stateSpec)}if(s!=null&&(r.constants=s,o=o.concat(s),this.numConstants=s.length),o[0]instanceof Ar){let u=[n].concat(o),d=this.inputSpec.concat(l),h=this.inputSpec;this.inputSpec=d;let p=super.apply(u,r);return this.inputSpec=h,p}else return super.apply(n,r)}call(n,r){return W(()=>{let a=r==null?null:r.mask,s=r==null?null:r.training,i=r==null?null:r.initialState;n=Te(n),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(n));let o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new V(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let l={training:s},u=mT((m,f)=>{let g=this.cell.call([m].concat(f),l);return[g[0],g.slice(1)]},n,i,this.goBackwards,a,null,this.unroll,this.returnSequences),d=u[0],h=u[1],p=u[2];this.stateful&&this.resetStates(p,s);let c=this.returnSequences?h:d;return this.returnState?[c].concat(p):c})}getInitialState(n){return W(()=>{let r=kt(n.shape);return r=fe(r,[1,2]),r=Wp(r),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?Nb(r,[1,a]):r):this.cell.stateSize>1?[Nb(r,[1,this.cell.stateSize])]:[r]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(n){super.setFastWeightInitDuringBuild(n),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(n)}getConfig(){let n=super.getConfig(),r={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(r.numConstants=this.numConstants);let a=this.cell.getConfig();return this.getClassName()===fT.className&&(r.cell={className:this.cell.getClassName(),config:a}),Object.assign(Object.assign(Object.assign({},a),n),r)}static fromConfig(n,r,a={}){let s=r.cell,i=_r(s,a);return new n(Object.assign(r,{cell:i}))}};return e.className="RNN",e})();ne.registerClass(fs);var qp=class extends ze{},Um=class extends qp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xt(this.units,"units"),this.activation=es(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=xt(e.kernelRegularizer),this.recurrentRegularizer=xt(e.recurrentRegularizer),this.biasRegularizer=xt(e.biasRegularizer),this.kernelConstraint=Wt(e.kernelConstraint),this.recurrentConstraint=Wt(e.recurrentConstraint),this.biasConstraint=Wt(e.biasConstraint),this.dropout=Nl([1,Ya([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Nl([1,Ya([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ts({ones:()=>jn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ts({ones:()=>jn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Xr(P(e,s),this.kernel.read()):a=Xr(e,this.kernel.read()),this.bias!=null&&(a=Rr(a,this.bias.read())),i!=null&&(n=P(n,i));let o=Z(a,Xr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Qa(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Um.className="SimpleRNNCell";ne.registerClass(Um);var gT=(()=>{let e=class extends fs{constructor(t){t.cell=new Um(t),super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return new t(n)}};return e.className="SimpleRNN",e})();ne.registerClass(gT);var hw=(()=>{let e=class extends qp{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Xt(this.units,"units"),this.activation=es(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=es(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=bt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=xt(t.kernelRegularizer),this.recurrentRegularizer=xt(t.recurrentRegularizer),this.biasRegularizer=xt(t.biasRegularizer),this.kernelConstraint=Wt(t.kernelConstraint),this.recurrentConstraint=Wt(t.recurrentConstraint),this.biasConstraint=Wt(t.biasConstraint),this.dropout=Nl([1,Ya([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Nl([1,Ya([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ke(t);let n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return W(()=>{if(t=t,t.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let r=n.training==null?!1:n.training,a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ts({ones:()=>jn(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ts({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u;0<this.dropout&&this.dropout<1&&(t=P(t,s[0]));let d=Xr(t,this.kernel.read());this.useBias&&(d=Rr(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=P(a,i[0]));let h=this.recurrentKernel.read(),[p,c]=En(h,[2*this.units,this.units],h.rank-1),m=Xr(a,p),[f,g,y]=En(d,3,d.rank-1),[b,x]=En(m,2,m.rank-1);o=this.recurrentActivation.apply(Z(f,b)),l=this.recurrentActivation.apply(Z(g,x));let v=Xr(P(l,a),c);u=this.activation.apply(Z(y,v));let I=Z(P(o,a),P(Z(1,mt(o)),u));return[I,I]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:Qa(this.activation),recurrentActivation:Qa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),n)}};return e.className="GRUCell",e})();ne.registerClass(hw);var yT=(()=>{let e=class extends fs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new hw(t),super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}};return e.className="GRU",e})();ne.registerClass(yT);var Gm=(()=>{let e=class extends qp{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Xt(this.units,"units"),this.activation=es(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=es(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=bt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=xt(t.kernelRegularizer),this.recurrentRegularizer=xt(t.recurrentRegularizer),this.biasRegularizer=xt(t.biasRegularizer),this.kernelConstraint=Wt(t.kernelConstraint),this.recurrentConstraint=Wt(t.recurrentConstraint),this.biasConstraint=Wt(t.biasConstraint),this.dropout=Nl([1,Ya([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Nl([1,Ya([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Ke(t);let r=t[t.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;a=new(n=class extends xr{apply(o,l){let u=s.apply([i]),d=new qv().apply([i]),h=s.apply([i*2]);return rk(rk(u,d),h)}},n.className="CustomInit",n)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return W(()=>{let r=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ts({ones:()=>jn(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ts({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=this.recurrentDropoutMask,l,u,d,h;0<this.dropout&&this.dropout<1&&(t=P(t,i[0]));let p=Xr(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=P(a,o[0])),p=Z(p,Xr(a,this.recurrentKernel.read())),this.useBias&&(p=Rr(p,this.bias.read()));let[c,m,f,g]=En(p,4,p.rank-1);l=this.recurrentActivation.apply(c),u=this.recurrentActivation.apply(m),d=Z(P(u,s),P(l,this.activation.apply(f))),h=this.recurrentActivation.apply(g);let y=P(h,this.activation.apply(d));return[y,y,d]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:Qa(this.activation),recurrentActivation:Qa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),n)}};return e.className="LSTMCell",e})();ne.registerClass(Gm);var bT=(()=>{let e=class extends fs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Gm(t),super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}};return e.className="LSTM",e})();ne.registerClass(bT);var cw=(()=>{let e=class extends qp{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return W(()=>{t=t;let r=t.slice(1),a=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?a.push(r.splice(0,o.stateSize.length)):a.push(r.splice(0,1));a.reverse();let s=[],i;for(let o=0;o<this.cells.length;++o){let l=this.cells[o];r=a[o],o===0?i=[t[0]].concat(r):i=[i[0]].concat(r),i=l.call(i,n),s.push(i.slice(1))}r=[];for(let o of s.slice().reverse())r.push(...o);return[i[0]].concat(r)})}build(t){_b(t)&&(t=t[0]),t=t;let n;this.cells.forEach((r,a)=>{Vs(`RNNCell_${a}`,()=>{r.build(t),Array.isArray(r.stateSize)?n=r.stateSize[0]:n=r.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){let t=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,n,r={}){let a=[];for(let s of n.cells)a.push(_r(s,r));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.cells)n.push(...r.trainableWeights);return n.concat(t)}return t}getWeights(){let t=[];for(let n of this.cells)t.push(...n.weights);return Cb(t)}setWeights(t){let n=[];for(let r of this.cells){let a=r.weights.length,s=t.splice(a);for(let i=0;i<r.weights.length;++i)n.push([r.weights[i],s[i]])}ew(n)}};return e.className="StackedRNNCells",e})();ne.registerClass(cw);function ts(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):u2(t(),n),o=()=>Up(i,t,r);return!a||a<=1?Lt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Lt(l.clone()))}var a6=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},xT=class extends fs{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new At({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=kt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Ra("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(a)):this.states_=[kt(a)];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(a)):this.states_[0]=kt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!w.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Lt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],d=Cr(l,r[0],a,s[0],i[0]),h=Cr(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,h]:[d,h,n]]}};xT.className="ConvRNN2D";var mw=(()=>{let e=class extends Gm{constructor(t){let{filters:n,kernelSize:r,strides:a,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:n})),this.filters=n,Xt(this.filters,"filters"),this.kernelSize=pl(r,2,"kernelSize"),this.kernelSize.forEach(l=>Xt(l,"kernelSize")),this.strides=pl(a||1,2,"strides"),this.strides.forEach(l=>Xt(l,"strides")),this.padding=s||"valid",ur(this.padding),this.dataFormat=i||"channelsLast",Tt(this.dataFormat),this.dilationRate=pl(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Xt(l,"dilationRate"))}build(t){var n;t=Ke(t);let r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[r]}`);let a=t[r],s=4,i=this.kernelSize.concat([a,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,d=this.filters;l=new(n=class extends xr{apply(h,p){let c=u.apply([d]),m=Cn([d]),f=u.apply([d*2]);return Hv([c,m,f])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return W(()=>{if(t.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=n.training||!1,a=t[0],s=t[1],i=t[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ts({ones:()=>jn(a),rate:this.dropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,u=(Q,ee,re)=>!ee||!ee[re]?Q:P(ee[re],Q),d=u(a,l,0),h=u(a,l,1),p=u(a,l,2),c=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ts({ones:()=>jn(s),rate:this.recurrentDropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));let m=this.recurrentDropoutMask,f=u(s,m,0),g=u(s,m,1),y=u(s,m,2),b=u(s,m,3),x=3,[v,I,N,_]=En(this.kernel.read(),o,x),[E,A,D,F]=this.useBias?En(this.bias.read(),o):[null,null,null,null];d=this.inputConv(d,v,E,this.padding),h=this.inputConv(h,I,A,this.padding),p=this.inputConv(p,N,D,this.padding),c=this.inputConv(c,_,F,this.padding);let[S,M,z,U]=En(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,S),g=this.recurrentConv(g,M),y=this.recurrentConv(y,z),b=this.recurrentConv(b,U);let H=this.recurrentActivation.apply(Z(d,f)),q=this.recurrentActivation.apply(Z(h,g)),K=Z(P(q,i),P(H,this.activation.apply(Z(p,y)))),J=P(this.recurrentActivation.apply(Z(c,b)),this.activation.apply(K));return[J,J,K]})}getConfig(){let t=super.getConfig(),{units:n}=t,r=a6(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),a)}inputConv(t,n,r,a){let s=gn(t,n,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Rr(s,r,this.dataFormat):s}recurrentConv(t,n){return gn(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};return e.className="ConvLSTM2DCell",e})();ne.registerClass(mw);var vT=(()=>{let e=class extends xT{constructor(t){let n=new mw(t);super(Object.assign(Object.assign({},t),{cell:n}))}static fromConfig(t,n){return new t(n)}};return e.className="ConvLSTM2D",e})();ne.registerClass(vT);var fw=(()=>{let e=class extends ze{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let n=t.shape,r=[];for(let a=0;a<this.noiseShape.length;++a)r.push(this.noiseShape[a]==null?n[a]:this.noiseShape[a]);return r}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);if(0<this.rate&&this.rate<1){let a=n.training==null?!1:n.training,s=this.getNoiseShape(r);return Up(()=>u2(r,this.rate,s,this.seed),()=>r,a)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}};return e.className="Dropout",e})();ne.registerClass(fw);var wT=(()=>{let e=class extends fw{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let n=t.shape;return[n[0],1,n[2]]}};return e.className="SpatialDropout1D",e})();ne.registerClass(wT);var kT=(()=>{let e=class extends ze{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,Xt(this.units,"units"),this.activation=es(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=bt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=bt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Wt(t.kernelConstraint),this.biasConstraint=Wt(t.biasConstraint),this.kernelRegularizer=xt(t.kernelRegularizer),this.biasRegularizer=xt(t.biasRegularizer),this.activityRegularizer=xt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Ke(t);let n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Ke(t);let n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t),a=n2(this.activation.getClassName()),s;return a!=null?s=Xr(r,this.kernel.read(),a,this.bias?this.bias.read():null):(s=Xr(r,this.kernel.read()),this.bias!=null&&(s=Rr(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:Qa(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),biasConstraint:Bt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Dense",e})();ne.registerClass(kT);var IT=(()=>{let e=class extends ze{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ke(t);for(let n of t.slice(1))if(n==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Ua(t,1)]}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){let a=[0];for(let s=2;s<r.rank;++s)a.push(s);a.push(1),r=Me(r,a)}return eG(r)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(t,n),t}};return e.className="Flatten",e})();ne.registerClass(IT);var ST=(()=>{let e=class extends ze{constructor(t){super(t),this.supportsMasking=!0,this.activation=es(t.activation)}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);return this.activation.apply(r)})}getConfig(){let t={activation:Qa(this.activation)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Activation",e})();ne.registerClass(ST);var NT=(()=>{let e=class extends ze{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return W(()=>(t=Te(t),YU(t,this.n)))}getConfig(){let t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}};return e.className="RepeatVector",e})();ne.registerClass(NT);var TT=(()=>{let e=class extends ze{constructor(t){super(t),this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){let r="Total size of new array must be unchanged.",a=n.slice(),s=1,i=null;for(let l=0;l<a.length;++l){let u=a[l];if(this.isUnknown(u))if(i===null)i=l;else throw new V("Can only specifiy one unknown dimension.");else s*=u}let o=Ua(t);if(i!==null){if(s===0||o%s!==0)throw new V(r);a[i]=o/s}else if(o!==s)throw new V(r);return a}computeOutputShape(t){let n=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t),a=r.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return B(r,s)})}getConfig(){let t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Reshape",e})();ne.registerClass(TT);var _T=(()=>{let e=class extends ze{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let n=Er(1,t.dims.length+1);if(!w.arraysEqual(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(t){t=Ke(t);let n=t.slice();return this.dims.forEach((r,a)=>{n[a+1]=t[r]}),n}call(t,n){return Me(Te(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Permute",e})();ne.registerClass(_T);var CT=(()=>{let e=class extends ze{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){let r=Te(t);return Od(ei(r,this.maskValue),-1)}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t),a=Od(ei(r,this.maskValue),-1,!0);return P(r,oe(a,r.dtype))})}};return e.className="Masking",e})();ne.registerClass(CT);var ET=(()=>{let e=class extends ze{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(et(t.inputLength))}this.inputDim=t.inputDim,Xt(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Xt(this.outputDim,"outputDim"),this.embeddingsInitializer=bt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=xt(t.embeddingsRegularizer),this.activityRegularizer=xt(t.activityRegularizer),this.embeddingsConstraint=Wt(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return W(()=>this.maskZero?(t=Te(t),ei(t,Ge(t))):null)}computeOutputShape(t){if(t=Ke(t),this.inputLength==null)return[...t,this.outputDim];let n=et(this.inputLength);if(n.length!==t.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let a=0;a<n.length;++a){let s=n[a],i=t[a+1];if(s!=null&&i!=null&&s!==i)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(n[r]=i),r++}}return[t[0],...n,this.outputDim]}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);r.dtype!=="int32"&&(r=ga(r,"int32"));let a=l2(this.embeddings.read(),B(r,[r.size]));return B(a,Ke(this.computeOutputShape(r.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:It(this.embeddingsInitializer),embeddingsRegularizer:pt(this.embeddingsRegularizer),activityRegularizer:pt(this.activityRegularizer),embeddingsConstraint:Bt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Embedding",e})();ne.registerClass(ET);var Oo=class extends ze{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ke(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Va(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&Va(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=Ya(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=Wp(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,d=u[0],h=u.slice(1).concat([d]),p=B(o,[d].concat(Ua(u.slice(1))));p=Me(p,[1,0]),p=B(p,h),n.push(p),a=!0}else if(l>1){let u=Er(1,l).concat([0]);n.push(Me(o,u)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,u=o[l-1],d=[u].concat(o.slice(0,o.length-1));s=B(Me(B(s,[-1,u]),[1,0]),d)}else if(i>1){let o=[i-1].concat(Er(0,i-1));s=Me(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Va(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Kt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=gr(n,t[r]);return n})}},gw=class extends Oo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return t})}};gw.className="Add";ne.registerClass(gw);var $T=(()=>{let e=class extends Oo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=P(n,t[r]);return n})}};return e.className="Multiply",e})();ne.registerClass($T);var AT=(()=>{let e=class extends Oo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=Z(n,t[r]);return P(1/t.length,n)})}};return e.className="Average",e})();ne.registerClass(AT);var FT=(()=>{let e=class extends Oo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=ta(n,t[r]);return n})}};return e.className="Maximum",e})();ne.registerClass(FT);var DT=(()=>{let e=class extends Oo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=Za(n,t[r]);return n})}};return e.className="Minimum",e})();ne.registerClass(DT);var RT=(()=>{let e=class extends Oo{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(let a of t)if(a!=null){n=!1;break}if(n)return;let r=[];for(let a=0;a<t.length;++a){let s=t[a].slice();s.splice(this.axis,1);let i=!1;for(let o of r)if(w.arraysEqual(o,s)){i=!0;break}i||r.push(s)}if(r.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return W(()=>Hv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let n=t,r=n[0].slice(),a=this.axis<0?r.length+this.axis:this.axis;for(let s of n.slice(1)){if(r[a]==null||s[a]==null){r[a]=null;break}r[a]+=s[a]}return r}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new V("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new V(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return W(()=>{let r=!0;if(n.forEach(i=>{if(i!=null){r=!1;return}}),r)return null;let a=[];for(let i=0;i<t.length;++i)n[i]==null?a.push(oe(jn(t[i]),"bool")):n[i].rank<t[i].rank?a.push(Kt(n[i],-1)):a.push(n[i]);let s=ot(a,this.axis);return am(s,-1,!1)})}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Concatenate",e})();ne.registerClass(RT);function cd(e,t){for(;e<0;)e+=t;return e}function s6(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return W(()=>{let i;if(r>a){i=r-a;let l=[];for(let u=0;u<i;++u)l.push(1);t=B(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let u=0;u<i;++u)l.push(1);e=B(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=fe(P(e,t),s[0]):o=fe(P(Me(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=Re(e,t,l,u)}if(i>0){let l;r>a?l=r+a-3:l=r-1;let u=[];for(let d=l;d<l+i;++d)u.push(d);o=ms(o,u)}return o.shape.length===1&&(o=Kt(o,1)),o})}var MT=(()=>{let e=class extends Oo{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){w.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0],r=t[1];if(n.length>3||r.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(n,r);if(n[a[0]]!==r[a[1]])throw new V(`Dimension incompatibility: ${n[a[0]]} !== ${r[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],r=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((s,i)=>cd(s,t[i].shape.length)):a=[cd(this.axes,n.shape.length),cd(this.axes,r.shape.length)],this.normalize&&(n=bc(n,a[0]),r=bc(r,a[1])),s6(n,r,a)}interpretAxes(t,n){let r;return Array.isArray(this.axes)?r=this.axes:r=[cd(this.axes,t.length),cd(this.axes,n.length)],r}computeOutputShape(t){w.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0].slice(),r=t[1].slice();if(n.length>3||r.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(n,r);n.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);let s=n.concat(r);return s.length===1&&s.push(1),s}computeMask(t,n){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Dot",e})();ne.registerClass(MT);var OT=(()=>{let e=class extends ze{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);return Up(()=>Z(Lm(r.shape,0,this.stddev),r),()=>r,n.training||!1)})}};return e.className="GaussianNoise",e})();ne.registerClass(OT);var LT=(()=>{let e=class extends ze{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Te(t);return this.rate>0&&this.rate<1?Up(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return P(r,Lm(r.shape,1,a))},()=>r,n.training||!1):r})}};return e.className="GaussianDropout",e})();ne.registerClass(LT);var PT=(()=>{let e=class extends ze{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Te(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return W(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(t);return Up(()=>{let a=Te(t),s=-1.6732632423543772*1.0507009873554805,i=va(hs(r),this.rate);i=ga(i,"float32");let o=((1-this.rate)*(1+this.rate*s**2))**-.5,l=-o*s*this.rate,u=Z(P(a,i),P(Z(i,-1),s));return Z(P(u,o),l)},()=>Te(t),n.training||!1)}return t})}};return e.className="AlphaDropout",e})();ne.registerClass(PT);function Vd(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=Lx(e,t,n,r,a,s);else if(e.rank===3)i=Px(e,t,n,r,a,s);else if(e.rank===4)i=zx(e,t,n,r,a,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function i6(e,t,n,r,a=.001){return W(()=>{let s=Dp(e,r),i=s.mean,o=s.variance;return[Vd(e,i,o,n,t,a),i,o]})}function o6(e,t,n,r,a=.001){return W(()=>{let s=Dp(e,r),i=s.mean,o=s.variance,l=[];for(let c of Er(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let u=B(i,l),d=B(o,l),h=t==null?null:B(t,l),p=n==null?null:B(n,l);return[Vd(e,u,d,p,h,a),i,o]})}function l6(e,t,n,r,a=.001){return w.arraysEqual(r.slice().sort(),Er(0,e.rank-1))?i6(e,t,n,r,a):o6(e,t,n,r,a)}var zT=(()=>{let e=class extends ze{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=bt(t.betaInitializer||"zeros"),this.gammaInitializer=bt(t.gammaInitializer||"ones"),this.movingMeanInitializer=bt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=bt(t.movingVarianceInitializer||"ones"),this.betaConstraint=Wt(t.betaConstraint),this.gammaConstraint=Wt(t.gammaConstraint),this.betaRegularizer=xt(t.betaRegularizer),this.gammaRegularizer=xt(t.gammaRegularizer)}build(t){t=Ke(t);let n=this.axis>=0?this.axis:this.axis+t.length,r=t[n];if(r==null)throw new V(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new At({ndim:t.length,axes:{[n]:r}})];let a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return W(()=>{let r=n.training==null?!1:n.training,a=Te(t),s=a.shape,i=s.length,o=Er(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);let u=ni(1,i);u[l]=s[l];let d=o.slice();d.sort();let h=!w.arraysEqual(d,Er(0,i).slice(0,i-1)),p=()=>{if(h){let y=B(this.movingMean.read(),u),b=B(this.movingVariance.read(),u),x=this.center?B(this.beta.read(),u):null,v=this.scale?B(this.gamma.read(),u):null;return Vd(a,y,b,x,v,this.epsilon)}else return Vd(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return p();let[c,m,f]=l6(a,this.gamma.read(),this.beta.read(),o,this.epsilon),g=(y,b,x)=>{W(()=>{let v=1-x,I=y.read(),N=P(he(I,b),v);y.write(he(I,N))})};return g(this.movingMean,m,this.momentum),g(this.movingVariance,f,this.momentum),c})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),movingMeanInitializer:It(this.movingMeanInitializer),movingVarianceInitializer:It(this.movingVarianceInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer),betaConstraint:Bt(this.betaConstraint),gammaConstraint:Bt(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="BatchNormalization",e})();ne.registerClass(zT);var BT=(()=>{let e=class extends ze{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=bt(t.betaInitializer||"zeros"),this.gammaInitializer=bt(t.gammaInitializer||"ones"),this.betaRegularizer=xt(t.betaRegularizer),this.gammaRegularizer=xt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Ke(t);let n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=n);for(let s of this.axis)if(s<0||s>=n)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Va(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(s=>t[s]),a=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,n){let r=Te(t),a=r.shape,s=a.length;return W(()=>{let{mean:i,variance:o}=Dp(r,this.axis,!0),l=ni(1,s);for(let m of this.axis)l[m]=a[m];let u=m=>m!=null&&m.shape.length!==s?B(m,l):m,d=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null,p=[],c=[];for(let m=0;m<s;++m)this.axis.indexOf(m)!==-1?(p.push(a[m]),c.push(1)):(p.push(1),c.push(a[m]));return i=Vn(i,p),o=Vn(o,p),d!=null&&(d=Vn(d,c)),h!=null&&(h=Vn(h,c)),Vd(r,i,o,h,d,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="LayerNormalization",e})();ne.registerClass(BT);function u6(e,t,n){return W(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=$r()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Dr(e,r)})}var WT=(()=>{let e=class extends ze{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?$r():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,r;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[n,r]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(t){t=Ke(t);let n,r;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?r=t[3]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],t[1],n,r]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?r=t[2]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],n,r,t[3]])}call(t,n){return W(()=>u6(Te(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ZeroPadding2D",e})();ne.registerClass(WT);function Hm(e,t,n,r,a,s){return W(()=>{Tt(a),a2(s),ur(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=$r()),s==null&&(s="max"),e=dw(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=Ht(e,t,n,o):i=xa(e,t,n,o),a==="channelsFirst"&&(i=Me(i,[0,3,1,2])),i})}function VT(e,t,n,r,a,s){return W(()=>{Tt(a),a2(s),ur(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=$r()),s==null&&(s="max"),e=Q2(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=uv(e,t,n,o):i=Ox(e,t,n,o),a==="channelsFirst"&&(i=Me(i,[0,4,1,2,3])),i})}var UT=class extends ze{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Xt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ur(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=Ke(e);let t=Cr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=Wp(Te(e),2);let n=this.poolingFunction(Te(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ms(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yw=class extends UT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ur(r),Hm(e,t,n,r,a,"max")}};yw.className="MaxPooling1D";ne.registerClass(yw);var GT=(()=>{let e=class extends UT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return Tt(s),ur(a),Hm(t,n,r,a,s,"avg")}};return e.className="AveragePooling1D",e})();ne.registerClass(GT);var HT=class extends ze{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),ur(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Cr(t,this.poolSize[0],this.padding,this.strides[0]),n=Cr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bw=class extends HT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ur(r),Hm(e,t,n,r,a,"max")}};bw.className="MaxPooling2D";ne.registerClass(bw);var jT=(()=>{let e=class extends HT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return Tt(s),ur(a),Hm(t,n,r,a,s,"avg")}};return e.className="AveragePooling2D",e})();ne.registerClass(jT);var qT=class extends ze{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Xt(this.poolSize,"poolSize"),Xt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),ur(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Cr(t,this.poolSize[0],this.padding,this.strides[0]),n=Cr(n,this.poolSize[1],this.padding,this.strides[1]),r=Cr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xw=class extends qT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ur(r),VT(e,t,n,r,a,"max")}};xw.className="MaxPooling3D";ne.registerClass(xw);var KT=(()=>{let e=class extends qT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return Tt(s),ur(a),VT(t,n,r,a,s,"avg")}};return e.className="AveragePooling3D",e})();ne.registerClass(KT);var XT=class extends ze{constructor(e){super(e),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},vw=class extends XT{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Te(e);return wt(n,1)})}};vw.className="GlobalAveragePooling1D";ne.registerClass(vw);var ZT=(()=>{let e=class extends XT{constructor(t){super(t||{})}call(t,n){return W(()=>{let r=Te(t);return sr(r,1)})}};return e.className="GlobalMaxPooling1D",e})();ne.registerClass(ZT);var JT=class extends ze{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ww=class extends JT{call(e,t){return W(()=>{let n=Te(e);return this.dataFormat==="channelsLast"?wt(n,[1,2]):wt(n,[2,3])})}};ww.className="GlobalAveragePooling2D";ne.registerClass(ww);var YT=(()=>{let e=class extends JT{call(t,n){return W(()=>{let r=Te(t);return this.dataFormat==="channelsLast"?sr(r,[1,2]):sr(r,[2,3])})}};return e.className="GlobalMaxPooling2D",e})();ne.registerClass(YT);var QT=class extends ze{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=_r(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},kw=class extends QT{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ke(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ke(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return W(()=>(e=Te(e),mT((n,r)=>[Te(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};kw.className="TimeDistributed";ne.registerClass(kw);function d6(e){Ro(qU,"BidirectionalMergeMode",e)}var p6="concat",Iw=class extends QT{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=_r(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=_r(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?p6:e.mergeMode,d6(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):_n(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=cT(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let u=n.map(d=>new At({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(r!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Ar;for(let l of s)if(l instanceof Ar!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=lr(a,1));let i;return this.mergeMode==="concat"?i=Hv([r,a]):this.mergeMode==="sum"?i=Z(r,a):this.mergeMode==="ave"?i=P(.5,Z(r,a)):this.mergeMode==="mul"?i=P(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vs(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Vs(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=_r(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};Iw.className="Bidirectional";ne.registerClass(Iw);var e_=(()=>{let e=class extends ze{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return W(()=>(t=Te(t),t.dtype!=="float32"&&(t=ga(t,"float32")),Z(P(t,this.scale),this.offset)))}};return e.className="Rescaling",e})();ne.registerClass(e_);var{resizeBilinear:h6,cropAndResize:c6}=tr,Sw=class extends ze{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return W(()=>{let l,u=!1,d=t/s,h=n/i,p=(r+t)/s,c=(a+n)/i,m=[d,h,p,c],f=[];e.rank===3?(u=!0,l=Dt([e])):l=e;for(let x=0;x<l.shape[0];x++)f.push(m);let g=fn(f,[f.length,4]),y=ti(0,f.length,1,"int32"),b=c6(l,g,y,[r,a],"nearest");return ga(u?Te(Nt(b)):b,o)})}upsize(e,t,n,r){return W(()=>{let a=h6(e,[t,n]);return ga(a,r)})}call(e,t){return W(()=>{let n=Te(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return i!==this.width&&(l=Math.floor((i-this.width)/2),l===0&&(l=1)),o>=0&&l>=0?this.centerCrop(n,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ke(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};Sw.className="CenterCrop";ne.registerClass(Sw);function m6(e,t,n,r){let a=Te(e);if(a.dtype!=="int32"&&(a=ga(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Kt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Kt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(typeof r<"u"&&t==="count"?l=cc(o,r,n,i):l=cc(o,[],n,i),t!=="tfIdf")return l;if(r)return P(l,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var t_=(()=>{let e=class extends ze{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){return t=Ke(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,n){return W(()=>{t=Te(t),t.dtype!=="int32"&&(t=ga(t,"int32"));let r;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);r=Te(n.countWeights)}let a=sr(t),s=bl(t),i=wn(this.numTokens,a).bufferSync().get(0),o=va(s,0).bufferSync().get(0);if(!(i&&o))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return m6(t,this.outputMode,this.numTokens,r)})}};return e.className="CategoryEncoding",e})();ne.registerClass(t_);var f6=["bilinear","nearest"],vk=new Set(f6),Nw=class extends ze{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(vk.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ke(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return tr.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return tr.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vk]} are supported`)})}};Nw.className="Resizing";ne.registerClass(Nw);var g6=(()=>{let e=class{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}};return e.className="RandomSeed",e})(),y6=(()=>{let e=class extends ze{constructor(t){super(t),this.randomGenerator=new g6(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(t,n),t}};return e.className="BaseRandomLayer",e})(),b6=["bilinear","nearest"],wk=new Set(b6),Tw=class extends y6{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(wk.has(n))this.interpolation=n;else throw new V(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ke(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return W(()=>{let n=Te(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=hs([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return tr.resizeBilinear(e,s);case"nearest":return tr.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...wk]} are supported`)}})}};Tw.className="RandomWidth";ne.registerClass(Tw);function x6(e){return new Gp(e)}function v6(e){return new Z2(e)}function w6(e){return new q2(e)}function k6(e){return new K2(e)}function I6(e){return new X2(e)}function S6(e){return new Y2(e)}function N6(e){return new J2(e)}function T6(e){return new lT(e)}function _6(e){return new Vm(e)}function C6(e){return new sT(e)}function E6(e){return new pw(e)}function $6(e){return new iT(e)}function A6(e){return new oT(e)}function F6(e){return new dT(e)}function D6(e){return new pT(e)}function R6(e){return new hT(e)}function M6(e){return new ST(e)}function O6(e){return new kT(e)}function L6(e){return new fw(e)}function P6(e){return new wT(e)}function z6(e){return new IT(e)}function B6(e){return new NT(e)}function W6(e){return new TT(e)}function V6(e){return new _T(e)}function U6(e){return new ET(e)}function G6(e){return new gw(e)}function H6(e){return new AT(e)}function j6(e){return new RT(e)}function q6(e){return new FT(e)}function K6(e){return new DT(e)}function X6(e){return new $T(e)}function Z6(e){return new MT(e)}function J6(e){return new zT(e)}function Y6(e){return new BT(e)}function Q6(e){return new WT(e)}function _w(e){return new GT(e)}function ej(e){return _w(e)}function tj(e){return _w(e)}function Cw(e){return new jT(e)}function nj(e){return Cw(e)}function rj(e){return Cw(e)}function Ew(e){return new KT(e)}function aj(e){return Ew(e)}function sj(e){return Ew(e)}function ij(e){return new vw(e)}function oj(e){return new ww(e)}function n_(e){return new ZT(e)}function r_(e){return new YT(e)}function a_(e){return new yw(e)}function s_(e){return new bw(e)}function lj(e){return new xw(e)}function uj(e){return new yT(e)}function dj(e){return new hw(e)}function pj(e){return new bT(e)}function hj(e){return new Gm(e)}function cj(e){return new gT(e)}function mj(e){return new Um(e)}function fj(e){return new vT(e)}function gj(e){return new mw(e)}function yj(e){return new fs(e)}function bj(e){return new cw(e)}function xj(e){return new Iw(e)}function vj(e){return new kw(e)}var wj=n_,kj=r_,Ij=a_,Sj=s_;function Nj(e){return new OT(e)}function Tj(e){return new LT(e)}function _j(e){return new PT(e)}function Cj(e){return new CT(e)}function Ej(e){return new e_(e)}function $j(e){return new Sw(e)}function Aj(e){return new Nw(e)}function Fj(e){return new t_(e)}function Dj(e){return new Tw(e)}var i_={};Ce(i_,{MAPE:()=>Gj,MSE:()=>qj,binaryAccuracy:()=>Rj,binaryCrossentropy:()=>Mj,categoricalAccuracy:()=>Lj,categoricalCrossentropy:()=>Pj,cosineProximity:()=>Wj,mape:()=>Hj,meanAbsoluteError:()=>Vj,meanAbsolutePercentageError:()=>Uj,meanSquaredError:()=>jj,mse:()=>Kj,precision:()=>zj,r2Score:()=>Xj,recall:()=>Bj,sparseCategoricalAccuracy:()=>Oj});function Rj(e,t){return aw(e,t)}function Mj(e,t){return M2(e,t)}function Oj(e,t){return O2(e,t)}function Lj(e,t){return sw(e,t)}function Pj(e,t){return iw(e,t)}function zj(e,t){return R2(e,t)}function Bj(e,t){return QG(e,t)}function Wj(e,t){return rw(e,t)}function Vj(e,t){return zm(e,t)}function Uj(e,t){return Uu(e,t)}function Gj(e,t){return Uu(e,t)}function Hj(e,t){return Uu(e,t)}function jj(e,t){return Mo(e,t)}function qj(e,t){return Mo(e,t)}function Kj(e,t){return Mo(e,t)}function Xj(e,t){return eH(e,t)}var o_={};Ce(o_,{modelFromJSON:()=>AH});var l_={};Ce(l_,{l1:()=>Jj,l1l2:()=>Zj,l2:()=>Yj});function Zj(e){return new jp(e)}function Jj(e){return YH(e)}function Yj(e){return QH(e)}var u_=class extends Tl{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof ca))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Bh(e,t){return e<t}function kk(e,t){return e>t}var d_=class extends u_{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Bh:this.mode==="max"?this.monitorFunc=kk:this.monitor.indexOf("acc")!==-1?this.monitorFunc=kk:this.monitorFunc=Bh,this.monitorFunc===Bh&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Bh?1/0:-1/0}async onEpochEnd(e,t){await Fa(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Qj(e){return new d_(e)}var eq={earlyStopping:Qj},tq=G();tq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Pn;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Pn||(Pn={}));var Ik;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Ik||(Ik={}));var $w={};function nq(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};$w[e]=n}function p_(e){return $w[e]}function rq(e){delete $w[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,u=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return tn(t.inputNames[u],n,r,a);if(s.type==="tensors"){let p=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((c,m)=>{var f;return((f=p[m])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(c=>tn(c,n,r,a))}let d=tn(t.inputNames[u],n,r,a),h=d.dataSync();return s.type==="number"?h[0]:w.toNestedArray(d.shape,h)}let i=t.attrParams[e];return i&&i.value}function tn(e,t,n,r){let[a,s]=Bn(e,n);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Ic(a,o)]);return i!==void 0?t[Ic(a,i)][s]:void 0}function Sk(e,t,n){return t[Ic(e,n.currentContextId)]}function ua(e,t){let[n,r,a]=Bn(e,t);return[Ic(n,t&&t.currentContextId),r,a]}function Ic(e,t){return t?`${e}-${t}`:e}function Bn(e,t){if(e==="")return["",0,void 0];let n=t!=null&&t.parseNodeNameCache!=null;if(n){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let r=e.split(":"),a;if(r.length===1)a=[e,0,void 0];else{let s=r[0],i=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);a=[s,o,i]}return n&&t.parseNodeNameCache.set(e,a),a}function Qh(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function da(e){return e.kept?e:qr(e)}var h_={};Ce(h_,{json:()=>aq});var aq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],c_={};Ce(c_,{json:()=>sq});var sq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],m_={};Ce(m_,{json:()=>iq});var iq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],f_={};Ce(f_,{json:()=>oq});var oq=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],g_={};Ce(g_,{json:()=>lq});var lq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],y_={};Ce(y_,{json:()=>uq});var uq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],b_={};Ce(b_,{json:()=>dq});var dq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],x_={};Ce(x_,{json:()=>pq});var pq=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],v_={};Ce(v_,{json:()=>hq});var hq=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],w_={};Ce(w_,{json:()=>cq});var cq=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],k_={};Ce(k_,{json:()=>mq});var mq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],I_={};Ce(I_,{json:()=>fq});var fq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],S_={};Ce(S_,{json:()=>gq});var gq=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],N_={};Ce(N_,{json:()=>yq});var yq=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],T_={};Ce(T_,{json:()=>bq});var bq=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],__={};Ce(__,{json:()=>xq});var xq=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],C_={};Ce(C_,{json:()=>vq});var vq=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],E_={};Ce(E_,{json:()=>wq});var wq=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],$_={};Ce($_,{json:()=>kq});var kq=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Nk=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[h_,c_,m_,f_,g_,y_,b_,x_,v_,w_,k_,I_,S_,N_,T_,__,C_,E_,$_],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?r.push(m[f.name]):f.op==="Const"?a.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(m=>{let f=i[m];f.inputNames.forEach((g,y)=>{let[b,,x]=ua(g),v=i[b];if(v.outputs!=null){let I=v.outputs.indexOf(x);if(I!==-1){let N=`${b}:${I}`;f.inputNames[y]=N}}f.inputs.push(v),v.children.push(f)})}),Object.keys(d).length===0?h.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(d).forEach(m=>{let[f]=ua(m),g=i[f];g!=null&&(g.signatureKey=d[m],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{let[f]=ua(m),g=i[f];g&&(g.signatureKey=u[m],o.push(g))}):o=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=p_(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=Rb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Rb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=Wb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Wb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Ob(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=Ob(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Bb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Bb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Mb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Mb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Ub(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ub(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=zb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=zb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Vb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Vb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Lb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Lb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Pb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Pb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Tk(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Tk(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&r.push(u[d.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[d]=ua(u.name),h={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Aw(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,s.push(h),a[d]=h}),Object.keys(a).forEach(u=>{let d=a[u];d.inputNames.forEach((h,p)=>{let[c,,m]=ua(h),f=a[c];if(f.outputs!=null){let g=f.outputs.indexOf(m);if(g!==-1){let y=`${c}:${g}`;d.inputNames[p]=y}}d.inputs.push(f),f.children.push(d)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[d,h]=ua(o[u.name]),p=a[d];p!=null&&(p.defaultOutput=h,i.push(p))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function Iq(e){let t=G().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function A_(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):Iq(e);return t?n:n.toLowerCase()}function Rb(e,t,n,r=!1){let a=e[t];return a!=null?A_(a.s,r):n}function Mb(e,t,n){let r=e[t];return r?r.b:n}function Ob(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function Aw(e){switch(typeof e=="string"&&(e=Pn[e]),e){case Pn.DT_FLOAT:case Pn.DT_HALF:return"float32";case Pn.DT_INT32:case Pn.DT_INT64:case Pn.DT_INT8:case Pn.DT_UINT8:return"int32";case Pn.DT_BOOL:return"bool";case Pn.DT_DOUBLE:return"float32";case Pn.DT_STRING:return"string";case Pn.DT_COMPLEX64:case Pn.DT_COMPLEX128:return"complex64";default:return null}}function Tk(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Lb(e,t,n){let r=e[t];return r&&r.type?Aw(r.type):n}function Pb(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>Aw(a)):n}function F_(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function zb(e,t,n){let r=e[t];return r&&r.shape?F_(r.shape):n}function Bb(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function Wb(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>A_(s,r)):n}function Vb(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>F_(a)):n}function Ub(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var Sq=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return tn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return tn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ob(this.node.rawAttrs,e,t);if(n.s!=null)return Rb(this.node.rawAttrs,e,t);if(n.b!=null)return Mb(this.node.rawAttrs,e,t);if(n.shape!=null)return zb(this.node.rawAttrs,e,t);if(n.type!=null)return Lb(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Bb(this.node.rawAttrs,e,t);if(n.list.s!=null)return Wb(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Vb(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ub(this.node.rawAttrs,e,t);if(n.list.type!=null)return Pb(this.node.rawAttrs,e,t)}return t}},Qt={};Ce(Qt,{OP_SCOPE_SUFFIX:()=>wx,abs:()=>$t,acos:()=>_x,acosh:()=>Cx,add:()=>Z,addN:()=>lS,all:()=>am,any:()=>Od,argMax:()=>Js,argMin:()=>Ex,asin:()=>$x,asinh:()=>Ax,atan:()=>Fx,atan2:()=>Dx,atanh:()=>Rx,avgPool:()=>xa,avgPool3d:()=>Ox,basicLSTMCell:()=>hS,batchNorm:()=>$o,batchNorm2d:()=>Lx,batchNorm3d:()=>Px,batchNorm4d:()=>zx,batchToSpaceND:()=>Tp,bincount:()=>Bx,bitwiseAnd:()=>cS,booleanMaskAsync:()=>nN,broadcastArgs:()=>mS,broadcastTo:()=>Ws,buffer:()=>Oe,cast:()=>oe,ceil:()=>Wx,clipByValue:()=>ln,clone:()=>qr,complex:()=>fa,concat:()=>ot,concat1d:()=>Vx,concat2d:()=>Ux,concat3d:()=>Gx,concat4d:()=>Hx,conv1d:()=>sm,conv2d:()=>gn,conv2dTranspose:()=>im,conv3d:()=>qx,conv3dTranspose:()=>Kx,cos:()=>_p,cosh:()=>om,cosineWindow:()=>$m,cumprod:()=>zd,cumsum:()=>lm,denseBincount:()=>cc,depthToSpace:()=>Xx,depthwiseConv2d:()=>Ao,diag:()=>gS,dilation2d:()=>Zx,div:()=>ce,divNoNan:()=>Jx,dot:()=>Yx,dropout:()=>_v,einsum:()=>Ms,elu:()=>Ou,enclosingPowerOfTwo:()=>Cv,ensureShape:()=>bS,equal:()=>Gn,erf:()=>um,euclideanNorm:()=>tv,exp:()=>un,expandDims:()=>Kt,expm1:()=>nv,eye:()=>dm,fft:()=>Lp,fill:()=>Un,floor:()=>Pu,floorDiv:()=>rm,fused:()=>Sl,gather:()=>zu,gatherND:()=>iN,greater:()=>wn,greaterEqual:()=>va,ifft:()=>Il,imag:()=>Cp,image:()=>tr,inTopKAsync:()=>oN,irfft:()=>Im,isFinite:()=>rv,isInf:()=>av,isNaN:()=>sv,leakyRelu:()=>Ep,less:()=>xl,lessEqual:()=>ps,linalg:()=>Av,linspace:()=>IS,localResponseNormalization:()=>iv,log:()=>Hn,log1p:()=>$p,logSigmoid:()=>ov,logSoftmax:()=>hm,logSumExp:()=>Ap,logicalAnd:()=>gr,logicalNot:()=>Fp,logicalOr:()=>cm,logicalXor:()=>lv,losses:()=>xN,lowerBound:()=>NS,matMul:()=>Re,max:()=>sr,maxPool:()=>Ht,maxPool3d:()=>uv,maxPoolWithArgmax:()=>TS,maximum:()=>ta,mean:()=>wt,meshgrid:()=>_S,min:()=>bl,minimum:()=>Za,mirrorPad:()=>dv,mod:()=>pv,moments:()=>Dp,movingAverage:()=>rN,mul:()=>P,multiRNNCell:()=>CS,multinomial:()=>ES,neg:()=>mt,norm:()=>Lu,notEqual:()=>ei,oneHot:()=>vl,ones:()=>Cn,onesLike:()=>jn,op:()=>L,outerProduct:()=>$S,pad:()=>Dr,pad1d:()=>AS,pad2d:()=>FS,pad3d:()=>DS,pad4d:()=>RS,pool:()=>hv,pow:()=>Jr,prelu:()=>Mp,print:()=>Tx,prod:()=>cv,raggedGather:()=>MS,raggedRange:()=>OS,raggedTensorToTensor:()=>LS,rand:()=>PS,randomGamma:()=>VS,randomNormal:()=>fm,randomStandardNormal:()=>US,randomUniform:()=>hs,randomUniformInt:()=>GS,range:()=>ti,real:()=>wl,reciprocal:()=>bv,relu:()=>tt,relu6:()=>gm,reshape:()=>B,reverse:()=>lr,reverse1d:()=>HS,reverse2d:()=>jS,reverse3d:()=>qS,reverse4d:()=>KS,rfft:()=>Pp,round:()=>ym,rsqrt:()=>bm,scalar:()=>ve,scatterND:()=>aN,searchSorted:()=>mm,selu:()=>xm,separableConv2d:()=>Bu,setdiff1dAsync:()=>XS,sigmoid:()=>fr,sign:()=>xv,signal:()=>bN,sin:()=>vm,sinh:()=>wm,slice:()=>Ue,slice1d:()=>Op,slice2d:()=>km,slice3d:()=>Wu,slice4d:()=>kl,softmax:()=>cs,softplus:()=>Fo,spaceToBatchND:()=>Rp,sparse:()=>vN,sparseToDense:()=>sN,spectral:()=>yN,split:()=>En,sqrt:()=>Jt,square:()=>it,squaredDifference:()=>Sm,squeeze:()=>ms,stack:()=>Dt,step:()=>Do,stridedSlice:()=>vv,string:()=>wN,sub:()=>he,sum:()=>fe,tan:()=>wv,tanh:()=>Xa,tensor:()=>fn,tensor1d:()=>Qe,tensor2d:()=>Kr,tensor3d:()=>Nm,tensor4d:()=>Ja,tensor5d:()=>ZS,tensor6d:()=>JS,tensorScatterUpdate:()=>QS,tile:()=>Vn,topk:()=>Iv,transpose:()=>Me,truncatedNormal:()=>Cm,unique:()=>Sv,unsortedSegmentSum:()=>Em,unstack:()=>Nt,upperBound:()=>eN,variable:()=>Nv,where:()=>Zt,whereAsync:()=>Tv,zeros:()=>kt,zerosLike:()=>Ge});var Nq=(e,t,n,r=Qt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Tq=(e,t,n,r=Qt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(tn(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(tn(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(tn(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(tn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function mr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];w.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function _k(e){return!(typeof e=="number"||e.some(t=>t<0))}function md(e,t,n){let r=Gb(e,n),a=!_k(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Gb(s.shape,r)}),!_k(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Gb(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var _q=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ve(0),Lt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),mr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Lt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return fn([],[0].concat(this.elementShape));let n=this.readMany(e);return mr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Dt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return fn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return mr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ot(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Nt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];W(()=>{t=B(t,[1,n,a]);for(let o=0;o<e.length;++o){let l=[0,o===0?0:r[o-1],0],u=[1,e[o],a];s[o]=B(Ue(t,l,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},jm=class Hb{get id(){return this.idTensor.id}constructor(t,n,r,a=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t?.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);mr(n,s.shape,"TensorList shape mismatch: "),Lt(s)}),this.idTensor=ve(0),this.maxNumElements=a,Lt(this.idTensor)}copy(){return new Hb([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);mr(t,this.elementShape,"TensorList shape mismatch: ");let a=md(this.elementShape,this.tensors,t);return W(()=>{let s=this.tensors.map(i=>B(i,a));return Dt(s,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=md(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,mr(a.shape,t,"TensorList shape mismatch: "),B(a,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(mr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Lt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new Hb([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)n.tensors[r]=this.tensors[r];return n}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);mr(this.tensors[t].shape,n,"TensorList shape mismatch: ");let a=md(this.elementShape,this.tensors,n);return B(this.tensors[t],a)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);mr(this.elementShape,n.shape,"TensorList shape mismatch: "),Lt(n),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);mr(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());let a=md(this.elementShape,this.tensors,r);return t.length===0?fn([],[0].concat(a)):W(()=>{let s=t.map(i=>B(this.tensors[i],a));return Dt(s,0)})}concat(t,n){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);mr(this.elementShape,n,"TensorList shape mismatch: ");let r=md(this.elementShape,this.tensors,n);return this.size()===0?fn([],[0].concat(r)):W(()=>{let a=this.tensors.map(s=>B(s,r));return ot(a,0)})}};function Cq(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);mr(a,t,"TensorList shape mismatch: ");let s=Nt(e);return new jm(s,t,r)}function Eq(e,t,n,r){return new jm([],e,t,r)}function $q(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new jm([],n,e.dtype,r),i=Nt(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function Aq(e,t,n){let r=0,a=t.map(d=>(r+=d,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Gb(s,n),o=r===0?0:e.size/r,l=W(()=>{let d=[];e=B(e,[1,r,o]);for(let h=0;h<t.length;++h){let p=[0,h===0?0:a[h-1],0],c=[1,t[h],o];d[h]=B(Ue(e,p,c),i)}return e.dispose(),d}),u=new jm([],n,e.dtype,t.length);for(let d=0;d<l.length;d++)u.setItem(d,l[d]);return u}var Fq=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(d=>d.id),l=await i[0].data();i.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let u=s;for(;l[0];){let d=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let h=u.map(c=>c.id);d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let p=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return u}case"LoopCond":{let r=k("pred",e,t,n);return[da(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=da(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>tn(a,t,n)!==void 0);if(r){let a=tn(r,t,n);return[da(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[da(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[da(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[da(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),u=k("name",e,t,n),d=new _q(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,ve(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[ve(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=$q(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,l=Eq(r,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=Cq(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=Aq(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[ve(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ck(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",l=r==="fusedbatchnorm",u=k("numArgs",e,t,n);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=k("strides",e,t,n),h=Qh(e,t,n),p=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[m,f]=k("args",e,t,n);i&&(f=m,m=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:d,pad:h,dataFormat:p,dilations:c,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}var Dq=(e,t,n,r=Qt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=Qh(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=Ck(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=Ck(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=Qh(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=Qh(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],u=i[1],d=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Rq=(e,t,n,r=Qt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Jy(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var Mq=async(e,t,n,r,a=Qt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:d}=Jy(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,u,d);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Jy(e,t,n),d=k("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,l,u,d);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Jy(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,i,o,l,u)]}case"Where":{let s=a.cast(k("condition",e,t,n),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},Oq=(e,t,n,r=Qt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Lq=(e,t,n,r=Qt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[tn(e.name,t,n)||a];case"Placeholder":return[tn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let d=k("x",e,t,n);return[da(d)]}case"IdentityN":return k("x",e,t,n).map(d=>da(d));case"Snapshot":let s=k("x",e,t,n);return[da(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(d=>r.tensor1d(d.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),u=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let d=0;d<o.length;d++)console.log(Array.prototype.slice.call(o[d].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Pq=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ve(0),this.tensorMap=new Map,Lt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),W(()=>{let r=Nt(t),a=n.length,s=r.length;w.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],l=r[i];Lt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return W(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Dt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},zq=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new Pq(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Bq=(e,t,n,r=Qt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),u=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),u=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Wq=(e,t,n,r=Qt)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Vq=(e,t,n,r=Qt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,n),u=k("leakyreluAlpha",e,t,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,h]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:d,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Uq=(e,t,n,r=Qt)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Gq=(e,t,n,r=Qt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Hq=(e,t,n,r=Qt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,u)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),u=k("size",e,t,n),d=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,u,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jq=(e,t,n,r=Qt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),u=k("ellipsisMask",e,t,n),d=k("newAxisMask",e,t,n),h=k("shrinkAxisMask",e,t,n),p=k("x",e,t,n);return[r.stridedSlice(p,a,s,i,o,l,u,d,h)]}case"Pack":return W(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(u=>{let d=w.arraysEqual(u.shape,i);if(!d&&!w.arraysEqual(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return d?u:r.reshape(u,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},qq=(e,t,n,r=Qt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Kq=(e,t,n,r=Qt)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Xq=(e,t,n,r=Qt)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Zq=(e,t,n,r=Qt)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ek(e,t,n,r,a=W){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>Nq(i,o,l));case"basic_math":return a(()=>Tq(i,o,l));case"control":return Fq(i,o,l);case"convolution":return a(()=>Dq(i,o,l));case"creation":return a(()=>Rq(i,o,l));case"dynamic":return Mq(i,o,l);case"evaluation":return a(()=>Oq(i,o,l));case"image":return a(()=>Bq(i,o,l));case"graph":return a(()=>Lq(i,o,l));case"logical":return a(()=>Wq(i,o,l));case"matrices":return a(()=>Vq(i,o,l));case"normalization":return a(()=>Uq(i,o,l));case"ragged":return a(()=>Gq(i,o,l));case"reduction":return a(()=>Hq(i,o,l));case"slice_join":return a(()=>jq(i,o,l));case"sparse":return a(()=>qq(i,o,l));case"spectral":return a(()=>Kq(i,o,l));case"string":return a(()=>Xq(i,o,l));case"transformation":return a(()=>Zq(i,o,l));case"hash_table":return zq(i,o,l,r);case"custom":let u=p_(i.op);if(u&&u.customExecutor)return u.customExecutor(new Sq(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var $k=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Ak(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(p=>Bn(p)[0]));r=r||[];let d=new Set(r.map(p=>Bn(p.name)[0])),h=[...t];for(;h.length>0;){let p=h.pop();if((Ls(p)||a5(p)||s5(p))&&i==null&&(i=p,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(p.name),n[p.name]==null&&!u.has(p.name)&&!d.has(p.name)){if(p.inputs.length===0){s.push(p.name);continue}p.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function Jq(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(g=>Bn(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),d=new Map(u.map(g=>[g.name,g])),h={};for(let g of u){h[g.name]=h[g.name]||0;for(let y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}let p=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),c=[...p];for(;p.length>0;){let g=p.pop(),y=d.get(g);for(let b of y.children.filter(i))--h[b.name]===0&&(c.push(b.name),p.push(b.name))}let m=c.map(g=>d.get(g)),f=Yq(m,l);return Qq(f,l),f}function Yq(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}var Wh=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function Qq(e,t){let n=new Map(e.map((o,l)=>[o.name,l])),r=new Set(t.map(o=>o.name)),a=o=>r.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let l of o.children.filter(i)){if(!n.has(l.name))throw new Wh(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new Wh(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(let l of o.inputs){if(!n.has(l.name))throw new Wh(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new Wh(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function e5(e){let t=new Map(e.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,l)=>Ls(o)?n:l),a=o=>{let l=r[t.get(o.name)];return l??-1},s=e.map((o,l)=>o.children.map(a).reduce((u,d)=>Math.max(u,d),r[l])),i=new Map;for(let o=0;o<e.length;++o){let l=s[o];if(l===n)continue;let u=e[o],d=e[l];i.has(d.name)||i.set(d.name,[]),i.get(d.name).push(u)}return i}var t5=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),n5=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),r5=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ls(e){return t5.has(e.op)}function a5(e){return n5.has(e.op)}function s5(e){return r5.has(e.op)}var Fk=class D_{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let n=Object.keys(t).map(r=>t[r].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new D_(t.functions[r],this)})}getCompilationKey(t,n){let r=t.map(s=>s.name).sort(),a=n.map(s=>s.name).sort();return r.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,n){let r=Ak(t,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:s,syncInputs:i}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let u=n.map(h=>h.name),d=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${d}]. Missing the following inputs: [${a}]`)}let o=Jq(this.graph,r),l=e5(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let n=t.clone();return Lt(n),n}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(t,n){this.disposeIntermediateTensors(),t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);let a=r.map(p=>this.graph.nodes[Bn(p)[0]]),s=n.map(p=>Bn(p)[0]),i=new Set(s),o=s.map(p=>this.graph.nodes[p]);o.length===0&&(o=this._outputs);let l=this.getCompilationKey(a,o),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let d={},h={};return W(()=>{let p=new $k(this.weightMap,d,h,this.functionExecutorMap,this.parseNodeNameCache),c=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,x]=Bn(y,p),v=[];v[x]=t[y],c[b]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(v))});let m=this.getFrozenTensorIds(c),{orderedNodes:f,nodeLiveUntilMap:g}=u;for(let y of f){if(c[y.name])continue;let b=Ek(y,c,p,this._resourceManager);if(w.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);c[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,c,p,m,i,g.get(y.name))}return this.parent==null&&p.dispose(m),n.map(y=>tn(y,c,p))})}getFrozenTensorIds(t){let n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(t,n,r,a,s,i,o){if(!(Ls(n)||i.has(t))){for(let l of r[t])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(let l of n.inputs){if(Ls(l))continue;let u=Sk(l.name,r,a);if(u!=null)for(let d of u){if(!d||d.kept||s.has(d.id))continue;let h=o[d.id];h===1?(d.dispose(),delete o[d.id]):h!=null&&o[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,n,r,a,s,i){function o(l){return Ls(l)||s.has(l.name)}if(!(Ls(t)||i==null))for(let l of i){if(o(l))continue;let u=Sk(l.name,n,r);for(let d of u)!d||d.kept||a.has(d.id)||d.dispose()}}async executeAsync(t,n){return this._executeAsync(t,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let n of t)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,n,r=!1,a={},s={}){this.disposeIntermediateTensors(),r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=G().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let i=new $k(this.weightMap,a,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let o=await this.executeWithControlFlow(t,i,n,r),l=n.map(p=>tn(p,o,i)),u=l.map(p=>p.id),d=Object.keys(t).map(p=>t[p].id),h=new Set([...u,...d,...this.weightIds]);return Object.values(o).forEach(p=>{p.forEach(c=>{c&&!c.isDisposed&&!h.has(c.id)&&c.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(t,n,r){let a=t.reduce((s,i,o)=>(s[this.inputs[o].name]=i,s),{});return this._executeAsync(a,this.outputNodes,!0,n,r)}async executeWithControlFlow(t,n,r,a){let s=Object.keys(t),i=s.map(v=>this.graph.nodes[Bn(v)[0]]),o=r.map(v=>Bn(v)[0]),l=new Set(o),u=o.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);let{usedNodes:d,missingInputs:h,dynamicNode:p,syncInputs:c}=Ak(t,u,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(v=>{let[I,N]=Bn(v),_=[];_[N]=t[v],f[I]=_});let g={},y=this.getFrozenTensorIds(f),b={};for(;m.length>0;){let v=this.processStack(i,m,n,f,b,y,l,g,d);await Promise.all(v)}p==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(v=>!Ls(v)&&!tn(v.name,f,n)).map(v=>v.name);if(x.length>0){let v="";throw p!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${h}]. ${v}`)}return f}processStack(t,n,r,a,s,i,o,l,u){let d=[];for(;n.length>0;){let h=n.pop();r.currentContext=h.contexts;let p="";if(h.node.op==="Enter"&&k("isConstant",h.node,a,r)&&([p]=ua(h.node.name,r)),a[h.node.name]==null){let c=Ek(h.node,a,r,this._resourceManager);p||([p]=ua(h.node.name,r));let m=r.currentContext;w.isPromise(c)?d.push(c.then(f=>(a[p]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(f)),r.currentContext=m,this.checkTensorForDisposal(p,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u),f))):(a[p]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(c)),this.checkTensorForDisposal(p,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u))}else this.processChildNodes(h.node,n,r,a,s,u)}return d}processChildNodes(t,n,r,a,s,i){t.children.forEach(o=>{let[l]=ua(o.name,r);s[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!tn(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!tn(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{let r=t[n],[a]=Bn(n),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,o=i.length===r.shape.length&&r.shape.every((l,u)=>i[u]===-1||i[u]===l);w.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&w.assert(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){var n,r;let a={};for(let s in t){let i=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[s];i!=null?a[i.name]=t[s]:a[s]=t[s]}return a}checkInputs(t){let n=Object.keys(t).filter(r=>{let[a]=Bn(r);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>{var r,a;let s=(a=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||a===void 0?void 0:a[n];return s!=null?s.name:n},{})}checkOutputs(t){t.forEach(n=>{let[r]=Bn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}},i5=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},o5="?tfjs-format=file",l5="model.json",Fw=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=rn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new i5}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=await YI(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Fk(Nk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Nk.Instance.transformGraph(e.modelInitializer);this.initializer=new Fk(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof De?[e]:e,n={};return t.forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof De)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,l;let u=(l=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||l===void 0?void 0:l.resourceId;return u!=null?a[s]=this.resourceIdToCapturedInput[u]:a[s]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_e(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function u5(e,t={},n=rn){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=p5(e));let r=new Fw(e,t,n);return await r.load(),r}function d5(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=rn.getWeightSpecs(r.weightsManifest),i=rn.getModelArtifactsForJSONSync(r,s,a);t=rn.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=rn.fromMemorySync(e);else throw new Error("Unknown model format");let n=new Fw(t);return n.load(),n}function p5(e){return e.endsWith("/")||(e=e+"/"),`${e}${l5}${o5}`}var h5="4.21.0",R_={};Ce(R_,{CSVDataset:()=>H_,Dataset:()=>Gu,FileDataSource:()=>Y_,TextLineDataset:()=>G_,URLDataSource:()=>Q_,array:()=>M5,csv:()=>K5,func:()=>X5,generator:()=>Z5,microphone:()=>Y5,version_data:()=>Q5,webcam:()=>J5,zip:()=>O5});var c5=ss(Lc()),m5=ss(Lc());function f5(e,t){return Sc(e,t)}function Sc(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(_l(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=Sc(o,t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function g5(e,t=O_){return M_(e,t)}function M_(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(_l(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(u=>u[i]),l=M_(o,t,n);s[i]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function O_(e){return e===null?null:_l(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function L_(e,t){let n=new Map;Sc(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let s=await a;n.set(r,s)}}return Sc(e,t,n)}function _l(e){let t=!1;if(G().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=xI();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof De)&&!(e instanceof Promise)&&!t)}function y5(e){return e==null||b5(e)||Array.isArray(e)||typeof e=="object"&&e instanceof De||w.isTypedArray(e)}function b5(e){return e===null||typeof e!="object"&&typeof e!="function"}function x5(e){return f5(e,v5)}function v5(e){return e instanceof De?{value:e.clone(),recurse:!1}:_l(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var P_=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},z_=class B_ extends P_{constructor(){super(B_.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,n=new Array(t),r=this.length();for(let a=0;a<r;a++)n[a]=this.get(this.wrap(this.begin+a));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}};z_.INITIAL_CAPACITY=32;function W_(e){return new I5(e)}function Dw(e){return new S5(e)}function w5(e,t){return new V_(e,t)}function k5(e,t=za.FAIL){return new D5(e,t)}var Yt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new A5(this,e)}filter(e){return new E5(this,e)}map(e){return new $5(this,e)}mapAsync(e){return new Dk(this,e)}serialMapAsync(e){return new Dk(this,e).serial()}flatmap(e){return new F5(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new C5(this,e,t)}columnMajorBatch(e,t=!0,n=O_){return this.rowMajorBatch(e,t).map(r=>g5(r,n))}concatenate(e,t){return new V_(W_([this,e]),t)}take(e){return e<0||e==null?this:new _5(this,e)}skip(e){return e<0||e==null?this:new T5(this,e)}prefetch(e){return new U_(this,e)}shuffle(e,t){return new R5(this,e,t)}serial(){return new N5(this)}},I5=class extends Yt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:x5(e),done:!1}}},S5=class extends Yt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},N5=class extends Yt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},T5=class extends Yt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;_e(e.value)}return this.upstream.next()}},_5=class extends Yt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},C5=class extends Yt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},E5=class extends Yt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_e(e.value)}}},$5=class extends Yt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Tr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Tr.getTensorsInContainer(n);for(let a of t)Tr.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},A5=class extends Yt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Dk=class extends Yt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Tr.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Tr.getTensorsInContainer(n);for(let a of t)Tr.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},Rw=class extends Yt{constructor(){super(),this.outputQueue=new z_,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},F5=class extends Rw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Tr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Tr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Tr.isTensorInList(a,r)||a.dispose();return!0}},V_=class extends Yt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},za;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(za||(za={}));var D5=class extends Yt{constructor(e,t=za.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(s){return s instanceof Yt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await L_(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case za.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case za.SHORTEST:return{value:null,done:!0};case za.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},U_=class extends Yt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new P_(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},R5=class extends U_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=m5.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Gu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),zn(async()=>(await n.iterator()).columnMajorBatch(e,t,L5),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,zn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,zn(async()=>(await t.iterator()).filter(r=>W(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return zn(async()=>(await t.iterator()).map(n=>W(()=>e(n))),this.size)}mapAsync(e){let t=this;return zn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return zn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,zn(async()=>{let r=Dw(async()=>({value:await t.iterator(),done:!1}));return w5(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,zn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=c5.alea(t||w.now().toString());return zn(async()=>{let s=a.int32();return n&&(s+=a.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,zn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Gu.MAX_BUFFER_SIZE=1e4;function zn(e,t=null){return new class extends Gu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function M5(e){return zn(async()=>W_(e),e.length)}function O5(e){if(!_l(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return zn(async()=>{let n=await L_(e,r=>{if(r instanceof Gu)return{value:r.iterator(),recurse:!1};if(_l(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return k5(n,za.SHORTEST)},t)}function L5(e){if(e===null)return null;let t=e[0];return y5(t)?{value:P5(e),recurse:!1}:{value:null,recurse:!0}}function P5(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof De?Dt(e):fn(e)}var G_=class extends Gu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Vh='"',fd=Symbol("out"),Rk=Symbol("field"),Uh=Symbol("quote"),Yy=Symbol("quoteafterquote"),Mk=Symbol("quoteinquote"),H_=class extends Gu{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new G_(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?r[s]=l:n[s]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=fd;for(let i=0;i<a;i++)switch(s){case fd:switch(e.charAt(i)){case Vh:r=i+1,s=Uh;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=fd;break;default:s=Rk,r=i;break}break;case Rk:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=fd,r=i+1;break;default:}break;case Uh:switch(e.charAt(i)){case Vh:s=Yy;break;default:}break;case Yy:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=fd,r=i+1;break;case Vh:s=Uh;break;default:s=Mk;break}break;case Mk:switch(e.charAt(i)){case Vh:s=Uh;break;default:}break;default:}if(s===Yy?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},z5=class j_ extends Yt{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!G().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new j_(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n,r=await this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],n=[],r=0;return new Promise(a=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(s),a({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((a,s)=>r.set(a,s*n)),r}getTensorFromAudioDataArray(t,n){let r=new Float32Array(w.sizeFromShape(n));return r.set(t,r.length-t.length),fn(r,n)}},B5=class q_ extends Yt{constructor(t,n){if(super(),this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qe([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-r)/2,i=(1-a)/2,o=s+r,l=a+i;this.cropBox=Kr([i,s,l,o],[1,4])}else this.cropBox=Kr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(!G().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new q_(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=zp.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return W(()=>{let n=Kt(oe(t,"float32"),0),r;r=tr.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=r.shape;return B(r,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},K_=class{},X_=class extends Yt{split(e){return new W5(this,e)}},W5=class extends X_{constructor(e,t){super(),this.upstream=e,this.impl=new V5(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},V5=class extends Rw{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},U5=class extends Yt{decodeUTF8(){return new G5(this)}},G5=class extends X_{constructor(e){super(),this.upstream=e,this.impl=new H5(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},H5=class extends Rw{constructor(e){if(super(),this.upstream=e,G().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=xI();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return G().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},Z_=class extends U5{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(G().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function j5(e,t={},n){let r,a;typeof e=="string"?r=e:(r=e.url,a=q5(e));let s=await(n||w.fetch)(r,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new Z_(i,t)}else throw new Error(s.statusText)}var q5=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function J_(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var Y_=class extends K_{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(J_(this.input)&&G().get("IS_NODE")){let e=cx();this.input=e.readFileSync(this.input.slice(7))}return new Z_(this.input,this.options)}},Q_=class extends K_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return J_(this.url)?new Y_(this.url,this.fileOptions).iterator():j5(this.url,this.fileOptions)}};function K5(e,t={}){return new H_(new Q_(e),t)}function X5(e){let t=Dw(e);return zn(async()=>t)}function Z5(e){return zn(async()=>{let t=await e();return Dw(()=>t.next())})}async function J5(e,t){return B5.create(e,t)}async function Y5(e){return z5.create(e)}var Q5="4.21.0";function ge(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var eK=na.whereImpl,Mw=class eC extends Jd{nextDataId(){return eC.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Pc(this,cr())}write(t,n,r){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:r,refCount:1}),a}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let s=r.map(i=>w.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return{dataId:a,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){let n=this.data.get(t);n.refCount--}}move(t,n,r,a,s){this.data.set(t,{values:n,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){let a=this.readSync(r.real.dataId),s=this.readSync(r.imag.dataId);return T.mergeRealAndImagArrays(a,s)}return w.convertBackendValuesAndArrayBuffer(this.data.get(t).values,n)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>w.decodeString(a));return Oe(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(t.shape,t.dtype,n)}makeOutput(t,n,r){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let n=w.now();return t(),{kernelMs:w.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ge([t],"where");let n=this.readSync(t.dataId);return eK(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Mw.nextDataId=0;var Ow={};Ce(Ow,{addImpl:()=>rC,bincountImpl:()=>Pw,bincountReduceImpl:()=>aC,bitwiseAndImpl:()=>sC,castImpl:()=>nC,ceilImpl:()=>iC,concatImpl:()=>zw,equalImpl:()=>oC,expImpl:()=>uC,expm1Impl:()=>pC,floorDivImpl:()=>cC,floorImpl:()=>hC,gatherNdImpl:()=>mC,gatherV2Impl:()=>fC,greaterEqualImpl:()=>yC,greaterImpl:()=>gC,lessEqualImpl:()=>xC,lessImpl:()=>bC,linSpaceImpl:()=>vC,logImpl:()=>wC,maxImpl:()=>kC,maximumImpl:()=>IC,minimumImpl:()=>SC,multiplyImpl:()=>Bw,negImpl:()=>NC,notEqualImpl:()=>TC,prodImpl:()=>_C,raggedGatherImpl:()=>CC,raggedRangeImpl:()=>EC,raggedTensorToTensorImpl:()=>$C,rangeImpl:()=>Vw,rsqrtImpl:()=>AC,scatterImpl:()=>Bs,sigmoidImpl:()=>QK,simpleAbsImpl:()=>tC,sliceImpl:()=>Tc,sparseFillEmptyRowsImpl:()=>DC,sparseReshapeImpl:()=>RC,sparseSegmentReductionImpl:()=>Uw,sqrtImpl:()=>n8,squaredDifferenceImpl:()=>MC,staticRegexReplaceImpl:()=>OC,stridedSliceImpl:()=>LC,stringNGramsImpl:()=>Gw,stringSplitImpl:()=>Hw,stringToHashBucketFastImpl:()=>jw,subImpl:()=>PC,tileImpl:()=>zC,topKImpl:()=>WC,transposeImpl:()=>Ww,uniqueImpl:()=>Kw});function tC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var tK=e=>{let{x:t}=e.inputs,n=e.backend;ge(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=tC(a),n.makeOutput(r,t.shape,t.dtype)},nK={kernelName:Dl,backendName:"cpu",kernelFunc:tK};function _t(e){return(t,n,r,a,s)=>{let i=T.assertAndGetBroadcastShape(t,n),o=i.length,l=w.computeStrides(i),u=w.sizeFromShape(i),d=w.getTypedArrayFromDType(s,u),h=t.length,p=n.length,c=w.computeStrides(t),m=w.computeStrides(n),f=T.getBroadcastDims(t,i),g=T.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<d.length;++y)d[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<d.length;++y){let b=w.indexToLoc(y,o,l),x=b.slice(-h);f.forEach(_=>x[_]=0);let v=w.locToIndex(x,h,c),I=b.slice(-p);g.forEach(_=>I[_]=0);let N=w.locToIndex(I,p,m);d[y]=e(r[v],a[N])}return[d,i]}}function Wn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var rK={kernelName:Wc,backendName:"cpu",kernelFunc:Wn};function Nc(e,t,n="float32"){if(n==="complex64"){let a=Nc(e,t,"float32"),s=Nc(e,t,"float32");return Wn({inputs:{real:a,imag:s},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Qr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var aK={kernelName:Bi,backendName:"cpu",kernelFunc:Qr};function ri(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var sK={kernelName:Qc,backendName:"cpu",kernelFunc:ri};function nC(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=w.toTypedArray([0],n),[s,i]=_t((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function ns(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Qr({inputs:{x:a},backend:n});let d=Nc(n,a.shape,a.dtype),h=ns({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),p=Wn({inputs:{real:h,imag:d},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),p}if(a.dtype==="complex64"){let d=ri({inputs:{input:a},backend:n}),h=ns({inputs:{x:d},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(d),h}if(!w.hasEncodingLoss(a.dtype,s)){let d=Qr({inputs:{x:a},backend:n});return{dataId:d.dataId,shape:d.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=nC(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var iK={kernelName:wi,backendName:"cpu",kernelFunc:ns};function Vt(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;ge([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(u):u,p=i.dtype==="string"?T.fromUint8ToStringArray(d):d,c=r||i.dtype,[m,f]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(f,c,m)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=ns({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,c=l.data.get(h.dataId).values,m=l.data.get(p.dataId).values,f=ns({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[I,N,_]=n(i.shape,o.shape,c,m,x,v),E=l.makeTensorInfo(_,"float32",I),A=l.makeTensorInfo(_,"float32",N),D=Wn({inputs:{real:E,imag:A},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(A),D}else{let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h=r||i.dtype,[p,c]=t(i.shape,o.shape,u,d,h);return l.makeTensorInfo(c,h,p)}}}function Lw(e){return(t,n,r,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(o),u=o.length,d=w.computeStrides(o),h=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),m=T.getBroadcastDims(n,o),f=T.mergeRealAndImagArrays(r,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=n.length,v=w.computeStrides(n);if(c.length+m.length===0)for(let I=0;I<h.length;I++){let N=I%f.length,_=I%g.length,E=e(f[N*2],f[N*2+1],g[_*2],g[_*2+1]);h[I]=E.real,p[I]=E.imag}else for(let I=0;I<h.length;I++){let N=w.indexToLoc(I,u,d),_=N.slice(-y);c.forEach(S=>_[S]=0);let E=w.locToIndex(_,y,b),A=N.slice(-x);m.forEach(S=>A[S]=0);let D=w.locToIndex(A,x,v),F=e(f[E*2],f[E*2+1],g[D*2],g[D*2+1]);h[I]=F.real,p[I]=F.imag}return[h,p,o]}}var rC=_t((e,t)=>e+t),oK=Lw((e,t,n,r)=>({real:e+n,imag:t+r})),Cl=Vt(is,rC,oK),lK={kernelName:is,backendName:"cpu",kernelFunc:Cl};function Pw(e,t,n,r,a){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function aC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Oe([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}var sC=_t((e,t)=>e&t),uK=Vt(Wl,sC),dK={kernelName:Wl,backendName:"cpu",kernelFunc:uK};function ra(e){return(t,n,r)=>{let a=w.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function rt(e,t,n){let r=ra(t);return gs(e,r,n)}function gs(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ge(i,e);let o=s,l=o.data.get(i.dataId).values,u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=T.fromUint8ToStringArray(l)}else u=l;let d=n||i.dtype,h=t(u,d,a);return o.makeTensorInfo(i.shape,d,h)}}var iC=ra(e=>Math.ceil(e)),pK=gs(ki,iC),hK={kernelName:ki,backendName:"cpu",kernelFunc:pK};function zw(e,t,n,r){let a=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let d=u*t[1]+s;for(let h=0;h<i.shape[1];++h)a[d+h]=o[l++]}s+=i.shape[1]})}return a}var oC=_t((e,t)=>e===t?1:0),lC=Vt(Xl,oC,null,"bool"),cK={kernelName:Xl,backendName:"cpu",kernelFunc:lC},uC=ra(e=>Math.exp(e)),dC=gs(Ri,uC,"float32"),mK={kernelName:Ri,backendName:"cpu",kernelFunc:dC},pC=ra(e=>Math.expm1(e)),fK=gs(Mi,pC),gK={kernelName:Mi,backendName:"cpu",kernelFunc:fK},hC=ra(e=>Math.floor(e)),yK=gs(Oi,hC),bK={kernelName:Oi,backendName:"cpu",kernelFunc:yK},cC=_t((e,t)=>Math.floor(e/t)),xK=Vt(Li,cC,null,"int32"),vK={kernelName:Li,backendName:"cpu",kernelFunc:xK};function mC(e,t,n,r,a,s,i,o,l){let u=Oe([r,s],n);for(let d=0;d<r;d++){let h=[],p=0;for(let c=0;c<a;c++){let m=e[d*a+c];p+=m*i[c],h.push(m)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)u.values[d*s+c]=t.get(...t.indexToLoc(p*s+c))}return u}function fC(e,t,n){let r=Oe(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[a]=e.values[u])}return r}var gC=_t((e,t)=>e>t?1:0),wK=Vt(eu,gC,null,"bool"),kK={kernelName:eu,backendName:"cpu",kernelFunc:wK},yC=_t((e,t)=>e>=t?1:0),IK=Vt(zi,yC,null,"bool"),SK={kernelName:zi,backendName:"cpu",kernelFunc:IK},bC=_t((e,t)=>e<t?1:0),NK=Vt(tu,bC,null,"bool"),TK={kernelName:tu,backendName:"cpu",kernelFunc:NK},xC=_t((e,t)=>e<=t?1:0),_K=Vt(nu,xC,null,"bool"),CK={kernelName:nu,backendName:"cpu",kernelFunc:_K};function vC(e,t,n){let r=(t-e)/(n-1),a=w.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var wC=ra(e=>Math.log(e)),EK=gs(Hi,wC),$K={kernelName:Hi,backendName:"cpu",kernelFunc:EK};function kC(e,t,n,r){let a=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[s]=o}return a}var IC=_t((e,t)=>Math.max(e,t)),AK=Vt(Xi,IC),FK={kernelName:Xi,backendName:"cpu",kernelFunc:AK},SC=_t((e,t)=>Math.min(e,t)),DK=Vt(Qi,SC),RK={kernelName:Qi,backendName:"cpu",kernelFunc:DK},Bw=_t((e,t)=>e*t),MK=Lw((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),qm=Vt(no,Bw,MK),OK={kernelName:no,backendName:"cpu",kernelFunc:qm};function NC(e,t,n){let r=w.createScalarValue(-1,n);return Bw([],t,r,e,n)}function LK(e){let{inputs:t,backend:n}=e,{x:r}=t;ge(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=NC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var PK={kernelName:du,backendName:"cpu",kernelFunc:LK},TC=_t((e,t)=>e!==t?1:0),zK=Vt(pu,TC,null,"bool"),BK={kernelName:pu,backendName:"cpu",kernelFunc:zK};function Ww(e,t,n,r,a){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(a),u=w.getTypedArrayFromDType(n,w.sizeFromShape(a));for(let d=0;d<i;++d){let h=w.indexToLoc(d,s,o),p=new Array(h.length);for(let m=0;m<p.length;m++)p[m]=h[r[m]];let c=w.locToIndex(p,s,l);u[c]=e[d]}return u}function Fn(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ge(a,"transpose");let i=a.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=a.shape[s[d]];let l=r.data.get(a.dataId).values,u=Ww(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var WK={kernelName:ha,backendName:"cpu",kernelFunc:Fn};function _C(e,t,n,r){let[a,s]=T.computeOutAndReduceShapes(e,r),i=ir(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(a),i),l=w.sizeFromShape(s);for(let u=0;u<o.length;++u){let d=u*l,h=1;for(let p=0;p<l;++p)h*=n[d+p];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function VK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"prod");let o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=T.getAxesPermutation(l,o),d=l,h=a,p=[];u!=null&&(h=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),d=T.getInnerMostAxes(d.length,o));let c=n.data.get(h.dataId).values,{outVals:m,outShape:f,outDtype:g}=_C(h.shape,h.dtype,c,d),y=f;return i&&(y=T.expandShapeToKeepDim(f,l)),p.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var UK={kernelName:oo,backendName:"cpu",kernelFunc:VK};function GK(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=w.indexToLoc(a,t.length,w.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function HK(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function jK(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);HK(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let d=t[u+1];for(let h=1;h<l+1;++h)o[u].push(h*d)}for(let u=0;u<e.length;++u){let d=e[u],h=e[u]+1;for(let p=0;p<n.length;++p){let c=n[p],m=p+t.length-1;if(m>=0){let f=o[m],g=f[f.length-1]-c[d];for(let y=d;y<h;++y)o[m].push(c[y+1]+g)}d=c[d],h=c[h]}h!==d&&(a.push([d,h]),s+=h-d)}return{outSplits:o,valueSlices:a,numValues:s}}function qK(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=w.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function Ok(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function KK(e,t,n,r,a,s){let i=Ok(t,2)[1],o=Ok(s,2)[1],l=0;for(let u of n)for(let d=u[0];d<u[1];++d){for(let h=0;h<r;++h)a[l*o+h]=e[d*i+h];++l}}function XK(e,t,n,r,a){let s=t.slice();s[0]=a;let i=w.getArrayFromDType(n,w.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return KK(e,t,r,l,i,s),[i,s]}function CC(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(GK(s,i,l),r.length===0)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:d,valueSlices:h,numValues:p}=jK(s,i,e,u),c=qK(d),m=XK(n,r,a,h,p);return[c,m[0],m[1]]}var Lk=2147483647;function EC(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=a.length===0,u=i.length===0,d=[];o||d.push(t[0]),l||d.push(a[0]),u||d.push(i[0]);for(let g=1;g<d.length;++g)if(d[g]!==d[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=d.length===0?1:d[0],p=w.getArrayFromDType("int32",h+1);p[0]=0;for(let g=0;g<h;++g){let y=o?e[0]:e[g],b=l?r[0]:r[g],x=u?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>Lk)throw new Error(`Requires ((limit - start) / delta) <= ${Lk}`);p[g+1]=p[g]+v}let c=p[h],m=w.getArrayFromDType(n,c),f=0;for(let g=0;g<h;++g){let y=p[g+1]-p[g],b=o?e[0]:e[g],x=u?s[0]:s[g];for(let v=0;v<y;++v)m[f++]=b,b+=x}return[p,m]}var hr=T.RowPartitionType,ZK=class jb{constructor(t,n,r,a,s,i,o,l,u,d){this.shape=t,this.shapeShape=n,this.values=r,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=T.getRowPartitionTypesHelper(d),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===hr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===hr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case hr.VALUE_ROWIDS:return jb.getMaxWidthValueRowID(n);case hr.ROW_SPLITS:return jb.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${hr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let n=t.length;if(n===0||n===1)return 0;let r=0;for(let a=0;a<n-1;++a){let s=t[a+1]-t[a];s>r&&(r=s)}return r}static getMaxWidthValueRowID(t){let n=t.length;if(n===0)return 0;let r=0,a=t[0],s=0;for(let i=1;i<n;++i){let o=t[i];o!==a&&(a=o,s=Math.max(i-r,s),r=i)}return Math.max(n-r,s)}tensorShapeFromTensor(t,n,r=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zk(t,r)}calculateOutputSize(t){let n=this.valuesShape,r=this.defaultValueShape;T.validateDefaultValueShape(r,n);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=T.combineRaggedTensorToTensorShapes(this.raggedRank,a,n);s[0]<0&&(s[0]=t);for(let i=1;i<=this.raggedRank;++i)s[i]<0&&(s[i]=this.getMaxWidth(i));return s}calculateFirstParentOutputIndex(t,n,r){let a=Math.min(t,r),s=[],i=0;for(let o=0;o<a;++o,i+=n)s.push(i);for(let o=a;o<t;++o)s.push(-1);return w.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,n,r,a){let s=t.length,i=[];for(let o=0;o<s-1;++o){let l=t[o+1]-t[o],u=Math.min(a,l),d=n[o];d===-1&&(u=0);for(let h=0;h<u;++h)i.push(d),d+=r;for(let h=0;h<l-u;++h)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,n,r,a){let s=t.length,i=[];if(s===0)return[];let o=0,l=t[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let d=1;d<s;++d){let h=t[d];if(h===l)u>=0&&(++o,o<a?u+=r:u=-1);else{if(o=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,n,r,a){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case hr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,n,r,a);case hr.ROW_SPLITS:if(s.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(s,n,r,a);default:throw new Error(`Unsupported partition type: ${hr[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let n=this.rowPartitionTypes[0];switch(n){case hr.FIRST_DIM_SIZE:return t[0];case hr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case hr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${hr[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*n[i+1];let a=zk(n,!1),s=w.getArrayFromDType(this.valuesDType,w.sizeFromShape(a));if(r[0]*n[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],n[o]);this.setOutput(this.raggedRank,i,s,a)}return[a,s]}setOutput(t,n,r,a){if(r.length===0)return;let s=this.values,i=r,o=a.slice();o=o.slice(t+1);let l=w.sizeFromShape(o),u=n.length,d=this.defaultValue;if(d.length!==l&&d.length!==1){let m=this.defaultValueShape;W(()=>{let f=B(d,m);d=Ws(f,o).dataSync()})}let h=0,p=0,c=0;for(let m=0;m<=u;++m){let f=m<u?n[m]:-1;if(f===c){++c;continue}if(p<c){let g=s.subarray(h*l),y=i.subarray(p*l),b=(c-p)*l;Pk(y,g,b)}if(m>=u){let g=r.length;f=Math.floor(g/l)}if(f>c)if(this.defaultValue.length===1)i.subarray(c*l,f*l).fill(this.defaultValue[0]),c=f;else for(;f>c;){let g=i.slice(c*l);Pk(g,d,l),++c}f<0?(h=m+1,p=c):(h=m,p=c,c=p+1)}}};function Pk(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function zk(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function $C(e,t,n,r,a,s,i,o,l,u){return new ZK(e,t,n,r,a,s,i,o,l,u).compute()}function Vw(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var AC=ra(e=>1/Math.sqrt(e)),JK=gs(go,AC),YK={kernelName:go,backendName:"cpu",kernelFunc:JK};function Bs(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],h=e.values,p=t.values;if(r===0)return Oe(n,t.dtype);let c=l instanceof Ft?l:Oe(d,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=h[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<a;y++)u?c.values[g*a+y]+=p[m*a+y]:c.values[g*a+y]=t.rank===0?p[0]:p[m*a+y]}return c}var QK=ra(e=>1/(1+Math.exp(-e))),FC=rt(wo,e=>1/(1+Math.exp(-e))),e8={kernelName:wo,backendName:"cpu",kernelFunc:FC};function Tc(e,t,n,r,a){let s=zt.isSliceContinous(r,t,n),i=w.sizeFromShape(n),o=w.computeStrides(r);if(s){let h=zt.computeFlatOffset(t,o);return a==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,u=Oe(r,a,l),d=Oe(n,a);for(let h=0;h<d.size;++h){let p=d.indexToLoc(h),c=p.map((m,f)=>m+t[f]);d.set(u.get(...c),...p)}return a==="string"?T.fromStringArrayToUint8(d.values):d.values}function ai(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ge(a,"slice");let[o,l]=zt.parseSliceParams(a,s,i);zt.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,d=Tc(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}var t8={kernelName:Su,backendName:"cpu",kernelFunc:ai};function DC(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(a,0);return[g,[0,h],y,u,d]}let p=!0,c=0,m=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++m[y],p=p&&y>=c,c=y}let f=!0;for(let g=0;g<l;++g){let y=m[g]===0;u[g]=y,f=f&&!y,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&p){let g=e,y=r;for(let b=0;b<o;++b)d[b]=b;return[g,[o,h],y,u,d]}else{let g=m[l-1],y=w.getArrayFromDType(n,g*h),b=w.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let v=0;v<o;++v){let I=e[v*h],N=x[I],_=(I===0?0:m[I-1])+N;x[I]++;for(let E=0;E<h;++E)y[_*h+E]=e[v*h+E];b[_]=r[v],d[v]=_}for(let v=0;v<l;++v)if(x[v]===0){let I=v===0?0:m[v-1];y[I*h+0]=v;for(let N=1;N<h;++N)y[I*h+N]=0;b[I]=i}return[y,[g,h],b,u,d]}}function RC(e,t,n,r,a){let s=w.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let f=0;f<o;++f){let g=a[f];if(g===-1){if(d!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,f));d=f,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(f,g));u*=g,l.push(g)}}if(d!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let f=Math.trunc(s/u);if(u*f!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=f}if(w.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let f=h-2;f>=0;--f)p[f]=p[f+1]*r[f+1]}let c=[];if(o>0){c[o-1]=1;for(let f=o-2;f>=0;--f)c[f]=c[f+1]*l[f+1]}let m=w.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let g=0;for(let y=0;y<h;++y)g+=e[f*h+y]*p[y];for(let y=0;y<o;++y)m[f*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[m,[i,o],l]}function Uw(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce((b,x)=>b*x,1),c=w.getArrayFromDType(n,p);if(o===0)return d>0&&c.fill(i),[c,h];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[m];for(;;){let b=0;if(f<o){if(b=a[f],y===b){++f;continue}if(y>=b)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let x=m;x<f;++x){let v=r[x];if(v<0||v>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<u;I++)c[y*u+I]+=e[v*u+I]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=f-m;if(m=f,++f,g=y+1,y=b,f>o)break}return g<d&&c.fill(i,g*u,d*u),[c,h]}var n8=ra(e=>Math.sqrt(e)),r8=rt(Io,e=>Math.sqrt(e)),a8={kernelName:Io,backendName:"cpu",kernelFunc:r8},MC=_t((e,t)=>{let n=e-t;return n*n}),s8=Vt(To,MC),i8={kernelName:To,backendName:"cpu",kernelFunc:s8},OC=ra((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),o8=gs(mp,OC),l8={kernelName:mp,backendName:"cpu",kernelFunc:o8};function LC(e,t,n,r){let a=Oe(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var u8=class{constructor(e,t,n,r,a,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let y=0;y<d;++y)p+=e[h+y].length;p+=u*this.rightPad.length;let c=l+u+d-1;p+=c*this.separator.length,n[r+i]=new Uint8Array(p);let m=n[r+i],f=0,g=y=>y.forEach(b=>m[f++]=b);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<d-1;++y)g(e[h+y]),g(this.separator);if(d>0){g(e[h+d-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let u=t[l]>=o;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=w.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(d=>{let h=t[o+1]-t[o],p=this.getNumNGrams(h,d);this.createNGrams(e,l,i,u,p,d),u+=p}),this.preserveShort&&u===s[o]){let d=t[o+1]-t[o];if(d===0)continue;let h=d+2*this.padWidth;this.createNGrams(e,l,i,u,1,h)}}return[i,s]}};function Gw(e,t,n,r,a,s,i,o){return new u8(n,r,a,s,i,o).compute(e,t)}function d8(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function Hw(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let p=0;p<r;++p){let c=a.length;d8(e[p],t,n,a);let m=a.length-c;o[p]=m,s+=m,i=Math.max(i,m)}let l=w.getArrayFromDType("int32",s*2),u=new Array(s),d=[r,i],h=0;for(let p=0;p<r;++p)for(let c=0;c<o[p];++c)l[h*2]=p,l[h*2+1]=c,u[h]=a[h],++h;return[l,u,d]}function jw(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var PC=_t((e,t)=>e-t),p8=Lw((e,t,n,r)=>({real:e-n,imag:t-r})),qw=Vt(_o,PC,p8),h8={kernelName:_o,backendName:"cpu",kernelFunc:qw};function zC(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Oe(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var xd=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function BC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,u=Math.log(o),d=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),p=Math.max(n,Math.floor(t-l*d/o+h)),c=Math.min(r,Math.floor(t+(o-l)*d/o+h));BC(e,t,p,c)}let a=e[t],s=n,i=r;for(w.swap(e,n,t),xd(e[r],a)>0&&w.swap(e,n,r);s<i;){for(w.swap(e,s,i),s++,i--;xd(e[s],a)<0;)s=s+1;for(;xd(e[i],a)>0;)i=i-1}xd(e[n],a)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function WC(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(n,i*r),u=w.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let p=h*o,c=e.subarray(p,p+o),m=new Array(c.length);c.forEach((b,x)=>m[x]={value:b,index:x}),r<m.length&&(BC(m,r),m=m.slice(0,r)),a&&m.sort(xd);let f=h*r,g=l.subarray(f,f+r),y=u.subarray(f,f+r);for(let b=0;b<r;b++)g[b]=m[b].value,y[b]=m[b].index}let d=t.slice();return d[d.length-1]=r,[Oe(d,n,l),Oe(d,"int32",u)]}function Kw(e,t,n,r){let a=w.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<a;m++)s[0]*=n[m];s[1]=n[a];for(let m=a+1;m<n.length;m++)s[2]*=n[m];let i=new Map,o=new Int32Array(n[a]),l=new Ft(s,r,e),u=[],d=s[0]===1&&s[2]===1;for(let m=0;m<n[a];m++){let f;if(d)f=e[m].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(l.get(b,m,x));f=y.join(",")}let g=i.get(f);if(g!=null)o[m]=g;else{let y=i.size;i.set(f,y),o[m]=y,u.push(m)}}let h=s.slice();h[1]=i.size;let p=new Ft(h,r);u.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)p.set(l.get(g,m,y),g,f,y)});let c=n.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var c8="4.21.0";nm("cpu",()=>new Mw,1);var VC=rt(Fi,e=>e>=0?e:Math.exp(e)-1),m8={kernelName:Fi,backendName:"cpu",kernelFunc:VC};function UC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ge([a],"leakyRelu");let i=w.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var f8={kernelName:Gi,backendName:"cpu",kernelFunc:UC},g8=_t((e,t)=>e<0?t*e:e);function GC(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ge([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=g8(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var y8={kernelName:io,backendName:"cpu",kernelFunc:GC},HC=rt(uo,e=>Math.max(0,e)),b8={kernelName:uo,backendName:"cpu",kernelFunc:HC},jC=rt(co,e=>Math.min(Math.max(0,e),6)),x8={kernelName:co,backendName:"cpu",kernelFunc:jC};function _c(e,t,n,r,a){if(n==="linear")return Qr({inputs:{x:t},backend:e});if(n==="relu")return HC({inputs:{x:t},backend:e});if(n==="elu")return VC({inputs:{x:t},backend:e});if(n==="relu6")return jC({inputs:{x:t},backend:e});if(n==="prelu")return GC({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return UC({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return FC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ft(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=w.sizeFromShape(a.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(u.complexTensorInfos!=null){let d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;d.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var v8={kernelName:yu,backendName:"cpu",kernelFunc:ft};function qC(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ge([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=Mu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],v=o?[y,c,h]:[y,h,c],I=ft({inputs:{x:a},backend:n,attrs:{shape:x}}),N=ft({inputs:{x:s},backend:n,attrs:{shape:v}}),_=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?N.shape[1]:N.shape[2],D=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(N.dataId).values,M=w.computeStrides(I.shape),z=w.computeStrides(N.shape),[U,H,q]=i?[M[0],1,M[1]]:[M[0],M[1],1],[K,J,Q]=o?[1,z[1],z[0]]:[z[1],1,z[0]],ee=E*A,re=Oe([D,E,A],I.dtype),te=re.values,ae=n.blockSize;for(let se=0;se<D;se++){let xe=se%g,ue=se%y;for(let be=0;be<E;be+=ae){let ke=Math.min(be+ae,E);for(let Se=0;Se<A;Se+=ae){let Le=Math.min(Se+ae,A);for(let We=0;We<_;We+=ae){let dt=Math.min(We+ae,_);for(let Ye=be;Ye<ke;Ye++)for(let Ze=Se;Ze<Le;Ze++){let Je=0;for(let Ae=We;Ae<dt;Ae++){let ht=F[xe*U+Ye*H+Ae*q],Rn=S[Ae*K+Ze*J+ue*Q];Je+=ht*Rn}te[se*ee+(Ye*A+Ze)]+=Je}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,re.dtype,re.values)}var w8={kernelName:vi,backendName:"cpu",kernelFunc:qC};function k8(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p,c,m,f=[];p=qC({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(c=Cl({inputs:{a:p,b:i},backend:n}),f.push(p),p=c),d&&(m=_c(n,p,d,o,h),f.push(p),p=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return p}var I8={kernelName:js,backendName:"cpu",kernelFunc:k8},S8=rt(pi,e=>Math.acos(e)),N8={kernelName:pi,backendName:"cpu",kernelFunc:S8},T8=rt(hi,e=>Math.acosh(e)),_8={kernelName:hi,backendName:"cpu",kernelFunc:T8};function C8(e){let{inputs:t,backend:n}=e,r=t;ge(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Oe(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var E8={kernelName:ci,backendName:"cpu",kernelFunc:C8};function $8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"all");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x&&I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var A8={kernelName:Rl,backendName:"cpu",kernelFunc:$8};function F8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"any");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x||I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var D8={kernelName:Ml,backendName:"cpu",kernelFunc:F8};function R8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ge(a,"argMax");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=Fn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(d),c=w.makeZerosTypedArray(p,"int32"),m=w.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I>b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(d,"int32",c)}var M8={kernelName:Ol,backendName:"cpu",kernelFunc:R8};function O8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ge(a,"argMin");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=Fn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(d),c=w.makeZerosTypedArray(p,"int32"),m=w.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I<b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(d,"int32",c)}var L8={kernelName:Ll,backendName:"cpu",kernelFunc:O8},P8=rt(mi,e=>Math.asin(e)),z8={kernelName:mi,backendName:"cpu",kernelFunc:P8},B8=rt(fi,e=>Math.asinh(e)),W8={kernelName:fi,backendName:"cpu",kernelFunc:B8},V8=rt(gi,e=>Math.atan(e)),U8={kernelName:gi,backendName:"cpu",kernelFunc:V8},G8=_t((e,t)=>Math.atan2(e,t)),H8=Vt(bi,G8),j8={kernelName:bi,backendName:"cpu",kernelFunc:H8},q8=rt(yi,e=>Math.atanh(e)),K8={kernelName:yi,backendName:"cpu",kernelFunc:q8};function Xw(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,c=a.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Oe(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let I=v*y,N=v*r[0];for(let _=0;_<a.inChannels;++_)for(let E=0;E<a.outHeight;++E){let A=E*i-p,D=Math.max(0,A),F=Math.min(a.inHeight,d+A),S=I+E*b;for(let M=0;M<a.outWidth;++M){let z=M*o-c,U=Math.max(0,z),H=Math.min(a.inWidth,h+z),q=m,K=0,J=0;for(let ee=D;ee<F;ee+=l){let re=N+ee*r[1];for(let te=U;te<H;te+=u){let ae=re+te*r[2],se=e[ae+_];s==="max"&&se>q?q=se:s==="avg"&&(K+=se,J++)}if(isNaN(q))break}let Q=S+M*x+_;g[Q]=s==="avg"?K/J:q}}}return f}function KC(e,t,n,r,a=!1,s=!1){let i=Oe(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=Oe(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,v=x;for(;v<0;)v+=u;let I=Math.min(r.inHeight,h+x);for(let N=0;N<r.outWidth;++N){let _=N*l-m,E=_;for(;E<0;)E+=d;let A=Math.min(r.inWidth,p+_),D=Number.NEGATIVE_INFINITY,F=-1;for(let S=v;S<I;S+=u){let M=S-x;for(let z=E;z<A;z+=d){let U=z-_,H=f.get(g,S,z,y);H>D&&(D=H,a?F=s?((g*r.inHeight+S)*r.inWidth+z)*r.inChannels+y:(S*r.inWidth+z)*r.inChannels+y:F=M*p+U)}}i.set(F,g,b,N,y)}}return i}function XC(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Oe(a.outShape,n),v=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],_=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let D=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let M=0;M<a.outDepth;++M){let z=M*i-f,U=z;for(;U<0;)U+=u;let H=Math.min(a.inDepth,p+z),q=D+M*N;for(let K=0;K<a.outHeight;++K){let J=K*o-g,Q=J;for(;Q<0;)Q+=d;let ee=Math.min(a.inHeight,c+J),re=q+K*_;for(let te=0;te<a.outWidth;++te){let ae=te*l-y,se=ae;for(;se<0;)se+=h;let xe=Math.min(a.inWidth,m+ae),ue=re+te*E,be=b,ke=0,Se=0;for(let We=U;We<H;We+=u){let dt=F+We*r[1];for(let Ye=Q;Ye<ee;Ye+=d){let Ze=dt+Ye*r[2];for(let Je=se;Je<xe;Je+=h){let Ae=Ze+Je*r[3],ht=e[Ae+S];if(s==="max"&&ht>be?be=ht:s==="avg"&&(ke+=ht,Se++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}let Le=ue+S;v[Le]=s==="avg"?ke/Math.max(Se,1):be}}}}return x}function X8(e,t){let n=Oe(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-p,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let I=0;I<t.outHeight;++I){let N=I*a-c,_=N;for(;_<0;)_+=o;let E=Math.min(t.inHeight,d+N);for(let A=0;A<t.outWidth;++A){let D=A*s-m,F=D;for(;F<0;)F+=l;let S=Math.min(t.inWidth,h+D),M=Number.NEGATIVE_INFINITY,z=-1;for(let U=x;U<v;U+=i){let H=U-b;for(let q=_;q<E;q+=o){let K=q-N;for(let J=F;J<S;J+=l){let Q=J-D,ee=e.get(f,U,q,J,g);ee>=M&&(M=ee,z=H*d*h+K*d+Q)}}}n.set(z,f,y,I,A,g)}}}return n}function Z8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ge(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))h=Qr({inputs:{x:a},backend:n});else{let p=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Xw(p,a.shape,a.dtype,c,d,"avg");h=n.makeTensorInfo(d.outShape,a.dtype,m.values)}return h}var J8={kernelName:xi,backendName:"cpu",kernelFunc:Z8};function Y8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ge(a,"avgPool3d");let d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,p=XC(h,a.shape,a.dtype,w.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var Q8={kernelName:Pl,backendName:"cpu",kernelFunc:Y8};function eX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ge([a,s],"avgPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=d.strideDepth,p=d.strideHeight,c=d.strideWidth,m=d.filterDepth,f=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,b=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterDepth,I=d.effectiveFilterHeight,N=d.effectiveFilterWidth,_=v-1-d.padInfo.front,E=N-1-d.padInfo.left,A=I-1-d.padInfo.top,D=Oe(s.shape,"float32"),F=1/(m*f*g),S=n.bufferSync(a);for(let M=0;M<d.batchSize;++M)for(let z=0;z<d.inChannels;++z)for(let U=0;U<d.inDepth;++U)for(let H=0;H<d.inHeight;++H)for(let q=0;q<d.inWidth;++q){let K=U-_,J=H-A,Q=q-E,ee=0;for(let re=0;re<v;re+=y){let te=(K+re)/h;if(!(te<0||te>=d.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let se=(J+ae)/p;if(!(se<0||se>=d.outHeight||Math.floor(se)!==se))for(let xe=0;xe<N;xe+=x){let ue=(Q+xe)/c;if(ue<0||ue>=d.outWidth||Math.floor(ue)!==ue)continue;let be=S.get(M,te,se,ue,z);ee+=be}}}D.set(ee*F,M,U,H,q,z)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}var tX={kernelName:ep,backendName:"cpu",kernelFunc:eX};function nX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ge([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),h=d.strideHeight,p=d.strideWidth,c=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,x=b-1-d.padInfo.left,v=y-1-d.padInfo.top,I=Oe(i.shape,"float32"),N=1/(c*m),_=n.data.get(a.dataId).values,E=Oe(a.shape,"float32",_);for(let A=0;A<d.batchSize;++A)for(let D=0;D<d.inChannels;++D)for(let F=0;F<d.inHeight;++F)for(let S=0;S<d.inWidth;++S){let M=F-v,z=S-x,U=0;for(let H=0;H<y;H+=f){let q=(M+H)/h;if(!(q<0||q>=d.outHeight||Math.floor(q)!==q))for(let K=0;K<b;K+=g){let J=(z+K)/p;if(J<0||J>=d.outWidth||Math.floor(J)!==J)continue;let Q=E.get(A,q,J,D);U+=Q}}I.set(U*N,A,F,S,D)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var rX={kernelName:Qd,backendName:"cpu",kernelFunc:nX};function aX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ge([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);let d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(d.length),g=m.length,y=c.length,b=p.length,x=h.length,v=0,I=0,N=0,_=0;for(let E=0;E<d.length;++E)f[E]=m[v++]+(d[E]-h[I++])*c[N++]/Math.sqrt(p[_++]+u),v>=g&&(v=0),I>=x&&(I=0),N>=y&&(N=0),_>=b&&(_=0);return n.makeTensorInfo(a.shape,a.dtype,f)}var sX={kernelName:Pi,backendName:"cpu",kernelFunc:aX};function iX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ge([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=ft({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Fn({inputs:{x:c},backend:n,attrs:{perm:u}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ai({inputs:{x:f},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var oX={kernelName:zl,backendName:"cpu",kernelFunc:iX};function lX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=Pw(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var uX={kernelName:Bl,backendName:"cpu",kernelFunc:lX};function dX(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var pX={kernelName:tp,backendName:"cpu",kernelFunc:dX},hX=rt(os,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),cX={kernelName:os,backendName:"cpu",kernelFunc:hX},mX=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let d=o[u],h=l[u];r[u]=Math.hypot(d,h)}return n.makeOutput(r,t.shape,"float32")},fX={kernelName:np,backendName:"cpu",kernelFunc:mX};function El(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var gX={kernelName:Xc,backendName:"cpu",kernelFunc:El};function $l(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(f=>f.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(f=>f.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(f=>w.sizeFromShape(f.shape)>0);if(l.length===1)return Qr({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){let f=l.map(v=>ri({inputs:{input:v},backend:n})),g=l.map(v=>El({inputs:{input:v},backend:n})),y=$l({inputs:f,backend:n,attrs:{axis:s}}),b=$l({inputs:g,backend:n,attrs:{axis:s}}),x=Wn({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let u=l.map(f=>{let g=[-1,w.sizeFromShape(f.shape.slice(s))];return ft({inputs:{x:f},backend:n,attrs:{shape:g}})}),d=u.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));o=T.computeOutShape(u.map(f=>f.shape),1);let h=u[0].shape[0]===1,p=zw(d,o,t[0].dtype,h),c=T.computeOutShape(l.map(f=>f.shape),s),m=n.makeTensorInfo(c,t[0].dtype,p);return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var yX={kernelName:Vl,backendName:"cpu",kernelFunc:$l};function ZC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;ge([a,s],"conv2d");let h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c=p.filterHeight,m=p.filterWidth,f=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x=p.dataFormat==="channelsLast",v=new Ft(p.outShape,a.dtype),I=w.computeStrides(a.shape),N=w.computeStrides(s.shape),_=I[0],E=x?I[1]:I[2],A=x?I[2]:1,D=x?1:I[1],F=v.strides[0],S=x?v.strides[1]:v.strides[2],M=x?v.strides[2]:1,z=x?1:v.strides[1],U=n.data.get(a.dataId).values,H=n.data.get(s.dataId).values,q=v.values;for(let K=0;K<p.batchSize;++K){let J=K*_,Q=K*F;for(let ee=0;ee<p.outHeight;++ee){let re=Q+ee*S,te=ee*p.strideHeight-b;for(let ae=0;ae<c;++ae){let se=te+ae*f;if(se<0||se>=p.inHeight)continue;let xe=ae*N[0],ue=J+se*E;for(let be=0;be<p.outWidth;++be){let ke=re+be*M,Se=be*p.strideWidth-y;for(let Le=0;Le<m;++Le){let We=Se+Le*g;if(We<0||We>=p.inWidth)continue;let dt=xe+Le*N[1],Ye=ue+We*A,Ze=dt;for(let Je=0;Je<p.inChannels;++Je){let Ae=U[Ye+Je*D];for(let ht=0;ht<p.outChannels;++ht)q[ke+ht*z]+=Ae*H[Ze+ht];Ze+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,q)}var bX={kernelName:Ii,backendName:"cpu",kernelFunc:ZC};function xX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;ge([a,s],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=p,y=p.dataFormat==="channelsLast",b=new Ft(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,_=new Ft(a.shape,a.dtype,I),E=new Ft(s.shape,s.dtype,N);for(let A=0;A<f;++A){let D=Math.max(0,Math.ceil((v-A)/c)),F=Math.min(p.outHeight,(p.inHeight+v-A)/c);for(let S=0;S<g;++S){let M=Math.max(0,Math.ceil((x-S)/m)),z=Math.min(p.outWidth,(p.inWidth+x-S)/m);for(let U=0;U<p.inChannels;++U)for(let H=0;H<p.outChannels;++H){let q=0;for(let K=0;K<p.batchSize;++K)for(let J=D;J<F;++J){let Q=A+J*c-v;for(let ee=M;ee<z;++ee){let re=S+ee*m-x;y?q+=_.get(K,Q,re,U)*E.get(K,J,ee,H):q+=_.get(K,U,Q,re)*E.get(K,H,J,ee)}}b.set(q,A,S,U,H)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var vX={kernelName:Vc,backendName:"cpu",kernelFunc:xX};function wX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;ge([a,s],"conv2dBackpropInput");let h=w.computeStrides(s.shape),p=w.computeStrides(a.shape),c=T.convertConv2DDataFormat(u),m=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),f=new Ft(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,I]=h,{batchSize:N,filterHeight:_,filterWidth:E,inChannels:A,inHeight:D,inWidth:F,outChannels:S,outHeight:M,outWidth:z,strideHeight:U,strideWidth:H}=m;c=m.dataFormat;let q=_-1-m.padInfo.top,K=E-1-m.padInfo.left,J=c==="channelsLast",Q=f.strides[0],ee=J?f.strides[1]:f.strides[2],re=J?f.strides[2]:1,te=J?1:f.strides[1],ae=p[0],se=J?p[1]:p[2],xe=J?p[2]:1,ue=J?1:p[1];for(let be=0;be<N;++be)for(let ke=0;ke<A;++ke)for(let Se=0;Se<D;++Se){let Le=Se-q,We=Math.max(0,Math.ceil(Le/U)),dt=Math.min(M,(_+Le)/U);for(let Ye=0;Ye<F;++Ye){let Ze=Ye-K,Je=Math.max(0,Math.ceil(Ze/H)),Ae=Math.min(z,(E+Ze)/H),ht=0;for(let Ct=We;Ct<dt;++Ct){let Zn=Ct*U-Le;for(let en=Je;en<Ae;++en){let In=en*H-Ze,Jn=ae*be+se*Ct+xe*en,Sn=x*(_-1-Zn)+v*(E-1-In)+I*ke;for(let at=0;at<S;++at){let Nn=y[Jn+ue*at],Mn=b[Sn+at];ht+=Nn*Mn}}}let Rn=Q*be+ee*Se+re*Ye+te*ke;g[Rn]=ht}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var kX={kernelName:Si,backendName:"cpu",kernelFunc:wX};function IX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;ge([a,s],"conv3d");let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ft(u.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,_=v.values,E=w.computeStrides(a.shape),A=w.computeStrides(s.shape);for(let D=0;D<u.batchSize;++D){let F=D*E[0],S=D*v.strides[0];for(let M=0;M<u.outDepth;++M){let z=S+M*v.strides[1],U=M*u.strideDepth-y;for(let H=0;H<d;++H){let q=U+H*c;if(q<0||q>=u.inDepth)continue;let K=H*A[0],J=F+q*E[1];for(let Q=0;Q<u.outHeight;++Q){let ee=z+Q*v.strides[2],re=Q*u.strideHeight-x;for(let te=0;te<h;++te){let ae=re+te*m;if(ae<0||ae>=u.inHeight)continue;let se=K+te*A[1],xe=J+ae*E[2];for(let ue=0;ue<u.outWidth;++ue){let be=ee+ue*u.outChannels,ke=ue*u.strideWidth-b;for(let Se=0;Se<p;++Se){let Le=ke+Se*f;if(Le<0||Le>=u.inWidth)continue;let We=se+Se*A[2],dt=xe+Le*u.inChannels,Ye=We;for(let Ze=0;Ze<u.inChannels;++Ze){let Je=I[dt+Ze];for(let Ae=0;Ae<u.outChannels;++Ae)_[be+Ae]+=Je*N[Ye+Ae];Ye+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var SX={kernelName:Ni,backendName:"cpu",kernelFunc:IX};function NX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;ge([a,s],"conv3dBackpropFilterV2");let u=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=T.computeConv3DInfo(a.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,m=h.strideWidth,f=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ft(h.filterShape,"float32"),x=b.values,[v,I,N,_]=b.strides,E=n.data.get(s.dataId).values,[A,D,F,S]=d,M=n.data.get(a.dataId).values,[z,U,H,q]=u,K=h.padInfo.front,J=h.padInfo.left,Q=h.padInfo.top;for(let ee=0;ee<f;++ee){let re=Math.max(0,Math.ceil((K-ee)/p)),te=Math.min(h.outDepth,(h.inDepth+K-ee)/p),ae=ee*v;for(let se=0;se<g;++se){let xe=Math.max(0,Math.ceil((Q-se)/c)),ue=Math.min(h.outHeight,(h.inHeight+Q-se)/c),be=se*I+ae;for(let ke=0;ke<y;++ke){let Se=Math.max(0,Math.ceil((J-ke)/m)),Le=Math.min(h.outWidth,(h.inWidth+J-ke)/m),We=ke*N+be;for(let dt=0;dt<h.inChannels;++dt){let Ye=dt*_+We;for(let Ze=0;Ze<h.outChannels;++Ze){let Je=0;for(let Ae=0;Ae<h.batchSize;++Ae){let ht=Ae*z,Rn=Ae*A;for(let Ct=re;Ct<te;++Ct){let Zn=(ee+Ct*p-K)*U+ht,en=Ct*D+Rn;for(let In=xe;In<ue;++In){let Jn=(se+In*c-Q)*H+Zn,Sn=In*F+en;for(let at=Se;at<Le;++at){let Nn=(ke+at*m-J)*q+Jn,Mn=at*S+Sn;Je+=M[Nn+dt]*E[Mn+Ze]}}}}x[Ye+Ze]=Je}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var TX={kernelName:Ul,backendName:"cpu",kernelFunc:NX};function _X(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;ge([a],"conv3dBackpropInputV2");let u=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=T.computeConv3DInfo(l,s.shape,o,1,i),p=new Ft(h.inShape,"float32"),c=p.values,[m,f,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,I,N]=u,_=n.data.get(s.dataId).values,[E,A,D,F]=d,{batchSize:S,filterDepth:M,filterHeight:z,filterWidth:U,inChannels:H,inDepth:q,inHeight:K,inWidth:J,outChannels:Q,outDepth:ee,outHeight:re,outWidth:te,strideDepth:ae,strideHeight:se,strideWidth:xe}=h,ue=M-1-h.padInfo.front,be=z-1-h.padInfo.top,ke=U-1-h.padInfo.left;for(let Se=0;Se<S;++Se)for(let Le=0;Le<H;++Le)for(let We=0;We<q;++We){let dt=We-ue,Ye=Math.max(0,Math.ceil(dt/ae)),Ze=Math.min(ee,(M+dt)/ae);for(let Je=0;Je<K;++Je){let Ae=Je-be,ht=Math.max(0,Math.ceil(Ae/se)),Rn=Math.min(re,(z+Ae)/se);for(let Ct=0;Ct<J;++Ct){let Zn=Ct-ke,en=Math.max(0,Math.ceil(Zn/xe)),In=Math.min(te,(U+Zn)/xe),Jn=0;for(let Sn=Ye;Sn<Ze;++Sn){let at=Sn*ae-dt;for(let Nn=ht;Nn<Rn;++Nn){let Mn=Nn*se-Ae;for(let aa=en;aa<In;++aa){let Uo=aa*xe-Zn,Mr=x*Se+v*Sn+I*Nn+N*aa,nd=E*(M-1-at)+A*(z-1-Mn)+D*(U-1-Uo)+F*Le;for(let dr=0;dr<Q;++dr){let Sa=b[Mr+dr],Ut=_[nd+dr];Jn+=Sa*Ut}}}}c[m*Se+f*We+g*Je+y*Ct+Le]=Jn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var CX={kernelName:Gl,backendName:"cpu",kernelFunc:_X},EX=rt(Ti,e=>Math.cos(e)),$X={kernelName:Ti,backendName:"cpu",kernelFunc:EX},AX=rt(_i,e=>Math.cosh(e)),FX={kernelName:_i,backendName:"cpu",kernelFunc:AX};function DX(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,p,c]=a.shape,m=s.shape[0],[f,g]=o,y=Oe([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,I=w.computeStrides(a.shape),N=w.computeStrides(y.shape);for(let _=0;_<m;_++){let E=_*4,A=b[E],D=b[E+1],F=b[E+2],S=b[E+3],M=x[_];if(M>=d)continue;let z=f>1?(F-A)*(h-1)/(f-1):0,U=g>1?(S-D)*(p-1)/(g-1):0;for(let H=0;H<f;H++){let q=f>1?A*(h-1)+H*z:.5*(A+F)*(h-1);if(q<0||q>h-1){for(let K=0;K<g;K++)for(let J=0;J<c;J++){let Q=J+K*N[2]+H*N[1]+_*N[0];y.values[Q]=u}continue}if(l==="bilinear"){let K=Math.floor(q),J=Math.ceil(q),Q=q-K;for(let ee=0;ee<g;ee++){let re=g>1?D*(p-1)+ee*U:.5*(D+S)*(p-1);if(re<0||re>p-1){for(let xe=0;xe<c;xe++){let ue=xe+ee*N[2]+H*N[1]+_*N[0];y.values[ue]=u}continue}let te=Math.floor(re),ae=Math.ceil(re),se=re-te;for(let xe=0;xe<c;xe++){let ue=xe+te*I[2]+K*I[1]+M*I[0],be=v[ue];ue=xe+ae*I[2]+K*I[1]+M*I[0];let ke=v[ue];ue=xe+te*I[2]+J*I[1]+M*I[0];let Se=v[ue];ue=xe+ae*I[2]+J*I[1]+M*I[0];let Le=v[ue],We=be+(ke-be)*se,dt=Se+(Le-Se)*se;ue=xe+ee*N[2]+H*N[1]+_*N[0],y.values[ue]=We+(dt-We)*Q}}}else for(let K=0;K<g;++K){let J=g>1?D*(p-1)+K*U:.5*(D+S)*(p-1);if(J<0||J>p-1){for(let re=0;re<c;re++){let te=re+K*N[2]+H*N[1]+_*N[0];y.values[te]=u}continue}let Q=Math.round(J),ee=Math.round(q);for(let re=0;re<c;re++){let te=re+Q*I[2]+ee*I[1]+M*I[0],ae=re+K*N[2]+H*N[1]+_*N[0];y.values[ae]=v[te]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var RX={kernelName:jl,backendName:"cpu",kernelFunc:DX};function MX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ge(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=Fn({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=ir(u.dtype,"int32"),p=w.makeOnesTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)p[x]=i?1:c[x];else{let v=f(y,b-1);p[x]=i?c[v]*p[v]:c[x]*p[v]}}let g=n.makeTensorInfo(u.shape,h,p);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Fn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var OX={kernelName:Hl,backendName:"cpu",kernelFunc:MX};function LX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ge(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=Fn({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=ir(u.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)p[x]=i?0:c[x];else{let v=f(y,b-1);p[x]=i?c[v]+p[v]:c[x]+p[v]}}let g=n.makeTensorInfo(u.shape,h,p);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Fn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var PX={kernelName:Ci,backendName:"cpu",kernelFunc:LX};function zX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=Pw(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,d)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),d=aC(l,u,i,o);return n.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var BX={kernelName:rp,backendName:"cpu",kernelFunc:zX};function WX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],h=l*s,p=u*s,c=d/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*h*p*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let x=Math.floor(b/s),v=b%s;for(let I=0;I<p;++I){let N=Math.floor(I/s),_=I%s,E=(v*s+_)*c;for(let A=0;A<c;++A){let D=A+E+d*(N+u*(x+l*y));f[g++]=m[D]}}}return n.makeTensorInfo([o,h,p,c],a.dtype,f)}var VX={kernelName:ql,backendName:"cpu",kernelFunc:WX};function JC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;ge([a,s],"depthwiseConv2DNative");let d=w.computeStrides(a.shape),h=w.computeStrides(s.shape),p=l;p==null&&(p=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,I=c.outChannels/c.inChannels,N=new Ft(c.outShape,a.dtype),_=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=N.values;for(let D=0;D<c.batchSize;++D){let F=D*d[0],S=D*N.strides[0];for(let M=0;M<c.outHeight;++M){let z=S+M*N.strides[1],U=M*c.strideHeight-v;for(let H=0;H<m;++H){let q=U+H*g;if(q<0||q>=c.inHeight)continue;let K=H*h[0],J=F+q*d[1];for(let Q=0;Q<c.outWidth;++Q){let ee=z+Q*N.strides[2],re=Q*c.strideWidth-x;for(let te=0;te<f;++te){let ae=re+te*y;if(ae<0||ae>=c.inWidth)continue;let se=K+te*h[1],xe=J+ae*c.inChannels,ue=ee,be=se;for(let ke=0;ke<c.inChannels;++ke){let Se=_[xe+ke];for(let Le=0;Le<I;++Le)A[ue+Le]+=Se*E[be+Le];ue+=I,be+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var UX={kernelName:Ei,backendName:"cpu",kernelFunc:JC};function GX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;ge([a,s],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:c,filterHeight:m,filterWidth:f}=h,g=new Ft(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,I=new Ft(a.shape,a.dtype,v),N=n.data.get(s.dataId).values,_=new Ft(s.shape,s.dtype,N);for(let E=0;E<m;++E){let A=Math.max(0,Math.ceil((b-E)/p)),D=Math.min(h.outHeight,(h.inHeight+b-E)/p);for(let F=0;F<f;++F){let S=Math.max(0,Math.ceil((y-F)/c)),M=Math.min(h.outWidth,(h.inWidth+y-F)/c);for(let z=0;z<h.outChannels;++z){let U=Math.trunc(z/x),H=z%x,q=0;for(let K=0;K<h.batchSize;++K)for(let J=A;J<D;++J){let Q=E+J*p-b;for(let ee=S;ee<M;++ee){let re=F+ee*c-y;q+=I.get(K,Q,re,U)*_.get(K,J,ee,z)}}g.set(q,E,F,U,H)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var HX={kernelName:Uc,backendName:"cpu",kernelFunc:GX};function jX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;ge([a,s],"depthwiseConv2DNativeBackpropInput");let h=w.computeStrides(a.shape),p=w.computeStrides(s.shape),c=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),m=new Ft(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[v,I,N]=h,_=n.data.get(s.dataId).values,[E,A,D]=p,{batchSize:F,filterHeight:S,filterWidth:M,inChannels:z,inHeight:U,inWidth:H,outChannels:q,outHeight:K,outWidth:J,strideHeight:Q,strideWidth:ee}=c,re=S-1-c.padInfo.top,te=M-1-c.padInfo.left,ae=q/z;for(let se=0;se<F;++se)for(let xe=0;xe<z;++xe)for(let ue=0;ue<U;++ue){let be=ue-re,ke=Math.max(0,Math.ceil(be/Q)),Se=Math.min(K,(S+be)/Q);for(let Le=0;Le<H;++Le){let We=Le-te,dt=Math.max(0,Math.ceil(We/ee)),Ye=Math.min(J,(M+We)/ee),Ze=0;for(let Je=ke;Je<Se;++Je){let Ae=Je*Q-be;for(let ht=dt;ht<Ye;++ht){let Rn=ht*ee-We,Ct=v*se+I*Je+N*ht,Zn=E*(S-1-Ae)+A*(M-1-Rn)+D*xe;for(let en=0;en<ae;++en){let In=xe*ae+en,Jn=x[Ct+In],Sn=_[Zn+en];Ze+=Jn*Sn}}}f[g*se+y*ue+b*Le+xe]=Ze}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var qX={kernelName:Gc,backendName:"cpu",kernelFunc:jX};function KX(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Oe([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var XX={kernelName:ap,backendName:"cpu",kernelFunc:KX},ZX={kernelName:$i,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,d=r.shape.length,h=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:c,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:I,filterHeight:N,filterWidth:_,dilationHeight:E,dilationWidth:A,outShape:D}=T.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=w.sizeFromShape(D),S=D.length,M=w.getArrayFromDType(r.dtype,F);for(let z=0;z<c;++z)for(let U=0;U<y;++U){let H=U*v-x.top;for(let q=0;q<b;++q){let K=q*I-x.left;for(let J=0;J<g;++J){let Q=Number.MIN_SAFE_INTEGER;for(let re=0;re<N;++re){let te=H+re*E;if(te>=0&&te<m)for(let ae=0;ae<_;++ae){let se=K+ae*A;if(se>=0&&se<f){let xe=w.locToIndex([z,te,se,J],d,w.computeStrides(r.shape)),ue=w.locToIndex([re,ae,J],p,w.computeStrides(a.shape)),be=u[xe]+h[ue];be>Q&&(Q=be)}}}let ee=w.locToIndex([z,U,q,J],S,w.computeStrides(D));M[ee]=Q}}}return{dataId:l.write(w.toTypedArray(M,r.dtype),D,r.dtype),shape:D,dtype:r.dtype}}},JX={kernelName:ml,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:_,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${ml}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let D=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<p;++S)for(let M=0;M<g;++M){let z=M*x-b.top;for(let U=0;U<y;++U){let H=U*v-b.left;for(let q=0;q<f;++q){let K=Number.MIN_SAFE_INTEGER,J=0,Q=0;for(let ee=0;ee<I;++ee){let re=z+ee*_;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=H+te*E;if(ae>=0&&ae<m){let se=d[S][re][ae][q]+h[ee][te][q];se>K&&(K=se,J=ee,Q=te)}}}F[J][Q][q]+=D[S][M][U][q]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},YX={kernelName:cl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:_,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${cl}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let D=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<p;++S)for(let M=0;M<g;++M){let z=M*x-b.top;for(let U=0;U<y;++U){let H=U*v-b.left;for(let q=0;q<f;++q){let K=Number.MIN_SAFE_INTEGER,J=z<0?0:z,Q=H<0?0:H;for(let ee=0;ee<I;++ee){let re=z+ee*_;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=H+te*E;if(ae>=0&&ae<m){let se=d[S][re][ae][q]+h[ee][te][q];se>K&&(K=se,J=re,Q=ae)}}}F[S][J][Q][q]+=D[S][M][U][q]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function QX(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=l?.alpha||1,d=o?.contextType||"2d";if(d!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(d,o?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${d} type.`);let[p,c]=a.shape.slice(0,2),m=a.shape.length===2?1:a.shape[2],f=n.data.get(a.dataId).values,g=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(c*p*4);for(let x=0;x<p*c;++x){let v=[0,0,0,255*u];for(let N=0;N<m;N++){let _=f[x*m+N];if(a.dtype==="float32"){if(_<0||_>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_}.`)}else if(a.dtype==="int32"&&(_<0||_>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_}.`);m===1?(v[0]=_*g,v[1]=_*g,v[2]=_*g):v[N]=_*g}let I=x*4;y[I+0]=Math.round(v[0]),y[I+1]=Math.round(v[1]),y[I+2]=Math.round(v[2]),y[I+3]=Math.round(v[3])}s.width=c,s.height=p;let b=new ImageData(y,c,p);return h.putImageData(b,0,0),a}var e7={kernelName:Hc,backendName:"cpu",kernelFunc:QX};function Kp(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"sum");let o;a.dtype==="bool"?o=ns({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Qr({inputs:{x:a},backend:n});let l=o.shape.length,u=w.parseAxisParam(s,o.shape),d=T.getAxesPermutation(u,l),h=u,p=o;d!=null&&(p=Fn({inputs:{x:o},backend:n,attrs:{perm:d}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,m]=T.computeOutAndReduceShapes(p.shape,h),f=T.upcastType(p.dtype,"int32"),g=Nc(n,c,f),y=w.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let v=0;v<b.length;++v){let I=v*y,N=0;for(let _=0;_<y;++_)N+=x[I+_];b[v]=N}if(i){let v=T.expandShapeToKeepDim(g.shape,u),I=g;g=ft({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),d!=null&&n.disposeIntermediateTensorInfo(p),g}var t7={kernelName:So,backendName:"cpu",kernelFunc:Kp};function n7(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of d[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=Fn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=ft({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),p===null?p=x:(p=qm({inputs:{a:x,b:p},backend:n}),m.push(p))}f<h-1&&(u[f]>=0&&(p=Kp({inputs:{x:p},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(p)),c--)}for(let f of m)f!==p&&n.disposeIntermediateTensorInfo(f);return p}var r7={kernelName:jc,backendName:"cpu",kernelFunc:n7};function a7(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ge([r,a],"eluGrad");let s=new Float32Array(w.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=0?s[l]=o[l]:s[l]=o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",s)}var s7={kernelName:Kl,backendName:"cpu",kernelFunc:a7},i7=T.ERF_P,o7=T.ERF_A1,l7=T.ERF_A2,u7=T.ERF_A3,d7=T.ERF_A4,p7=T.ERF_A5,h7=rt(Di,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+i7*n);return t*(1-((((p7*r+d7)*r+u7)*r+l7)*r+o7)*r*Math.exp(-n*n))}),c7={kernelName:Di,backendName:"cpu",kernelFunc:h7};function Cc(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),ft({inputs:{x:a},backend:n,attrs:{shape:o}})}var m7={kernelName:Zl,backendName:"cpu",kernelFunc:Cc},f7=_t((e,t)=>e/t),Zw=Vt(Ai,f7),qb={kernelName:Ai,backendName:"cpu",kernelFunc:Zw};function YC(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=w.sizeFromShape(u),h=w.getTypedArrayFromDType("float32",d),p=w.getTypedArrayFromDType("float32",d);for(let g=0;g<a;g++){let y=ai({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=ai({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Wn({inputs:{real:y,imag:b},backend:n}),{real:v,imag:I}=g7(x,t,n),N=T.mergeRealAndImagArrays(v,I);for(let _=0;_<s;_++){let E=T.getComplexWithIndex(N,_);h[g*s+_]=E.real,p[g*s+_]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",p),f=Wn({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function g7(e,t,n){let r=w.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(y7(r)){let o=Kb(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",o.real),d=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),p=Qr({inputs:{x:h},backend:n}),c=qb.kernelFunc({inputs:{a:u,b:h},backend:n}),m=qb.kernelFunc({inputs:{a:d,b:p},backend:n}),f=n.data.get(c.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=b7(o,r,t);return T.splitRealAndImagArrays(l)}}function y7(e){return(e&e-1)===0}function Kb(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=n/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],h=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),c=Wn({inputs:{real:h,imag:p},backend:a}),m=T.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=a.makeTensorInfo(y,"float32",f),x=a.makeTensorInfo(y,"float32",g),v=Wn({inputs:{real:b,imag:x},backend:a}),I=Kb(l,u,i,r,a),N=I.real,_=I.imag,E=[N.length],A=a.makeTensorInfo(E,"float32",N),D=a.makeTensorInfo(E,"float32",_),F=Wn({inputs:{real:A,imag:D},backend:a}),S=Kb(f,g,i,r,a),M=S.real,z=S.imag,U=[M.length],H=a.makeTensorInfo(U,"float32",M),q=a.makeTensorInfo(U,"float32",z),K=Wn({inputs:{real:H,imag:q},backend:a}),J=T.exponents(n,r),Q=[J.real.length],ee=a.makeTensorInfo(Q,"float32",J.real),re=a.makeTensorInfo(Q,"float32",J.imag),te=Wn({inputs:{real:ee,imag:re},backend:a}),ae=qm({inputs:{a:te,b:K},backend:a}),se=Cl({inputs:{a:F,b:ae},backend:a}),xe=qw({inputs:{a:F,b:ae},backend:a}),ue=ri({inputs:{input:se},backend:a}),be=ri({inputs:{input:xe},backend:a}),ke=El({inputs:{input:se},backend:a}),Se=El({inputs:{input:xe},backend:a}),Le=$l({inputs:[ue,be],backend:a,attrs:{axis:0}}),We=$l({inputs:[ke,Se],backend:a,attrs:{axis:0}}),dt=a.data.get(Le.dataId).values,Ye=a.data.get(We.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(ee),a.disposeIntermediateTensorInfo(re),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(xe),a.disposeIntermediateTensorInfo(ue),a.disposeIntermediateTensorInfo(ke),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(Se),a.disposeIntermediateTensorInfo(Le),a.disposeIntermediateTensorInfo(We),{real:dt,imag:Ye}}function b7(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,n),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,a)}return r}function x7(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ft({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=YC(o,!1,n),u=ft({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var v7={kernelName:qc,backendName:"cpu",kernelFunc:x7};function Jw(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||w.inferDtype(a),o=w.getArrayFromDType(i,w.sizeFromShape(r));return k7(o,a,i),t.makeTensorInfo(r,i,o)}var w7={kernelName:sp,backendName:"cpu",kernelFunc:Jw};function k7(e,t,n){e.fill(t)}var I7={kernelName:Jl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,d=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let p=h*l*o*u;for(let c=0;c<o;c++){let m=c*(l*u);for(let f=0;f<l;f++){let g=f*u;for(let y=0;y<u;y++){let b=Math.round(l-f-1),x=p+m+g+y,v=d[x];if(b>=0&&b<l){let I=b*u,N=p+m+I+y;v=d[N]}s[x]=v}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function S7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=ZC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let g=f;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=ft({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=Cl({inputs:{a:f,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else f=Cl({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=f;if(d==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=ft({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=_c(n,f,c,y,m),n.disposeIntermediateTensorInfo(y)}else f=_c(n,f,c,o,m);n.disposeIntermediateTensorInfo(g)}return f}var N7={kernelName:qs,backendName:"cpu",kernelFunc:S7};function T7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=JC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let g=f;f=Cl({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=f;f=_c(n,f,c,o,m),n.disposeIntermediateTensorInfo(g)}return f}var _7={kernelName:Ks,backendName:"cpu",kernelFunc:T7};function C7(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=w.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,h]=T.prepareAndValidate(r,a);if(u===0)return n.makeTensorInfo(l,r.dtype,[]);let p=n.data.get(a.dataId).values,c=n.bufferSync(r),m=mC(p,c,r.dtype,u,o,d,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,m.values)}var E7={kernelName:Ql,backendName:"cpu",kernelFunc:C7};function $7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ge([a,s],"gatherV2");let l=w.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let v=0;v<u.length;++v){let I=u[v];w.assert(I<=d-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${d-1}]`)}let h=o;o==null&&(h=0);let p=w.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,h),m=ft({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=ft({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=n.bufferSync(m),x=fC(b,y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var A7={kernelName:Yl,backendName:"cpu",kernelFunc:$7};function F7(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ft({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=YC(o,!0,n),u=ft({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var D7={kernelName:Kc,backendName:"cpu",kernelFunc:F7},R7=rt(Wi,e=>Number.isFinite(e)?1:0,"bool"),M7={kernelName:Wi,backendName:"cpu",kernelFunc:R7},O7=rt(Vi,e=>Math.abs(e)===1/0?1:0,"bool"),L7={kernelName:Vi,backendName:"cpu",kernelFunc:O7},P7=rt(Ui,e=>Number.isNaN(e)?1:0,"bool"),z7={kernelName:Ui,backendName:"cpu",kernelFunc:P7};function B7(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=vC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var W7={kernelName:ru,backendName:"cpu",kernelFunc:B7},V7=rt(ji,e=>Math.log1p(e)),U7={kernelName:ji,backendName:"cpu",kernelFunc:V7},G7=_t((e,t)=>e&&t),H7=Vt(au,G7,null,"bool"),j7={kernelName:au,backendName:"cpu",kernelFunc:H7},q7=rt(su,e=>e?0:1,"bool"),K7={kernelName:su,backendName:"cpu",kernelFunc:q7},X7=_t((e,t)=>e||t),Z7=Vt(iu,X7,null,"bool"),J7={kernelName:iu,backendName:"cpu",kernelFunc:Z7};function Y7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;ge(a,"LRN");let u=a.shape[3],d=u-1,h=n.data.get(a.dataId).values,p=w.sizeFromShape(a.shape),c=new Float32Array(p);function m(f){let g=f%u,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,d),x=0;for(;y<=b;y++){let v=h[y];x+=v*v}return x}for(let f=0;f<p;f++){let g=m(f),y=h[f]*Math.pow(i+o*g,-l);c[f]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var Q7={kernelName:qi,backendName:"cpu",kernelFunc:Y7};function eZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;ge(i,"LRNGrad");let h=w.sizeFromShape(i.shape),p=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let x=b%p,v=b-x+Math.max(0,x-o),I=b-x+Math.min(p,x+o+1),N=0;for(let _=v;_<I;_++)N+=Math.pow(m[_],2);N=u*N+l;for(let _=v;_<I;_++){let E=-2*u*d*m[_]*f[b]/N;b===_&&(E+=Math.pow(N,-d)),E*=c[b],g[_]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var tZ={kernelName:ou,backendName:"cpu",kernelFunc:eZ};function QC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=w.parseAxisParam(s,l),h=d,p=T.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(p!=null){let v=new Array(u);for(let I=0;I<v.length;I++)v[I]=l[p[I]];c=Ww(c,l,a.dtype,p,v),h=T.getInnerMostAxes(h.length,u),l=v}ge(a,"max"),T.assertAxesAreInnerMostDims("max",h,u);let[m,f]=T.computeOutAndReduceShapes(l,h),g=w.sizeFromShape(f),y=kC(c,g,m,a.dtype),b=o.write(y,m,a.dtype),x=m;return i&&(x=T.expandShapeToKeepDim(m,d)),{dataId:b,shape:x,dtype:a.dtype}}var nZ={kernelName:Ki,backendName:"cpu",kernelFunc:QC};function rZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ge(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))h=Qr({inputs:{x:a},backend:n});else{let p=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Xw(p,a.shape,a.dtype,c,d,"max");h=n.makeTensorInfo(d.outShape,a.dtype,m.values)}return h}var aZ={kernelName:Zi,backendName:"cpu",kernelFunc:rZ};function sZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ge(a,"maxPool3d");let d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,p=XC(h,a.shape,a.dtype,w.computeStrides(a.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var iZ={kernelName:lu,backendName:"cpu",kernelFunc:sZ};function oZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ge([a,s],"maxPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.bufferSync(s),p=X8(h,d),c=d.strideDepth,m=d.strideHeight,f=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,I=d.effectiveFilterWidth,N=x-1-d.padInfo.front,_=I-1-d.padInfo.left,E=v-1-d.padInfo.top,A=Oe(s.shape,"float32"),D=n.bufferSync(a);for(let F=0;F<d.batchSize;++F)for(let S=0;S<d.inChannels;++S)for(let M=0;M<d.inDepth;++M)for(let z=0;z<d.inHeight;++z)for(let U=0;U<d.inWidth;++U){let H=M-N,q=z-E,K=U-_,J=0;for(let Q=0;Q<x;Q+=g){let ee=(H+Q)/c;if(!(ee<0||ee>=d.outDepth||Math.floor(ee)!==ee))for(let re=0;re<v;re+=y){let te=(q+re)/m;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let se=(K+ae)/f;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;let xe=x*v*I-1-p.get(F,ee,te,se,S),ue=Q*v*I+re*I+ae,be=xe===ue?1:0;if(be===0)continue;let ke=D.get(F,ee,te,se,S);J+=ke*be}}}A.set(J,F,M,z,U,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var lZ={kernelName:op,backendName:"cpu",kernelFunc:oZ};function uZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ge([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=T.computePool2DInfo(o.shape,l,u,1,d,h),c=n.data.get(o.dataId).values,m=Oe(p.outShape,o.dtype,KC(c,o.shape,o.dtype,p).values),f=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,I=v-1-p.padInfo.left,N=x-1-p.padInfo.top,_=Oe(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Oe(a.shape,"float32",E);for(let D=0;D<p.batchSize;++D)for(let F=0;F<p.inChannels;++F)for(let S=0;S<p.inHeight;++S)for(let M=0;M<p.inWidth;++M){let z=S-N,U=M-I,H=0;for(let q=0;q<x;q+=y){let K=(z+q)/f;if(!(K<0||K>=p.outHeight||Math.floor(K)!==K))for(let J=0;J<v;J+=b){let Q=(U+J)/g;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;let ee=x*v-1-m.get(D,K,Q,F),re=q*v+J,te=ee===re?1:0;if(te===0)continue;let ae=A.get(D,K,Q,F);H+=ae*te}}_.set(H,D,S,M,F)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var dZ={kernelName:ip,backendName:"cpu",kernelFunc:uZ};function pZ(e,t,n,r,a){let s=w.computeStrides(t),i=Xw(e,t,n,s,a,"max"),o=KC(e,t,n,a,!0,r);return[i.values,o.values]}var hZ={kernelName:lp,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ge(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,d=T.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=pZ(u,r.shape,r.dtype,o,d),c=l.write(h,d.outShape,r.dtype),m=l.write(p,d.outShape,r.dtype);return[{dataId:c,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};function cZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],u=w.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=ns({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let c=Zw({inputs:{a:p,b:h},backend:n});d.push(c);let m=Kp({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var mZ={kernelName:Ji,backendName:"cpu",kernelFunc:cZ};function fZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ge(a,"min");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];(Number.isNaN(I)||I<x)&&(x=I)}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var gZ={kernelName:Yi,backendName:"cpu",kernelFunc:fZ};function yZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ge(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),u=s.map((b,x)=>b[0]+a.shape[x]),d=i==="reflect"?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,c=w.computeStrides(a.shape),m=w.sizeFromShape(o),f=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(a.dtype,m);for(let b=0;b<m;b++){let x=w.indexToLoc(b,f,g);for(let I=0;I<f;I++)x[I]<l[I]?x[I]=l[I]*2-x[I]-d:x[I]>=u[I]&&(x[I]=(u[I]-1)*2-x[I]+d);x=x.map((I,N)=>I-l[N]);let v=w.locToIndex(x,p,c);y[b]=h[v]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var bZ={kernelName:eo,backendName:"cpu",kernelFunc:yZ},xZ=_t((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),vZ=Vt(to,xZ),wZ={kernelName:to,backendName:"cpu",kernelFunc:vZ},kZ=ss(Lc());function eE(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],a.shape),u=QC({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=T.expandShapeToKeepDim(u.shape,l),h=ft({inputs:{x:u},backend:n,attrs:{shape:d}}),p=qw({inputs:{a,b:h},backend:n}),c=dC({inputs:{x:p},backend:n}),m=Kp({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Zw({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var IZ={kernelName:No,backendName:"cpu",kernelFunc:eE};function SZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ge(a,"multinomial");let l=o?a:eE({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],c=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let m=0;m<u;++m){let f=m*d,g=new Float32Array(d-1);g[0]=h[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[f+x];let y=kZ.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(v<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",c)}var NZ={kernelName:uu,backendName:"cpu",kernelFunc:SZ},TZ=na.nonMaxSuppressionV3Impl;function _Z(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ge(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=TZ(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var CZ={kernelName:hu,backendName:"cpu",kernelFunc:_Z},EZ=na.nonMaxSuppressionV4Impl;function $Z(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;ge(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=EZ(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var AZ={kernelName:cu,backendName:"cpu",kernelFunc:$Z},FZ=na.nonMaxSuppressionV5Impl;function DZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;ge(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=FZ(d,h,p,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var RZ={kernelName:mu,backendName:"cpu",kernelFunc:DZ};function MZ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;ge(a,"oneHot");let u=w.sizeFromShape(a.shape),d=new Float32Array(u*i);d.fill(l);let h=n.data.get(a.dataId).values;for(let p=0;p<u;++p)h[p]>=0&&h[p]<i&&(d[p*i+h[p]]=o);return n.makeTensorInfo([...a.shape,i],s,d)}var OZ={kernelName:ro,backendName:"cpu",kernelFunc:MZ};function Ec(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=ri({inputs:{input:r},backend:n}),s=Ec({inputs:{x:a},backend:n}),i=El({inputs:{input:r},backend:n}),o=Ec({inputs:{x:i},backend:n}),l=Wn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var LZ={kernelName:Du,backendName:"cpu",kernelFunc:Ec};function tE(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=ri({inputs:{input:r},backend:n}),s=tE({inputs:{x:a},backend:n}),i=El({inputs:{input:r},backend:n}),o=Ec({inputs:{x:i},backend:n}),l=Wn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jw({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var PZ={kernelName:fu,backendName:"cpu",kernelFunc:tE};function nE(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Cc({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=Cc({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=$l({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var zZ={kernelName:gu,backendName:"cpu",kernelFunc:nE};function BZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ge(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),u=n.data.get(a.dataId).values,d=w.sizeFromShape(a.shape),h=a.shape.length,p=w.computeStrides(a.shape),c=w.sizeFromShape(o),m=o.length,f=w.computeStrides(o),g=w.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<d;y++){let b=w.indexToLoc(y,h,p).map((v,I)=>v+l[I]),x=w.locToIndex(b,m,f);g[x]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var rE={kernelName:ao,backendName:"cpu",kernelFunc:BZ},WZ=_t((e,t)=>Math.pow(e,t)),VZ=Vt(so,WZ),UZ={kernelName:so,backendName:"cpu",kernelFunc:VZ};function GZ(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.data.get(y.dataId).values),u=a.map(y=>y.shape),d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[p,c,m]=CC(l,u,d,s.shape,s.dtype,h,i.shape,o),f=p.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var HZ={kernelName:Zc,backendName:"cpu",kernelFunc:GZ};function jZ(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=EC(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),p=n.makeTensorInfo([d.length],r.dtype,d);return[h,p]}var qZ={kernelName:Jc,backendName:"cpu",kernelFunc:jZ};function KZ(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[m,f]=$C(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(m,s.dtype,f)}var XZ={kernelName:Yc,backendName:"cpu",kernelFunc:KZ};function ZZ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Vw(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var JZ={kernelName:up,backendName:"cpu",kernelFunc:ZZ},YZ=rt(lo,e=>1/e),QZ={kernelName:lo,backendName:"cpu",kernelFunc:YZ};function eJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ge(a,"resizeBilinear");let l=w.computeStrides(a.shape),[u,d]=o,[h,p,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(w.sizeFromShape([h,u,d,m])),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=0,v=y[0]/b[0],I=y[1]/b[1];for(let N=0;N<h;N++)for(let _=0;_<u;_++){let E;i?E=v*(_+.5)-.5:E=v*_;let A=Math.max(0,Math.floor(E)),D=E-A,F=Math.min(p-1,Math.ceil(E)),S=N*l[0]+A*l[1],M=N*l[0]+F*l[1];for(let z=0;z<d;z++){let U;i?U=I*(z+.5)-.5:U=I*z;let H=Math.max(0,Math.floor(U)),q=U-H,K=Math.min(c-1,Math.ceil(U)),J=S+H*l[2],Q=M+H*l[2],ee=S+K*l[2],re=M+K*l[2];for(let te=0;te<m;te++){let ae=f[J+te],se=f[Q+te],xe=f[ee+te],ue=f[re+te],be=ae+(xe-ae)*q,ke=se+(ue-se)*q,Se=be+(ke-be)*D;g[x++]=Se}}}return n.makeTensorInfo([h,u,d,m],"float32",g)}var tJ={kernelName:ho,backendName:"cpu",kernelFunc:eJ};function nJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ge([s,a],"resizeBilinearGrad");let o=w.computeStrides(a.shape),[l,u,d,h]=a.shape,[,p,c]=s.shape,m=new Float32Array(l*u*d*h),f=[i&&p>1?u-1:u,i&&c>1?d-1:d],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let I=0;I<l;I++){let N=I*o[0];for(let _=0;_<p;_++){let E=_*y,A=Math.floor(E),D=Math.min(Math.ceil(E),u-1),F=N+A*o[1],S=N+D*o[1],M=E-A,z=1-M;for(let U=0;U<c;U++){let H=U*b,q=Math.floor(H),K=Math.min(Math.ceil(H),d-1),J=H-q,Q=1-J,ee=F+q*o[2],re=F+K*o[2],te=S+q*o[2],ae=S+K*o[2],se=z*Q,xe=z*J,ue=M*Q,be=M*J;for(let ke=0;ke<h;ke++){let Se=x[v++];m[ee+ke]+=Se*se,m[re+ke]+=Se*xe,m[te+ke]+=Se*ue,m[ae+ke]+=Se*be}}}}return n.makeTensorInfo([l,d,u,h],"float32",m)}var rJ={kernelName:xu,backendName:"cpu",kernelFunc:nJ};function aJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ge(a,"resizeNearestNeighbor");let l=w.computeStrides(a.shape),[u,d]=o,[h,p,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(h*u*d*m),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=y[0]/b[0],v=y[1]/b[1],I=0;for(let N=0;N<h;N++){let _=N*l[0];for(let E=0;E<u;E++){let A=i?x*(E+.5):x*E,D=Math.min(p-1,s?Math.round(A):Math.floor(A));i&&(D=Math.max(0,D));let F=_+D*l[1];for(let S=0;S<d;S++){let M=i?v*(S+.5):v*S,z=Math.min(c-1,s?Math.round(M):Math.floor(M));i&&(z=Math.max(0,z));let U=F+z*l[2];for(let H=0;H<m;H++){let q=f[U+H];g[I++]=q}}}}return n.makeTensorInfo([h,u,d,m],a.dtype,g)}var sJ={kernelName:po,backendName:"cpu",kernelFunc:aJ};function iJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ge([s,a],"resizeNearestNeighborGrad");let o=w.computeStrides(a.shape),l=w.computeStrides(s.shape),[u,d,h,p]=a.shape,[,c,m]=s.shape,f=new Float32Array(u*d*h*p),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&m>1?h-1:h],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],I=1/x,N=1/v,_=Math.ceil(I)*2+2,E=Math.ceil(N)*2+2;for(let A=0;A<u;A++){let D=A*o[0];for(let F=0;F<d;F++){let S=D+F*o[1],M=Math.floor(F*I),z=Math.floor(M-_/2);for(let U=0;U<h;U++){let H=S+U*o[2],q=Math.floor(U*N),K=Math.floor(q-E/2);for(let J=0;J<p;J++){let Q=0;for(let ee=0;ee<_;ee++){let re=ee+z;if(re<0||re>=c)continue;let te=D+re*l[1],ae=re*x,se=Math.min(d-1,i?Math.round(ae):Math.floor(ae));if(F===se)for(let xe=0;xe<E;xe++){let ue=xe+K;if(ue<0||ue>=m)continue;let be=te+ue*l[2],ke=ue*v,Se=Math.min(h-1,i?Math.round(ke):Math.floor(ke));U===Se&&(Q+=g[be+J])}}f[H+J]=Q}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}var oJ={kernelName:bu,backendName:"cpu",kernelFunc:iJ};function lJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ge(a,"reverse");let i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Qr({inputs:{x:a},backend:n});let l=new Ft(a.shape,a.dtype),u=n.bufferSync(a);for(let d=0;d<l.size;d++){let h=l.indexToLoc(d),p=h.slice();o.forEach(c=>p[c]=a.shape[c]-1-p[c]),l.set(u.get(...p),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var uJ={kernelName:mo,backendName:"cpu",kernelFunc:lJ},dJ={kernelName:Ru,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,d,h,p]=r.shape,[c,m]=T.getImageCenter(i,d,h),f=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let v=x*h*d*p;for(let I=0;I<d;I++){let N=I*(h*p);for(let _=0;_<h;_++){let E=_*p;for(let A=0;A<p;A++){let D=[u,I,_,A],F=D[2],S=D[1],M=(F-c)*y-(S-m)*g,z=(F-c)*g+(S-m)*y;M=Math.round(M+c),z=Math.round(z+m);let U=s;if(typeof s!="number"&&(A===3?U=f:U=s[A]),M>=0&&M<h&&z>=0&&z<d){let q=z*(h*p),K=M*p,J=v+q+K+A;U=b[J]}let H=v+N+E+A;l[H]=U}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pJ=rt(fo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),hJ={kernelName:fo,backendName:"cpu",kernelFunc:pJ};function cJ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,i),p=!0,c=n.bufferSync(a),m=n.bufferSync(s),f=Bs(c,m,i,h,u,l,o,d,0,p);return n.makeTensorInfo(i,f.dtype,f.values)}var mJ={kernelName:vu,backendName:"cpu",kernelFunc:cJ};function fJ(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function gJ(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function yJ(e,t,n,r,a,s){let i=w.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),u=o*a;for(let d=0;d<a;++d)i[u+d]=s==="left"?fJ(l,t[d+u]):gJ(l,t[d+u])}return i}function bJ(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=yJ(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var xJ={kernelName:ku,backendName:"cpu",kernelFunc:bJ};function vJ(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ge([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=ir(a.dtype,s.dtype),h=w.makeZerosTypedArray(w.sizeFromShape(a.shape),d),p=0,c=i===0||i>1||a.shape.length===1?1:w.sizeFromShape(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<c;f++)o[m]===1?h[p++]=l[m]:h[p++]=u[m];return n.makeTensorInfo(a.shape,d,h)}var wJ={kernelName:Iu,backendName:"cpu",kernelFunc:vJ},kJ=T.SELU_SCALEALPHA,IJ=T.SELU_SCALE,SJ=rt(yo,e=>e>=0?IJ*e:kJ*(Math.exp(e)-1)),NJ={kernelName:yo,backendName:"cpu",kernelFunc:SJ},TJ=rt(vo,e=>e<0?-1:e>0?1:0),_J={kernelName:vo,backendName:"cpu",kernelFunc:TJ},CJ=rt(bo,e=>Math.sin(e)),EJ={kernelName:bo,backendName:"cpu",kernelFunc:CJ},$J=rt(xo,e=>Math.sinh(e)),AJ={kernelName:xo,backendName:"cpu",kernelFunc:$J},FJ=11920928955078125e-23,Bk=Math.log(FJ)+2,DJ=rt(ko,e=>{let t=e>-Bk,n=e<Bk,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),RJ={kernelName:ko,backendName:"cpu",kernelFunc:DJ};function MJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ge([a],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=rE.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),c=ft({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Fn({inputs:{x:c},backend:n,attrs:{perm:h}}),f=ft({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}var OJ={kernelName:Nu,backendName:"cpu",kernelFunc:MJ};function LJ(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[h,p,c,m,f]=DC(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var PJ={kernelName:dp,backendName:"cpu",kernelFunc:LJ};function zJ(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,h]=RC(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var BJ={kernelName:_u,backendName:"cpu",kernelFunc:zJ};function WJ(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=Uw(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}var VJ={kernelName:pp,backendName:"cpu",kernelFunc:WJ};function UJ(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=Uw(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}var GJ={kernelName:hp,backendName:"cpu",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=T.calculateShapes(s,a,o),c=!1,m=n.bufferSync(a),f;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=!!n.data.get(i.dataId).values[0];f=Bs(m,g,o,p,d,u,l,h,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Bs(m,g,o,p,d,u,l,h,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Bs(m,g,o,p,d,u,l,h,y,c);break}case"string":{let g=n.bufferSync(s),y=w.decodeString(n.data.get(i.dataId).values[0]);f=Bs(m,g,o,p,d,u,l,h,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}var jJ={kernelName:Cu,backendName:"cpu",kernelFunc:HJ};function qJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map(h=>{let p=[...d];p[o]=h;let c=ai({inputs:{x:a},backend:n,attrs:{begin:u,size:p}});return u[o]+=h,c})}var KJ={kernelName:Tu,backendName:"cpu",kernelFunc:qJ},XJ={kernelName:cp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ge(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZJ=rt(us,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),JJ={kernelName:us,backendName:"cpu",kernelFunc:ZJ};function YJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;ge(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=ft({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=zt.computeOutShape(b,x,v),_=ai({inputs:{x:a},backend:n,attrs:{begin:b,size:N}});I=ft({inputs:{x:_},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(_)}else{let N=n.bufferSync(a),_=LC(c,N,v,b);I=n.makeTensorInfo(m,_.dtype,_.values)}return I}var QJ={kernelName:Eu,backendName:"cpu",kernelFunc:YJ};function eY(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.data.get(d.dataId).values,c=n.data.get(h.dataId).values,[m,f]=Gw(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var tY={kernelName:fp,backendName:"cpu",kernelFunc:eY};function nY(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,h]=Hw(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var rY={kernelName:gp,backendName:"cpu",kernelFunc:nY};function aY(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=jw(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var sY={kernelName:yp,backendName:"cpu",kernelFunc:aY},iY=rt(Co,e=>Math.tan(e)),oY={kernelName:Co,backendName:"cpu",kernelFunc:iY},lY=rt(Eo,e=>Math.tanh(e)),uY={kernelName:Eo,backendName:"cpu",kernelFunc:lY};function dY(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=T.calculateShapes(s,a,r.shape),h=!1,p=n.bufferSync(a),c=n.bufferSync(s),m=n.bufferSync(r),f=Bs(p,c,r.shape,d,l,o,i,u,m,h);return n.makeTensorInfo(r.shape,f.dtype,f.values)}var pY={kernelName:wu,backendName:"cpu",kernelFunc:dY};function hY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ge(a,"tile");let i=zC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var cY={kernelName:ls,backendName:"cpu",kernelFunc:hY};function mY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ge(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=WC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var fY={kernelName:$u,backendName:"cpu",kernelFunc:mY};function gY(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=w.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],I=w.computeStrides(g),N=I[0],_=I[1],E=I[2],A=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(g));A.fill(l);let D=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<d;++S){let M=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let z=0;z<m;++z)for(let U=0;U<f;++U)for(let H=0;H<c;++H){let q,K=M[6]*U+M[7]*z+1;if(K===0)continue;let J=(M[0]*U+M[1]*z+M[2])/K,Q=(M[3]*U+M[4]*z+M[5])/K,ee=Wk(J,p,o),re=Wk(Q,h,o);switch(i){case"nearest":q=kY(D,h,p,b,x,v,S,re,ee,H,l);break;case"bilinear":q=IY(D,h,p,b,x,v,S,re,ee,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*N+z*_+U*E+H;A[te]=q}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var yY={kernelName:Au,backendName:"cpu",kernelFunc:gY};function Wk(e,t,n){switch(n){case"reflect":return bY(e,t);case"wrap":return xY(e,t);case"nearest":return wY(e,t);case"constant":default:return vY(e,t)}}function bY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}function xY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return w.clamp(0,n,t-1)}function vY(e,t){return e}function wY(e,t){return w.clamp(0,e,t-1)}function vd(e,t,n,r,a,s,i,o,l,u,d){let h=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:d}function kY(e,t,n,r,a,s,i,o,l,u,d){let h=Math.round(o),p=Math.round(l);return vd(e,t,n,r,a,s,i,h,p,u,d)}function IY(e,t,n,r,a,s,i,o,l,u,d){let h=Math.floor(o),p=Math.floor(l),c=h+1,m=p+1,f=(m-l)*vd(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*vd(e,t,n,r,a,s,i,h,m,u,d),g=(m-l)*vd(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*vd(e,t,n,r,a,s,i,c,m,u,d);return(c-o)*f+(o-h)*g}function SY(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ge(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Kw(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var NY={kernelName:bp,backendName:"cpu",kernelFunc:SY};function TY(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let p=new Array(o);for(let c=0;c<p.length;c++){d[s]=c;let m=ai({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[c]=ft({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return p}var _Y={kernelName:Fu,backendName:"cpu",kernelFunc:TY};function CY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ge(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],d=[],h=o-l,p=s;for(let m=0;m<h;++m){let f=Cc({inputs:{input:p},backend:n,attrs:{dim:m+1}});p=f,d.push(f)}for(let m=0;m<i;++m){let f=w.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=lC({inputs:{a:g,b:p},backend:n}),b=ns({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=qm({inputs:{a:b,b:a},backend:n}),v=Kp({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),d.push(g),d.push(y),d.push(b),d.push(x),d.push(v)}let c=nE({inputs:u,backend:n,attrs:{axis:0}});return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var EY={kernelName:xp,backendName:"cpu",kernelFunc:CY},$Y=[I8,nK,N8,_8,lK,E8,A8,D8,M8,L8,z8,W8,U8,j8,K8,J8,Q8,tX,rX,w8,sX,oX,uX,dK,pX,iK,hK,cX,rK,fX,yX,bX,vX,kX,SX,TX,CX,$X,FX,RX,OX,PX,BX,VX,UX,HX,qX,XX,ZX,JX,YX,e7,r7,m8,s7,cK,c7,mK,m7,gK,v7,w7,I7,bK,vK,N7,_7,E7,A7,kK,SK,aK,D7,gX,M7,L7,z7,f8,TK,CK,W7,$K,U7,j7,K7,J7,Q7,tZ,nZ,FK,aZ,iZ,lZ,dZ,hZ,mZ,gZ,RK,bZ,wZ,NZ,OK,PK,CZ,AZ,RZ,BK,OZ,PZ,zZ,rE,UZ,y8,UK,HZ,qZ,XZ,JZ,sK,qb,QZ,b8,x8,v8,tJ,rJ,sJ,oJ,uJ,dJ,hJ,YK,mJ,xJ,wJ,NJ,e8,_J,EJ,AJ,t8,IZ,RJ,OJ,PJ,BJ,VJ,GJ,jJ,KJ,a8,XJ,i8,l8,JJ,QJ,tY,rY,sY,h8,t7,oY,uY,pY,cY,fY,yY,WK,NY,_Y,EY,LZ];for(let e of $Y)vp(e);var aE={};Ce(aE,{assertNotComplex:()=>ju,bindCanvasToFramebuffer:()=>WY,bindColorTextureToFramebuffer:()=>tc,bindTextureToProgramUniformSampler:()=>vE,bindTextureUnit:()=>yE,bindVertexBufferToProgramAttribute:()=>Xb,callAndCheck:()=>pe,canBeRepresented:()=>iE,createFragmentShader:()=>uE,createFramebuffer:()=>gE,createProgram:()=>dE,createStaticIndexBuffer:()=>cE,createStaticVertexBuffer:()=>hE,createTexture:()=>mE,createVertexShader:()=>lE,getBatchDim:()=>si,getExtensionOrThrow:()=>wd,getFramebufferErrorMessage:()=>wE,getMaxTexturesInShader:()=>NE,getNumChannels:()=>zY,getProgramUniformLocation:()=>xE,getProgramUniformLocationOrThrow:()=>bE,getRowsCols:()=>ii,getShapeAs3D:()=>Id,getTextureShapeFromLogicalShape:()=>IE,getWebGLDisjointQueryTimerVersion:()=>TE,getWebGLErrorMessage:()=>oE,getWebGLMaxTextureSize:()=>SE,hasExtension:()=>rr,isCapableOfRenderingToFloatTexture:()=>_E,isDownloadFloatTextureEnabled:()=>CE,isReshapeFree:()=>Gd,isWebGLFenceEnabled:()=>EE,isWebGLVersionEnabled:()=>Jb,linkProgram:()=>pE,logShaderSourceAndInfoLog:()=>Qw,resetMaxTextureSize:()=>VY,resetMaxTexturesInShader:()=>UY,unbindColorTextureFromFramebuffer:()=>Zb,unbindTextureUnit:()=>BY,validateFramebuffer:()=>kd,validateProgram:()=>ec,validateTextureSize:()=>fE});var Ps={},Gh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sE(e,t){Ps[e]=t}function Fr(e,t){if(!(e in Ps)||t!=null){let r=FY(e,t);if(r!==null)Ps[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=Ps[e];return n==null||n.isContextLost()?(delete Ps[e],Fr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Ps[e])}function AY(e){if(!G().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function FY(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??AY(e);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete Ps[e]},!1),G().getBool("SOFTWARE_WEBGL_ENABLED")&&(Gh.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Gh)||n.getContext("experimental-webgl",Gh):n.getContext("webgl2",Gh)}var Ud;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Ud||(Ud={}));var nr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(nr||(nr={}));var nn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(nn||(nn={}));function Xp(e,t){return[t,e]}function DY(e,t){return e*t}function Hh(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Hu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function RY(e,t){let[n,r]=Hu(e,t);return n*r*4}function Yw(e,t){let n=e,r,a,s,i,o,l,u,d,h,p;return G().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,d=4,h=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function pe(e,t){let n=t();return G().getBool("DEBUG")&&MY(e),n}function MY(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+oE(e,t))}var OY=596e-10,LY=65504;function iE(e){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||OY<Math.abs(e)&&Math.abs(e)<LY)}function oE(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function wd(e,t){return Ia(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function lE(e,t){let n=Ia(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(e,()=>e.shaderSource(n,t)),pe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function uE(e,t){let n=Ia(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(e,()=>e.shaderSource(n,t)),pe(e,()=>e.compileShader(n)),G().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Qw(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var PY=/ERROR: [0-9]+:([0-9]+):/g;function Qw(e,t){let n=PY.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((h,p)=>w.rightPad((p+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function dE(e){return Ia(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function pE(e,t){if(pe(e,()=>e.linkProgram(t)),!G().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ec(e,t){if(pe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function hE(e,t){let n=Ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),pe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function cE(e,t){let n=Ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),pe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function zY(){return G().getNumber("WEBGL_VERSION")===2?1:4}function mE(e){return Ia(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function fE(e,t){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function gE(e){return Ia(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Xb(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),pe(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),pe(e,()=>e.enableVertexAttribArray(o)),!0)}function yE(e,t,n){kE(e,n),pe(e,()=>e.activeTexture(e.TEXTURE0+n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function BY(e,t){kE(e,t),pe(e,()=>e.activeTexture(e.TEXTURE0+t)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function bE(e,t,n){return Ia(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function xE(e,t,n){return e.getUniformLocation(t,n)}function vE(e,t,n,r){pe(e,()=>yE(e,t,r)),pe(e,()=>e.uniform1i(n,r))}function WY(e){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),pe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function tc(e,t,n){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Zb(e,t){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function kd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+wE(e,t))}function wE(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ia(e,t,n){let r=pe(e,()=>t());if(r==null)throw new Error(n);return r}function kE(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function si(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function ii(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Id(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[si(e),...ii(e)]),t}function IE(e,t=!1){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=G().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&G().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,l)=>l>=e.length-2?w.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=si(e),l=2,u=2;e.length&&([l,u]=ii(e)),a=o*(l/2)*(u/2),s=w.sizeToSquarishShape(a).map(d=>d*2)}else s=w.sizeToSquarishShape(a);return s}function jh(e){return e%2===0}function Gd(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||jh(n)&&jh(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&jh(e[0])&&jh(t[0])}var nc,rc;function SE(e){if(nc==null){let t=Fr(e);nc=t.getParameter(t.MAX_TEXTURE_SIZE)}return nc}function VY(){nc=null}function UY(){rc=null}function NE(e){if(rc==null){let t=Fr(e);rc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,rc)}function TE(e){if(e===0)return 0;let t,n=Fr(e);return rr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:rr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function rr(e,t){return e.getExtension(t)!=null}function Jb(e){try{if(Fr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _E(e){if(e===0)return!1;let t=Fr(e);if(e===1){if(!rr(t,"OES_texture_float"))return!1}else if(!rr(t,"EXT_color_buffer_float"))return!1;return Yb(t)}function CE(e){if(e===0)return!1;let t=Fr(e);if(e===1){if(!rr(t,"OES_texture_float")||!rr(t,"WEBGL_color_buffer_float"))return!1}else{if(rr(t,"EXT_color_buffer_float"))return Yb(t);let n="EXT_color_buffer_half_float";if(rr(t,n)){let r=t.getExtension(n);return GY(t,r)}return!1}return Yb(t)}function Yb(e){let t=Yw(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function GY(e,t){let n=Yw(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}function EE(e){return e!==2?!1:Fr(e).fenceSync!=null}function ju(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var ye=G();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>Jb(2)?2:Jb(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>SE(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>NE(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=ye.getNumber("WEBGL_VERSION");return e===0?0:TE(e)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ip.isMobile());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_E(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>CE(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>EE(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ip.isMobile()?1:-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function kn(){let e,t,n,r,a,s,i,o,l,u;return G().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=G().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Lo(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Km(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function HY(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function jY(e,t,n="index"){let r=e.map((s,i)=>i),a=HY(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function e0(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function t0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var $E=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:AE}=T;function qY(e,t,n){let r=[];if(e.forEach(p=>{let c=w.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=n0(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(p=>KY(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=kn(),l=JY(o),u,d,h=e9(o);return t.isPacked?(u=XY(t.logicalShape,i,n.enableShapeUniforms),d=QY(o)):(u=ZY(t.logicalShape,i,n.enableShapeUniforms),d=YY(o)),n.packedInputs&&(h+=a9),[h,l,d,a,u,s,n.userCode].join(`
`)}function qu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return g9(e,t);case 1:return b9(e,t);case 2:return v9(e,t);case 3:return k9(e,t);case 4:return S9(e,t);case 5:return N9(e);case 6:return T9(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function FE(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return f9(e);case 1:return y9(e,t);case 2:return x9(e,t);case 3:return w9(e,t);default:return I9(e,t)}}function KY(e,t,n=!1,r){let a="";n?a+=FE(e,r):a+=qu(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=_9(e,t):a+=C9(e,t)),a}function XY(e,t,n){switch(e.length){case 0:return DE();case 1:return s9(e,t,n);case 2:return c9(e,t,n);case 3:return o9(e,t,n);default:return u9(e,t,n)}}function ZY(e,t,n){switch(e.length){case 0:return DE();case 1:return i9(e,t,n);case 2:return m9(e,t,n);case 3:return l9(e,t,n);case 4:return d9(e,t,n);case 5:return p9(e,t);case 6:return h9(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function JY(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function YY(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function QY(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function e9(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${t9}
    ${n9}
    ${r9}
  `}var t9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,n9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,r9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,a9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function DE(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function s9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function i9(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function o9(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function l9(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Km(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Lo(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function u9(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function d9(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Km(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Lo(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function p9(e,t){let n=Lo(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function h9(e,t){let n=Lo(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function c9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function m9(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Po(e){return`offset${e}`}function f9(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=kn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function g9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Po(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function y9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=kn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function b9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Ku(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Po(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function x9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=kn();if(s!=null&&w.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function v9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),l=i;if(l.length<n.length){let p=Xu(e,l),c=["row","col"];return`
      ${qu(p,t)}
      float ${a}(int row, int col) {
        return ${a}(${Zu(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Ku(e)}
      }
    `;let u=s[0],d=s[1],h=Po(r);return d===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${r}, uv);
  }
`}function w9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let p=n.slice(1),c=[1,2],m=Xu(e,p),f=["b","row","col"];return`
        ${FE(m,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Zu(f,c)});
        }
      `}let o=kn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2),h=d*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${d}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function k9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=w.squeezeShape(n),u=o;if(u.length<n.length){let f=Xu(e,u),g=["row","col","depth"];return`
        ${qu(f,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Zu(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Ku(e)}
      }
    `;let d=e.shapeInfo.texShape,h=d[0],p=d[1],c=e.shapeInfo.flatOffset;if(p===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;let m=Po(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function I9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=kn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let f=2;f<i-1;f++)c=`int b${f}, `+c,p*=s[i-f-1],m=`b${f} * ${p} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}function S9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(n);if(l.length<n.length){let b=Xu(e,l),x=["row","col","depth","depth2"];return`
      ${qu(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Zu(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${Ku(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${m}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Po(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${f}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function N9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){let f=Xu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${qu(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Zu(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${Ku(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];if(c===o&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Po(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function T9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=w.squeezeShape(t);if(a.length<t.length){let g=Xu(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${qu(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Zu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ku(e)}
      }
    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],m=p[1];if(m===d&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Po(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Ku(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function _9(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=AE(e.shapeInfo.logicalShape,t.logicalShape),l=ut(i),u=i-s,d,h=["x","y","z","w","u","v"];s===0?d="":i<2&&o.length>=1?d="coords = 0;":d=o.map(g=>`coords.${h[g+u]} = 0;`).join(`
`);let p="";i<2&&s>0?p="coords":p=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+u]}`).join(", ");let c="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,f=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${r}(${p});
      ${c}
    }
  `}function C9(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=ut(l),d=AE(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,p,c=["x","y","z","w","u","v"];o===0?p="":l<2&&d.length>=1?p="coords = 0;":p=d.map(f=>`coords.${c[f+h]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${r}(${m});
    }
  `}function ut(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function n0(e,t,n){let{newShape:r,keptDims:a}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Xu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Zu(e,t){return t.map(n=>e[n]).join(", ")}function E9(e,t,n,r){let a=n.map((d,h)=>{let p={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(p.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:p}}),s=a.map(d=>d.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=qY(a,i,t),l=uE(e.gl,o),u=e.createProgram(l);return G().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},RE(e,t,u)))}function RE(e,t,n){let r=[],a=[],s,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),G().getNumber("WEBGL_VERSION")===1&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h of t.variableNames){let p={name:h,uniform:e.getUniformLocation(n,h,d),offset:e.getUniformLocation(n,`offset${h}`,d)};t.enableShapeUniforms&&(p.shape=e.getUniformLocation(n,`${h}Shape`,d),p.texShape=e.getUniformLocation(n,`${h}TexShape`,d)),r.push(p)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",d),o=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let h of t.customUniforms)a.push(e.getUniformLocation(n,h.name,d));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function Vk(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function $9(e,t,n,r,a){t.program.enableShapeUniforms||(Vk(t.inShapeInfos,n),Vk([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),G().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let u=n[l],{uniform:d,offset:h,shape:p,texShape:c}=t.variablesLocations[l];if(p){let{uniformShape:m}=n0(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(c&&e.gl.uniform2i(c,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(d,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}continue}u.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,d,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],d=t.customUniformLocations[l],h=a[l];if(u.type==="float")e.gl.uniform1fv(d,h);else if(u.type==="vec2")e.gl.uniform2fv(d,h);else if(u.type==="vec3")e.gl.uniform3fv(d,h);else if(u.type==="vec4")e.gl.uniform4fv(d,h);else if(u.type==="int")e.gl.uniform1iv(d,h);else if(u.type==="ivec2")e.gl.uniform2iv(d,h);else if(u.type==="ivec3")e.gl.uniform3iv(d,h);else if(u.type==="ivec4")e.gl.uniform4iv(d,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}e.executeProgram()}function A9(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:h}=n0(e.packedInputs,i.shape,l),p="",c="",m="";if(d.length===1&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${I[0]>1}_${I[1]>1}`}else if(d.length===2&&!e.packedInputs)c=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!e.packedInputs){let I=w.computeStrides(d);m=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let f=i.shape.length,g=d.length===2&&w.arraysEqual(i.shape,l),y=w.sizeFromShape(i.shape)===1,b=T.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&w.arraysEqual(l,n.texData.texShape),v=e.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${f}_${x}_${u?h:""}_${d.length}_${y}_${b}_${g}_${p}_${c}_${m}_${v}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${G().getNumber("WEBGL_VERSION")}`,s}function pn(e){return G().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var F9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ud.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=kn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Km(["r","c","d"],e):Lo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},D9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ud.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=kn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Km(["r","c","d"],e):Lo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},R9=class{constructor(e){this.variableNames=["A"],this.outTexUsage=nr.DOWNLOAD;let t=kn();this.outputShape=e,this.userCode=`
      ${$E}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},M9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=nr.DOWNLOAD;let t=kn();this.outputShape=e,this.userCode=`
      ${$E}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},O9={R:0,G:1,B:2,A:3},Uk=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=kn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${O9[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?t0():e0(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},L9=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=kn();this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?t0():e0(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},ME={};Ce(ME,{bindVertexProgramAttributeStreams:()=>GE,createBufferFromOutputTexture:()=>qE,createFloat16MatrixTexture:()=>BE,createFloat16PackedMatrixTexture:()=>UE,createFloat32MatrixTexture:()=>zE,createIndexBuffer:()=>PE,createPackedMatrixTexture:()=>VE,createUnsignedBytesMatrixTexture:()=>WE,createVertexBuffer:()=>LE,createVertexShader:()=>OE,downloadByteEncodedFloatMatrixFromOutputTexture:()=>XE,downloadFloat32MatrixFromBuffer:()=>KE,downloadMatrixFromPackedOutputTexture:()=>JE,downloadPackedMatrixFromBuffer:()=>ZE,getInternalFormatForFloat16MatrixTexture:()=>a0,getInternalFormatForFloat16PackedMatrixTexture:()=>o0,getInternalFormatForFloat32MatrixTexture:()=>r0,getInternalFormatForPackedMatrixTexture:()=>i0,getInternalFormatForUnsignedBytesMatrixTexture:()=>s0,uploadDenseMatrixToTexture:()=>HE,uploadPixelDataToTexture:()=>jE});function OE(e){let t=kn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return lE(e,n)}function LE(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return hE(e,t)}function PE(e){let t=new Uint16Array([0,1,2,2,1,3]);return cE(e,t)}function Zp(e,t,n,r,a,s){fE(t,n);let i=mE(e),o=e.TEXTURE_2D;return pe(e,()=>e.bindTexture(o,i)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),G().getNumber("WEBGL_VERSION")===1?pe(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):pe(e,()=>e.texStorage2D(o,1,r,t,n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function r0(e){return e.internalFormatFloat}function zE(e,t,n,r){let[a,s]=Xp(t,n);return Zp(e,a,s,r0(r),r.textureFormatFloat,e.FLOAT)}function a0(e){return e.internalFormatHalfFloat}function BE(e,t,n,r){let[a,s]=Xp(t,n);return Zp(e,a,s,a0(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function s0(e){return e.downloadTextureFormat}function WE(e,t,n,r){let[a,s]=Xp(t,n);return Zp(e,a,s,s0(r),e.RGBA,e.UNSIGNED_BYTE)}function i0(e){return e.internalFormatPackedFloat}function VE(e,t,n,r){let[a,s]=Hu(t,n);return Zp(e,a,s,i0(r),e.RGBA,e.FLOAT)}function o0(e){return e.internalFormatPackedHalfFloat}function UE(e,t,n,r){let[a,s]=Hu(t,n);return Zp(e,a,s,o0(r),e.RGBA,r.textureTypeHalfFloat)}function GE(e,t,n){return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Xb(e,t,"clipSpacePos",n,3,20,0)&&Xb(e,t,"uv",n,2,20,12)}function HE(e,t,n,r,a,s){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),G().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function jE(e,t,n){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?G().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):G().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function qE(e,t,n,r){let a=e.createBuffer();pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return pe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),pe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function KE(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function XE(e,t,n,r){let[a,s]=Xp(t,n),i=4,o=new Uint8Array(DY(t*n,i));return pe(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function ZE(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(RY(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function JE(e,t,n){let r=new Float32Array(t*n*4);return pe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var ac=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=G().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,sE(t,e)):this.gl=Fr(t),e=this.gl,G().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>pe(a,()=>a.createVertexArray()),this.bindVertexArray=s=>pe(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>pe(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>pe(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>pe(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>pe(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>pe(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),G().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=wd(this.gl,a),rr(this.gl,s))this.textureHalfFloatExtension=wd(this.gl,s);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rr(this.gl,r))this.colorBufferHalfFloatExtension=wd(this.gl,r);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(rr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=LE(this.gl),this.indexBuffer=PE(this.gl),this.framebuffer=gE(this.gl),this.textureConfig=Yw(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),zE(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),BE(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),WE(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jE(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),HE(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),UE(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),VE(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Zb(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>XE(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ZE(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return KE(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=qE(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>JE(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=OE(t));let n=dE(t);pe(t,()=>t.attachShader(n,this.vertexShader)),pe(t,()=>t.attachShader(n,e)),pE(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ec(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),GE(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&ec(this.gl,this.program),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?bE(this.gl,e,t):xE(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vE(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Hu(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ec(this.gl,this.program),kd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=wd(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=P9(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in G().platform&&(n=G().platform.setTimeoutCustom.bind(G().platform)),w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),tc(this.gl,e,this.framebuffer),this.debug&&kd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(tc(this.gl,this.outputTexture,this.framebuffer),this.debug&&kd(this.gl)):Zb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;tc(r,e,this.framebuffer),this.debug&&kd(r),this.outputTexture=e,pe(r,()=>r.viewport(0,0,t,n)),pe(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function P9(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:z9,bincountImpl:YE,bincountReduceImpl:B9,bitwiseAndImpl:W9,castImpl:V9,ceilImpl:U9,concatImpl:G9,equalImpl:H9,expImpl:j9,expm1Impl:q9,floorImpl:K9,gatherNdImpl:X9,gatherV2Impl:Z9,greaterImpl:J9,greaterEqualImpl:Y9,lessImpl:Q9,lessEqualImpl:eQ,linSpaceImpl:tQ,logImpl:nQ,maxImpl:rQ,maximumImpl:aQ,minimumImpl:sQ,multiplyImpl:iQ,negImpl:oQ,notEqualImpl:lQ,prodImpl:uQ,raggedGatherImpl:dQ,raggedRangeImpl:pQ,raggedTensorToTensorImpl:hQ,rangeImpl:cQ,rsqrtImpl:mQ,scatterImpl:fQ,sigmoidImpl:gQ,simpleAbsImpl:QE,sliceImpl:yQ,sparseFillEmptyRowsImpl:bQ,sparseReshapeImpl:xQ,sparseSegmentReductionImpl:e$,sqrtImpl:vQ,staticRegexReplaceImpl:wQ,stridedSliceImpl:kQ,stringNGramsImpl:IQ,stringSplitImpl:SQ,stringToHashBucketFastImpl:NQ,subImpl:TQ,tileImpl:_Q,topKImpl:CQ,transposeImpl:l0,uniqueImpl:EQ}=Ow;function t$(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function mn(e,t){return t===1?[e]:t$(e,t)}function $Q(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var AQ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=mn("rc",this.rank),n=ut(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},n$=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${FQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?t0():e0(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function FQ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?jY(["r","c","d"],"inputShape"):Lo(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var DQ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=Hk(t,n),a=jk(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Gk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return r===nn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===nn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===nn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===nn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===nn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=Hk(n,r),s=jk(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Gk(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=G().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function RQ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Gk(e,t,n,r,a){let s=MQ(t,r),i;if(a){let[l,u]=Hu(e[0],e[1]);i=l*u}else{let[l,u]=Xp(e[0],e[1]);i=l*u}let o=RQ(n,s);return i*o}function MQ(e,t){switch(e){case nn.PACKED_2X2_FLOAT32:return i0(t);case nn.PACKED_2X2_FLOAT16:return o0(t);case nn.UNPACKED_FLOAT32:return r0(t);case nn.UNPACKED_FLOAT16:return a0(t);case nn.PACKED_4X1_UNSIGNED_BYTE:return s0(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function OQ(e){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?nn.PACKED_2X2_FLOAT32:nn.UNPACKED_FLOAT32:e?nn.PACKED_2X2_FLOAT16:nn.UNPACKED_FLOAT16}function Hk(e,t){if(e===nr.UPLOAD)return nn.PACKED_2X2_FLOAT32;if(e===nr.RENDER||e==null)return OQ(t);if(e===nr.DOWNLOAD||e===nr.PIXELS)return nn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function jk(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var jr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},vr="if (isnan(x)) return x;",LQ="return x;",qk="return abs(x);",PQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",zQ=vr+`
  return (x < 0.0) ? 0.0 : x;
`,BQ=vr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ma="return x;",WQ="return 1.0 / (1.0 + exp(-1.0 * x));",VQ="return x;",UQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,GQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jQ="return 1.0 / (1.0 + exp(-1.0 * x));",Ba=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},qQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let t=e.length,n=mn("rc",t),r=ut(t),a=$Q(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},KQ=na.whereImpl,XQ=1e-7,ZQ=1e-4,Qy={};function JQ(e){return e in Qy||(Qy[e]={}),Qy[e]}var YQ=G().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),QQ=600;function eee(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*QQ/1024/1024}var r$=(()=>{let e=class a$ extends Jd{nextDataId(){return a$.nextDataId++}constructor(n){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let r;if(n!=null){if(n instanceof ac)r=n;else{let a=Fr(G().getNumber("WEBGL_VERSION"),n);r=new ac(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let a=Fr(G().getNumber("WEBGL_VERSION"));r=new ac(a),this.binaryCache=JQ(G().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=r,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new DQ(this.gpgpu),this.numMBBeforeWarning=eee(),this.texData=new Pc(this,cr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(n,r,a,s,i,o){let l=this.makeTensorInfo(r,a),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:n,texShape:[s,i]},u.texShape=[s,i];let d=Id(r),h=new Uk(d,!1,o),p=this.runWebGLProgram(h,[l],a,[[s,i]]);return p.shape=r,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(n,r,a){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(n),a==="complex64"&&n!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:r,dtype:a,values:n,usage:nr.UPLOAD,refCount:1}),s}refCount(n){return this.texData.has(n)?this.texData.get(n).refCount:0}incRef(n){let r=this.texData.get(n);r.refCount++}decRef(n){if(this.texData.has(n)){let r=this.texData.get(n);r.refCount--}}move(n,r,a,s,i){if(G().getBool("DEBUG")&&this.checkNumericalProblems(r),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(n,{shape:a,dtype:s,values:r,usage:nr.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(n){this.disposeData(n.dataId)}readSync(n){let r=this.texData.get(n),{values:a,dtype:s,complexTensorInfos:i,slice:o,shape:l,isPacked:u}=r;if(o!=null){let c;u?c=new Ba(l,Ma):c=new jr(l,Ma);let m=this.runWebGLProgram(c,[{dataId:n,shape:l,dtype:s}],s),f=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(a!=null)return this.convertAndCacheOnCPU(n);if(s==="string")return a;let d=this.activeTimers!=null,h;d&&(h=w.now());let p;if(s==="complex64"){let c=this.readSync(i.real.dataId),m=this.readSync(i.imag.dataId);p=T.mergeRealAndImagArrays(c,m)}else p=this.getValuesFromTexture(n);return d&&(this.downloadWaitMs+=w.now()-h),this.convertAndCacheOnCPU(n,p)}async read(n){if(this.pendingRead.has(n)){let f=this.pendingRead.get(n);return new Promise(g=>f.push(g))}let r=this.texData.get(n),{values:a,shape:s,slice:i,dtype:o,complexTensorInfos:l,isPacked:u}=r;if(i!=null){let f;u?f=new Ba(s,Ma):f=new jr(s,Ma);let g=this.runWebGLProgram(f,[{dataId:n,shape:s,dtype:o}],o),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(a!=null)return this.convertAndCacheOnCPU(n);if(G().getBool("DEBUG")&&!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d=null,h;if(o!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(n);let f=this.texData.get(h.dataId);d=this.gpgpu.createBufferFromTexture(f.texture.texture,...Hh(s))}this.pendingRead.set(n,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(o==="complex64"){let f=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),g=f[0],y=f[1];p=T.mergeRealAndImagArrays(g,y)}else if(d==null)p=this.getValuesFromTexture(n);else{let f=w.sizeFromShape(s);p=this.gpgpu.downloadFloat32MatrixFromBuffer(d,f)}if(h!=null&&this.disposeIntermediateTensorInfo(h),d!=null){let f=this.gpgpu.gl;pe(f,()=>f.deleteBuffer(d))}let c=this.convertAndCacheOnCPU(n,p),m=this.pendingRead.get(n);return this.pendingRead.delete(n),m.forEach(f=>f(c)),this.pendingDisposal.has(n)&&(this.pendingDisposal.delete(n),this.disposeData(n)&&cr().removeDataId(n,this),this.pendingDeletes--),c}readToGPU(n,r={}){let a=this.texData.get(n),{values:s,shape:i,slice:o,dtype:l,isPacked:u,texture:d}=a;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let m;u?m=new Ba(i,Ma):m=new jr(i,Ma);let f=this.runWebGLProgram(m,[{dataId:n,shape:i,dtype:l}],l),g=this.readToGPU(f,r);return this.disposeIntermediateTensorInfo(f),g}if(d==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let h=this.decode(n,r.customTexShape),p=cr().makeTensorFromTensorInfo(h),c=this.texData.get(h.dataId);return Object.assign({tensorRef:p},c.texture)}bufferSync(n){let r=this.readSync(n.dataId);if(n.dtype==="string")try{let a=r.map(s=>w.decodeString(s));return Oe(n.shape,n.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(n.shape,n.dtype,r)}checkNumericalProblems(n){if(n!=null)for(let r=0;r<n.length;r++){let a=n[r];if(!iE(a))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(n){let{shape:r,dtype:a,isPacked:s}=this.texData.get(n),i=w.sizeFromShape(r);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(n),m=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(m.texture.texture,...Hh(r)).subarray(0,i);return this.disposeIntermediateTensorInfo(c),f}let o=G().getBool("WEBGL_PACK")&&s===!0,l=o?Id(r):r,u=o?new M9(l):new R9(l),d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:n}],"float32"),h=this.texData.get(d.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(d),p}timerAvailable(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(n){let r=this.activeTimers,a=[],s=!1;this.programTimersStack==null?(this.programTimersStack=a,s=!0):this.activeTimers.push(a),this.activeTimers=a,n();let i=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=r,s&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(i);l.kernelMs=w.sum(u),l.getExtraProfileInfo=()=>u.map((d,h)=>({name:o[h],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(n){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),n):(n.endMs=w.now(),n)}async getQueryTime(n){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(n);let r=n;return r.endMs-r.startMs}disposeData(n,r=!1){if(this.pendingDisposal.has(n))return!1;if(!this.texData.has(n))return!0;if(r?this.texData.get(n).refCount=0:this.texData.get(n).refCount--,!r&&this.texData.get(n).refCount>0)return!1;if(this.pendingRead.has(n))return this.pendingDisposal.add(n),this.pendingDeletes++,!1;this.releaseGPUData(n);let{complexTensorInfos:a}=this.texData.get(n);return a!=null&&(this.disposeData(a.real.dataId,r),this.disposeData(a.imag.dataId,r)),this.texData.delete(n),!0}releaseGPUData(n){let{texture:r,dtype:a,texShape:s,usage:i,isPacked:o,slice:l}=this.texData.get(n),u=l&&l.origDataId||n,d=this.dataRefCount.get(u);d>1?this.dataRefCount.set(u,d-1):(this.dataRefCount.delete(u),r!=null&&(this.numBytesInGPU-=this.computeBytes(s,a),this.textureManager.releaseTexture(r,s,i,o)));let h=this.texData.get(n);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(n){return this.uploadToGPU(n),this.texData.get(n).texture.texture}getDataInfo(n){return this.texData.get(n)}shouldExecuteOnCPU(n,r=YQ){return G().getBool("WEBGL_CPU_FORWARD")&&n.every(a=>this.texData.get(a.dataId).texture==null&&w.sizeFromShape(a.shape)<r)}getGPGPUContext(){return this.gpgpu}where(n){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let r=n.dataSync();return KQ(n.shape,r)}packedUnaryOp(n,r,a){let s=new Ba(n.shape,r),i=this.compileAndRun(s,[n],a);return cr().makeTensorFromTensorInfo(i)}abs(n){if(this.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=QE(this.texData.get(n.dataId).values);return this.makeOutput(n.shape,n.dtype,s)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(n,qk,n.dtype);let r=new jr(n.shape,qk),a=this.compileAndRun(r,[n]);return cr().makeTensorFromTensorInfo(a)}makeTensorInfo(n,r,a){let s;if(r==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let i=a.map(o=>w.encodeString(o));s=this.write(i,n,r)}else s=this.write(a,n,r);return this.texData.get(s).usage=null,{dataId:s,shape:n,dtype:r}}makeOutput(n,r,a){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,a),this)}unpackTensor(n){let r=new qQ(n.shape);return this.runWebGLProgram(r,[n],n.dtype)}packTensor(n){let r=new AQ(n.shape);return this.runWebGLProgram(r,[n],n.dtype,null,!0)}packedReshape(n,r){let a=[si(n.shape),...ii(n.shape)],s={dtype:n.dtype,shape:a,dataId:n.dataId},i=[si(r),...ii(r)],o=new n$(i,a),l=!0,u=[a],d=this.runWebGLProgram(o,[s],n.dtype,u,l);return{dataId:d.dataId,shape:r,dtype:d.dtype}}decode(n,r){let a=this.texData.get(n),{isPacked:s,shape:i,dtype:o}=a;if(r!=null){let c=w.sizeFromShape(i),m=r[0]*r[1]*4;w.assert(c<=m,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=Id(i),u;s?u=new D9(l):u=new F9(l);let d=!0,h=[r??Hh(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:o,dataId:n}],o,h,d,r);return{dtype:o,shape:i,dataId:p.dataId}}runWebGLProgram(n,r,a,s,i=!1,o){let l=this.makeTensorInfo(n.outputShape,a),u=this.texData.get(l.dataId);if(n.packedOutput&&(u.isPacked=!0),n.outPackingScheme===Ud.DENSE){let b=o??Hh(n.outputShape);u.texShape=b.map(x=>x*2)}if(n.outTexUsage!=null&&(u.usage=n.outTexUsage),w.sizeFromShape(l.shape)===0)return u.values=w.getTypedArrayFromDType(l.dtype,0),l;let d=[],h=r.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!n.packedInputs&&w.sizeFromShape(b.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};n.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!n.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),d.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!Gd(x.shape,b.shape)){let v=b,I=b.shape;b.shape=x.shape,b=this.packedReshape(b,I),d.push(b),x=this.texData.get(b.dataId),v.shape=I}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(l.dataId);let p={shape:l.shape,texData:u,isUniform:!1},c=A9(n,h,p),m=this.getAndSaveBinary(c,()=>E9(this.gpgpu,n,h,p)),f=this.activeTimers!=null,g;f&&(g=this.startTimer()),G().get("ENGINE_COMPILE_ONLY")||$9(this.gpgpu,m,h,p,s),d.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(g=this.endTimer(g),this.activeTimers.push({name:n.constructor.name,query:this.getQueryTime(g)}));let y=G().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let b=w.now();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!G().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){let b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(n,r,a,s,i=!1){return a=a||r[0].dtype,this.runWebGLProgram(n,r,a,s,i)}getAndSaveBinary(n,r){return n in this.binaryCache||(this.binaryCache[n]=r()),this.binaryCache[n]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let n=G().getBool("DEBUG");G().set("DEBUG",!1);let r=this.abs(ve(1e-8)).dataSync()[0];if(G().set("DEBUG",n),r>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?XQ:ZQ}uploadToGPU(n){let r=this.texData.get(n),{shape:a,dtype:s,values:i,texture:o,usage:l,isPacked:u}=r;if(o!=null)return;let d=this.activeTimers!=null,h;d&&(h=w.now());let p=r.texShape;if(p==null&&(p=IE(a,u),r.texShape=p),i!=null){let c=Id(a),m,f=p[1],g=p[0],y=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!y)&&([f,g]=Hu(p[0],p[1])),u?m=new L9(c,y):m=new Uk(c,y);let b=y?[g,f]:p,x=this.makeTensorInfo(b,s),v=this.texData.get(x.dataId);y?v.usage=nr.PIXELS:v.usage=nr.UPLOAD,v.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,g,i);let I=[[g,f]],N=this.runWebGLProgram(m,[x],s,I,!0),_=this.texData.get(N.dataId);r.texShape=_.texShape,r.isPacked=_.isPacked,r.usage=_.usage,G().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(r.texture=_.texture,r.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(x),d&&(this.uploadWaitMs+=w.now()-h)}else{let c=this.acquireTexture(p,l,s,u);r.texture=c}}convertAndCacheOnCPU(n,r){let a=this.texData.get(n),{dtype:s}=a;return r!=null&&(a.values=tee(r,s)),a.values}acquireTexture(n,r,a,s){if(this.numBytesInGPU+=this.computeBytes(n,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(n,r,s)}computeBytes(n,r){return n[0]*n[1]*w.bytesPerElement(r)}checkCompileCompletion(){for(let[,n]of Object.entries(this.binaryCache))this.checkCompletion_(n)}async checkCompileCompletionAsync(){let n=[];if(this.gpgpu.parallelCompilationExtension){for(let[,r]of Object.entries(this.binaryCache))n.push(this.checkCompletionAsync_(r));return Promise.all(n)}else{for(let[,r]of Object.entries(this.binaryCache)){let a=new Promise(s=>{try{this.checkCompletion_(r),s(!0)}catch(i){throw i}});n.push(a)}return Promise.all(n)}}async checkCompletionAsync_(n){return this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(n):(await Wv(),this.checkCompletionAsync_(n))}checkCompletion_(n){if(this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(n.webGLProgram)),this.gpgpu.gl.getShaderParameter(n.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Qw(n.source,this.gpgpu.gl.getShaderInfoLog(n.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let n of Object.values(this.binaryCache)){this.gpgpu.buildVao(n.webGLProgram);let{variablesLocations:r,customUniformLocations:a,infLoc:s,nanLoc:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=RE(this.gpgpu,n.program,n.webGLProgram);n.variablesLocations=r,n.customUniformLocations=a,n.infLoc=s,n.nanLoc=i,n.outShapeLocation=o,n.outShapeStridesLocation=l,n.outTexShapeLocation=u}}createTensorFromGPUData(n,r,a){n.channels=n.channels||"RGBA";let{texture:s,height:i,width:o,channels:l}=n,u=cr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let d=u.writeTexture(s,r,a,i,o,l);return cr().makeTensorFromDataId(d,r,a,u)}};return e.nextDataId=0,e})();function tee(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var nee="4.21.0";function s$(){G().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ip.isBrowser()&&nm("webgl",()=>new r$,2);var ree={forceHalfFloat:s$},u0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,oi=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=pn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},zo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Ju=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=pn(a);let s="";if(r)if(a===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ut(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=mn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Kn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var aee={kernelName:Bi,backendName:"webgl",kernelFunc:Kn};function ys(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Kn({inputs:{x:r},backend:n}),l=Kn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var see={kernelName:Wc,backendName:"webgl",kernelFunc:ys},i$="return (a < 0.) ? b * a : a;",o$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function iee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ju(o$,a.shape,i.shape):new oi(i$,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var oee={kernelName:Gi,backendName:"webgl",kernelFunc:iee},l$="return (a < 0.) ? b * a : a;",u$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lee(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ju(u$,r.shape,a.shape):new oi(l$,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var uee={kernelName:io,backendName:"webgl",kernelFunc:lee},Yu="if (isnan(x)) return x;";function qe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let h=o.texData.get(i.dataId),p=n(h.values,l);return o.makeTensorInfo(i.shape,l,p)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,d;return u?d=new Ba(i.shape,t):d=new jr(i.shape,e),o.runWebGLProgram(d,[i],l)}}function sn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(r&&l.dtype==="complex64"){let m=d.texData.get(l.dataId),f=d.texData.get(u.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,I]=x,N={dataId:v.dataId,dtype:v.dtype,shape:l.shape},_={dataId:I.dataId,dtype:I.dtype,shape:u.shape},E=new oi(e,l.shape,u.shape);return d.runWebGLProgram(E,[N,_],ir(v.dtype,I.dtype))}),b=ys({inputs:{real:g,imag:y},backend:d});return d.disposeIntermediateTensorInfo(g),d.disposeIntermediateTensorInfo(y),b}let h=s||ir(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([l,u]))&&a!=null){let m=d.texData.get(l.dataId).values,f=d.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(m):m,y=l.dtype==="string"?T.fromUint8ToStringArray(f):f,[b,x]=a(l.shape,u.shape,g,y,h),v=d.makeTensorInfo(x,h),I=d.texData.get(v.dataId);return I.values=b,v}let p=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return p?c=new Ju(t,l.shape,u.shape,n):c=new oi(e,l.shape,u.shape),d.runWebGLProgram(c,[l,u],h)}}function Hd(e,t=!1){if(e==="linear")return t?VQ:LQ;if(e==="relu")return t?GQ:zQ;if(e==="elu")return t?UQ:PQ;if(e==="relu6")return t?HQ:BQ;if(e==="prelu")return t?u$:l$;if(e==="leakyrelu")return t?o$:i$;if(e==="sigmoid")return t?jQ:WQ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var d$=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pn(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${m[0]});
          result += (${c[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Kk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Xk=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Zk="return a * b;";function d0(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=T.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),u=new Xk(Kk.REAL,r.shape,a.shape),d=new Xk(Kk.IMAG,r.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],p=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(d,h,"float32"),m=ys({inputs:{real:p,imag:c},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),m}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[u,d]=iQ(r.shape,a.shape,o.values,l.values,s),h=n.makeTensorInfo(d,s),p=n.texData.get(h.dataId);return p.values=u,h}let i;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Ju(Zk,r.shape,a.shape):i=new oi(Zk,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var dee={kernelName:no,backendName:"webgl",kernelFunc:d0};function pee(e,t,n){let r=[si(e.shape),...ii(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[si(t),...ii(t)],i=new n$(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function de(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=w.sizeFromShape(a.shape),l=w.inferFromImplicitShape(s,o),u=w.sizeFromShape(l);w.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let d=i.texData.get(a.dataId);return d.isPacked&&!Gd(a.shape,l)&&!(d.texture!==null&&Gd(d.shape,l))?pee(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var hee={kernelName:yu,backendName:"webgl",kernelFunc:de},Jk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let d=1/t;l=`sumValue += dot(values * ${w.isInt(d)?d.toPrecision(2):d}, ones);`}let u="";a%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},cee=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,d=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function mee(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Bo(e,t,n,r){let a=mee(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:u}=a[i],d,h;n==="mean"?d=i===0?new Jk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Jk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):d=new cee({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(d,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var fee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=ut(this.rank),a=gee(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function gee(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var yee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ut(this.rank),a=t$("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Xm(e,t,n){let r=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yee(e.shape,t):new fee(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function bee(e,t,n,r){let a=t,s=e.shape.length,i=w.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,d=e;u&&(d=Xm(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=T.computeOutAndReduceShapes(d.shape,o),c=h;n&&(c=T.expandShapeToKeepDim(h,i));let m=w.sizeFromShape(p),f=w.sizeFromShape(e.shape)/m,g=de({inputs:{x:d},attrs:{shape:[f,m]},backend:r}),y=tm(e.dtype),b=Bo(g,y,"sum",r),x=de({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(d),x}function Zm(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return bee(a,s,i,n)}var xee={kernelName:So,backendName:"webgl",kernelFunc:Zm};function yn(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=a.shape[s[d]];let u;if(i.shouldExecuteOnCPU([a])){let d=i.texData.get(a.dataId).values,h=l0(d,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype);let p=i.texData.get(u.dataId);p.values=h}else u=Xm(a,s,i);return u}var vee={kernelName:ha,backendName:"webgl",kernelFunc:yn},p$=1e3;function $c({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[d-1]:t.shape[d-2],c=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[d-2]:t.shape[d-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(f),b=w.sizeFromShape(g),x=Mu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);w.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,h,c]:[y,c,h],I=r?[b,m,p]:[b,p,m],N=de({inputs:{x:e},backend:a,attrs:{shape:v}}),_=de({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[N,_],A=Math.max(y,b),D=n?N.shape[1]:N.shape[2],F=s!=null,S=i!=null,M=l==="leakyrelu",z=l!=null?Hd(l,!0):null,U=F||S||M||z!=null,H;if((c===1||m===1)&&D>p$&&U===!1){let K=N,J=_;n&&(K=yn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),E.push(K)),r&&(J=yn({inputs:{x:_},backend:a,attrs:{perm:[0,2,1]}}),E.push(J));let Q=m!==1,ee=m===1,re=K;Q&&(re=de({inputs:{x:K},backend:a,attrs:{shape:[A,D,1]}}),E.push(re));let te=m===1?2:1,ae=J;ee&&(ae=de({inputs:{x:J},backend:a,attrs:{shape:[A,1,D]}}),E.push(ae));let se=d0({inputs:{a:re,b:ae},backend:a});H=Zm({inputs:{x:se},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(se)}else{let K=ir(e.dtype,t.dtype),J=new d$(v,I,[A,c,m],n,r,F,z,S,M),Q=[N,_];if(s!=null&&Q.push(s),S&&Q.push(i),M){let ee=a.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));Q.push(ee),E.push(ee)}H=a.runWebGLProgram(J,Q,K)}let q=de({inputs:{x:H},backend:a,attrs:{shape:x}});E.push(H);for(let K of E)a.disposeIntermediateTensorInfo(K);return q}function wee(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return $c({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}var kee={kernelName:js,backendName:"webgl",kernelFunc:wee},Yk="return abs(x);";function Iee(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=QE(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Ba(r.shape,Yk):a=new jr(r.shape,Yk),n.runWebGLProgram(a,[r],r.dtype)}var See={kernelName:Dl,backendName:"webgl",kernelFunc:Iee},Nee=vr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Tee=qe({opSnippet:Nee}),_ee={kernelName:pi,backendName:"webgl",kernelFunc:Tee},Cee=vr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Eee=qe({opSnippet:Cee}),$ee={kernelName:hi,backendName:"webgl",kernelFunc:Eee},Qk="return a + b;",Aee=sn({opSnippet:Qk,packedOpSnippet:Qk,supportsComplex:!0,cpuKernelImpl:z9}),Fee={kernelName:is,backendName:"webgl",kernelFunc:Aee},Dee=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},Ree=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function sc(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return Kn({inputs:{x:r[0]},backend:n});if(r.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=sc({inputs:r.slice(0,o),backend:n}),u=sc({inputs:r.slice(o),backend:n});return sc({inputs:[l,u],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>ir(o,l)),s=r.map(o=>o.shape),i=G().getBool("WEBGL_PACK")?new Ree(r[0].shape,s):new Dee(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var Mee={kernelName:ci,backendName:"webgl",kernelFunc:sc};function Oee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=yn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=de({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Bo(f,f.dtype,"all",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=de({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=de({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var Lee={kernelName:Rl,backendName:"webgl",kernelFunc:Oee};function Pee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=yn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=de({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Bo(f,f.dtype,"any",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=de({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=de({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var zee={kernelName:Ml,backendName:"webgl",kernelFunc:Pee},Bee=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Wee=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=ut(o),u=mn("coords",o),d,h;if(s===1){h=o+1;let _=ut(h);d=`
        ${_} sourceLocR = ${_}(${u.join()}, 0);
        ++${u[o-1]};
        ${_} sourceLocG = ${_}(${u.join()}, 0);
        ++${u[o-2]};
        ${_} sourceLocA = ${_}(${u.join()}, 0);
        --${u[o-1]};
        ${_} sourceLocB = ${_}(${u.join()}, 0);
        --${u[o-2]};`}else h=o,d=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let p=["x","y","z","w","u","v"].slice(0,h),c="."+p[h-1],m=p.map(_=>"int "+_),f=mn("sourceLocR",h-1).concat("inIdx.r"),g=mn("sourceLocG",h-1).concat("inIdx.g"),y=mn("sourceLocB",h-1).concat("inIdx.b"),b=mn("sourceLocA",h-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function h$(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new Bee(o,n,r==null),u=[t];r!=null&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(d.shape[1]===1)return d;let h=h$(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function c$(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new Wee(a,i,n,r==null),l=r==null?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let d=c$(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}return u}function m$(e,t,n,r){let a=[n];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,d]=T.computeOutAndReduceShapes(l.shape,a),h=w.sizeFromShape(d),p=de({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(p);let c=h$(e,p,r);s.push(c);let m=de({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}return c$(e,t,r)}function Vee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=yn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=m$(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),d}var Uee={kernelName:Ol,backendName:"webgl",kernelFunc:Vee};function Gee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=yn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=m$(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),d}var Hee={kernelName:Ll,backendName:"webgl",kernelFunc:Gee},jee=vr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,qee=qe({opSnippet:jee}),Kee={kernelName:mi,backendName:"webgl",kernelFunc:qee},Xee=vr+"return log(x + sqrt(x * x + 1.0));",Zee=qe({opSnippet:Xee}),Jee={kernelName:fi,backendName:"webgl",kernelFunc:Zee},Yee=vr+`
  return atan(x);
`,Qee=qe({opSnippet:Yee}),ete={kernelName:gi,backendName:"webgl",kernelFunc:Qee},tte=u0+`
  return atan(a, b);
`,nte=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,rte=sn({opSnippet:tte,packedOpSnippet:nte}),ate={kernelName:bi,backendName:"webgl",kernelFunc:rte},ste=vr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ite=qe({opSnippet:ste}),ote={kernelName:yi,backendName:"webgl",kernelFunc:ite},jd=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let _=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let v=Math.floor(s/4)*4,I=s%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${x});
      }
    `}},p0=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let N=Math.floor(s/4)*4,_=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function lte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ju(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Kn({inputs:{x:a},backend:n});let h=new jd(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var ute={kernelName:xi,backendName:"webgl",kernelFunc:lte};function dte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,d,o,l,u),p=new p0(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}var pte={kernelName:Pl,backendName:"webgl",kernelFunc:dte},hte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},cte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,m=h-1-e.padInfo.top,f=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function mte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,h,u,d),c=new cte(p);return n.runWebGLProgram(c,[a],i.dtype)}var fte={kernelName:ep,backendName:"webgl",kernelFunc:mte};function gte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ju([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),h=new hte(d);return n.runWebGLProgram(h,[a],i.dtype)}var yte={kernelName:Qd,backendName:"webgl",kernelFunc:gte};function bte(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return $c({a,b:s,transposeA:i,transposeB:o,backend:n})}var xte={kernelName:vi,backendName:"webgl",kernelFunc:bte},vte=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},wte=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},kte=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;w.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[r,a,s],d=null;i!=null&&(d=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));let p=G().getBool("WEBGL_PACK_NORMALIZATION")?new wte(r.shape,a.shape,s.shape,d,h,l):new vte(r.shape,a.shape,s.shape,d,h,l);return t.runWebGLProgram(p,u,u[0].dtype)},Ite={kernelName:Pi,backendName:"webgl",kernelFunc:kte},Ste=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ut(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Nte(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Qb[i]} = start[${i}] + coords.${Qb[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Qb=["x","y","z","w","u","v"];function Nte(e){if(e===1)return"sourceLoc";if(e<=6)return Qb.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Tte=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ut(this.rank),n=mn("coords",this.rank),r=mn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${r[d]} = ${n[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function _te(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=zt.computeFlatOffset(t,w.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function Qu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=zt.parseSliceParams(a,s,i);if(zt.assertParamsValid(a,o,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=n.texData.get(a.dataId),p=yQ(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,p)}let{isPacked:u}=n.texData.get(a.dataId),d=zt.isSliceContinous(a.shape,o,l);if(u||!d){let h=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tte(l):new Ste(l),p=[o];return n.runWebGLProgram(h,[a],a.dtype,p)}return n.uploadToGPU(a.dataId),_te(a,o,l,n)}var Cte={kernelName:Su,backendName:"webgl",kernelFunc:Qu},Ete=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;w.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=[],m=de({inputs:{x:a},backend:n,attrs:{shape:l}}),f=yn({inputs:{x:m},backend:n,attrs:{perm:u}}),g=de({inputs:{x:f},backend:n,attrs:{shape:d}}),y=Qu({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(m),c.push(f),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},$te={kernelName:zl,backendName:"webgl",kernelFunc:Ete};function Ate(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=YE(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var Fte={kernelName:Bl,backendName:"webgl",kernelFunc:Ate},Dte=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Rte=`
  return float(int(a.r) & int(b.r));
`;function Mte(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=G().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||i===1){let l=n.texData.get(r.dataId).values,u=n.texData.get(a.dataId).values,[d,h]=W9(r.shape,a.shape,l,u,r.dtype),p=n.makeTensorInfo(h,r.dtype),c=n.texData.get(p.dataId);return c.values=d,p}let o;return s?o=new Ju(Dte,r.shape,a.shape,!1):o=new oi(Rte,r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}var Ote={kernelName:Wl,backendName:"webgl",kernelFunc:Mte};function Lte(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var Pte={kernelName:tp,backendName:"webgl",kernelFunc:Lte},zte="return float(a != b);",f$=sn({opSnippet:zte,cpuKernelImpl:lQ,dtype:"bool"}),Bte={kernelName:pu,backendName:"webgl",kernelFunc:f$};function Jp(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.real},backend:n})}var Wte={kernelName:Qc,backendName:"webgl",kernelFunc:Jp},Vte="return float(int(x));";function Ute(e,t){let n=new jr(e.shape,Vte),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function ex(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Kn({inputs:{x:a},backend:n});let i=kt(a.shape),o=ex({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=ys({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=Jp({inputs:{input:a},backend:n}),o=ex({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(a.dtype,s)){let i=Kn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,u]=V9(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}if(s==="int32")return Ute(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=f$({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var Gte={kernelName:wi,backendName:"webgl",kernelFunc:ex},eI="return ceil(x);",Hte=qe({opSnippet:eI,packedOpSnippet:eI,cpuKernelImpl:U9}),jte={kernelName:ki,backendName:"webgl",kernelFunc:Hte},qte=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Kte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Xte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;G().getBool("WEBGL_PACK_CLIP")?o=new Kte(a.shape):o=new qte(a.shape);let l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}var Zte={kernelName:os,backendName:"webgl",kernelFunc:Xte},Jte=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function tI(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Yte(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Jte(r.shape),i=[tI(r,a.complexTensorInfos.real),tI(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var Qte={kernelName:np,backendName:"webgl",kernelFunc:Yte},ene=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},tne=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=ut(r),s=mn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],u=i.slice(-2),d=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];h+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${qh(i,l,f)}),
            vec2(${qh(u,l,f)}));
        }`}let p=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${p}(${qh(i,l,c)}),
          vec2(${qh(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function qh(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function Jm(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var nne={kernelName:Xc,backendName:"webgl",kernelFunc:Jm};function Sd(e,t,n){let r=e[0].dtype;if(r==="complex64"){let c=e.map(b=>Jp({inputs:{input:b},backend:n})),m=e.map(b=>Jm({inputs:{input:b},backend:n})),f=Sd(c,t,n),g=Sd(m,t,n),y=ys({inputs:{real:f,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),m.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let c=e.map(v=>{let I=[-1,w.sizeFromShape(v.shape.slice(t))];return de({inputs:{x:v},backend:n,attrs:{shape:I}})}),m=c.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),f=T.computeOutShape(c.map(v=>v.shape),1),g=c[0].shape[0]===1,y=G9(m,f,r,g),b=T.computeOutShape(e.map(v=>v.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}let s=e.filter(c=>w.sizeFromShape(c.shape)>0),i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new jr(e[0].shape,Ma):new Ba(e[0].shape,Ma);return n.runWebGLProgram(c,e,r)}let o=G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let f=0;f<s.length;f+=o){let g=s.slice(f,f+o);c.push(Sd(g,t,n))}let m=Sd(c,t,n);for(let f of c)n.disposeIntermediateTensorInfo(f);return m}if(i){let c=new tne(s.map(m=>m.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:l,outShape:u}=rne(s,t,n),d=new ene(l.map(c=>c.shape)),h=n.runWebGLProgram(d,l,r);l.forEach(c=>n.disposeIntermediateTensorInfo(c));let p=de({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function rne(e,t,n){let r=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>de({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function g$(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(u=>u.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(u=>u.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>w.sizeFromShape(u.shape)>0);return l.length===1?Kn({inputs:{x:l[0]},backend:n}):Sd(l,s,n)}var ane={kernelName:Vl,backendName:"webgl",kernelFunc:g$},y$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}},sne=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},b$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<u;f++)h+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<u;f++)h+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(d+1)/2;f++){let g=f*2;if(h+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){let y=s%2===0?w.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",c="";n&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:p=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${c}
         setOutput(result);
       }
     `}},ine=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pn(this.outputShape.length);let{dataFormat:n}=t,r=kn(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function Ac(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function x$({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=r.texData.get(e.dataId),d=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,c=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[];if(s!=null){let b=Ac(s.shape,c);b!=null&&(s=de({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=Ac(a.shape,c);b!=null&&(a=de({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((h===1||p===1)&&d>p$)&&u.isPacked&&c&&u.texture!=null&&l[2]%2!==0&&w.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},v=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Gd(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let I=de({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let N=$c({a:x,b:I,backend:r,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),_=r.texData.get(N.dataId);w.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=v,_.shape=n.outShape,g=Kn({inputs:{x:N},backend:r}),g.shape=n.outShape,y.push(N)}else{let b=n.outHeight*n.outWidth,x=de({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),v=de({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=$c({a:c?x:v,b:c?v:x,transposeA:!c,transposeB:f,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=de({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(v),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function v$({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:h,outHeight:p,dataFormat:c}=n,m=c==="channelsLast",f=l*u*d,g=p*h,y=[n.batchSize,f,g],b=!0,x=!1,v=[];if(s!=null){let K=Ac(s.shape,m);K!=null&&(s=de({inputs:{x:s},backend:r,attrs:{shape:K}}),v.push(s))}if(a!=null){let K=Ac(a.shape,m);K!=null&&(a=de({inputs:{x:a},backend:r,attrs:{shape:K}}),v.push(a))}let I=de({inputs:{x:t},backend:r,attrs:{shape:[1,f,w.sizeFromShape(t.shape)/f]}});v.push(I);let N=new ine(y,n),_=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[e],"float32",_),A=de({inputs:{x:E},backend:r,attrs:{shape:y}});v.push(E),v.push(A);let D=a!=null,F=s!=null,S=o==="leakyrelu",M=o?Hd(o,!0):null,z=new d$(m?A.shape:I.shape,m?I.shape:A.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,D,M,F,S),U=m?[A,I]:[I,A];if(a&&U.push(a),F&&U.push(s),S){let K=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));U.push(K),v.push(K)}let H=r.runWebGLProgram(z,U,"float32"),q=de({inputs:{x:H},backend:r,attrs:{shape:n.outShape}});v.push(H);for(let K of v)r.disposeIntermediateTensorInfo(K);return q}function one(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r,h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))c=x$({x:a,filter:s,convInfo:p,backend:n});else if(p.strideWidth<=2&&h==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let f=new b$(p),g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];c=n.runWebGLProgram(f,[a,s],"float32",g)}else if(G().getBool("WEBGL_CONV_IM2COL"))c=v$({x:a,filter:s,convInfo:p,backend:n});else{let f=new y$(p);c=n.runWebGLProgram(f,[a,s],"float32")}let m=de({inputs:{x:c},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(c),m}var lne={kernelName:Ii,backendName:"webgl",kernelFunc:one},une=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},dne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},pne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},hne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function cne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),c=new une(p);return n.runWebGLProgram(c,[a,s],"float32")}var mne={kernelName:Vc,backendName:"webgl",kernelFunc:cne},fne=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=pn(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function gne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=T.convertConv2DDataFormat(u),p=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h);if(G().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){let c=[[p.strideHeight,p.strideWidth]],m=new fne(p);return n.runWebGLProgram(m,[a,s],"float32",c)}else{let c=new dne(p);return n.runWebGLProgram(c,[a,s],"float32")}}var yne={kernelName:Si,backendName:"webgl",kernelFunc:gne};function bne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new sne(u);return n.runWebGLProgram(d,[a,s],"float32")}var xne={kernelName:Ni,backendName:"webgl",kernelFunc:bne};function vne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=T.computeConv3DInfo(a.shape,l,i,1,o),d=new pne(u);return n.runWebGLProgram(d,[a,s],"float32")}var wne={kernelName:Ul,backendName:"webgl",kernelFunc:vne};function kne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=T.computeConv3DInfo(l,s.shape,o,1,i),d=new hne(u);return n.runWebGLProgram(d,[a,s],"float32")}var Ine={kernelName:Gl,backendName:"webgl",kernelFunc:kne},Sne=Yu+`
  return cos(x);
`,Nne=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${zo}
  return result;
`,Tne=qe({opSnippet:Sne,packedOpSnippet:Nne}),_ne={kernelName:Ti,backendName:"webgl",kernelFunc:Tne},Cne=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Ene=qe({opSnippet:Cne}),$ne={kernelName:_i,backendName:"webgl",kernelFunc:Ene},Ane=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,h]=n;this.outputShape=[u,d,h,l];let p=r==="bilinear"?1:0,[c,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Fne=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new Ane(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")},Dne={kernelName:jl,backendName:"webgl",kernelFunc:Fne},qd;(function(e){e.Prod="*",e.Sum="+"})(qd||(qd={}));var nI=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===qd.Prod?"1.0":"0.0",i=n?s:`getX(${rI(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?`end != ${o-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ut(a)} coords = getOutputCoords();
        int end = ${aI(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${aI(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${rI(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function rI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function aI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function w$(e,t,n,r,a,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=yn({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let d=l.shape[u],h=Kn({inputs:{x:l},backend:n});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){let c=new nI(e,l.shape,!1,s),m=[[p]],f=h;h=n.runWebGLProgram(c,[h],h.dtype,m),n.disposeIntermediateTensorInfo(f)}if(a){let p=new nI(e,l.shape,a,s),c=h;h=n.runWebGLProgram(p,[h],h.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let p=T.getUndoAxesPermutation(o),c=yn({inputs:{x:h},backend:n,attrs:{perm:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),c}return h}function Rne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return w$(qd.Prod,a,n,s,i,o)}var Mne={kernelName:Hl,backendName:"webgl",kernelFunc:Rne};function One(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return w$(qd.Sum,a,n,s,i,o)}var Lne={kernelName:Ci,backendName:"webgl",kernelFunc:One};function Pne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=YE(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,d)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),d=B9(l,u,i,o);return n.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var zne={kernelName:rp,backendName:"webgl",kernelFunc:Pne},Bne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Wne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],d=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,p=u*s,c=d/(s*s),m=i==="NHWC"?[o,h,p,c]:[o,c,h,p],f=new Bne(m,s,i);return n.runWebGLProgram(f,[a],a.dtype)}var Vne={kernelName:ql,backendName:"webgl",kernelFunc:Wne},k$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}},I$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<d;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<d)){let b=i%2===0?w.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<d&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<d&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<d&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let c="",m="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,m="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${m}
        setOutput(result);
      }
    `}};function Une(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;d==null&&(d=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=T.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),p;G().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?p=new I$(h):p=new k$(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}var Gne={kernelName:Ei,backendName:"webgl",kernelFunc:Une},Hne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},jne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=T.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new Hne(h);return n.runWebGLProgram(p,[a,s],"float32")}var Kne={kernelName:Uc,backendName:"webgl",kernelFunc:qne};function Xne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new jne(h);return n.runWebGLProgram(p,[a,s],"float32")}var Zne={kernelName:Gc,backendName:"webgl",kernelFunc:Xne},Jne=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Yne(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=de({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Jne(s),l=n.runWebGLProgram(o,[i],i.dtype),u=de({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var Qne={kernelName:ap,backendName:"webgl",kernelFunc:Yne},ere=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function tre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),d,h=new ere(u);d=n.runWebGLProgram(h,[a,s],"float32");let p=de({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}var nre={kernelName:$i,backendName:"webgl",kernelFunc:tre};function rre(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of d[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=yn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=de({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),p===null?p=x:(p=d0({inputs:{a:x,b:p},backend:n}),m.push(p))}f<h-1&&(u[f]>=0&&(p=Zm({inputs:{x:p},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(p)),c--)}for(let f of m)f!==p&&n.disposeIntermediateTensorInfo(f);return p}var are={kernelName:jc,backendName:"webgl",kernelFunc:rre},sre="return (x >= 0.0) ? x : (exp(x) - 1.0);",ire=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ore=qe({opSnippet:sre,packedOpSnippet:ire}),lre={kernelName:Fi,backendName:"webgl",kernelFunc:ore},ure="return (b >= 0.0) ? a : a * (b + 1.0);",dre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,pre=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ju(dre,r.shape,a.shape):new oi(ure,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},hre={kernelName:Kl,backendName:"webgl",kernelFunc:pre},cre=`
  return vec4(equal(a, b));
`,mre="return float(a == b);",fre=sn({opSnippet:mre,packedOpSnippet:cre,dtype:"bool",cpuKernelImpl:H9}),gre={kernelName:Xl,backendName:"webgl",kernelFunc:fre},yre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,bre=qe({opSnippet:yre}),xre={kernelName:Di,backendName:"webgl",kernelFunc:bre},vre=Yu+`
  return exp(x);
`,wre=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,S$=qe({opSnippet:vre,packedOpSnippet:wre,cpuKernelImpl:j9,dtype:"float32"}),kre={kernelName:Ri,backendName:"webgl",kernelFunc:S$};function tx(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),de({inputs:{x:s},backend:r,attrs:{shape:o}})}var Ire={kernelName:Zl,backendName:"webgl",kernelFunc:tx},sI="return exp(x) - 1.0;",Sre=qe({opSnippet:sI,packedOpSnippet:sI,cpuKernelImpl:q9}),Nre={kernelName:Mi,backendName:"webgl",kernelFunc:Sre},iI=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function N$(e,t,n){let r=n.texData.get(e.dataId),a=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=de({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new iI("real",l,t),d=new iI("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(d,h,"float32"),m=ys({inputs:{real:p,imag:c},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c);let f=de({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function Tre(e){let{inputs:t,backend:n}=e,{input:r}=t;return N$(r,!1,n)}var _re={kernelName:qc,backendName:"webgl",kernelFunc:Tre},Cre=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Yp(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||w.inferDtype(a),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new Cre(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var Ere={kernelName:sp,backendName:"webgl",kernelFunc:Yp},$re=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Are={kernelName:Jl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new $re(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},oI="return floor(x);",Fre=qe({opSnippet:oI,packedOpSnippet:oI,cpuKernelImpl:K9}),Dre={kernelName:Oi,backendName:"webgl",kernelFunc:Fre},Rre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Mre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Ore=sn({opSnippet:Rre,packedOpSnippet:Mre,dtype:"int32"}),Lre={kernelName:Li,backendName:"webgl",kernelFunc:Ore},Pre=class{constructor(e){this.variableNames=["A"];let t=kn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},zre=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=kn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Bre={kernelName:uc,backendName:"webgl",kernelFunc:Wre},nl,eb=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Wre(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],h=[u,l,s];if(o||i){let f=G().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(nl==null||f!==eb)&&(eb=f,nl=document.createElement("canvas").getContext("2d",{willReadFrequently:eb})),nl.canvas.width=l,nl.canvas.height=u,nl.drawImage(a,0,0,l,u),a=nl.canvas}let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=nr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let c=G().getBool("WEBGL_PACK")?new zre(h):new Pre(h),m=n.runWebGLProgram(c,[p],"int32");return n.disposeData(p.dataId),m}function Vre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(a.shape,s.shape,l,h,u,p,!1,f),y,b=[],x=i!=null,v=o!=null,I=c==="leakyrelu",N=()=>{let E=[a,s],A=(D,F)=>{if(F==="NCHW"&&D.shape.length===1&&D.shape[0]!==1){let S=de({inputs:{x:D},backend:n,attrs:{shape:[D.shape[0],1,1]}});return b.push(S),S}return D};if(x&&E.push(A(i,d)),v&&E.push(A(o,d)),I){let D=n.makeTensorInfo([],"float32",w.createScalarValue(m,"float32"));E.push(D),b.push(D)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=x$({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&f==="channelsLast"&&G().getBool("WEBGL_EXP_CONV")){let E=c?Hd(c,!0):null,A=new b$(g,x,E,v,I),D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=N();y=n.runWebGLProgram(A,F,"float32",D)}else if(G().getBool("WEBGL_CONV_IM2COL"))y=v$({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let E=c?Hd(c,!1):null,A=new y$(g,x,E,v,I),D=N();y=n.runWebGLProgram(A,D,"float32")}let _=de({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),_}var Ure={kernelName:qs,backendName:"webgl",kernelFunc:Vre};function Gre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,m=[],f=d;f==null&&(f=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),y=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=p?Hd(p,y):null,x=[a,s],v=i!=null,I=o!=null,N=p==="leakyrelu";if(v&&x.push(i),I&&x.push(o),N){let D=n.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(D),m.push(D)}let _;y?_=new I$(g,v,b,I,N):_=new k$(g,v,b,I,N);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(_,x,"float32",E);return m.forEach(D=>n.disposeIntermediateTensorInfo(D)),A}var Hre={kernelName:Ks,backendName:"webgl",kernelFunc:Gre},jre=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=ut(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function qre(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,h]=T.prepareAndValidate(r,a),p=de({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=de({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=X9(y,b,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let m=new jre(i,h,[u,d],r.shape),f=n.runWebGLProgram(m,[c,p],c.dtype),g=de({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}var Kre={kernelName:Ql,backendName:"webgl",kernelFunc:qre},Xre=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ut(this.rank),r=Zre(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Zre(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function T$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0];if(G().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let v=0;v<b.length;++v){let I=b[v];w.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=w.sizeFromShape(s.shape),h=[],p=de({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=de({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(p),v=Z9(x,b,m);return h.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}let f=new Xre(p.shape,m),g=n.runWebGLProgram(f,[p,c],p.dtype);h.push(g);let y=de({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Jre={kernelName:Yl,backendName:"webgl",kernelFunc:T$},Yre="return float(a > b);",Qre=`
  return vec4(greaterThan(a, b));
`,eae=sn({opSnippet:Yre,packedOpSnippet:Qre,cpuKernelImpl:J9,dtype:"bool"}),tae={kernelName:eu,backendName:"webgl",kernelFunc:eae},nae="return float(a >= b);",rae=`
  return vec4(greaterThanEqual(a, b));
`,aae=sn({opSnippet:nae,packedOpSnippet:rae,dtype:"bool",cpuKernelImpl:Y9}),sae={kernelName:zi,backendName:"webgl",kernelFunc:aae};function iae(e){let{inputs:t,backend:n}=e,{input:r}=t;return N$(r,!0,n)}var oae={kernelName:Kc,backendName:"webgl",kernelFunc:iae},lae="return float(!isnan(x) && !isinf(x));",uae=qe({opSnippet:lae,dtype:"bool"}),dae={kernelName:Wi,backendName:"webgl",kernelFunc:uae},pae="return float(isinf(x));",hae=qe({opSnippet:pae,dtype:"bool"}),cae={kernelName:Vi,backendName:"webgl",kernelFunc:hae},mae="return float(isnan(x));",fae=qe({opSnippet:mae,dtype:"bool"}),gae={kernelName:Ui,backendName:"webgl",kernelFunc:fae},yae="return float(a < b);",bae=`
  return vec4(lessThan(a, b));
`,xae=sn({opSnippet:yae,packedOpSnippet:bae,cpuKernelImpl:Q9,dtype:"bool"}),vae={kernelName:tu,backendName:"webgl",kernelFunc:xae},wae="return float(a <= b);",kae=`
  return vec4(lessThanEqual(a, b));
`,Iae=sn({opSnippet:wae,packedOpSnippet:kae,cpuKernelImpl:eQ,dtype:"bool"}),Sae={kernelName:nu,backendName:"webgl",kernelFunc:Iae};function Nae(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=tQ(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var Tae={kernelName:ru,backendName:"webgl",kernelFunc:Nae},_ae=Yu+`
  return x < 0.0 ? 0./0. : log(x);
`,Cae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Eae=qe({opSnippet:_ae,packedOpSnippet:Cae,cpuKernelImpl:nQ}),$ae={kernelName:Hi,backendName:"webgl",kernelFunc:Eae},Aae=Yu+`
  return log(1.0 + x);
`,Fae=qe({opSnippet:Aae}),Dae={kernelName:ji,backendName:"webgl",kernelFunc:Fae},Rae="return float(a >= 1.0 && b >= 1.0);",Mae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Oae=sn({opSnippet:Rae,packedOpSnippet:Mae,dtype:"bool"}),Lae={kernelName:au,backendName:"webgl",kernelFunc:Oae},Pae="return float(!(x >= 1.0));",zae=qe({opSnippet:Pae}),Bae={kernelName:su,backendName:"webgl",kernelFunc:zae},Wae="return float(a >= 1.0 || b >= 1.0);",Vae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Uae=sn({opSnippet:Wae,packedOpSnippet:Vae,dtype:"bool"}),Gae={kernelName:iu,backendName:"webgl",kernelFunc:Uae},Hae=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},jae=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},qae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new jae(a.shape,s,i,o,l):new Hae(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},Kae={kernelName:qi,backendName:"webgl",kernelFunc:qae},Xae=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Zae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new Xae(a.shape,o,l,u,d);return n.runWebGLProgram(h,[a,s,i],a.dtype)},Jae={kernelName:ou,backendName:"webgl",kernelFunc:Zae};function Yae(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=de({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Bo(i,e.dtype,"max",r),l=de({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function _$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=d!=null,p=n.shouldExecuteOnCPU([a]),c=a;if(h){if(p){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let N=0;N<x.length;N++)x[N]=a.shape[d[N]];let v=l0(b,a.shape,a.dtype,d,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=v}else c=Xm(a,d,n);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[m,f]=T.computeOutAndReduceShapes(c.shape,u),g=m;i&&(g=T.expandShapeToKeepDim(m,l));let y;if(p){let b=n.texData.get(c.dataId).values,x=rQ(b,w.sizeFromShape(f),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=Yae(c,f,g,n);return h&&n.disposeIntermediateTensorInfo(c),y}var Qae={kernelName:Ki,backendName:"webgl",kernelFunc:_$},ese=u0+`
  return max(a, b);
`,tse=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,nse=sn({opSnippet:ese,packedOpSnippet:tse,cpuKernelImpl:aQ}),rse={kernelName:Xi,backendName:"webgl",kernelFunc:nse};function ase(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ju(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Kn({inputs:{x:a},backend:n});let h=new jd(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var sse={kernelName:Zi,backendName:"webgl",kernelFunc:ase};function ise(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,d,o,u,l),p=new p0(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}var ose={kernelName:lu,backendName:"webgl",kernelFunc:ise},lse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},use=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function dse(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,h,u,d),c=new p0(p,"max",!0),m=n.runWebGLProgram(c,[i],i.dtype),f=new use(p),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var pse={kernelName:op,backendName:"webgl",kernelFunc:dse};function hse(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ju([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=T.computePool2DInfo(o.shape,l,u,1,d,h),c=!0,m=new jd(p,"max",c),f=n.runWebGLProgram(m,[o],o.dtype),g=new lse(p),y=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var cse={kernelName:ip,backendName:"webgl",kernelFunc:hse};function mse(e,t,n,r){let a=new jd(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new jd(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var fse={kernelName:lp,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,a,s,u,i),[h,p]=mse(r,o,d,l);return[h,p]}};function gse(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=de({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Bo(i,"float32","mean",r),l=de({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var yse={kernelName:Ji,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=w.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),h=d!=null,p=i.shouldExecuteOnCPU([r]),c=[],m=r;if(h){if(p){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let _=0;_<v.length;_++)v[_]=r.shape[d[_]];let I=l0(x,r.shape,r.dtype,d,v);m=i.makeTensorInfo(v,r.dtype);let N=i.texData.get(m.dataId);N.values=I}else m=Xm(r,d,i);c.push(m),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[f,g]=T.computeOutAndReduceShapes(m.shape,u),y=f;a&&(y=T.expandShapeToKeepDim(f,l));let b=gse(m,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function bse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=yn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=de({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Bo(f,f.dtype,"min",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=de({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=de({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var xse={kernelName:Yi,backendName:"webgl",kernelFunc:bse},vse=u0+`
  return min(a, b);
`,wse=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zo+`
  return result;
`,kse=sn({opSnippet:vse,packedOpSnippet:wse,cpuKernelImpl:sQ}),Ise={kernelName:Qi,backendName:"webgl",kernelFunc:kse},Sse=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);let r=e.length,a=ut(r),s=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Nse=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,m)=>c[0]+e[m]+c[1]);let r=e.length,a=ut(r),s=t.map(c=>c[0]).join(","),i=t.map((c,m)=>c[0]+e[m]).join(","),o=mn("rc",r),l=mn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=n==="reflect"?0:1,p="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${o[r-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},Tse=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nse(r.shape,a,s):new Sse(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},_se={kernelName:eo,backendName:"webgl",kernelFunc:Tse},Cse=`if (b == 0.0) return NAN;
  return mod(a, b);`,Ese=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+zo+`
  return result;
`,$se=sn({opSnippet:Cse,packedOpSnippet:Ese}),Ase={kernelName:to,backendName:"webgl",kernelFunc:$se},Fse=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Dse=`
if (a == b) {
  return 1.0;
};
return a / b;`,Rse=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,C$=sn({opSnippet:Dse,packedOpSnippet:Rse,checkOutOfBounds:!0}),Mse={kernelName:Ai,backendName:"webgl",kernelFunc:C$},lI="return a - b;",E$=sn({opSnippet:lI,packedOpSnippet:lI,supportsComplex:!0,cpuKernelImpl:TQ}),Ose={kernelName:_o,backendName:"webgl",kernelFunc:E$};function $$(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=w.parseAxisParam([s],a.shape),o=_$({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=de({inputs:{x:o},backend:n,attrs:{shape:l}}),d=E$({inputs:{a,b:u},backend:n}),h=S$({inputs:{x:d},backend:n}),p=Zm({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=de({inputs:{x:p},backend:n,attrs:{shape:l}}),m=C$({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),m}var Lse={kernelName:No,backendName:"webgl",kernelFunc:$$};function Pse(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:$$({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new Fse(u,d,s),p=[[i]],c=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),c}var zse={kernelName:uu,backendName:"webgl",kernelFunc:Pse},Bse=vr+`
  return -x;
`,Wse=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Vse(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=oQ(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Ba(r.shape,Wse):a=new jr(r.shape,Bse),n.runWebGLProgram(a,[r],r.dtype)}var Use={kernelName:du,backendName:"webgl",kernelFunc:Vse},Gse=na.nonMaxSuppressionV3Impl;function Hse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Gse(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var jse={kernelName:hu,backendName:"webgl",kernelFunc:Hse},qse=na.nonMaxSuppressionV4Impl;function Kse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=qse(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Xse={kernelName:cu,backendName:"webgl",kernelFunc:Kse},Zse=na.nonMaxSuppressionV5Impl;function Jse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=Zse(d,h,p,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Yse={kernelName:mu,backendName:"webgl",kernelFunc:Jse},Qse=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},eie=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=w.sizeFromShape(a.shape),d=new Qse(u,i,o,l),h=de({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);let c=[...a.shape,i],m=de({inputs:{x:p},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),m},tie={kernelName:ro,backendName:"webgl",kernelFunc:eie};function Fc(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=Jp({inputs:{input:r},backend:n}),s=Fc({inputs:{x:a},backend:n}),i=Jm({inputs:{input:r},backend:n}),o=Fc({inputs:{x:i},backend:n}),l=ys({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Yp({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var nie={kernelName:Du,backendName:"webgl",kernelFunc:Fc};function A$(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=Jp({inputs:{input:r},backend:n}),s=A$({inputs:{x:a},backend:n}),i=Jm({inputs:{input:r},backend:n}),o=Fc({inputs:{x:i},backend:n}),l=ys({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Yp({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var rie={kernelName:fu,backendName:"webgl",kernelFunc:A$};function aie(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return tx({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=tx({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=g$({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var sie={kernelName:gu,backendName:"webgl",kernelFunc:aie},iie=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,a=ut(r),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},oie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let r=e.length,a=ut(r),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=mn("rc",r),l=mn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let m=0,f=r===1?2:4;m<f;m++)c+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${d});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},F$=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(w.sizeFromShape(a.shape)===0){let u=s.map((d,h)=>d[0]+a.shape[h]+d[1]);return Yp({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}let o=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oie(a.shape,s,i):new iie(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},lie={kernelName:ao,backendName:"webgl",kernelFunc:F$},uie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,die=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+zo+`
  return result;
`,pie=sn({opSnippet:uie,packedOpSnippet:die}),hie={kernelName:so,backendName:"webgl",kernelFunc:pie};function cie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=w.parseAxisParam(s,a.shape),d=u,h=T.getAxesPermutation(d,o),p=a;h!=null&&(p=yn({inputs:{x:a},backend:n,attrs:{perm:h}}),d=T.getInnerMostAxes(d.length,o),l.push(p)),T.assertAxesAreInnerMostDims("prod",d,o);let c;if(n.shouldExecuteOnCPU([p])){let m=n.texData.get(p.dataId).values,{outVals:f,outShape:g,outDtype:y}=uQ(p.shape,p.dtype,m,d);c=n.makeTensorInfo(g,y,f)}else{let[m,f]=T.computeOutAndReduceShapes(p.shape,d),g=w.sizeFromShape(f),y=de({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),b=tm(a.dtype),x=Bo(y,b,"prod",n);c=de({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(c);let m=T.expandShapeToKeepDim(c.shape,u);c=de({inputs:{x:c},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var mie={kernelName:oo,backendName:"webgl",kernelFunc:cie};function fie(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),u=a.map(y=>y.shape),d=n.readSync(s.dataId),h=n.readSync(i.dataId),[p,c,m]=dQ(l,u,d,s.shape,s.dtype,h,i.shape,o),f=p.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var gie={kernelName:Zc,backendName:"webgl",kernelFunc:fie};function yie(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=pQ(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),p=n.makeTensorInfo([d.length],r.dtype,d);return[h,p]}var bie={kernelName:Jc,backendName:"webgl",kernelFunc:yie};function xie(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[m,f]=hQ(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(m,s.dtype,f)}var vie={kernelName:Yc,backendName:"webgl",kernelFunc:xie},D$=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=cQ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},wie={kernelName:up,backendName:"webgl",kernelFunc:D$},kie="return 1.0 / x;",Iie=qe({opSnippet:kie}),Sie={kernelName:lo,backendName:"webgl",kernelFunc:Iie},Nie=vr+`
  return (x < 0.0) ? 0.0 : x;
`,Tie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_ie=qe({opSnippet:Nie,packedOpSnippet:Tie}),Cie={kernelName:uo,backendName:"webgl",kernelFunc:_ie},Eie=vr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$ie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aie=qe({opSnippet:Eie,packedOpSnippet:$ie}),Fie={kernelName:co,backendName:"webgl",kernelFunc:Aie},Die=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Rie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Mie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Rie(a.shape,l,u,s,i):new Die(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}var Oie={kernelName:ho,backendName:"webgl",kernelFunc:Mie},Lie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Pie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Lie(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var zie={kernelName:xu,backendName:"webgl",kernelFunc:Pie},Bie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",p;a?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Wie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",p;a?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Vie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Wie(a.shape,l,u,s,i):new Bie(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}var Uie={kernelName:po,backendName:"webgl",kernelFunc:Vie},Gie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Hie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Gie(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var jie={kernelName:bu,backendName:"webgl",kernelFunc:Hie},qie=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=ut(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},Kie=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=mn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ut(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${u(r.slice())};
            if(${a}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",h(c)}function u(c){return c[n-2]="("+c[n-2]+" + 1)",h(c)}function d(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",h(c)}function h(c){let m=e.map((y,b)=>p(b,c)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function p(c,m){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${m[c]} - 1`:`${m[c]}`}}};function Xie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Kn({inputs:{x:a},backend:n});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kie(a.shape,o):new qie(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var Zie={kernelName:mo,backendName:"webgl",kernelFunc:Xie},Jie=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Yie={kernelName:Ru,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new Jie(r.shape,s),[u,d]=T.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,d,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},Qie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,eoe=qe({opSnippet:Qie}),toe={kernelName:fo,backendName:"webgl",kernelFunc:eoe},noe="return inversesqrt(x);",roe=qe({opSnippet:noe,cpuKernelImpl:mQ}),aoe={kernelName:go,backendName:"webgl",kernelFunc:roe},h0=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=ut(a.length),u=ut(s.length),d="";n===1?d="i":n===2&&(d="i, j");let h=`getIndices(${d})`,p="";r===1?p="i":r===2&&(p="i, coords[1]");let c=`getUpdates(${p})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},soe=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=ut(a.length),u=ut(s.length),d="";n===1?d="i":n===2&&(d="i, j");let h=`getIndices(${d})`,p="";r===1?p="i":r===2&&(p="i, coords[1]");let c=`getUpdates(${p})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}};function ioe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,i),p=[h/u,u];if(h===0)return n.makeTensorInfo(i,a.dtype);let c=de({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=de({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;G().getBool("WEBGL_PACK")?g=new soe(l,o,c.shape.length,m.shape.length,d,p):g=new h0(l,o,c.shape.length,m.shape.length,d,p);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=de({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var ooe={kernelName:vu,backendName:"webgl",kernelFunc:ioe},loe=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=G().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function uoe(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new loe(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var doe={kernelName:ku,backendName:"webgl",kernelFunc:uoe},poe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);r=o.join(),a=l.join()}let s=ut(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function hoe(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new poe(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ir(a.dtype,s.dtype))}var coe={kernelName:Iu,backendName:"webgl",kernelFunc:hoe},moe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,foe=qe({opSnippet:moe}),goe={kernelName:yo,backendName:"webgl",kernelFunc:foe},yoe=Yu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,boe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xoe=qe({opSnippet:yoe,packedOpSnippet:boe,cpuKernelImpl:gQ}),voe={kernelName:wo,backendName:"webgl",kernelFunc:xoe},woe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,koe=qe({opSnippet:woe}),Ioe={kernelName:vo,backendName:"webgl",kernelFunc:koe},Soe=Yu+`
  return sin(x);
`,Noe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${zo}
  return result;
`,Toe=qe({opSnippet:Soe,packedOpSnippet:Noe}),_oe={kernelName:bo,backendName:"webgl",kernelFunc:Toe},Coe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Eoe=qe({opSnippet:Coe}),$oe={kernelName:xo,backendName:"webgl",kernelFunc:Eoe},Aoe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Foe=qe({opSnippet:Aoe}),Doe={kernelName:ko,backendName:"webgl",kernelFunc:Foe},Roe=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;w.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],d=F$({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(d.shape,s,o,!1),p=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(d.shape,s,o,!1),m=de({inputs:{x:d},backend:n,attrs:{shape:h}}),f=yn({inputs:{x:m},backend:n,attrs:{perm:p}}),g=de({inputs:{x:f},backend:n,attrs:{shape:c}});return u.push(d),u.push(m),u.push(f),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Moe={kernelName:Nu,backendName:"webgl",kernelFunc:Roe};function Ooe(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[h,p,c,m,f]=bQ(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var Loe={kernelName:dp,backendName:"webgl",kernelFunc:Ooe};function Poe(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,h]=xQ(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var zoe={kernelName:_u,backendName:"webgl",kernelFunc:Poe};function Boe(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=e$(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}var Woe={kernelName:pp,backendName:"webgl",kernelFunc:Boe};function Voe(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=e$(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}var Uoe={kernelName:hp,backendName:"webgl",kernelFunc:Voe};function Goe(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=w.decodeString(n.readSync(i.dataId)[0]),v=fQ(y,b,o,p,d,u,l,h,x,c);return n.makeTensorInfo(o,v.dtype,v.values)}let m=new h0(u,l,a.shape.length,s.shape.length,h,[p,1],c),f=n.runWebGLProgram(m,[s,a,i],s.dtype),g=de({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}var Hoe={kernelName:Cu,backendName:"webgl",kernelFunc:Goe};function joe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map(p=>{let c=[...h];c[o]=p;let m=Qu({inputs:{x:a},backend:n,attrs:{begin:d,size:c}});return d[o]+=p,m})}var qoe={kernelName:Tu,backendName:"webgl",kernelFunc:joe},uI="return sqrt(x);",Koe=qe({opSnippet:uI,packedOpSnippet:uI,cpuKernelImpl:vQ}),Xoe={kernelName:Io,backendName:"webgl",kernelFunc:Koe},Zoe="return x * x;",Joe=qe({opSnippet:Zoe}),Yoe={kernelName:cp,backendName:"webgl",kernelFunc:Joe},dI="return (a - b) * (a - b);",Qoe=sn({opSnippet:dI,packedOpSnippet:dI}),ele={kernelName:To,backendName:"webgl",kernelFunc:Qoe};function tle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=T.fromUint8ToStringArray(s),o=wQ(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var nle={kernelName:mp,backendName:"webgl",kernelFunc:tle};function rle({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=vr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new jr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var ale={kernelName:us,backendName:"webgl",kernelFunc:rle},sle=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=ut(n.length),s=ut(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((l,u)=>(o++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function ile(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=de({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let _=zt.computeOutShape(b,x,v),E=Qu({inputs:{x:a},backend:n,attrs:{begin:b,size:_}});I=de({inputs:{x:E},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let _=n.readSync(a.dataId),E=Oe(a.shape,a.dtype,_),A=kQ(c,E,v,b);I=n.makeTensorInfo(m,a.dtype,A.values)}else{let _=new sle(b,v,c);I=n.runWebGLProgram(_,[a],a.dtype)}let N=de({inputs:{x:I},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(I),N}var ole={kernelName:Eu,backendName:"webgl",kernelFunc:ile};function lle(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[m,f]=IQ(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var ule={kernelName:fp,backendName:"webgl",kernelFunc:lle};function dle(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,h]=SQ(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var ple={kernelName:gp,backendName:"webgl",kernelFunc:dle};function hle(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=NQ(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var cle={kernelName:yp,backendName:"webgl",kernelFunc:hle},mle="return tan(x);",fle=qe({opSnippet:mle}),gle={kernelName:Co,backendName:"webgl",kernelFunc:fle},yle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ble=qe({opSnippet:yle}),xle={kernelName:Eo,backendName:"webgl",kernelFunc:ble};function vle(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(i,s,a.shape),p=[h/u,u];if(h===0)return n.makeTensorInfo(a.shape,s.dtype);let c=de({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=de({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=de({inputs:{x:a},backend:n,attrs:{shape:p}}),g=new h0(l,o,c.shape.length,m.shape.length,d,p,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=de({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}var wle={kernelName:wu,backendName:"webgl",kernelFunc:vle},kle=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=ut(this.rank),a=Ile(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function Ile(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function R$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>w.decodeString(h)):o,u=Oe(a.shape,a.dtype,l),d=_Q(u,s);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new kle(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var Sle={kernelName:ls,backendName:"webgl",kernelFunc:R$},Nle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Tle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function $s(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function pI(e){let t=1;for(;t<e;)t*=2;return t}function _le(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=G().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=G().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let A=n.readSync(a.dataId),[D,F]=CQ(A,u,a.dtype,s,i);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(d===1)return[a,Yp({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),p=h!==null&&h.isPacked,c=p?n.unpackTensor(a):a,m=w.sizeFromShape(u)/d,f=de({inputs:{x:c},attrs:{shape:[m,d]},backend:n});p&&$s(n,c);let g=pI(s),y=pI(d),b=null,x=()=>b===null?[f,f]:[f,b],v=(A,D,F)=>{let S=x(),M=new Nle(F),z=[[d],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[D]],U=b;b=n.runWebGLProgram(M,S,"int32",z),$s(n,U)};for(let A=1;A<g;A*=2){let D=A*2;for(let F=A;F>=1;F/=2)v(D,F,[m,y])}for(let A=y;A>g;A/=2){let D=x(),F=new Tle([m,A/2]),S=[[d],[b===null?1:0],[g]],M=b;b=n.runWebGLProgram(F,D,"int32",S),$s(n,M);let z=g/2,U=z*2;for(let H=z;H>=1;H/=2)v(U,H,b.shape)}let I=b;b=Qu({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),$s(n,I);let N=T$({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});$s(n,f);let _=u.slice(0,-1);_.push(s),I=b,b=de({inputs:{x:b},attrs:{shape:_},backend:n}),$s(n,I);let E=N;return N=de({inputs:{x:N},attrs:{shape:_},backend:n}),$s(n,E),[N,b]}var Cle={kernelName:$u,backendName:"webgl",kernelFunc:_le},Ele=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function $le(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=new Ele(h,p,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var Ale={kernelName:Au,backendName:"webgl",kernelFunc:$le};function Fle(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ju(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=EQ(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var Dle={kernelName:bp,backendName:"webgl",kernelFunc:Fle};function Rle(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let f=0;f<o;f++)f!==s&&(u[d++]=i.shape[f]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){p[s]=f;let g=Qu({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),y=de({inputs:{x:g},backend:n,attrs:{shape:u}});m[f]=y,h.push(g)}return h.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Mle={kernelName:Fu,backendName:"webgl",kernelFunc:Rle},Ole=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=Math.floor(n/4)*4,d=n%4,h=`
        sumValue += dot(values, segFilter);
    `,p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Lle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=T.getAxesPermutation([u],o),h=a;d!=null&&(h=yn({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(h),u=T.getInnerMostAxes(1,o)[0]);let p=T.segment_util.computeOutShape(h.shape,u,i),c=w.sizeFromShape([h.shape[u]]),m=de({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(m);let f=tm(a.dtype),g=(v,I,N,_,E)=>{let A=v.shape[0],D=v.shape[1],F=T.segment_util.segOpComputeOptimalWindowSize(D,E),S={windowSize:F,inSize:D,batchSize:A,numSegments:E},M=new Ole(S,I),z=n.compileAndRun(M,[v,N],_);if(l.push(z),z.shape[1]===E)return z;let U=D$({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),H=R$({inputs:{x:U},backend:n,attrs:{reps:[D/F]}});return l.push(U),l.push(H),g(z,I,H,_,E)},y=g(m,"unsortedSegmentSum",s,f,i),b=de({inputs:{x:y},backend:n,attrs:{shape:p}}),x=b;if(d!=null){l.push(b);let v=T.getUndoAxesPermutation(d);x=yn({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var Ple={kernelName:xp,backendName:"webgl",kernelFunc:Lle},zle=[kee,See,_ee,$ee,Fee,Mee,Lee,zee,Uee,Hee,Kee,Jee,ete,ate,ote,ute,pte,fte,yte,xte,Ite,$te,Fte,Ote,Pte,Gte,jte,Zte,see,Qte,ane,lne,mne,yne,xne,wne,Ine,_ne,$ne,Dne,Mne,Lne,zne,Vne,Gne,Kne,Zne,Qne,nre,are,lre,hre,gre,xre,kre,Ire,Nre,_re,Ere,Are,Dre,Lre,Bre,Ure,Hre,Kre,Jre,tae,sae,aee,oae,nne,dae,cae,gae,oee,vae,Sae,Tae,$ae,Dae,Lae,Bae,Gae,Kae,Jae,Qae,rse,sse,ose,pse,cse,fse,yse,xse,Ise,_se,Ase,zse,dee,Use,jse,Xse,Yse,Bte,tie,rie,sie,lie,hie,uee,mie,gie,bie,vie,wie,Wte,Mse,Sie,Cie,Fie,hee,Oie,zie,Uie,jie,Zie,Yie,toe,aoe,ooe,doe,coe,goe,voe,Ioe,_oe,$oe,Cte,Lse,Doe,Moe,Loe,zoe,Woe,Uoe,Hoe,qoe,Xoe,Yoe,ele,nle,ale,ole,ule,ple,cle,Ose,xee,gle,xle,wle,Sle,Cle,Ale,vee,Dle,Mle,Ple,nie];for(let e of zle)vp(e);var Xe;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Xe||(Xe={}));var Kd;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Kd||(Kd={}));var M$;function Ble(e){M$=e.wasm.cwrap(js,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Wle(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);m=E.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=Kd[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Mu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(v.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer),_=new Uint8Array(new Int32Array(s.shape).buffer);return M$(p,N,a.shape.length,c,_,s.shape.length,l,u,g,m,f,h||0,I),v}var Vle={kernelName:js,backendName:"wasm",setupFunc:Ble,kernelFunc:Wle};function He(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),d=i.dataIdMap.get(u.dataId).id;return w.sizeFromShape(u.shape)===0||n(l,Xe[o.dtype],d),u}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Ule=He(Dl),Gle=He(pi),Hle=He(hi);function Ot(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:d}=l,h=o.dataIdMap.get(u.dataId).id,p=o.dataIdMap.get(d.dataId).id,c=n??u.dtype,m=T.assertAndGetBroadcastShape(u.shape,d.shape),f=o.makeOutput(m,c);if(w.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(d.shape).buffer),b=o.dataIdMap.get(f.dataId).id;return r(h,g,u.shape.length,p,y,d.shape.length,Xe[u.dtype],b),f}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var jle=!0,qle=Ot(is,jle),O$;function Kle(e){O$=e.wasm.cwrap(ci,null,["array","number","number","number"])}function Xle(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return O$(s,a.length,Xe[r.dtype],i),r}var Zle={kernelName:ci,backendName:"wasm",setupFunc:Kle,kernelFunc:Xle};function Ym(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return fn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Jle={kernelName:Bi,backendName:"wasm",kernelFunc:Ym},L$;function Yle(e){L$=e.wasm.cwrap(ha,null,["number","array","number","number","number","array","number"])}function rs(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=eue(t.x.shape,r.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=Qle(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let m=Ym({inputs:t,backend:n});return m.shape=o,m}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return L$(d,c,l.shape.length,Xe[l.dtype],h,p,s.length),u}function Qle(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function eue(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var tue={kernelName:ha,backendName:"wasm",kernelFunc:rs,setupFunc:Yle};function bs(e,t,n){let r=e.shape,a=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,a),l=null,u=!1;if(o!=null){let d=new Array(a);for(let p=0;p<d.length;p++)d[p]=r[o[p]];i=T.getInnerMostAxes(i.length,a),l=rs({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var P$;function nue(e){P$=e.wasm.cwrap(Rl,null,["number, number, number"])}function rue(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=bs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;P$(o,g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var aue={kernelName:Rl,backendName:"wasm",setupFunc:nue,kernelFunc:rue},z$;function sue(e){z$=e.wasm.cwrap(Ml,null,["number, number, number"])}function iue(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=bs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;z$(o,g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var oue={kernelName:Ml,backendName:"wasm",setupFunc:sue,kernelFunc:iue};function B$(e){let t;function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:l}=o,{x:u}=i,d=s.dataIdMap.get(u.dataId).id,h=d,p=u,{transposed:c,axes:m,inputWasTransposed:f}=bs(u,l,s);if(f){let I=s.dataIdMap.get(c.dataId).id;I!==d&&(p=c,h=I)}let g=p.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=w.sizeFromShape(y.shape),v=p.shape[m[0]];return t(h,Xe[p.dtype],x,v,b),f&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var lue=B$(Ol),uue=B$(Ll),due=He(mi),pue=He(fi),hue=He(gi),cue=Ot(bi,!1),mue=He(yi),W$;function fue(e){W$=e.wasm.cwrap(xi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gue(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=T.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,m=d.padInfo.right,f=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,b=d.strideWidth,x=d.inChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(d.dilationWidth!==1||d.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let v=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(v.dataId).id;return W$(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,m,f,g,y,b,x,I),v}var yue={kernelName:xi,backendName:"wasm",setupFunc:fue,kernelFunc:gue},V$;function bue(e){V$=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return V$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var vue={kernelName:Pl,backendName:"wasm",setupFunc:bue,kernelFunc:xue},U$;function wue(e){U$=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kue(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return U$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),h}var Iue={kernelName:ep,backendName:"wasm",setupFunc:wue,kernelFunc:kue},G$;function Sue(e){G$=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Nue(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=T.computePool2DInfo(s.shape,i,o,1,l),d=n.makeOutput(s.shape,s.dtype);return G$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}var Tue={kernelName:Qd,backendName:"wasm",setupFunc:Sue,kernelFunc:Nue};function $n(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var _ue={kernelName:yu,backendName:"wasm",kernelFunc:$n},H$;function Cue(e){H$=e.wasm.cwrap(vi,null,["number","array","number","number","array","number","number","number","number"])}function Eue(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=Mu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],v=o?[y,c,h]:[y,h,c],I=$n({inputs:{x:a},backend:n,attrs:{shape:x}}),N=$n({inputs:{x:s},backend:n,attrs:{shape:v}}),_=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(N.dataId).id,A=i?I.shape[2]:I.shape[1],D=o?N.shape[1]:N.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,D],I.dtype),M=n.dataIdMap.get(S.dataId).id,z=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(N.shape).buffer);return H$(_,z,I.shape.length,E,U,N.shape.length,i,o,M),n.disposeData(I.dataId),n.disposeData(N.dataId),S.shape=b,S}var $ue={kernelName:vi,backendName:"wasm",setupFunc:Cue,kernelFunc:Eue};function li(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=zt.parseSliceParams(t,n,r),o=zt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=w.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let m=zt.computeFlatOffset(s,d);return t.dtype==="string"?h.stringBytes=l.slice(m,m+w.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(m,m+w.sizeFromShape(i))),u}if(t.dtype==="string"){let m=Tc(l,s,i,t.shape,t.dtype);return h.stringBytes=m,u}let p=a.typedArrayFromHeap(u),c=t.shape.length;if(c===2)Aue(l,d[0],p,s,i);else if(c===3)Fue(l,d[0],d[1],p,s,i);else if(c===4)Due(l,d[0],d[1],d[2],p,s,i);else{let m=Tc(l,s,i,t.shape,t.dtype);p.set(m)}return u}function Aue(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let d=u*t+o;n.set(e.subarray(d,d+a[1]),s),s+=a[1]}}function Fue(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let p=o;p<d;p++)for(let c=l;c<h;c++){let m=p*t+c*n+u;r.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function Due(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],m=s[3];for(let f=l;f<h;f++)for(let g=u;g<p;g++)for(let y=d;y<c;y++){let b=f*t+g*n+y*r+m;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var Rue={kernelName:Su,backendName:"wasm",kernelFunc:li};function Mue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=$n({inputs:{x:a},backend:n,attrs:{shape:l}}),m=rs({inputs:{x:c},backend:n,attrs:{perm:u}}),f=$n({inputs:{x:m},backend:n,attrs:{shape:d}}),g=li({inputs:{x:f},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}var Oue={kernelName:zl,backendName:"wasm",kernelFunc:Mue},j$;function Lue(e){j$=e.wasm.cwrap(Bl,null,["number","number","boolean","number","number","number"])}function Pue(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=s.shape.reduce((h,p)=>h*p,1)!==0,l=a.shape.length===1?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return j$(d(a),i,o,d(s),Xe[s.dtype],d(u)),u}var zue={kernelName:Bl,backendName:"wasm",setupFunc:Lue,kernelFunc:Pue},Bue=!0,Wue=Ot(Wl,Bue);function Vue(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var Uue={kernelName:tp,backendName:"wasm",kernelFunc:Vue};function xs(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Gue={kernelName:wi,backendName:"wasm",kernelFunc:xs},Hue=He(ki),q$;function jue(e){q$=e.wasm.cwrap(os,null,["number","number","number","number"])}function que(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return q$(o,s,i,u),l}var Kue={kernelName:os,backendName:"wasm",setupFunc:jue,kernelFunc:que};function K$(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);T.assertParamsConsistent(a,r);let s=T.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return Ym({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let v=[-1,w.sizeFromShape(x.shape.slice(r))];return $n({inputs:{x},backend:n,attrs:{shape:v}})}),m=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(c.map(x=>x.shape),1);let f=c[0].shape[0]===1,g=zw(m,s,t[0].dtype,f),y=T.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=w.sizeFromShape(i[0].shape.slice(0,r)),u=0,d=i.map(c=>{let m=w.sizeFromShape(c.shape.slice(r));return u+=m,m}),h=i.map(c=>n.typedArrayFromHeap(c)),p=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let m=c*u;for(let f=0;f<h.length;f++){let g=d[f],y=c*g,b=h[f].subarray(y,y+g);p.set(b,m),m+=g}}return o}var Xue={kernelName:Vl,backendName:"wasm",kernelFunc:K$},X$;function Zue(e){X$=e.wasm.cwrap(Ii,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=T.convertConv2DDataFormat(p),m=T.computeConv2DInfo(a.shape,s.shape,l,u,d,h,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,I=m.dilationHeight,N=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,D=m.outChannels,F=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(m.outShape,"float32"),M=r.dataIdMap.get(S.dataId).id;return X$(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,v,F,I,N,_,E,A,D,M),S}var Yue={kernelName:Ii,backendName:"wasm",setupFunc:Zue,kernelFunc:Jue},Z$;function Que(e){Z$=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ede(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=1,p=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(d,s.shape,i,h,o,u,!1,p),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:I,outWidth:N,strideHeight:_,strideWidth:E}=c,A=f-1-c.padInfo.top,D=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=w.computeStrides(c.inShape),M=w.computeStrides(a.shape),[z,U,H]=w.computeStrides(s.shape),q=S[0],K=F?S[1]:S[2],J=F?S[2]:1,Q=F?1:S[1],ee=M[0],re=F?M[1]:M[2],te=F?M[2]:1,ae=F?1:M[1],se=t.makeOutput(c.inShape,"float32"),xe=t.dataIdMap.get(se.dataId).id,ue=t.dataIdMap.get(a.dataId).id,be=t.dataIdMap.get(s.dataId).id;return Z$(ue,be,m,f,g,b,x,y,I,N,v,_,E,A,D,z,U,H,q,K,J,Q,ee,re,te,ae,xe),se}var tde={kernelName:Si,backendName:"wasm",setupFunc:Que,kernelFunc:ede},J$;function nde(e){J$=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),d=n.makeOutput(u.outShape,a.dtype);return J$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var ade={kernelName:Ni,backendName:"wasm",setupFunc:nde,kernelFunc:rde},Y$;function sde(e){Y$=e.wasm.cwrap(Ul,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ide(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,l,i,1,o),d=n.makeOutput(u.filterShape,s.dtype);return Y$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var ode={kernelName:Ul,backendName:"wasm",setupFunc:sde,kernelFunc:ide},Q$;function lde(e){Q$=e.wasm.cwrap(Gl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ude(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(l,s.shape,o,1,i),d=n.makeOutput(u.inShape,a.dtype);return Q$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var dde={kernelName:Gl,backendName:"wasm",setupFunc:lde,kernelFunc:ude},pde=He(Ti),hde=He(_i),nx;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(nx||(nx={}));var eA;function cde(e){eA=e.wasm.cwrap(jl,null,["number","number","number","number","array","number","number","number","number","number"])}function mde(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,d=l.shape[0],[h,p]=i,c=[d,h,p,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=xs({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return eA(g,y,b,d,I,h,p,nx[a],s,v),f!=null&&t.disposeData(f.dataId),x}var fde={kernelName:jl,backendName:"wasm",setupFunc:cde,kernelFunc:mde},tA;function gde(e){tA=e.wasm.cwrap(Hl,null,["number","number","number","number","number","number"])}function yde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=a;u!==null&&(d=rs({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],m=n.dataIdMap.get(d.dataId).id,f=n.dataIdMap.get(p.dataId).id;tA(m,i?1:0,o?1:0,c,f,Xe[a.dtype]);let g=p;if(u!==null){let y=T.getUndoAxesPermutation(u);g=rs({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}var bde={kernelName:Hl,backendName:"wasm",setupFunc:gde,kernelFunc:yde},nA;function xde(e){nA=e.wasm.cwrap(Ci,null,["number","number","number","number","number","number"])}function vde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=a;u!==null&&(d=rs({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],m=n.dataIdMap.get(d.dataId).id,f=n.dataIdMap.get(p.dataId).id;nA(m,i?1:0,o?1:0,c,f,Xe[a.dtype]);let g=p;if(u!==null){let y=T.getUndoAxesPermutation(u);g=rs({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}var wde={kernelName:Ci,backendName:"wasm",setupFunc:xde,kernelFunc:vde},rA;function kde(e){rA=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function Ide(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=s.shape.reduce((p,c)=>p*c,1)!==0,u=a.shape.length===1?[i]:[a.shape[0],i],d=t.makeOutput(u,s.dtype);function h(p){return t.dataIdMap.get(p.dataId).id}return rA(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),Xe[s.dtype],o,h(d)),d}var Sde={kernelName:rp,backendName:"wasm",setupFunc:kde,kernelFunc:Ide},aA;function Nde(e){aA=e.wasm.cwrap(ql,null,["number","number","number","array","number","array","array","number","number"])}function Tde(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],d=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,p=u*s,c=d/(s*s),m=i==="NHWC"?[o,h,p,c]:[o,c,h,p],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return aA(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,m.length,v),f}var _de={kernelName:ql,backendName:"wasm",setupFunc:Nde,kernelFunc:Tde},sA;function Cde(e){sA=e.wasm.cwrap(Ei,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ede(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=u??[1,1],c=T.computeConv2DInfo(a.shape,s.shape,l,p,d,h,!0),m=c.filterHeight,f=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,I=c.dilationWidth,N=c.strideHeight,_=c.strideWidth,E=c.inChannels,A=c.outChannels,D=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return sA(i,a.shape[0],a.shape[1],a.shape[2],o,m,f,g,y,b,x,D,v,I,N,_,E,A,S),F}var $de={kernelName:Ei,backendName:"wasm",setupFunc:Cde,kernelFunc:Ede},iA;function Ade(e){iA=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function Fde(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return iA(n.dataIdMap.get(r.dataId).id,Xe[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var Dde={kernelName:ap,backendName:"wasm",setupFunc:Ade,kernelFunc:Fde},oA;function Rde(e){oA=e.wasm.cwrap($i,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),d=n.makeOutput(u.outShape,a.dtype);return oA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,Xe[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}var Ode={kernelName:$i,backendName:"wasm",setupFunc:Rde,kernelFunc:Mde},lA;function Lde(e){lA=e.wasm.cwrap(ml,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Pde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return lA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}var zde={kernelName:ml,backendName:"wasm",setupFunc:Lde,kernelFunc:Pde},uA;function Bde(e){uA=e.wasm.cwrap(cl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return uA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}var Vde={kernelName:cl,backendName:"wasm",setupFunc:Bde,kernelFunc:Wde},Ude=He(Fi),dA;function Gde(e){dA=e.wasm.cwrap(Kl,null,["number","number","number"])}function Hde(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return dA(i(a),i(r),i(s)),s}var jde={kernelName:Kl,backendName:"wasm",setupFunc:Gde,kernelFunc:Hde},qde=!1,Kde=Ot(Xl,qde,"bool"),Xde=He(Di),Zde=He(Ri,"float32");function rx(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),$n({inputs:{x:a},backend:r,attrs:{shape:o}})}var Jde={kernelName:Zl,backendName:"wasm",kernelFunc:rx},Yde=He(Mi,"float32");function pA(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||w.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var Qde={kernelName:sp,backendName:"wasm",kernelFunc:pA},hA;function epe(e){hA=e.wasm.cwrap(Jl,null,["number","number","number","number","number","number"])}function tpe(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return hA(s,o,l,u,d,i),a}var npe={kernelName:Jl,backendName:"wasm",kernelFunc:tpe,setupFunc:epe},rpe=He(Oi),ape=!1,spe=Ot(Li,ape),cA;function ipe(e){cA=e.wasm.cwrap(Pi,null,["number","number","number","number","number","number","number"])}function ope(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,m=u!=null?t.dataIdMap.get(u.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return cA(d,h,p,c,m,a,g),f}var lpe={kernelName:Pi,backendName:"wasm",setupFunc:ipe,kernelFunc:ope},mA;function upe(e){mA=e.wasm.cwrap(qs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dpe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=Kd[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=f.filterHeight,N=f.filterWidth,_=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,D=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,z=f.strideWidth,U=f.inChannels,H=f.padInfo.type==="SAME"?1:0,q=f.batchSize,K=f.inHeight,J=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let Q=r.makeOutput(f.outShape,"float32"),ee=r.dataIdMap.get(Q.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return mA(y,q,K,J,b,I,N,v,_,E,A,D,H,F,S,M,z,U,x,g,re,m||0,ee),Q}var ppe={kernelName:qs,backendName:"wasm",setupFunc:upe,kernelFunc:dpe},fA;function hpe(e){fA=e.wasm.cwrap(Ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cpe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=Kd[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=f.filterHeight,N=f.filterWidth,_=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,D=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,z=f.strideWidth,U=f.inChannels,H=f.padInfo.type==="SAME"?1:0,q=f.batchSize,K=f.inHeight,J=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let Q=r.makeOutput(f.outShape,"float32"),ee=r.dataIdMap.get(Q.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return fA(y,q,K,J,b,I,N,v,_,E,A,D,H,F,S,M,z,U,x,g,re,m||0,ee),Q}var mpe={kernelName:Ks,backendName:"wasm",setupFunc:hpe,kernelFunc:cpe},gA;function fpe(e){gA=e.wasm.cwrap(Ql,null,["number","number","number","number","number","number","array","number"])}function gpe(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Bv.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(i===0)return u;let d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(u.dataId).id;return gA(p,Xe[r.dtype],c,i,h,o,m,f),u}var ype={kernelName:Ql,backendName:"wasm",setupFunc:fpe,kernelFunc:gpe},yA;function bpe(e){yA=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function xpe(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let _=0;_<u.length;++_){let E=u[_];w.assert(E<=d-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${d-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=$n({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),m=$n({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),f=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(f,a.dtype);if(w.sizeFromShape(a.shape)===0)return g;let y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(m.dataId).id,v=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),N=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer);return yA(b,Xe[a.dtype],I,y,x,h.batchSize,N,v),t.disposeData(p.dataId),t.disposeData(m.dataId),g.shape=h.outputShape,g}var vpe={kernelName:Yl,backendName:"wasm",setupFunc:bpe,kernelFunc:xpe},wpe=!1,kpe=Ot(eu,wpe,"bool"),Ipe=!1,Spe=Ot(zi,Ipe,"bool"),Npe=He(Wi,"bool"),Tpe=He(Vi,"bool"),_pe=He(Ui,"bool"),bA;function Cpe(e){bA=e.wasm.cwrap(Gi,null,["number","number","number","number"])}function Epe(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;bA(a,Xe[t.dtype],n,i)}return s}var $pe={kernelName:Gi,backendName:"wasm",setupFunc:Cpe,kernelFunc:Epe},Ape=!1,Fpe=Ot(tu,Ape,"bool"),Dpe=!1,Rpe=Ot(nu,Dpe,"bool"),xA;function Mpe(e){xA=e.wasm.cwrap(ru,null,["number","number","number","number"])}function Ope(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return xA(n.dataIdMap.get(o.dataId).id,r,a,i),o}var Lpe={kernelName:ru,backendName:"wasm",setupFunc:Mpe,kernelFunc:Ope},Ppe=He(Hi),zpe=He(ji),Bpe=!1,Wpe=Ot(au,Bpe,"bool"),Vpe=He(su),Upe=!1,Gpe=Ot(iu,Upe,"bool"),Hpe=!1,jpe=Ot(RI,Hpe,"bool"),vA;function qpe(e){vA=e.wasm.cwrap(qi,null,["number","number","number","number","number","number","number"])}function Kpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return vA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}var Xpe={kernelName:qi,backendName:"wasm",setupFunc:qpe,kernelFunc:Kpe},wA;function Zpe(e){wA=e.wasm.cwrap(ou,null,["number","number","number","number","number","number","number","number","number"])}function Jpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return wA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,d),h}var Ype={kernelName:ou,backendName:"wasm",setupFunc:Zpe,kernelFunc:Jpe},kA;function Qpe(e){kA=e.wasm.cwrap(Ki,null,["number","number","number","number"])}function ehe(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=bs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;kA(o,Xe[i.dtype],g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var the={kernelName:Ki,backendName:"wasm",setupFunc:Qpe,kernelFunc:ehe},nhe=!1,rhe=Ot(Xi,nhe),IA;function ahe(e){IA=e.wasm.cwrap(Zi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function she(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;w.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=T.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,m=d.padInfo.right,f=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,b=d.dilationWidth,x=d.strideHeight,v=d.strideWidth,I=d.inChannels,N=d.outChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(d.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return IA(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,m,f,g,y,b,x,v,I,N,E),_}var ihe={kernelName:Zi,backendName:"wasm",setupFunc:ahe,kernelFunc:she},SA;function ohe(e){SA=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return SA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var uhe={kernelName:lu,backendName:"wasm",setupFunc:ohe,kernelFunc:lhe},NA;function dhe(e){NA=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function phe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return NA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var hhe={kernelName:op,backendName:"wasm",setupFunc:dhe,kernelFunc:phe},TA;function che(e){TA=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mhe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return TA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),h}var fhe={kernelName:ip,backendName:"wasm",setupFunc:che,kernelFunc:mhe},_A;function ghe(e){_A=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;w.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(d.outShape,a.dtype),p=n.makeOutput(d.outShape,"int32");return _A(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(p.dataId).id,Xe[a.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[h,p]}var bhe={kernelName:lp,backendName:"wasm",setupFunc:ghe,kernelFunc:yhe},CA;function xhe(e){CA=e.wasm.cwrap(Ji,null,["number, number, number"])}function vhe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=bs(i,a,t),m=h;if(c){let v=t.dataIdMap.get(d.dataId).id;v!==o&&(u=d,l=v,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=xs({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;CA(l,y,v)}if(c&&t.disposeData(d.dataId),s){let v=T.expandShapeToKeepDim(x.shape,p);x.shape=v}return u.dtype!=="float32"&&t.disposeData(b.dataId),x}var whe={kernelName:Ji,backendName:"wasm",setupFunc:xhe,kernelFunc:vhe},EA;function khe(e){EA=e.wasm.cwrap(Yi,null,["number","number","number","number"])}function Ihe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=bs(i,a,t);if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x)}let m=u.shape.length;T.assertAxesAreInnerMostDims("min",h,m);let[f,g]=T.computeOutAndReduceShapes(u.shape,h),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;EA(l,Xe[i.dtype],y,x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var She={kernelName:Yi,backendName:"wasm",setupFunc:khe,kernelFunc:Ihe},Nhe=!1,The=Ot(Qi,Nhe),ax;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(ax||(ax={}));var $A;function _he(e){$A=e.wasm.cwrap(eo,null,["number","array","number","number","array","array","number","number"])}function Che(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),h=r.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return $A(i,u,t.shape.length,Xe[t.dtype],p,c,ax[a],l),o}var Ehe={kernelName:eo,backendName:"wasm",kernelFunc:Che,setupFunc:_he},AA;function $he(e){AA=e.wasm.cwrap(No,null,["number","number","number","number"])}function FA(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(s.shape)===0||AA(a,i,o,l),s}var Ahe={kernelName:No,backendName:"wasm",setupFunc:$he,kernelFunc:FA},DA;function Fhe(e){DA=e.wasm.cwrap(uu,null,["number","number","number","number","number","number"])}function Dhe(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:FA({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,d]=l.shape,h=n.makeOutput([u,s],"int32");return DA(n.dataIdMap.get(l.dataId).id,u,d,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}var Rhe={kernelName:uu,backendName:"wasm",setupFunc:Fhe,kernelFunc:Dhe},Mhe=Ot(to,!0),Ohe=!0,Lhe=Ot(no,Ohe),Phe=He(du);function c0(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var RA;function zhe(e){RA=e.wasm.cwrap(hu,"number",["number","number","number","number","number"])}function Bhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=RA(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=c0(t,h);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([c],"int32",p)}var Whe={kernelName:hu,backendName:"wasm",setupFunc:zhe,kernelFunc:Bhe},MA;function Vhe(e){MA=e.wasm.cwrap(cu,"number",["number","number","number","number","number","bool"])}function Uhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=MA(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=c0(t,p);t.wasm._free(f);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var Ghe={kernelName:cu,backendName:"wasm",setupFunc:Vhe,kernelFunc:Uhe},OA;function Hhe(e){OA=e.wasm.cwrap(mu,"number",["number","number","number","number","number","number"])}function jhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=OA(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=c0(t,p);t.wasm._free(g);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([m],"float32",f);return[y,b]}var qhe={kernelName:mu,backendName:"wasm",setupFunc:Hhe,kernelFunc:jhe},Khe=!1,Xhe=Ot(pu,Khe,"bool"),LA;function Zhe(e){LA=e.wasm.cwrap(ro,null,["number","number","number","number","number"])}function Jhe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),d=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return LA(h,i,o,l,d),u}var Yhe={kernelName:ro,backendName:"wasm",setupFunc:Zhe,kernelFunc:Jhe};function Qhe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var ece={kernelName:fu,backendName:"wasm",kernelFunc:Qhe};function tce(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return rx({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=rx({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=K$({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeData(d.dataId)),u}var nce={kernelName:gu,backendName:"wasm",kernelFunc:tce},PA;function rce(e){PA=e.wasm.cwrap(ao,null,["number","array","number","number","array","array","number","number"])}function ace(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]);if(w.sizeFromShape(t.shape)===0)return pA({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),h=r.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return PA(i,u,t.shape.length,Xe[t.dtype],p,c,a,l),o}var zA={kernelName:ao,backendName:"wasm",kernelFunc:ace,setupFunc:rce},sce=!1,ice=Ot(so,sce),BA;function oce(e){BA=e.wasm.cwrap(io,null,["number","number","number"])}function lce(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;l.dtype!=="float32"&&(u=xs({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return BA(o,i,h),l.dtype!=="float32"&&n.disposeData(u.dataId),d}var uce={kernelName:io,backendName:"wasm",setupFunc:oce,kernelFunc:lce},WA;function dce(e){WA=e.wasm.cwrap(oo,null,["number","number","number","number"])}function pce(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=bs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;WA(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var hce={kernelName:oo,backendName:"wasm",setupFunc:dce,kernelFunc:pce},cce=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Vw(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},mce={kernelName:up,backendName:"wasm",kernelFunc:cce},fce=!0,gce=Ot(Ai,fce),yce=He(lo),bce=He(uo),xce=He(co),VA;function vce(e){VA=e.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number"])}function wce(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,h,p,c]=a.shape,m=[d,l,u,c],f=t.dataIdMap.get(a.dataId),g;f.dtype!=="float32"&&(g=xs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return VA(y,d,h,p,c,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var kce={kernelName:ho,backendName:"wasm",setupFunc:vce,kernelFunc:wce},UA;function Ice(e){UA=e.wasm.cwrap(xu,null,["number","number","number","array","array","boolean"])}function Sce(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=xs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),UA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var Nce={kernelName:xu,backendName:"wasm",setupFunc:Ice,kernelFunc:Sce},GA;function Tce(e){GA=e.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number"])}function _ce(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,h,p,c]=a.shape,m=[d,l,u,c],f=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return f;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=xs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return GA(b,d,h,p,c,l,u,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),f}var Cce={kernelName:po,backendName:"wasm",setupFunc:Tce,kernelFunc:_ce},HA;function Ece(e){HA=e.wasm.cwrap(bu,null,["number","number","number","array","array","boolean"])}function $ce(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=xs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),HA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var Ace={kernelName:bu,backendName:"wasm",setupFunc:Ece,kernelFunc:$ce},jA;function Fce(e){jA=e.wasm.cwrap(mo,null,["number","array","number","array","number","number"])}function Dce(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=w.parseAxisParam(s,a.shape);if(a.shape.length===0)return Ym({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);jA(l,d,i.length,h,a.shape.length,u);let p=$n({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p}var Rce={kernelName:mo,backendName:"wasm",kernelFunc:Dce,setupFunc:Fce},qA;function Mce(e){qA=e.wasm.cwrap(Ru,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Oce(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,m]=a.shape,[f,g]=T.getImageCenter(o,p,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return qA(u,h,p,c,m,s,f,g,v,x.length,d),l}var Lce={kernelName:Ru,backendName:"wasm",kernelFunc:Oce,setupFunc:Mce},Pce=He(fo),zce=He(go),KA;function Bce(e){KA=e.wasm.cwrap(vu,null,["number","number","number","number","number","number","array","number","number"])}function Wce(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=Tm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return KA(c,m,Xe[s.dtype],l,u,d,f,p,g),o}var Vce={kernelName:vu,backendName:"wasm",setupFunc:Bce,kernelFunc:Wce},XA;function Uce(e){XA=e.wasm.cwrap(ku,null,["number","number","number","number","number","number","bool","number"])}function Gce(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(u){return n.dataIdMap.get(u.dataId).id}return XA(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],Xe[a.dtype],i==="left",l(o)),o}var Hce={kernelName:ku,backendName:"wasm",setupFunc:Uce,kernelFunc:Gce},ZA;function jce(e){ZA=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function qce(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=a.shape.length,c=h===0||h>1||p===1?1:w.sizeFromShape(a.shape.slice(1));return ZA(i,o,l,c,d),u}var Kce={kernelName:Iu,backendName:"wasm",kernelFunc:qce,setupFunc:jce},Xce=He(yo),JA;function Zce(e){JA=e.wasm.cwrap(wo,null,["number","number"])}function Jce(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return w.sizeFromShape(a.shape)===0||JA(r,s),a}var Yce={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Zce,kernelFunc:Jce},Qce=He(vo),eme=He(bo),tme=He(xo),nme=He(ko);function rme(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=zA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),c=$n({inputs:{x:u},backend:n,attrs:{shape:d}}),m=rs({inputs:{x:c},backend:n,attrs:{perm:h}}),f=$n({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}var ame={kernelName:Nu,backendName:"wasm",kernelFunc:rme},YA;function sme(e){YA=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function ime(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,m=t.makeOutput(d,r.dtype),f=t.dataIdMap.get(m.dataId).id,g=t.makeOutput(d.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([u],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(v.dataId).id,N=t.makeOutput([4],"int32"),_=t.dataIdMap.get(N.dataId).id,E=YA(h,p,Xe[a.dtype],o,u,l,c,f,y,x,I,_),A=t.readSync(N.dataId),D;switch(A[0]){case 1:{D=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{D=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:D=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:D=""}if(t.disposeData(N.dataId),D)throw t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(D);let F=m,S=g;return E!==d[0]&&(F=li({inputs:{x:m},attrs:{begin:0,size:[E,l]},backend:t}),S=li({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(m.dataId),t.disposeData(g.dataId)),[F,S,b,v]}var ome={kernelName:dp,backendName:"wasm",setupFunc:sme,kernelFunc:ime},QA;function lme(e){QA=e.wasm.cwrap(_u,null,["number","number","number","number","number","number","number"])}function ume(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=w.sizeFromShape(s.shape),h=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([d],s.dtype),m=t.dataIdMap.get(c.dataId).id,f=t.makeOutput([3],"int32"),g=t.dataIdMap.get(f.dataId).id;QA(i,o,l,u,p,m,g);let y=t.readSync(f.dataId),b;switch(y[0]){case 0:{b=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMultipleErrorMessage(x,v);break}case 4:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMismatchErrorMessage(x,v);break}default:b=""}if(t.disposeData(f.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}var dme={kernelName:_u,backendName:"wasm",setupFunc:lme,kernelFunc:ume},eF;function tF(e){eF=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function nF(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(d,a.dtype),f=n.dataIdMap.get(m.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;eF(h,Xe[a.dtype],a.shape[0],p,c,f,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function pme(e){return nF(e,!0)}var hme={kernelName:pp,backendName:"wasm",setupFunc:tF,kernelFunc:pme};function cme(e){return nF(e,!1)}var mme={kernelName:hp,backendName:"wasm",setupFunc:tF,kernelFunc:cme},rF;function fme(e){rF=e.wasm.cwrap(Cu,null,["number","number","number","number","number","number","number","number","array","number","number"])}function gme(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(w.sizeFromShape(o)===0)return l;let{sliceRank:u,numUpdates:d,sliceSize:h,strides:p,outputSize:c}=T.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(l.dataId).id;return rF(m,f,s.shape.length,g,Xe[i.dtype],u,d,h,y,c,b),l}var yme={kernelName:Cu,backendName:"wasm",setupFunc:fme,kernelFunc:gme};function bme(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map(h=>{let p=[...d];p[o]=h;let c=li({inputs:{x:a},attrs:{begin:u,size:p},backend:r});return u[o]+=h,c})}var xme={kernelName:Tu,backendName:"wasm",kernelFunc:bme},vme=He(Io),wme=He(cp),kme=!0,Ime=Ot(To,kme),aF;function Sme(e){aF=e.wasm.cwrap(us,null,["number","number","number","number"])}function Nme(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return aF(i,a,Xe[s.dtype],l),o}var Tme={kernelName:us,backendName:"wasm",setupFunc:Sme,kernelFunc:Nme},sF;function _me(e){sF=e.wasm.cwrap(Eu,null,["number","array","number","array","array","array","array","array","number","number"])}function Cme(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=$n({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=zt.computeOutShape(b,x,v),_=li({inputs:{x:a},backend:t,attrs:{begin:b,size:N}});I=$n({inputs:{x:_},backend:t,attrs:{shape:m}}),t.disposeData(_.dataId)}else{let N=t.makeOutput(c,"float32"),_=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),D=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(v).buffer),S=new Uint8Array(new Int32Array(c).buffer),M=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),z=t.dataIdMap.get(N.dataId).id;sF(_,E,a.shape.length,A,D,F,S,M,c.length,z),I=$n({inputs:{x:N},backend:t,attrs:{shape:m}}),t.disposeData(N.dataId)}return I}var Eme={kernelName:Eu,backendName:"wasm",setupFunc:_me,kernelFunc:Cme};function $me(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:h}=r,p=t.readSync(a.dataId),c=t.readSync(s.dataId),[m,f]=Gw(p,c,i,o,l,u,d,h),g=t.makeOutput([m.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=m;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(f),[g,b]}var Ame={kernelName:fp,backendName:"wasm",kernelFunc:$me};function Fme(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,d,h]=Hw(o,l[0],i),p=d.length,c=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(c).set(u);let m=t.makeOutput([p],"string"),f=t.dataIdMap.get(m.dataId);f.stringBytes=d;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,m,g]}var Dme={kernelName:gp,backendName:"wasm",kernelFunc:Fme};function Rme(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=jw(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Mme={kernelName:yp,backendName:"wasm",kernelFunc:Rme},Ome=!0,Lme=Ot(_o,Ome),iF;function Pme(e){iF=e.wasm.cwrap(So,null,["number","number","number","number"])}function zme(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=bs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;iF(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var Bme={kernelName:So,backendName:"wasm",setupFunc:Pme,kernelFunc:zme},Wme=He(Co),Vme=He(Eo),oF;function Ume(e){oF=e.wasm.cwrap(wu,null,["number","number","number","number","number","number","array","number","number","number"])}function Gme(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=Tm.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return oF(c,m,Xe[i.dtype],l,u,d,g,p,y,f),o}var Hme={kernelName:wu,backendName:"wasm",setupFunc:Ume,kernelFunc:Gme},lF;function jme(e){lF=e.wasm.cwrap(ls,null,["number","array","number","array","number","number"])}function qme(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let p=0;p<o.length;p++)o[p]=a.shape[p]*i[p];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return lF(s,l,a.shape.length,u,o.length,Xe[d.dtype],h),d}var Kme={kernelName:ls,backendName:"wasm",setupFunc:jme,kernelFunc:qme},uF;function Xme(e){uF=e.wasm.cwrap($u,null,["number","array","number","number","number","bool","number","number"])}var Zme=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),d=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),p=t.dataIdMap.get(h.dataId).id;return uF(i,o,r.shape.length,Xe[r.dtype],a,s,d,p),[u,h]},Jme={kernelName:$u,backendName:"wasm",setupFunc:Xme,kernelFunc:Zme},dF;function Yme(e){dF=e.wasm.cwrap(Au,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Qme(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,N=t.dataIdMap.get(s.dataId).id,_=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return dF(I,N,s.shape[0]>1,d,m,f,c,p,h,y,a.shape.length-1,b,g.length-1,_,E,l,v),x}var efe={kernelName:Au,backendName:"wasm",setupFunc:Yme,kernelFunc:Qme};function tfe(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=Kw(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}var nfe={kernelName:bp,backendName:"wasm",kernelFunc:tfe};function rfe(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let c=0;c<d.length;c++)h[s]=c,d[c]=li({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map(({dataId:c,dtype:m})=>({dataId:c,dtype:m,shape:l}))}var afe={kernelName:Fu,backendName:"wasm",kernelFunc:rfe};function sfe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var ife={kernelName:Du,backendName:"wasm",kernelFunc:sfe},ofe=[Vle,Ule,Gle,Hle,qle,Zle,aue,oue,lue,uue,due,pue,hue,cue,mue,yue,Tue,vue,Iue,$ue,Oue,zue,Wue,Uue,Gue,Hue,Kue,Xue,Yue,tde,ade,ode,dde,pde,hde,fde,bde,wde,Sde,_de,$de,Dde,Ode,zde,Vde,Ude,jde,Kde,Xde,Zde,Jde,Yde,Qde,npe,rpe,spe,lpe,ppe,mpe,ype,vpe,kpe,Spe,Jle,Npe,Tpe,_pe,$pe,Fpe,Rpe,Lpe,zpe,Ppe,Wpe,Vpe,Gpe,jpe,Xpe,Ype,the,rhe,ihe,uhe,hhe,fhe,bhe,whe,She,The,Ehe,Rhe,Mhe,Lhe,Phe,Whe,Ghe,qhe,Xhe,Yhe,ece,nce,zA,ice,uce,hce,mce,gce,yce,bce,xce,_ue,kce,Nce,Cce,Ace,Rce,Lce,Pce,zce,Vce,Hce,Kce,Xce,Yce,Qce,eme,tme,Rue,Ahe,nme,ame,ome,dme,hme,mme,yme,xme,vme,wme,Ime,Tme,Eme,Ame,Dme,Mme,Lme,Bme,Wme,Vme,Hme,Kme,Jme,efe,tue,nfe,afe,ife];for(let e of ofe)vp(e);var sx=G();sx.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});sx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(sx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var hI=ss(hR()),lfe=ss(cR()),cI=ss(mR()),mI=hI.default||hI,ufe=cI.default||cI,pF=class extends Jd{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(hF),ix=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Pc(this,cr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(s);let o=w.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return hfe(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(n==null)a=this.write(r??null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function dfe(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function fI(e,t,n){if(Dc!=null)return Dc;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Cd!=null&&Cd[r]!=null?Cd[r]:n+r}async function pfe(){let[e,t]=await Promise.all([G().getAsync("WASM_HAS_SIMD_SUPPORT"),G().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=lfe.wasmWorkerContents.replace(/\n/g,"\\n"),d=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(d)}return o.endsWith(".wasm")?fI(e,t,Nd??l):l+o},m0&&(a.instantiateWasm=dfe(fI(e,t,Nd??"")));let s=!1;a.onAbort=()=>{s||Ed||(Ed=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Dc==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+mI.toString()],{type:"text/javascript"}),i=mI(a)):i=ufe(a),i.then(o=>{s=!0,Ed=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})}).catch(r)})}function hfe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var cfe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Dc=null,Nd=null,Cd={},Ed=!1,m0=!1;function mfe(e,t=!1){if(kx("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Ed)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Dc=e,m0=t}function ffe(e,t=!1){if(Ed)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Nd=e;else{Cd=e;let n=cfe.filter(r=>Cd[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}m0=t}var hF=-1,ix=-1;function gfe(e){hF=e}function yfe(){if(ix===-1)throw new Error("WASM backend not initialized.");return ix}var bfe="4.21.0",xfe=2;nm("wasm",async()=>{let{wasm:e}=await pfe();return new pF(e)},xfe);var gI="4.21.0",vfe="4.21.0",wfe="4.21.0",kfe="4.21.0",Ife="4.21.0",Sfe={tfjs:gI,"tfjs-core":gI,"tfjs-converter":vfe,"tfjs-backend-cpu":wfe,"tfjs-backend-webgl":kfe,"tfjs-backend-wasm":Ife},ed={};px(ed,{AnchorPosition:()=>_F,DrawBox:()=>$F,DrawBoxOptions:()=>EF,DrawFaceLandmarks:()=>HF,DrawFaceLandmarksOptions:()=>GF,DrawTextField:()=>w0,DrawTextFieldOptions:()=>v0,drawContour:()=>Da,drawDetections:()=>Lfe,drawFaceExpressions:()=>Zfe,drawFaceLandmarks:()=>Yfe});function Da(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var Nfe={};px(Nfe,{computeReshapedDimensions:()=>gF,getCenterPoint:()=>g0,isDimensions:()=>lx,isEven:()=>ox,isFloat:()=>fF,isTensor:()=>td,isTensor1D:()=>Tfe,isTensor2D:()=>mF,isTensor3D:()=>Qp,isTensor4D:()=>ma,isValidNumber:()=>Hs,isValidProbablitiy:()=>_fe,range:()=>Al,round:()=>f0});var Gs=class cF{constructor(t,n){if(!Hs(t)||!Hs(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new cF(1/this.width,1/this.height)}};function td(e,t){return e instanceof De&&e.shape.length===t}function Tfe(e){return td(e,1)}function mF(e){return td(e,2)}function Qp(e){return td(e,3)}function ma(e){return td(e,4)}function fF(e){return e%1!==0}function ox(e){return e%2===0}function f0(e,t=2){let n=10**t;return Math.floor(e*n)/n}function lx(e){return e&&e.width&&e.height}function gF({width:e,height:t},n){let r=n/Math.max(t,e);return new Gs(Math.round(e*r),Math.round(t*r))}function g0(e){return e.reduce((t,n)=>t.add(n),new st(0,0)).div(new st(e.length,e.length))}function Al(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function Hs(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function _fe(e){return Hs(e)&&e>=0&&e<=1}var st=class Ds{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Ds(this.x+t.x,this.y+t.y)}sub(t){return new Ds(this.x-t.x,this.y-t.y)}mul(t){return new Ds(this.x*t.x,this.y*t.y)}div(t){return new Ds(this.x/t.x,this.y/t.y)}abs(){return new Ds(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Ds(Math.floor(this.x),Math.floor(this.y))}},ui=class Sr{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(Hs)}static assertIsValidBox(t,n,r=!1){if(!Sr.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(Hs),s=[r.x,r.y,r.width,r.height].every(Hs);if(!s&&!a)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];Sr.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new st(this.left,this.top)}get topRight(){return new st(this.right,this.top)}get bottomLeft(){return new st(this.left,this.bottom)}get bottomRight(){return new st(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new Sr({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new Sr({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new Sr({x:t,y:n,width:r,height:a})}rescale(t){let n=lx(t)?t.width:t,r=lx(t)?t.height:t;return new Sr({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new Sr({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=s-o,d=i-l,h=Math.min(u,t-o),p=Math.min(d,n-l);return new Sr({x:o,y:l,width:h,height:p}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new Sr({x:s,y:i,width:r,height:a})}padAtBorders(t,n){let r=this.width+1,a=this.height+1,s=1,i=1,o=r,l=a,u=this.left,d=this.top,h=this.right,p=this.bottom;return h>n&&(o=-h+n+r,h=n),p>t&&(l=-p+t+a,p=t),u<1&&(l=2-u,u=1),d<1&&(l=2-d,d=1),{dy:i,edy:l,dx:s,edx:o,y:d,ey:p,x:u,ex:h,w:r,h:a}}calibrate(t){return new Sr({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},yF=class extends ui{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},bF=class xF{constructor(t,n,r,a,s){this._imageDims=new Gs(s.width,s.height),this._score=t,this._classScore=n,this._className=r,this._box=new ui(a).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ui(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new xF(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},yr=class vF extends bF{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new vF(r,a,s)}};function Cfe(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Efe(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new yF(r,a,s,i)}function $fe(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let u=0;u<o.length;u++){let d=o[u],h=e[i],p=e[d];l.push(Cfe(h,p,r))}a=a.filter((u,d)=>l[d]<=n)}return s}function eh(e,t){return W(()=>{let[n,r,a]=t,s=Un([...e.shape.slice(0,3),1],n,"float32"),i=Un([...e.shape.slice(0,3),1],r,"float32"),o=Un([...e.shape.slice(0,3),1],a,"float32"),l=ot([s,i,o],3);return he(e,l)})}function Afe(e,t=!1){return W(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=h=>{let p=e.shape.slice();return p[i]=h,Un(p,0,"float32")},l=o(s),u=a-l.shape[i],d=[t&&u?o(u):null,e,l].filter(h=>!!h).map(h=>oe(h,"float32"));return ot(d,i)})}function tb(e){return 1/(1+Math.exp(-e))}var wF=class extends ui{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},Ffe=.5,Dfe=.43,Rfe=.45,Xd=class{constructor(e,t,n=new st(0,0)){let{width:r,height:a}=t;this._imgDims=new Gs(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new st(r,a)).add(n))}get shift(){return new st(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new st(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new st(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof yr?e.box.floor():new ui(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}=On({useDlibAlignment:!1,minBoxPadding:.2},t);return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=d=>r.sub(d).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/Rfe),o=g0(e),l=Math.floor(Math.max(0,o.x-Ffe*i)),u=Math.floor(Math.max(0,o.y-Dfe*i));return new wF(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=Efe(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var kF=class extends Xd{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(g0)}};function Zd(e){return e.detection instanceof yr}function Rc(e,t){return Ca(On({},e),{detection:t})}function IF(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function y0(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function SF(e){let t="";if(!e&&y0())try{e=GD("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function NF(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=SF();return On({Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i},o)}function TF(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Gt;function Mfe(){if(!Gt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Gt}function ux(e){Gt=e}function b0(){return TF()?ux(IF()):y0()?ux(NF()):null}function Ofe(e){if(Gt||b0(),!Gt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Gt.Canvas,Image:n=Gt.Image}=e;Gt.Canvas=t,Gt.Image=n,Gt.createCanvasElement=e.createCanvasElement||(()=>new t),Gt.createImageElement=e.createImageElement||(()=>new n),Gt.ImageData=e.ImageData||Gt.ImageData,Gt.Video=e.Video||Gt.Video,Gt.fetch=e.fetch||Gt.fetch,Gt.readFile=e.readFile||Gt.readFile}var Dn={getEnv:Mfe,setEnv:ux,initialize:b0,createBrowserEnv:IF,createFileSystem:SF,createNodejsEnv:NF,monkeyPatch:Ofe,isBrowser:TF,isNodejs:y0};b0();function x0(e){return!Dn.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function as(e){let{Canvas:t,CanvasRenderingContext2D:n}=Dn.getEnv();if(e instanceof n)return e;let r=x0(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var _F=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(_F||{}),v0=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},w0=class CF{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof CF?t.text:t,this.anchor=n,this.options=new v0(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,a)=>r<a?a:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,a=r==="BOTTOM_RIGHT"||r==="TOP_RIGHT",s=r==="BOTTOM_LEFT"||r==="BOTTOM_RIGHT",i=this.measureWidth(t),o=this.measureHeight(),l=a?this.anchor.x-i:this.anchor.x,u=s?this.anchor.y-o:this.anchor.y;if(n){let{width:d,height:h}=n,p=Math.max(Math.min(l,d-i),0),c=Math.max(Math.min(u,h-o),0);return{x:p,y:c}}return{x:l,y:u}}draw(t){let n=x0(t),r=as(n),{backgroundColor:a,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;r.font=`${i}px ${o}`;let u=this.measureWidth(r),d=this.measureHeight();r.fillStyle=a;let h=this.getUpperLeft(r,n);r.fillRect(h.x,h.y,u,d),r.fillStyle=s,this.text.forEach((p,c)=>{let m=l+h.x,f=l+h.y+(c+1)*i;r.fillText(p,m,f)})}},EF=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new v0(On(On({},s),a))}},$F=class{constructor(e,t={}){this.box=new ui(e),this.options=new EF(t)}draw(e){let t=as(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new w0([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Lfe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof yr?n.score:Zd(n)?n.detection.score:void 0,a=n instanceof yr?n.box:Zd(n)?n.detection.box:new ui(n),s=r?`${f0(r)}`:void 0;new $F(a,{label:s}).draw(e)})}function AF(e){let{Image:t,Video:n}=Dn.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Pfe(e){return new Promise((t,n)=>{if(e instanceof Dn.getEnv().Canvas||AF(e)){t(null);return}function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function k0(e){let{Image:t,Video:n}=Dn.getEnv();return e instanceof t?new Gs(e.naturalWidth,e.naturalHeight):e instanceof n?new Gs(e.videoWidth,e.videoHeight):new Gs(e.width,e.height)}function Mc({width:e,height:t}){let{createCanvasElement:n}=Dn.getEnv(),r=n();return r.width=e,r.height=t,r}function FF(e,t){let{ImageData:n}=Dn.getEnv();if(!(e instanceof n)&&!AF(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||k0(e),s=Mc({width:r,height:a});return e instanceof n?as(s).putImageData(e,0,0):as(s).drawImage(e,0,0,r,a),s}async function zfe(e,t){let n=t||Dn.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(ma(e)?1:0),i=W(()=>e.as3D(r,a,s).toInt());return await zp.toPixels(i,n),i.dispose(),n}function yI(e){let{Image:t,Canvas:n,Video:r}=Dn.getEnv();return e instanceof t||e instanceof n||e instanceof r}function Bfe(e,t,n=!1){let{Image:r,Canvas:a}=Dn.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Mc({width:1,height:1});let s=k0(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=Mc({width:t,height:t}),d=e instanceof a?e:FF(e),h=Math.abs(o-l)/2,p=n&&o<l?h:0,c=n&&l<o?h:0;return d.width>0&&d.height>0&&as(u).drawImage(d,p,c,o,l),u}var Oc=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(Qp(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(ma(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof Dn.getEnv().Canvas?n:FF(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Al(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return gF({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let n=Al(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof De){let s=ma(a)?a:Kt(a);return s=Afe(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=tr.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof Dn.getEnv().Canvas)return zp.fromPixels(Bfe(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Dt(n.map(r=>oe(r,"float32"))).as4D(this.batchSize,e,e,3)})}};async function bn(e){if(e instanceof Oc)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(x0);return r.forEach((a,s)=>{if(!yI(a)&&!Qp(a)&&!ma(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ma(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(r.map(a=>yI(a)&&Pfe(a))),new Oc(r,Array.isArray(e))}async function I0(e,t){let{Canvas:n}=Dn.getEnv(),r=e;if(!(e instanceof n)){let s=await bn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:await zfe(i)}let a=as(r);return t.map(s=>s instanceof yr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let u=Mc({width:o,height:l});return o>0&&l>0&&as(u).putImageData(a.getImageData(s,i,o,l),0,0),u})}async function S0(e,t){if(!Qp(e)&&!ma(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ma(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return W(()=>{let[n,r,a]=e.shape.slice(ma(e)?1:0);return t.map(s=>s instanceof yr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>Wu(e.as3D(n,r,a),[i,s,0],[l,o,a]))})}async function Wfe(e,t){let{fetch:n}=Dn.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function Vfe(e){return(await Wfe(e)).json()}function DF(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Ufe(e,t){let{manifestUri:n,modelBaseUri:r}=DF(e,t),a=await Vfe(n);return rn.loadWeights(a,r)}function RF(e,t,n=!1){let{width:r,height:a}=n?k0(t):t;return e.width=r,e.height=a,{width:r,height:a}}var vs=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Xs)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Xs))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=fn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await Ufe(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=Dn.getEnv(),{manifestUri:n,modelBaseUri:r}=DF(e,this.getDefaultModelName()),a=l=>Promise.all(l.map(u=>t(u).then(d=>typeof d=="string"?Buffer.from(d):d.buffer))),s=rn.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof De))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function ar(e,t,n){return W(()=>{let r=Bu(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Z(r,t.bias),r})}function nb(e,t,n=!1){return W(()=>{let r=tt(n?Z(gn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):ar(e,t.conv0,[2,2])),a=ar(r,t.conv1,[1,1]),s=tt(Z(r,a)),i=ar(s,t.conv2,[1,1]);return tt(Z(r,Z(a,i)))})}function Kh(e,t,n=!1,r=!0){return W(()=>{let a=tt(n?Z(gn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):ar(e,t.conv0,r?[2,2]:[1,1])),s=ar(a,t.conv1,[1,1]),i=tt(Z(a,s)),o=ar(i,t.conv2,[1,1]),l=tt(Z(a,Z(s,o))),u=ar(l,t.conv3,[1,1]);return tt(Z(a,Z(s,Z(o,u))))})}function $d(e,t,n="same",r=!1){return W(()=>{let a=Z(gn(e,t.filters,[1,1],n),t.bias);return r?tt(a):a})}function ws(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function N0(e,t){return(n,r,a,s)=>{let i=Ja(e(n*r*a*a),[a,a,n,r]),o=Qe(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function MF(e,t){return(n,r,a)=>{let s=Kr(e(n*r),[n,r]),i=Qe(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var OF=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function T0(e,t){return(n,r,a)=>{let s=Ja(e(9*n),[3,3,n,1]),i=Ja(e(n*r),[1,1,n,r]),o=Qe(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new OF(s,i,o)}}function _0(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new OF(n,r,a)}}function Wo(e,t){return(n,r,a)=>{let s=e[n];if(!td(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function ks(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function LF(e,t){let n=N0(e,t),r=T0(e,t);function a(i,o,l,u=!1){let d=u?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),h=r(o,o,`${l}/conv1`),p=r(o,o,`${l}/conv2`);return{conv0:d,conv1:h,conv2:p}}function s(i,o,l,u=!1){let{conv0:d,conv1:h,conv2:p}=a(i,o,l,u),c=r(o,o,`${l}/conv3`);return{conv0:d,conv1:h,conv2:p,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Gfe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractDenseBlock4Params:a}=LF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function PF(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function zF(e,t){let n=Wo(e,t),r=PF(n),a=_0(n);function s(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),d=a(`${o}/conv1`),h=a(`${o}/conv2`);return{conv0:u,conv1:d,conv2:h}}function i(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),d=a(`${o}/conv1`),h=a(`${o}/conv2`),p=a(`${o}/conv3`);return{conv0:u,conv1:d,conv2:h,conv3:p}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Hfe(e){let t=[],{extractDenseBlock4Params:n}=zF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ws(e,t),{params:r,paramMappings:t}}var BF=class extends vs{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=eh(n,[122.782,117.001,104.298]).div(255),a=Kh(r,t.dense0,!0);return a=Kh(a,t.dense1),a=Kh(a,t.dense2),a=Kh(a,t.dense3),a=xa(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await bn(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Hfe(e)}extractParams(e){return Gfe(e)}};function dx(e,t){return W(()=>Z(Re(e,t.weights),t.bias))}function jfe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=ks(e),i=MF(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function qfe(e){let t=[],n=Wo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return ws(e,t),{params:a,paramMappings:t}}function WF(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var VF=class extends vs{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Oc?this.faceFeatureExtractor.forwardInput(e):e;return dx(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return jfe(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=WF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),qfe(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},bI=["neutral","happy","sad","angry","fearful","disgusted","surprised"],C0=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);bI.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return bI.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},Kfe=class extends VF{constructor(e=new BF){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>cs(this.runNet(e)))}async forward(e){return this.forwardInput(await bn(e))}async predictExpressions(e){let t=await bn(e),n=await this.forwardInput(t),r=await Promise.all(Nt(n).map(async s=>{let i=s.dataSync();return s.dispose(),i}));n.dispose();let a=r.map(s=>new C0(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Xfe(e){return e.expressions instanceof C0}function UF(e,t){return Ca(On({},e),{expressions:t})}function Zfe(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof C0?a:Xfe(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=Zd(a)?a.detection.box.bottomLeft:r||new st(0,0);new w0(i.map(l=>`${l.expression} (${f0(l.probability)})`),o).draw(e)})}function E0(e){return Zd(e)&&e.landmarks instanceof Xd&&e.unshiftedLandmarks instanceof Xd&&e.alignedRect instanceof yr}function Jfe(e){let t=l=>l*180/Math.PI,n=(l,u)=>Math.sqrt((l.x-u.x)**2+(l.y-u.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(l,u,d)=>{let h=Math.floor(l.x-u.x),p=Math.floor(u.x-d.x);return h-p},s=(l,u)=>{let d=Math.hypot(u.x-l.x,u.y-l.y),h=u.y-l.y,p=Math.asin(h/d),c=t(p),m=Math.floor(90-c),f=u.x-l.x<0?-1:1;return m*f},i=(l,u,d)=>{let h=n(l,d),p=new st((l.x+d.x)/2,(l.y+d.y)/2),c=n(u,p),m=Math.atan(c/h),f=Math.floor(t(m)),g=p.y-u.y<0?-1:1;return f*g};if(!e||!e.positions||e.positions.length!==68)return r;let o=e.positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function $0(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new yr(e.detection.score,a.rescale(s.reverse()),s),o=Jfe(t);return Ca(On({},e),{landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o})}var GF=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},HF=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new GF(t)}draw(e){let t=as(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof kF&&(t.strokeStyle=s,t.lineWidth=a,Da(t,this.faceLandmarks.getJawOutline()),Da(t,this.faceLandmarks.getLeftEyeBrow()),Da(t,this.faceLandmarks.getRightEyeBrow()),Da(t,this.faceLandmarks.getNose()),Da(t,this.faceLandmarks.getLeftEye(),!0),Da(t,this.faceLandmarks.getRightEye(),!0),Da(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let l=u=>{t.beginPath(),t.arc(u.x,u.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(l)}}};function Yfe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Xd?n:E0(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new HF(r).draw(e)})}function Qfe(e,t){let n=N0(e,t),r=T0(e,t);function a(i,o,l){let u=r(i,o,`${l}/separable_conv0`),d=r(o,o,`${l}/separable_conv1`),h=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:u,separable_conv1:d,expansion_conv:h}}function s(i,o){let l=r(i,i,`${o}/separable_conv0`),u=r(i,i,`${o}/separable_conv1`),d=r(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:d}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function ege(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=ks(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Qfe(r,n),u=s(3,32,3,"entry_flow/conv_in"),d=o(32,64,"entry_flow/reduction_block_0"),h=o(64,128,"entry_flow/reduction_block_1"),p={conv_in:u,reduction_block_0:d,reduction_block_1:h},c={};Al(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:p,middle_flow:c,exit_flow:g}}}function tge(e,t){let n=Wo(e,t),r=PF(n),a=_0(n);function s(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),d=r(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:u,expansion_conv:d}}function i(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),d=a(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:d}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function nge(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=tge(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),d={conv_in:o,reduction_block_0:l,reduction_block_1:u},h={};Al(t,0,1).forEach(f=>{h[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let p=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),m={reduction_block:p,separable_conv:c};return ws(e,n),{params:{entry_flow:d,middle_flow:h,exit_flow:m},paramMappings:n}}function jF(e,t,n){return Z(gn(e,t.filters,n,"same"),t.bias)}function rb(e,t,n=!0){let r=n?tt(e):e;return r=ar(r,t.separable_conv0,[1,1]),r=ar(tt(r),t.separable_conv1,[1,1]),r=Ht(r,[3,3],[2,2],"same"),r=Z(r,jF(e,t.expansion_conv,[2,2])),r}function rge(e,t){let n=ar(tt(e),t.separable_conv0,[1,1]);return n=ar(tt(n),t.separable_conv1,[1,1]),n=ar(tt(n),t.separable_conv2,[1,1]),n=Z(n,e),n}var age=class extends vs{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=eh(n,[122.782,117.001,104.298]).div(255),a=tt(jF(r,t.entry_flow.conv_in,[2,2]));return a=rb(a,t.entry_flow.reduction_block_0,!1),a=rb(a,t.entry_flow.reduction_block_1),Al(this._numMainBlocks,0,1).forEach(s=>{a=rge(a,t.middle_flow[`main_block_${s}`])}),a=rb(a,t.exit_flow.reduction_block),a=tt(ar(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await bn(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return nge(e,this._numMainBlocks)}extractParams(e){return ege(e,this._numMainBlocks)}};function sge(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),a=MF(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function ige(e){let t=[],n=Wo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ws(e,t),{params:a,paramMappings:t}}var oge=(e=>(e.FEMALE="female",e.MALE="male",e))(oge||{}),lge=class extends vs{constructor(e=new age(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Oc?this.faceFeatureExtractor.forwardInput(e):e,r=xa(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=dx(r,t.fc.age).as1D(),s=dx(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return W(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:cs(n)}})}async forward(e){return this.forwardInput(await bn(e))}async predictAgeAndGender(e){let t=await bn(e),n=await this.forwardInput(t),r=Nt(n.age),a=Nt(n.gender),s=r.map((o,l)=>({ageTensor:o,genderTensor:a[l]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:l})=>{let u=o.dataSync()[0],d=l.dataSync()[0],h=d>.5,p=h?"male":"female",c=h?d:1-d;return o.dispose(),l.dispose(),{age:u,gender:p,genderProbability:c}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return sge(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=WF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),ige(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},qF=class extends VF{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return W(()=>{let s=(u,d)=>Dt([Un([68],u,"float32"),Un([68],d,"float32")],1).as2D(1,136).as1D(),i=(u,d)=>{let{width:h,height:p}=r[u];return d(h,p)?Math.abs(h-p)/2:0},o=u=>i(u,(d,h)=>d<h),l=u=>i(u,(d,h)=>h<d);return e.mul(Un([a,136],t,"float32")).sub(Dt(Array.from(Array(a),(u,d)=>s(o(d),l(d))))).div(Dt(Array.from(Array(a),(u,d)=>s(r[d].width,r[d].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}async forward(e){return this.forwardInput(await bn(e))}async detectLandmarks(e){let t=await bn(e),n=W(()=>Nt(this.forwardInput(t))),r=await Promise.all(n.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((u,d)=>ox(d)),l=i.filter((u,d)=>!ox(d));return new kF(Array(68).fill(0).map((u,d)=>new st(o[d],l[d])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},uge=class extends qF{constructor(e=new BF){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function dge(e){let t=[],{extractDenseBlock3Params:n}=zF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ws(e,t),{params:r,paramMappings:t}}function pge(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractDenseBlock3Params:a}=LF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var hge=class extends vs{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(112,!0),"float32"),r=eh(n,[122.782,117.001,104.298]).div(255),a=nb(r,t.dense0,!0);return a=nb(a,t.dense1),a=nb(a,t.dense2),a=xa(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await bn(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return dge(e)}extractParams(e){return pge(e)}},cge=class extends qF{constructor(e=new hge){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function mge(e,t){return Z(P(e,t.weights),t.biases)}function A0(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=gn(e,s,n,a);return o=Z(o,i),o=mge(o,t.scale),r?tt(o):o}function fge(e,t){return A0(e,t,[1,1],!0)}function KF(e,t){return A0(e,t,[1,1],!1)}function XF(e,t){return A0(e,t,[2,2],!0,"valid")}function gge(e,t){function n(o,l,u){let d=e(o),h=d.length/(l*u*u);if(fF(h))throw new Error(`depth has to be an integer: ${h}, weights.length: ${d.length}, numFilters: ${l}, filterSize: ${u}`);return W(()=>Me(Ja(d,[l,h,u,u]),[2,3,1,0]))}function r(o,l,u,d){let h=n(o,l,u),p=Qe(e(l));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/bias`}),{filters:h,bias:p}}function a(o,l){let u=Qe(e(o)),d=Qe(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:u,biases:d}}function s(o,l,u,d){let h=r(o,l,u,`${d}/conv`),p=a(l,`${d}/scale`);return{conv:h,scale:p}}function i(o,l,u,d,h=!1){let p=s((h?.5:1)*o,l,u,`${d}/conv1`),c=s(o,l,u,`${d}/conv2`);return{conv1:p,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function yge(e){let{extractWeights:t,getRemainingWeights:n}=ks(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=gge(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),d=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),p=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),I=W(()=>Me(Kr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:d,conv64_1:h,conv64_2:p,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:I},paramMappings:r}}function bge(e,t){let n=Wo(e,t);function r(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),u=r(i);return{conv:{filters:o,bias:l},scale:u}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function xge(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=bge(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),d=r("conv64_2"),h=r("conv64_3"),p=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!mF(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:d,conv64_3:h,conv128_down:p,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ws(e,t),{params:v,paramMappings:t}}function Pr(e,t){let n=fge(e,t.conv1);return n=KF(n,t.conv2),n=Z(n,e),n=tt(n),n}function Xh(e,t){let n=XF(e,t.conv1);n=KF(n,t.conv2);let r=xa(e,2,2,"valid"),a=kt(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=kt(i);n=ot([n,o],1);let l=[...n.shape];l[2]=1;let u=kt(l);n=ot([n,u],2)}return r=s?ot([r,a],3):r,n=Z(r,n),n=tt(n),n}var vge=class extends vs{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(150,!0),"float32"),r=eh(n,[122.782,117.001,104.298]).div(255),a=XF(r,t.conv32_down);a=Ht(a,3,2,"valid"),a=Pr(a,t.conv32_1),a=Pr(a,t.conv32_2),a=Pr(a,t.conv32_3),a=Xh(a,t.conv64_down),a=Pr(a,t.conv64_1),a=Pr(a,t.conv64_2),a=Pr(a,t.conv64_3),a=Xh(a,t.conv128_down),a=Pr(a,t.conv128_1),a=Pr(a,t.conv128_2),a=Xh(a,t.conv256_down),a=Pr(a,t.conv256_1),a=Pr(a,t.conv256_2),a=Xh(a,t.conv256_down_out);let s=a.mean([1,2]);return Re(s,t.fc)})}async forward(e){return this.forwardInput(await bn(e))}async computeFaceDescriptor(e){var t;if((t=e?.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=await bn(e),r=W(()=>Nt(this.forwardInput(n))),a=await Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return xge(e)}extractParams(e){return yge(e)}};function ZF(e,t){return Ca(On({},e),{descriptor:t})}function JF(e,t){return Ca(On({},e),{age:t})}function YF(e,t,n){return Ca(On({},e),{gender:t,genderProbability:n})}function wge(e,t){function n(l,u){let d=Ja(e(9*l),[3,3,l,1]),h=Qe(e(l)),p=Qe(e(l)),c=Qe(e(l)),m=Qe(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:d,batch_norm_scale:h,batch_norm_offset:p,batch_norm_mean:c,batch_norm_variance:m}}function r(l,u,d,h,p){let c=Ja(e(l*u*d*d),[d,d,l,u]),m=Qe(e(u));return t.push({paramPath:`${h}/filters`},{paramPath:`${h}/${p?"batch_norm_offset":"bias"}`}),{filters:c,bias:m}}function a(l,u,d,h){let{filters:p,bias:c}=r(l,u,d,h,!0);return{filters:p,batch_norm_offset:c}}function s(l,u,d){let h=n(l,`${d}/depthwise_conv`),p=a(l,u,1,`${d}/pointwise_conv`);return{depthwise_conv:h,pointwise_conv:p}}function i(){let l=a(3,32,3,"mobilenetv1/conv_0"),u=s(32,64,"mobilenetv1/conv_1"),d=s(64,128,"mobilenetv1/conv_2"),h=s(128,128,"mobilenetv1/conv_3"),p=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:u,conv_2:d,conv_3:h,conv_4:p,conv_5:c,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:I}}function o(){let l=a(1024,256,1,"prediction_layer/conv_0"),u=a(256,512,3,"prediction_layer/conv_1"),d=a(512,128,1,"prediction_layer/conv_2"),h=a(128,256,3,"prediction_layer/conv_3"),p=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),m=a(256,64,1,"prediction_layer/conv_6"),f=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),N=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),_=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),D=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:u,conv_2:d,conv_3:h,conv_4:p,conv_5:c,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:I},box_predictor_3:{box_encoding_predictor:N,class_predictor:_},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:D,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function kge(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=wge(n,t),i=a(),o=s(),l={extra_dim:Nm(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function Ige(e,t){let n=Wo(e,t);function r(u,d,h){let p=n(`${u}/Conv2d_${d}_pointwise/weights`,4,`${h}/filters`),c=n(`${u}/Conv2d_${d}_pointwise/convolution_bn_offset`,1,`${h}/batch_norm_offset`);return{filters:p,batch_norm_offset:c}}function a(u){let d=`mobilenetv1/conv_${u}`,h=`MobilenetV1/Conv2d_${u}_depthwise`,p=`${d}/depthwise_conv`,c=`${d}/pointwise_conv`,m=n(`${h}/depthwise_weights`,4,`${p}/filters`),f=n(`${h}/BatchNorm/gamma`,1,`${p}/batch_norm_scale`),g=n(`${h}/BatchNorm/beta`,1,`${p}/batch_norm_offset`),y=n(`${h}/BatchNorm/moving_mean`,1,`${p}/batch_norm_mean`),b=n(`${h}/BatchNorm/moving_variance`,1,`${p}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",u,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(u,d){let h=n(`${u}/weights`,4,`${d}/filters`),p=n(`${u}/biases`,1,`${d}/bias`);return{filters:h,bias:p}}function o(u){let d=i(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),h=i(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`);return{box_encoding_predictor:d,class_predictor:h}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function Sge(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=Ige(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Qp(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ws(e,t),{params:s,paramMappings:t}}function Wr(e,t,n){return W(()=>{let r=gn(e,t.filters,n,"same");return r=Z(r,t.batch_norm_offset),ln(r,0,6)})}var Nge=.0010000000474974513;function Tge(e,t,n){return W(()=>{let r=Ao(e,t.filters,n,"same");return r=$o(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Nge),ln(r,0,6)})}function _ge(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function Cge(e,t){return W(()=>{let n,r=Wr(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=_ge(i);r=Tge(r,a.depthwise_conv,o),r=Wr(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function Ege(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),d=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),p=(i-a)*(o-s),c=(d-l)*(h-u);if(p<=0||c<=0)return 0;let m=Math.max(a,l),f=Math.max(s,u),g=Math.min(i,d),y=Math.min(o,h),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(p+c-b)}function $ge(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((d,h)=>({score:d,boxIndex:h})).filter(d=>d.score>a).sort((d,h)=>h.score-d.score),l=d=>d<=r?1:0,u=[];return o.forEach(d=>{if(u.length>=i)return;let h=d.score;for(let p=u.length-1;p>=0;--p){let c=Ege(e,d.boxIndex,u[p]);if(c!==0&&(d.score*=l(c),d.score<=a))break}h===d.score&&u.push(d.boxIndex)}),u}function Age(e){let t=Nt(Me(e,[1,0])),n=[he(t[2],t[0]),he(t[3],t[1])],r=[Z(t[0],ce(n[0],2)),Z(t[1],ce(n[1],2))];return{sizes:n,centers:r}}function Fge(e,t){let{sizes:n,centers:r}=Age(e),a=Nt(Me(t,[1,0])),s=ce(P(un(ce(a[2],5)),n[0]),2),i=Z(P(ce(a[0],10),n[0]),r[0]),o=ce(P(un(ce(a[3],5)),n[1]),2),l=Z(P(ce(a[1],10),n[1]),r[1]);return Me(Dt([he(i,s),he(l,o),Z(i,s),Z(l,o)]),[1,0])}function Dge(e,t,n){return W(()=>{let r=e.shape[0],a=Fge(B(Vn(n.extra_dim,[r,1,1]),[-1,4]),B(e,[-1,4]));a=B(a,[r,a.shape[0]/r,4]);let s=fr(Ue(t,[0,0,1],[-1,-1,-1])),i=Ue(s,[0,0,0],[-1,-1,1]);i=B(i,[r,i.shape[1]]);let o=Nt(a),l=Nt(i);return{boxes:o,scores:l}})}function rl(e,t){return W(()=>{let n=e.shape[0],r=B($d(e,t.box_encoding_predictor),[n,-1,1,4]),a=B($d(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Rge(e,t,n){return W(()=>{let r=Wr(e,n.conv_0,[1,1]),a=Wr(r,n.conv_1,[2,2]),s=Wr(a,n.conv_2,[1,1]),i=Wr(s,n.conv_3,[2,2]),o=Wr(i,n.conv_4,[1,1]),l=Wr(o,n.conv_5,[2,2]),u=Wr(l,n.conv_6,[1,1]),d=Wr(u,n.conv_7,[2,2]),h=rl(t,n.box_predictor_0),p=rl(e,n.box_predictor_1),c=rl(a,n.box_predictor_2),m=rl(i,n.box_predictor_3),f=rl(l,n.box_predictor_4),g=rl(d,n.box_predictor_5),y=ot([h.boxPredictionEncoding,p.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=ot([h.classPrediction,p.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Qm=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Mge=class extends vs{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let n=oe(e.toBatchTensor(512,!1),"float32"),r=he(ce(n,127.5),1),a=Cge(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Rge(a.out,a.conv11,t.prediction_layer);return Dge(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await bn(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Qm(t),a=await bn(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),d=$ge(o,u,n,.5,r),h=a.getReshapedInputDimensions(0),p=a.inputSize,c=p/h.width,m=p/h.height,f=o.arraySync(),g=d.map(y=>{let[b,x]=[Math.max(0,f[y][0]),Math.min(1,f[y][2])].map(N=>N*m),[v,I]=[Math.max(0,f[y][1]),Math.min(1,f[y][3])].map(N=>N*c);return new yr(u[y],new wF(v,b,I-v,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Sge(e)}extractParams(e){return kge(e)}};var Oge=.4,Lge=[new st(.738768,.874946),new st(2.42204,2.65704),new st(4.30971,7.04493),new st(10.246,4.59428),new st(12.6868,11.8741)],Pge=[new st(1.603231,2.094468),new st(6.041143,7.080126),new st(2.882459,3.518061),new st(4.266906,5.178857),new st(9.041765,10.66308)],zge=[117.001,114.697,97.404],Bge="tiny_yolov2_model",Wge="tiny_yolov2_separable_conv_model",Zh=e=>typeof e=="number";function Vge(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Zh(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Zh(t.x)&&Zh(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Zh)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function F0(e){return W(()=>{let t=P(e,ve(.10000000149011612));return Z(tt(he(e,t)),t)})}function Ea(e,t){return W(()=>{let n=Dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=gn(n,t.conv.filters,[1,1],"valid"),n=he(n,t.bn.sub),n=P(n,t.bn.truediv),n=Z(n,t.conv.bias),F0(n)})}function $a(e,t){return W(()=>{let n=Dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Bu(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Z(n,t.bias),F0(n)})}function Uge(e,t){let n=N0(e,t);function r(i,o){let l=Qe(e(i)),u=Qe(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:u}}function a(i,o,l){let u=n(i,o,3,`${l}/conv`),d=r(o,`${l}/bn`);return{conv:u,bn:d}}let s=T0(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Gge(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=ks(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:u}=Uge(a,i),d;if(t.withSeparableConvs){let[h,p,c,m,f,g,y,b,x]=r,v=t.isFirstLayerConv2d?o(h,p,3,"conv0"):u(h,p,"conv0"),I=u(p,c,"conv1"),N=u(c,m,"conv2"),_=u(m,f,"conv3"),E=u(f,g,"conv4"),A=u(g,y,"conv5"),D=b?u(y,b,"conv6"):void 0,F=x?u(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");d={conv0:v,conv1:I,conv2:N,conv3:_,conv4:E,conv5:A,conv6:D,conv7:F,conv8:S}}else{let[h,p,c,m,f,g,y,b,x]=r,v=l(h,p,"conv0"),I=l(p,c,"conv1"),N=l(c,m,"conv2"),_=l(m,f,"conv3"),E=l(f,g,"conv4"),A=l(g,y,"conv5"),D=l(y,b,"conv6"),F=l(b,x,"conv7"),S=o(x,5*n,1,"conv8");d={conv0:v,conv1:I,conv2:N,conv3:_,conv4:E,conv5:A,conv6:D,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:d,paramMappings:i}}function Hge(e,t){let n=Wo(e,t);function r(o){let l=n(`${o}/sub`,1),u=n(`${o}/truediv`,1);return{sub:l,truediv:u}}function a(o){let l=n(`${o}/filters`,4),u=n(`${o}/bias`,1);return{filters:l,bias:u}}function s(o){let l=a(`${o}/conv`),u=r(`${o}/bn`);return{conv:l,bn:u}}let i=_0(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function jge(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=Hge(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ws(e,n),{params:i,paramMappings:n}}var D0=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},qge=(()=>{let e=class QF extends vs{constructor(n){super("TinyYolov2"),Vge(n),this._config=n}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(n,r){let a=Ea(n,r.conv0);return a=Ht(a,[2,2],[2,2],"same"),a=Ea(a,r.conv1),a=Ht(a,[2,2],[2,2],"same"),a=Ea(a,r.conv2),a=Ht(a,[2,2],[2,2],"same"),a=Ea(a,r.conv3),a=Ht(a,[2,2],[2,2],"same"),a=Ea(a,r.conv4),a=Ht(a,[2,2],[2,2],"same"),a=Ea(a,r.conv5),a=Ht(a,[2,2],[1,1],"same"),a=Ea(a,r.conv6),a=Ea(a,r.conv7),$d(a,r.conv8,"valid",!1)}runMobilenet(n,r){let a=this.config.isFirstLayerConv2d?F0($d(n,r.conv0,"valid",!1)):$a(n,r.conv0);return a=Ht(a,[2,2],[2,2],"same"),a=$a(a,r.conv1),a=Ht(a,[2,2],[2,2],"same"),a=$a(a,r.conv2),a=Ht(a,[2,2],[2,2],"same"),a=$a(a,r.conv3),a=Ht(a,[2,2],[2,2],"same"),a=$a(a,r.conv4),a=Ht(a,[2,2],[2,2],"same"),a=$a(a,r.conv5),a=Ht(a,[2,2],[1,1],"same"),a=r.conv6?$a(a,r.conv6):a,a=r.conv7?$a(a,r.conv7):a,$d(a,r.conv8,"valid",!1)}forwardInput(n,r){let{params:a}=this;if(!a)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let s=oe(n.toBatchTensor(r,!1),"float32");return s=this.config.meanRgb?eh(s,this.config.meanRgb):s,s=s.div(255),this.config.withSeparableConvs?this.runMobilenet(s,a):this.runTinyYolov2(s,a)})}async forward(n,r){return this.forwardInput(await bn(n),r)}async detect(n,r={}){let{inputSize:a,scoreThreshold:s}=new D0(r),i=await bn(n),o=await this.forwardInput(i,a),l=W(()=>Nt(o)[0].expandDims()),u={width:i.getInputWidth(0),height:i.getInputHeight(0)},d=await this.extractBoxes(l,i.getReshapedInputDimensions(0),s);o.dispose(),l.dispose();let h=d.map(f=>f.box),p=d.map(f=>f.score),c=d.map(f=>f.classScore),m=d.map(f=>this.config.classes[f.label]);return $fe(h.map(f=>f.rescale(a)),p,this.config.iouThreshold,!0).map(f=>new bF(p[f],c[f],m[f],h[f],u))}getDefaultModelName(){return""}extractParamsFromWeightMap(n){return jge(n,this.config)}extractParams(n){let r=this.config.filterSizes||QF.DEFAULT_FILTER_SIZES,a=r?r.length:void 0;if(a!==7&&a!==8&&a!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${a} filterSizes in config`);return Gge(n,this.config,this.boxEncodingSize,r)}async extractBoxes(n,r,a){let{width:s,height:i}=r,o=Math.max(s,i),l=o/s,u=o/i,d=n.shape[1],h=this.config.anchors.length,[p,c,m]=W(()=>{let b=n.reshape([d,d,h,this.boxEncodingSize]),x=b.slice([0,0,0,0],[d,d,h,4]),v=b.slice([0,0,0,4],[d,d,h,1]),I=this.withClassScores?cs(b.slice([0,0,0,5],[d,d,h,this.config.classes.length]),3):ve(0);return[x,v,I]}),f=[],g=await c.array(),y=await p.array();for(let b=0;b<d;b++)for(let x=0;x<d;x++)for(let v=0;v<h;v++){let I=tb(g[b][x][v][0]);if(!a||I>a){let N=(x+tb(y[b][x][v][0]))/d*l,_=(b+tb(y[b][x][v][1]))/d*u,E=Math.exp(y[b][x][v][2])*this.config.anchors[v].x/d*l,A=Math.exp(y[b][x][v][3])*this.config.anchors[v].y/d*u,D=N-E/2,F=_-A/2,S={row:b,col:x,anchor:v},{classScore:M,label:z}=this.withClassScores?await this.extractPredictedClass(m,S):{classScore:1,label:0};f.push(On({box:new yF(D,F,D+E,F+A),score:I,classScore:I*M,label:z},S))}}return p.dispose(),c.dispose(),m.dispose(),f}async extractPredictedClass(n,r){let{row:a,col:s,anchor:i}=r,o=await n.array();return Array(this.config.classes.length).fill(0).map((l,u)=>o[a][s][i][u]).map((l,u)=>({classScore:l,label:u})).reduce((l,u)=>l.classScore>u.classScore?l:u)}};return e.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024],e})(),eD=qge,Kge=class extends eD{constructor(e=!0){let t=On({withSeparableConvs:e,iouThreshold:Oge,classes:["face"]},e?{anchors:Pge,meanRgb:zge}:{anchors:Lge,withClassScores:!0});super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new yr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?Wge:Bge}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var R0=class extends D0{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},th=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function ef(e,t,n,r,a=({alignedRect:s})=>s){let s=e.map(l=>E0(l)?a(l):l.detection),i=r||(t instanceof De?await S0(t,s):await I0(t,s)),o=await n(i);return i.forEach(l=>l instanceof De&&l.dispose()),o}async function M0(e,t,n,r,a){return ef([e],t,async s=>n(s[0]),r,a)}var Xge=.4,Zge=[new st(1.603231,2.094468),new st(6.041143,7.080126),new st(2.882459,3.518061),new st(4.266906,5.178857),new st(9.041765,10.66308)],Jge=[117.001,114.697,97.404],Yge=class extends eD{constructor(){let e={withSeparableConvs:!0,iouThreshold:Xge,classes:["face"],anchors:Zge,meanRgb:Jge,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new yr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},an={ssdMobilenetv1:new Mge,tinyFaceDetector:new Yge,tinyYolov2:new Kge,faceLandmark68Net:new uge,faceLandmark68TinyNet:new cge,faceRecognitionNet:new vge,faceExpressionNet:new Kfe,ageGenderNet:new lge};var tD=class extends th{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},O0=class extends tD{async run(){let e=await this.parentTask,t=await ef(e,this.input,async n=>Promise.all(n.map(r=>an.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return e.map((n,r)=>UF(n,t[r]))}withAgeAndGender(){return new B0(this,this.input)}},L0=class extends tD{async run(){let e=await this.parentTask;if(!e)return;let t=await M0(e,this.input,n=>an.faceExpressionNet.predictExpressions(n),this.extractedFaces);return UF(e,t)}withAgeAndGender(){return new W0(this,this.input)}},P0=class extends O0{withAgeAndGender(){return new V0(this,this.input)}withFaceDescriptors(){return new G0(this,this.input)}},z0=class extends L0{withAgeAndGender(){return new U0(this,this.input)}withFaceDescriptor(){return new H0(this,this.input)}},nD=class extends th{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},B0=class extends nD{async run(){let e=await this.parentTask,t=await ef(e,this.input,async n=>Promise.all(n.map(r=>an.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return JF(YF(n,s,i),a)})}withFaceExpressions(){return new O0(this,this.input)}},W0=class extends nD{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await M0(e,this.input,a=>an.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return JF(YF(e,n,r),t)}withFaceExpressions(){return new L0(this,this.input)}},V0=class extends B0{withFaceExpressions(){return new P0(this,this.input)}withFaceDescriptors(){return new G0(this,this.input)}},U0=class extends W0{withFaceExpressions(){return new z0(this,this.input)}withFaceDescriptor(){return new H0(this,this.input)}},rD=class extends th{constructor(e,t){super(),this.parentTask=e,this.input=t}},G0=class extends rD{async run(){let e=await this.parentTask;return(await ef(e,this.input,t=>Promise.all(t.map(n=>an.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>ZF(e[n],t))}withFaceExpressions(){return new P0(this,this.input)}withAgeAndGender(){return new V0(this,this.input)}},H0=class extends rD{async run(){let e=await this.parentTask;if(!e)return;let t=await M0(e,this.input,n=>an.faceRecognitionNet.computeFaceDescriptor(n),null,n=>n.landmarks.align(null,{useDlibAlignment:!0}));return ZF(e,t)}withFaceExpressions(){return new z0(this,this.input)}withAgeAndGender(){return new U0(this,this.input)}},aD=class extends th{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?an.faceLandmark68TinyNet:an.faceLandmark68Net}},Qge=class extends aD{async run(){let e=await this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof De?await S0(this.input,t):await I0(this.input,t),r=await Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof De&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>$0(a,r[s]))}withFaceExpressions(){return new P0(this,this.input)}withAgeAndGender(){return new V0(this,this.input)}withFaceDescriptors(){return new G0(this,this.input)}},eye=class extends aD{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof De?await S0(this.input,[t]):await I0(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(a=>a instanceof De&&a.dispose()),$0(e,r)}withFaceExpressions(){return new z0(this,this.input)}withAgeAndGender(){return new U0(this,this.input)}withFaceDescriptor(){return new H0(this,this.input)}},sD=class extends th{constructor(e,t=new Qm){super(),this.input=e,this.options=t}},tye=class extends sD{async run(){let{input:e,options:t}=this,n;if(t instanceof R0)n=an.tinyFaceDetector.locateFaces(e,t);else if(t instanceof Qm)n=an.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof D0)n=an.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>Rc({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Qge(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new O0(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new B0(this.runAndExtendWithFaceDetections(),this.input)}},nye=class extends sD{async run(){let e=await new tye(this.input,this.options),t=e[0];return e.forEach(n=>{n.score>t.score&&(t=n)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?Rc({},t):void 0)})}withFaceLandmarks(e=!1){return new eye(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new L0(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new W0(this.runAndExtendWithFaceDetection(),this.input)}};function iD(e,t=new Qm){return new nye(e,t)}function j0(e,t){let{width:n,height:r}=new Gs(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>j0(a,{width:n,height:r}));if(E0(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return $0(Rc(e,a),s)}return Zd(e)?Rc(e,e.detection.forSize(n,r)):e instanceof Xd||e instanceof yr?e.forSize(n,r):e}var rye=["determinateSpinner"];function aye(e,t){if(e&1&&(My(),Or(0,"svg",11),el(1,"circle",12),Lr()),e&2){let n=I1();Yo("viewBox",n._viewBox()),wr(),Cs("stroke-dasharray",n._strokeCircumference(),"px")("stroke-dashoffset",n._strokeCircumference()/2,"px")("stroke-width",n._circleStrokeWidth(),"%"),Yo("r",n._circleRadius())}}var sye=new u1("mat-progress-spinner-default-options",{providedIn:"root",factory:iye});function iye(){return{diameter:oD}}var oD=100,oye=10,lD=(()=>{class e{_elementRef=Jo(f1);_noopAnimations;get color(){return this._color||this._defaultColor}set color(n){this._color=n}_color;_defaultColor="primary";_determinateCircle;constructor(){let n=Jo(g1,{optional:!0}),r=Jo(sye);this._noopAnimations=n==="NoopAnimations"&&!!r&&!r._forceAnimations,this.mode=this._elementRef.nativeElement.nodeName.toLowerCase()==="mat-spinner"?"indeterminate":"determinate",r&&(r.color&&(this.color=this._defaultColor=r.color),r.diameter&&(this.diameter=r.diameter),r.strokeWidth&&(this.strokeWidth=r.strokeWidth))}mode;get value(){return this.mode==="determinate"?this._value:0}set value(n){this._value=Math.max(0,Math.min(100,n||0))}_value=0;get diameter(){return this._diameter}set diameter(n){this._diameter=n||0}_diameter=oD;get strokeWidth(){return this._strokeWidth??this.diameter/10}set strokeWidth(n){this._strokeWidth=n||0}_strokeWidth;_circleRadius(){return(this.diameter-oye)/2}_viewBox(){let n=this._circleRadius()*2+this.strokeWidth;return`0 0 ${n} ${n}`}_strokeCircumference(){return 2*Math.PI*this._circleRadius()}_strokeDashOffset(){return this.mode==="determinate"?this._strokeCircumference()*(100-this._value)/100:null}_circleStrokeWidth(){return this.strokeWidth/this.diameter*100}static \u0275fac=function(r){return new(r||e)};static \u0275cmp=$h({type:e,selectors:[["mat-progress-spinner"],["mat-spinner"]],viewQuery:function(r,a){if(r&1&&S1(rye,5),r&2){let s;N1(s=T1())&&(a._determinateCircle=s.first)}},hostAttrs:["role","progressbar","tabindex","-1",1,"mat-mdc-progress-spinner","mdc-circular-progress"],hostVars:18,hostBindings:function(r,a){r&2&&(Yo("aria-valuemin",0)("aria-valuemax",100)("aria-valuenow",a.mode==="determinate"?a.value:null)("mode",a.mode),x1("mat-"+a.color),Cs("width",a.diameter,"px")("height",a.diameter,"px")("--mdc-circular-progress-size",a.diameter+"px")("--mdc-circular-progress-active-indicator-width",a.diameter+"px"),b1("_mat-animation-noopable",a._noopAnimations)("mdc-circular-progress--indeterminate",a.mode==="indeterminate"))},inputs:{color:"color",mode:"mode",value:[2,"value","value",Dh],diameter:[2,"diameter","diameter",Dh],strokeWidth:[2,"strokeWidth","strokeWidth",Dh]},exportAs:["matProgressSpinner"],features:[y1],decls:14,vars:11,consts:[["circle",""],["determinateSpinner",""],["aria-hidden","true",1,"mdc-circular-progress__determinate-container"],["xmlns","http://www.w3.org/2000/svg","focusable","false",1,"mdc-circular-progress__determinate-circle-graphic"],["cx","50%","cy","50%",1,"mdc-circular-progress__determinate-circle"],["aria-hidden","true",1,"mdc-circular-progress__indeterminate-container"],[1,"mdc-circular-progress__spinner-layer"],[1,"mdc-circular-progress__circle-clipper","mdc-circular-progress__circle-left"],[3,"ngTemplateOutlet"],[1,"mdc-circular-progress__gap-patch"],[1,"mdc-circular-progress__circle-clipper","mdc-circular-progress__circle-right"],["xmlns","http://www.w3.org/2000/svg","focusable","false",1,"mdc-circular-progress__indeterminate-circle-graphic"],["cx","50%","cy","50%"]],template:function(r,a){if(r&1&&(Ah(0,aye,2,8,"ng-template",null,0,E1),Or(2,"div",2,1),My(),Or(4,"svg",3),el(5,"circle",4),Lr()(),c1(),Or(6,"div",5)(7,"div",6)(8,"div",7),Fh(9,8),Lr(),Or(10,"div",9),Fh(11,8),Lr(),Or(12,"div",10),Fh(13,8),Lr()()()),r&2){let s=C1(1);wr(4),Yo("viewBox",a._viewBox()),wr(),Cs("stroke-dasharray",a._strokeCircumference(),"px")("stroke-dashoffset",a._strokeDashOffset(),"px")("stroke-width",a._circleStrokeWidth(),"%"),Yo("r",a._circleRadius()),wr(4),Qo("ngTemplateOutlet",s),wr(2),Qo("ngTemplateOutlet",s),wr(2),Qo("ngTemplateOutlet",s)}},dependencies:[$1],styles:[".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}"],encapsulation:2,changeDetection:0})}return e})();var lye=["video"],uye=["canvas"];function dye(e,t){e&1&&(Or(0,"div",2),el(1,"mat-spinner"),Lr())}var Vo="/assets/weights/";(document.location.hostname.includes("github.io")||window.matchMedia("(display-mode: standalone)").matches)&&(Vo="/try-not-to-laugh"+Vo);var Nke=(()=>{class e{constructor(){this.video=Ly("video"),this.canvas=Ly("canvas"),this.drawDetection=_s(!1),this.width=_s(0),this.height=_s(0),this.missingLimit=_s(10),this.enableFaceAndGender=_s(!1),this.enableLandmarks=_s(!1),this.detectionReady=dd(),this.detectionChanges=dd(),this.firstDetection=dd(),this.detectionFace=dd(),this.loading=Oy(!1),this.faceDetected=!1,this.faceMissingDetection=0,this.firstDetectionHappen=!1,this.faceDetectionReady=!1,this.tinyFaceDetectorOptions=new R0}ngOnDestroy(){cancelAnimationFrame(this.timer),this.stream&&this.stream.getTracks().forEach(n=>n.stop())}ngAfterViewInit(){this.run()}async run(){this.loading.set(!0);let n=[an.tinyFaceDetector.loadFromUri(Vo),an.faceRecognitionNet.loadFromUri(Vo),an.faceExpressionNet.loadFromUri(Vo)];this.enableFaceAndGender()&&n.push(an.ageGenderNet.loadFromUri(Vo)),this.enableLandmarks()&&n.push(an.faceLandmark68Net.loadFromUri(Vo)),this.stream=await navigator.mediaDevices.getUserMedia({video:{}}),this.video().nativeElement.srcObject=this.stream,await Promise.all(n),this.loading.set(!1)}async onPlay(){let n=this.video().nativeElement;if(n.paused||n.ended||!an.tinyFaceDetector.params||this.loading()){cancelAnimationFrame(this.timer),this.timer=requestAnimationFrame(()=>this.onPlay());return}this.faceDetectionReady||(this.faceDetectionReady=!0,this.detectionReady.emit(this.faceDetectionReady));let r=this.enableLandmarks(),a=iD(n,this.tinyFaceDetectorOptions);r&&(a=a.withFaceLandmarks());let s=this.enableFaceAndGender(),i=a.withFaceExpressions();s&&(i=i.withAgeAndGender());let o=await i;if(o?(this.firstDetectionHappen||(this.firstDetectionHappen=!0,this.firstDetection.emit(!0)),this.faceMissingDetection=0):this.firstDetectionHappen&&this.faceMissingDetection++,this.drawDetection()){let u=this.canvas().nativeElement;if(o){u.style.display="block";let d=n.getBoundingClientRect(),h=RF(u,d,!0),p;try{if(h&&h.height>0&&h.width>0)p=j0(o,h);else return}catch{return}if(ed.drawDetections(u,p),ed.drawFaceExpressions(u,p,.05),r&&ed.drawFaceLandmarks(u,p),s){let{age:c,gender:m,genderProbability:f}=p;new ed.DrawTextField([`${Math.round(c)} years`,`${m} (${Math.round(f*100)} %)`],o.detection.box.bottomLeft).draw(u)}}else u.style.display="none"}this.detectionChanges.emit(o?.expressions);let l=this.faceMissingDetection<this.missingLimit();this.firstDetectionHappen||(l=!1),this.faceDetected!==l&&(this.faceDetected=l,this.detectionFace.emit(this.faceDetected)),cancelAnimationFrame(this.timer),this.timer=requestAnimationFrame(()=>this.onPlay())}pauseVideo(){this.video().nativeElement.pause()}playVideo(){this.video().nativeElement.play()}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275cmp=$h({type:e,selectors:[["app-camera-detection"]],viewQuery:function(r,a){r&1&&(Py(a.video,lye,5),Py(a.canvas,uye,5)),r&2&&_1(2)},inputs:{drawDetection:[1,"drawDetection"],width:[1,"width"],height:[1,"height"],missingLimit:[1,"missingLimit"],enableFaceAndGender:[1,"enableFaceAndGender"],enableLandmarks:[1,"enableLandmarks"]},outputs:{detectionReady:"detectionReady",detectionChanges:"detectionChanges",firstDetection:"firstDetection",detectionFace:"detectionFace"},decls:6,vars:9,consts:[["video",""],["canvas",""],[1,"spinner"],[1,"video-container"],["autoplay","","muted","","playsinline","",3,"loadedmetadata","height","width"]],template:function(r,a){if(r&1){let s=w1();Ah(0,dye,2,0,"div",2),Or(1,"div",3)(2,"video",4,0),k1("loadedmetadata",function(){return p1(s),h1(a.onPlay())}),Lr(),el(4,"canvas",null,1),Lr()}r&2&&(v1(a.loading()?0:-1),wr(),Cs("display",a.loading()?"none":"flex"),wr(),Qo("height",a.height())("width",a.width()),wr(2),Cs("width",a.width(),"px")("height",a.height(),"px"))},dependencies:[lD],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%}.spinner[_ngcontent-%COMP%]{display:flex;flex:1 1 auto;align-items:center;justify-content:center}.video-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1 1 auto;position:relative}.video-container[_ngcontent-%COMP%]   video[_ngcontent-%COMP%], .video-container[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0}"],changeDetection:0})}}return e})();export{VD as a,$ye as b,Nke as c};
