import{y as $1}from"./chunk-ZPC37ZTG.js";import{$a as f1,Bb as I1,Cb as S1,Db as N1,Eb as Py,Fb as T1,Gb as _1,Pa as kr,Pb as C1,S as i1,T as o1,V as l1,Va as m1,Vb as Dh,Wa as Ly,Y as Eh,_a as $h,da as u1,dc as E1,ea as d1,eb as g1,fa as Oy,fb as Ah,g as s1,ga as p1,kb as Jo,lb as Yo,mb as Es,nb as y1,ob as b1,pb as x1,qa as ud,qb as Lr,ra as Ea,rb as Pr,sa as h1,sb as Qo,tb as Fh,ub as v1,wb as w1,xb as k1,ya as c1}from"./chunk-NNENXLG6.js";import{a as tr,b as _s,c as Cs,g as D}from"./chunk-TSRGIXR5.js";var cye=(()=>{class e{constructor(){this.viewPortSubject=new s1(!1),this.viewPortChanges=this.viewPortSubject.asObservable(),window.addEventListener("resize",()=>this.viewPortSubject.next(!0)),window.addEventListener("orientationchange",()=>this.viewPortSubject.next(!0))}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275prov=i1({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();var VD=Object.defineProperty,UD=(e=>typeof Cs<"u"?Cs:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof Cs<"u"?Cs:t)[n]}):e)(function(e){if(typeof Cs<"u")return Cs.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),px=(e,t)=>{for(var n in t)VD(e,n,{get:t[n],enumerable:!0})},GD={};px(GD,{Abs:()=>Fl,Acos:()=>hi,Acosh:()=>ci,AdadeltaOptimizer:()=>Fv,AdagradOptimizer:()=>Dv,AdamOptimizer:()=>Rv,AdamaxOptimizer:()=>Mv,Add:()=>os,AddN:()=>mi,All:()=>Dl,Any:()=>Rl,ArgMax:()=>Ml,ArgMin:()=>Ol,Asin:()=>fi,Asinh:()=>gi,Atan:()=>yi,Atan2:()=>xi,Atanh:()=>bi,AvgPool:()=>vi,AvgPool3D:()=>Ll,AvgPool3DGrad:()=>Qd,AvgPoolGrad:()=>Yd,BackendWasm:()=>pF,BatchMatMul:()=>wi,BatchToSpaceND:()=>Pl,Bincount:()=>zl,BitwiseAnd:()=>Bl,BroadcastArgs:()=>ep,BroadcastTo:()=>DI,Callback:()=>u_,CallbackList:()=>_2,Cast:()=>ki,Ceil:()=>Ii,ClipByValue:()=>ls,Complex:()=>Wc,ComplexAbs:()=>tp,Concat:()=>Wl,Conv2D:()=>Si,Conv2DBackpropFilter:()=>Vc,Conv2DBackpropInput:()=>Ni,Conv3D:()=>Ti,Conv3DBackpropFilterV2:()=>Vl,Conv3DBackpropInputV2:()=>Ul,Cos:()=>_i,Cosh:()=>Ci,CropAndResize:()=>Hl,Cumprod:()=>Gl,Cumsum:()=>Ei,CustomCallback:()=>E2,DataStorage:()=>Pc,DenseBincount:()=>np,DepthToSpace:()=>jl,DepthwiseConv2dNative:()=>$i,DepthwiseConv2dNativeBackpropFilter:()=>Uc,DepthwiseConv2dNativeBackpropInput:()=>Gc,Diag:()=>rp,Dilation2D:()=>Ai,Dilation2DBackpropFilter:()=>cl,Dilation2DBackpropInput:()=>hl,Draw:()=>Hc,ENV:()=>gx,EarlyStopping:()=>d_,Einsum:()=>jc,Elu:()=>Di,EluGrad:()=>ql,Environment:()=>AI,Equal:()=>Kl,Erf:()=>Ri,Exp:()=>Mi,ExpandDims:()=>Xl,Expm1:()=>Oi,FFT:()=>qc,Fill:()=>ap,FlipLeftRight:()=>Zl,Floor:()=>Li,FloorDiv:()=>Pi,FromPixels:()=>uc,FusedBatchNorm:()=>zi,FusedConv2D:()=>Ks,FusedDepthwiseConv2D:()=>Xs,GPGPUContext:()=>ac,GatherNd:()=>Yl,GatherV2:()=>Jl,GraphModel:()=>Fw,Greater:()=>Ql,GreaterEqual:()=>Bi,History:()=>C2,IFFT:()=>Kc,Identity:()=>Wi,Imag:()=>Xc,InputSpec:()=>Ft,IsFinite:()=>Vi,IsInf:()=>Ui,IsNan:()=>Gi,KernelBackend:()=>Zd,LRN:()=>Ki,LRNGrad:()=>iu,LayerVariable:()=>g2,LayersModel:()=>ma,LeakyRelu:()=>Hi,Less:()=>eu,LessEqual:()=>tu,LinSpace:()=>nu,Log:()=>ji,Log1p:()=>qi,LogSoftmax:()=>MI,LogicalAnd:()=>ru,LogicalNot:()=>au,LogicalOr:()=>su,LogicalXor:()=>RI,LowerBound:()=>MR,MathBackendCPU:()=>Mw,MathBackendWebGL:()=>r$,MatrixBandPart:()=>OR,Max:()=>Xi,MaxPool:()=>Ji,MaxPool3D:()=>ou,MaxPool3DGrad:()=>ip,MaxPoolGrad:()=>sp,MaxPoolWithArgmax:()=>op,Maximum:()=>Zi,Mean:()=>Yi,Min:()=>Qi,Minimum:()=>eo,MirrorPad:()=>to,Mod:()=>no,MomentumOptimizer:()=>Ov,Multinomial:()=>lu,Multiply:()=>ro,Neg:()=>uu,NonMaxSuppressionV3:()=>pu,NonMaxSuppressionV4:()=>hu,NonMaxSuppressionV5:()=>cu,NotEqual:()=>du,OP_SCOPE_SUFFIX:()=>wx,OneHot:()=>ao,OnesLike:()=>mu,Optimizer:()=>Ia,OptimizerConstructors:()=>UN,Pack:()=>fu,PadV2:()=>so,Pool:()=>LR,Pow:()=>io,Prelu:()=>oo,Prod:()=>lo,RMSPropOptimizer:()=>Lv,RNN:()=>gs,RaggedGather:()=>Zc,RaggedRange:()=>Jc,RaggedTensorToTensor:()=>Yc,Range:()=>lp,Rank:()=>ib,Real:()=>Qc,RealDiv:()=>Fi,Reciprocal:()=>uo,Reduction:()=>mn,Relu:()=>po,Relu6:()=>mo,Reshape:()=>gu,ResizeBilinear:()=>co,ResizeBilinearGrad:()=>bu,ResizeNearestNeighbor:()=>ho,ResizeNearestNeighborGrad:()=>yu,Reverse:()=>fo,RotateWithOffset:()=>Du,Round:()=>go,Rsqrt:()=>yo,SGDOptimizer:()=>Mm,ScatterNd:()=>xu,SearchSorted:()=>wu,Select:()=>ku,Selu:()=>bo,Sequential:()=>lw,Sigmoid:()=>ko,Sign:()=>wo,Sin:()=>xo,Sinh:()=>vo,Slice:()=>Iu,Softmax:()=>To,Softplus:()=>Io,SpaceToBatchND:()=>Su,SparseFillEmptyRows:()=>up,SparseReshape:()=>Tu,SparseSegmentMean:()=>dp,SparseSegmentSum:()=>pp,SparseToDense:()=>_u,SplitV:()=>Nu,Sqrt:()=>So,Square:()=>hp,SquaredDifference:()=>_o,StaticRegexReplace:()=>cp,Step:()=>ds,StridedSlice:()=>Cu,StringNGrams:()=>mp,StringSplit:()=>fp,StringToHashBucketFast:()=>gp,Sub:()=>Co,Sum:()=>No,SymbolicTensor:()=>Fr,Tan:()=>Eo,Tanh:()=>$o,Tensor:()=>Re,TensorBuffer:()=>Dt,TensorScatterUpdate:()=>vu,Tile:()=>us,TopK:()=>Eu,Transform:()=>$u,Transpose:()=>ca,Unique:()=>yp,Unpack:()=>Au,UnsortedSegmentSum:()=>bp,UpperBound:()=>PR,Variable:()=>Zs,ZerosLike:()=>Fu,_FusedMatMul:()=>qs,abs:()=>At,acos:()=>_x,acosh:()=>Cx,add:()=>J,addN:()=>lS,all:()=>am,any:()=>Md,argMax:()=>Ys,argMin:()=>Ex,asin:()=>$x,asinh:()=>Ax,atan:()=>Fx,atan2:()=>Dx,atanh:()=>Rx,avgPool:()=>va,avgPool3d:()=>Ox,backend:()=>Ix,backend_util:()=>T,basicLSTMCell:()=>hS,batchNorm:()=>Ao,batchNorm2d:()=>Lx,batchNorm3d:()=>Px,batchNorm4d:()=>zx,batchToSpaceND:()=>Np,bincount:()=>Bx,bitwiseAnd:()=>cS,booleanMaskAsync:()=>nN,broadcastArgs:()=>mS,broadcastTo:()=>Vs,broadcast_util:()=>Ru,browser:()=>Pp,buffer:()=>Le,callbacks:()=>Qj,cast:()=>le,ceil:()=>Wx,clipByValue:()=>un,clone:()=>Kr,complex:()=>ga,concat:()=>lt,concat1d:()=>Vx,concat2d:()=>Ux,concat3d:()=>Gx,concat4d:()=>Hx,constraints:()=>v2,conv1d:()=>sm,conv2d:()=>yn,conv2dTranspose:()=>im,conv3d:()=>qx,conv3dTranspose:()=>Kx,copyRegisteredKernels:()=>VR,cos:()=>Tp,cosh:()=>om,cosineWindow:()=>$m,cumprod:()=>Pd,cumsum:()=>lm,customGrad:()=>Qr,data:()=>R_,denseBincount:()=>cc,deprecationWarn:()=>kx,depthToSpace:()=>Xx,depthwiseConv2d:()=>Fo,deregisterOp:()=>nq,device_util:()=>kp,diag:()=>gS,dilation2d:()=>Zx,disableDeprecationWarnings:()=>vM,dispose:()=>Ce,disposeVariables:()=>wM,div:()=>me,divNoNan:()=>Jx,dot:()=>Yx,dropout:()=>_v,einsum:()=>Os,elu:()=>Mu,enableDebugMode:()=>xM,enableProdMode:()=>bM,enclosingPowerOfTwo:()=>Cv,engine:()=>mr,ensureShape:()=>bS,env:()=>H,equal:()=>Gn,erf:()=>um,euclideanNorm:()=>tv,exp:()=>dn,expandDims:()=>Xt,expm1:()=>nv,eye:()=>dm,fft:()=>Op,fill:()=>Un,findBackend:()=>_M,findBackendFactory:()=>CM,floor:()=>Lu,floorDiv:()=>rm,forceHalfFloat:()=>s$,fused:()=>Il,gather:()=>Pu,gatherND:()=>iN,gather_util:()=>Bv,getBackend:()=>XI,getGradient:()=>ab,getKernel:()=>Fd,getKernelsForBackend:()=>dc,getThreadsCount:()=>gfe,gpgpu_util:()=>ME,grad:()=>iL,grads:()=>oL,greater:()=>kn,greaterEqual:()=>wa,ifft:()=>kl,imag:()=>_p,image:()=>nr,inTopKAsync:()=>oN,initializers:()=>S2,input:()=>U2,io:()=>an,irfft:()=>Im,isFinite:()=>rv,isInf:()=>av,isNaN:()=>sv,keep:()=>Pt,kernel_impls:()=>ra,layers:()=>N2,leakyRelu:()=>Cp,less:()=>bl,lessEqual:()=>hs,linalg:()=>Av,linspace:()=>IS,loadGraphModel:()=>l5,loadGraphModelSync:()=>u5,loadLayersModel:()=>AH,localResponseNormalization:()=>iv,log:()=>Hn,log1p:()=>Ep,logSigmoid:()=>ov,logSoftmax:()=>hm,logSumExp:()=>$p,logicalAnd:()=>yr,logicalNot:()=>Ap,logicalOr:()=>cm,logicalXor:()=>lv,losses:()=>xN,lowerBound:()=>NS,matMul:()=>Me,math:()=>$N,max:()=>ir,maxPool:()=>jt,maxPool3d:()=>uv,maxPoolWithArgmax:()=>TS,maximum:()=>na,mean:()=>kt,memory:()=>hc,meshgrid:()=>_S,metrics:()=>i_,min:()=>yl,minimum:()=>Ja,mirrorPad:()=>dv,mod:()=>pv,model:()=>RH,models:()=>o_,moments:()=>Fp,movingAverage:()=>rN,mul:()=>z,multiRNNCell:()=>CS,multinomial:()=>ES,neg:()=>ft,nextFrame:()=>Wv,norm:()=>Ou,notEqual:()=>ti,oneHot:()=>xl,ones:()=>En,onesLike:()=>jn,op:()=>P,outerProduct:()=>$S,pad:()=>Rr,pad1d:()=>AS,pad2d:()=>FS,pad3d:()=>DS,pad4d:()=>RS,pool:()=>hv,pow:()=>Yr,prelu:()=>Rp,print:()=>Tx,prod:()=>cv,profile:()=>kM,raggedGather:()=>MS,raggedRange:()=>OS,raggedTensorToTensor:()=>LS,rand:()=>PS,randomGamma:()=>VS,randomNormal:()=>fm,randomStandardNormal:()=>US,randomUniform:()=>cs,randomUniformInt:()=>GS,range:()=>ni,ready:()=>NM,real:()=>vl,reciprocal:()=>bv,registerBackend:()=>nm,registerCallbackConstructor:()=>OH,registerGradient:()=>OI,registerKernel:()=>xp,registerOp:()=>tq,regularizers:()=>l_,relu:()=>nt,relu6:()=>gm,removeBackend:()=>TM,reshape:()=>W,reverse:()=>ur,reverse1d:()=>HS,reverse2d:()=>jS,reverse3d:()=>qS,reverse4d:()=>KS,rfft:()=>Lp,round:()=>ym,rsqrt:()=>bm,scalar:()=>we,scatterND:()=>aN,scatter_util:()=>Tm,searchSorted:()=>mm,selu:()=>xm,separableConv2d:()=>zu,sequential:()=>MH,serialization:()=>re,setBackend:()=>SM,setPlatform:()=>EM,setThreadsCount:()=>ffe,setWasmPath:()=>cfe,setWasmPaths:()=>mfe,setWebGLContext:()=>sE,setdiff1dAsync:()=>XS,shared:()=>Ow,sigmoid:()=>gr,sign:()=>xv,signal:()=>bN,sin:()=>vm,sinh:()=>wm,slice:()=>Ge,slice1d:()=>Mp,slice2d:()=>km,slice3d:()=>Bu,slice4d:()=>wl,slice_util:()=>Bt,softmax:()=>ms,softplus:()=>Do,spaceToBatchND:()=>Dp,sparse:()=>vN,sparseToDense:()=>sN,spectral:()=>yN,split:()=>$n,sqrt:()=>Yt,square:()=>ot,squaredDifference:()=>Sm,squeeze:()=>fs,stack:()=>Rt,step:()=>Ro,stridedSlice:()=>vv,string:()=>wN,sub:()=>ce,sum:()=>ge,sumOutType:()=>tm,tan:()=>wv,tanh:()=>Za,tensor:()=>gn,tensor1d:()=>et,tensor2d:()=>Xr,tensor3d:()=>Nm,tensor4d:()=>Ya,tensor5d:()=>ZS,tensor6d:()=>JS,tensorScatterUpdate:()=>QS,tensor_util:()=>_r,test_util:()=>zS,tidy:()=>V,tile:()=>Vn,time:()=>IM,topk:()=>Iv,train:()=>Ds,transpose:()=>Oe,truncatedNormal:()=>Cm,unique:()=>Sv,unregisterGradient:()=>WR,unregisterKernel:()=>BR,unsortedSegmentSum:()=>Em,unstack:()=>Tt,upcastType:()=>or,upperBound:()=>eN,util:()=>w,valueAndGrad:()=>lL,valueAndGrads:()=>uL,variable:()=>Nv,variableGrads:()=>SS,version:()=>Ife,version_converter:()=>p5,version_core:()=>DW,version_cpu:()=>h8,version_layers:()=>ow,version_wasm:()=>yfe,version_webgl:()=>tee,webgl:()=>nee,webgl_util:()=>aE,where:()=>Jt,whereAsync:()=>Tv,zeros:()=>It,zerosLike:()=>He});var HD=Object.create,hx=Object.defineProperty,jD=Object.getOwnPropertyDescriptor,qD=Object.getOwnPropertyNames,KD=Object.getPrototypeOf,XD=Object.prototype.hasOwnProperty,Ot=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ee=(e,t)=>{for(var n in t)hx(e,n,{get:t[n],enumerable:!0})},ZD=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of qD(t))!XD.call(e,a)&&a!==n&&hx(e,a,{get:()=>t[a],enumerable:!(r=jD(t,a))||r.enumerable});return e},is=(e,t,n)=>(n=e!=null?HD(KD(e)):{},ZD(t||!e||!e.__esModule?hx(n,"default",{value:e,enumerable:!0}):n,e)),JD=Ot((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,O,B){this.low=S|0,this.high=O|0,this.unsigned=!!B}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,O){var B,G,j;return O?(S>>>=0,(j=0<=S&&S<256)&&(G=i[S],G)?G:(B=u(S,(S|0)<0?-1:0,!0),j&&(i[S]=B),B)):(S|=0,(j=-128<=S&&S<128)&&(G=s[S],G)?G:(B=u(S,S<0?-1:0,!1),j&&(s[S]=B),B))}r.fromInt=o;function l(S,O){if(isNaN(S))return O?v:x;if(O){if(S<0)return v;if(S>=g)return A}else{if(S<=-y)return R;if(S+1>=y)return E}return S<0?l(-S,O).neg():u(S%f|0,S/f|0,O)}r.fromNumber=l;function u(S,O,B){return new r(S,O,B)}r.fromBits=u;var d=Math.pow;function h(S,O,B){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof O=="number"?(B=O,O=!1):O=!!O,B=B||10,B<2||36<B)throw RangeError("radix");var G;if((G=S.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return h(S.substring(1),O,B).neg();for(var j=l(d(B,8)),K=x,X=0;X<S.length;X+=8){var Y=Math.min(8,S.length-X),ee=parseInt(S.substring(X,X+Y),B);if(Y<8){var te=l(d(B,Y));K=K.mul(te).add(l(ee))}else K=K.mul(j),K=K.add(l(ee))}return K.unsigned=O,K}r.fromString=h;function p(S,O){return typeof S=="number"?l(S,O):typeof S=="string"?h(S,O):u(S.low,S.high,typeof O=="boolean"?O:S.unsigned)}r.fromValue=p;var c=65536,m=1<<24,f=c*c,g=f*f,y=g/2,b=o(m),x=o(0);r.ZERO=x;var v=o(0,!0);r.UZERO=v;var I=o(1);r.ONE=I;var N=o(1,!0);r.UONE=N;var _=o(-1);r.NEG_ONE=_;var E=u(-1,2147483647,!1);r.MAX_VALUE=E;var A=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var R=u(0,-2147483648,!1);r.MIN_VALUE=R;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(R)){var O=l(S),B=this.div(O),G=B.mul(O).sub(this);return B.toString(S)+G.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var j=l(d(S,6),this.unsigned),K=this,X="";;){var Y=K.div(j),ee=K.sub(Y.mul(j)).toInt()>>>0,te=ee.toString(S);if(K=Y,K.isZero())return te+X;for(;te.length<6;)te="0"+te;X=""+te+X}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(R)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,O=31;O>0&&!(S&1<<O);O--);return this.high!=0?O+33:O+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=p(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=p(S)),this.eq(S))return 0;var O=this.isNegative(),B=S.isNegative();return O&&!B?-1:!O&&B?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(R)?R:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=p(S));var O=this.high>>>16,B=this.high&65535,G=this.low>>>16,j=this.low&65535,K=S.high>>>16,X=S.high&65535,Y=S.low>>>16,ee=S.low&65535,te=0,ae=0,ne=0,se=0;return se+=j+ee,ne+=se>>>16,se&=65535,ne+=G+Y,ae+=ne>>>16,ne&=65535,ae+=B+X,te+=ae>>>16,ae&=65535,te+=O+K,te&=65535,u(ne<<16|se,te<<16|ae,this.unsigned)},F.subtract=function(S){return a(S)||(S=p(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=p(S)),n){var O=n.mul(this.low,this.high,S.low,S.high);return u(O,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(R))return S.isOdd()?R:x;if(S.eq(R))return this.isOdd()?R:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var B=this.high>>>16,G=this.high&65535,j=this.low>>>16,K=this.low&65535,X=S.high>>>16,Y=S.high&65535,ee=S.low>>>16,te=S.low&65535,ae=0,ne=0,se=0,ie=0;return ie+=K*te,se+=ie>>>16,ie&=65535,se+=j*te,ne+=se>>>16,se&=65535,se+=K*ee,ne+=se>>>16,se&=65535,ne+=G*te,ae+=ne>>>16,ne&=65535,ne+=j*ee,ae+=ne>>>16,ne&=65535,ne+=K*Y,ae+=ne>>>16,ne&=65535,ae+=B*te+G*ee+j*Y+K*X,ae&=65535,u(se<<16|ie,ae<<16|ne,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=p(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return u(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?v:x;var B,G,j;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return v;if(S.gt(this.shru(1)))return N;j=v}else{if(this.eq(R)){if(S.eq(I)||S.eq(_))return R;if(S.eq(R))return I;var K=this.shr(1);return B=K.div(S).shl(1),B.eq(x)?S.isNegative()?I:_:(G=this.sub(S.mul(B)),j=B.add(G.div(S)),j)}else if(S.eq(R))return this.unsigned?v:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();j=x}for(G=this;G.gte(S);){B=Math.max(1,Math.floor(G.toNumber()/S.toNumber()));for(var X=Math.ceil(Math.log(B)/Math.LN2),Y=X<=48?1:d(2,X-48),ee=l(B),te=ee.mul(S);te.isNegative()||te.gt(G);)B-=Y,ee=l(B,this.unsigned),te=ee.mul(S);ee.isZero()&&(ee=I),j=j.add(ee),G=G.sub(te)}return j},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=p(S)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return u(O,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return u(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=p(S)),u(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=p(S)),u(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=p(S)),u(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):u(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):u(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var O=this.high;if(S<32){var B=this.low;return u(B>>>S|O<<32-S,O>>>S,this.unsigned)}else return S===32?u(O,0,this.unsigned):u(O>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,O=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},r.fromBytes=function(S,O,B){return B?r.fromBytesLE(S,O):r.fromBytesBE(S,O)},r.fromBytesLE=function(S,O){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,O)},r.fromBytesBE=function(S,O){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],O)}}),YD=Ot(()=>{}),QD=Ot(()=>{}),eR=Ot((e,t)=>{(function(n,r,a){function s(u){var d=this,h=l();d.next=function(){var p=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=p-(d.c=p|0)},d.c=1,d.s0=h(" "),d.s1=h(" "),d.s2=h(" "),d.s0-=h(u),d.s0<0&&(d.s0+=1),d.s1-=h(u),d.s1<0&&(d.s1+=1),d.s2-=h(u),d.s2<0&&(d.s2+=1),h=null}function i(u,d){return d.c=u.c,d.s0=u.s0,d.s1=u.s1,d.s2=u.s2,d}function o(u,d){var h=new s(u),p=d&&d.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&i(p,h),c.state=function(){return i(h,{})}),c}function l(){var u=4022871197,d=function(h){h=String(h);for(var p=0;p<h.length;p++){u+=h.charCodeAt(p);var c=.02519603282416938*u;u=c>>>0,c-=u,c*=u,u=c>>>0,c-=u,u+=c*4294967296}return(u>>>0)*23283064365386963e-26};return d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),tR=Ot((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:d+=l;for(var h=0;h<d.length+64;h++)u.x^=d.charCodeAt(h)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),nR=Ot((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:d+=l;for(var h=0;h<d.length+64;h++)u.x^=d.charCodeAt(h)|0,h==d.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),rR=Ot((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.x,p=u.i,c,m,f;return c=h[p],c^=c>>>7,m=c^c<<24,c=h[p+1&7],m^=c^c>>>10,c=h[p+3&7],m^=c^c>>>3,c=h[p+4&7],m^=c^c<<7,c=h[p+7&7],c=c^c<<13,m^=c^c<<9,h[p]=m,u.i=p+1&7,m};function d(h,p){var c,m,f=[];if(p===(p|0))m=f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],h.x=f,h.i=0,c=256;c>0;--c)h.next()}d(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(h.x&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),aR=Ot((e,t)=>{(function(n,r,a){function s(l){var u=this;u.next=function(){var h=u.w,p=u.X,c=u.i,m,f;return u.w=h=h+1640531527|0,f=p[c+34&127],m=p[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=p[c]=f^m,u.i=c,f+(h^h>>>16)|0};function d(h,p){var c,m,f,g,y,b=[],x=128;for(p===(p|0)?(m=p,p=null):(p=p+"\0",m=0,x=Math.max(x,p.length)),f=0,g=-32;g<x;++g)p&&(m^=p.charCodeAt((g+32)%p.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=m+y,f=c==0?f+1:0);for(f>=128&&(b[(p&&p.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],c=b[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,b[f]=m^c;h.w=y,h.X=b,h.i=f}d(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(h.X&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),sR=Ot((e,t)=>{(function(n,r,a){function s(l){var u=this,d="";u.next=function(){var p=u.b,c=u.c,m=u.d,f=u.a;return p=p<<25^p>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-p|0,u.b=p=p<<20^p>>>12^c,u.c=c=c-m|0,u.d=m<<16^c>>>16^f,u.a=f-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):d+=l;for(var h=0;h<d.length+20;h++)u.b^=d.charCodeAt(h)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var d=new s(l),h=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var c=d.next()>>>11,m=(d.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=d.next,p.quick=p,h&&(typeof h=="object"&&i(h,d),p.state=function(){return i(d,{})}),p}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),iR=Ot(()=>{}),oR=Ot((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,l="random",u=a.pow(s,i),d=a.pow(2,o),h=d*2,p=s-1,c;function m(I,N,_){var E=[];N=N==!0?{entropy:!0}:N||{};var A=b(y(N.entropy?[I,v(r)]:I??x(),3),E),R=new f(E),F=function(){for(var S=R.g(i),O=u,B=0;S<d;)S=(S+B)*s,O*=s,B=R.g(1);for(;S>=h;)S/=2,O/=2,B>>>=1;return(S+B)/O};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,b(v(R.S),r),(N.pass||_||function(S,O,B,G){return G&&(G.S&&g(G,R),S.state=function(){return g(R,{})}),B?(a[l]=S,O):S})(F,A,"global"in N?N.global:this==a,N.state)}function f(I){var N,_=I.length,E=this,A=0,R=E.i=E.j=0,F=E.S=[];for(_||(I=[_++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[R=p&R+I[A%_]+(N=F[A])],F[R]=N;(E.g=function(S){for(var O,B=0,G=E.i,j=E.j,K=E.S;S--;)O=K[G=p&G+1],B=B*s+K[p&(K[G]=K[j=p&j+O])+(K[j]=O)];return E.i=G,E.j=j,B})(s)}function g(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function y(I,N){var _=[],E=typeof I,A;if(N&&E=="object")for(A in I)try{_.push(y(I[A],N-1))}catch{}return _.length?_:E=="string"?I:I+"\0"}function b(I,N){for(var _=I+"",E,A=0;A<_.length;)N[p&A]=p&(E^=N[p&A]*19)+_.charCodeAt(A++);return v(N)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),v(I)}catch{var N=n.navigator,_=N&&N.plugins;return[+new Date,n,_,n.screen,v(r)]}}function v(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=m;try{c=iR()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):a["seed"+l]=m})(typeof self<"u"?self:e,[],Math)}),Lc=Ot((e,t)=>{var n=eR(),r=tR(),a=nR(),s=rR(),i=aR(),o=sR(),l=oR();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),xI=Ot(()=>{}),cx=Ot(()=>{}),vI=Ot(()=>{}),lR=Ot(()=>{}),uR=Ot(()=>{}),dR=Ot(()=>{}),pR=Ot((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return de.buffer!=Fe&&st(de.buffer),ct}function i(){return de.buffer!=Fe&&st(de.buffer),Mn}function o(){return de.buffer!=Fe&&st(de.buffer),Et}function l(){return de.buffer!=Fe&&st(de.buffer),tn}function u(){return de.buffer!=Fe&&st(de.buffer),Sn}function d(){return de.buffer!=Fe&&st(de.buffer),Jn}function h(){return de.buffer!=Fe&&st(de.buffer),Nn}var p=typeof a<"u"?a:{},c,m;p.ready=new Promise(function(M,q){c=M,m=q});var f;typeof process<"u"&&process.listeners&&(f={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},p),y=[],b="./this.program",x=(M,q)=>{throw q},v=typeof window=="object",I=typeof importScripts=="function",N=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_=p.ENVIRONMENT_IS_PTHREAD||!1,E="";function A(M){return p.locateFile?p.locateFile(M,E):E+M}var R,F,S,O;function B(M){M instanceof Ns||ee("exiting due to exception: "+M)}if(N){var G=cx(),j=vI();I?E=j.dirname(E)+"/":E=__dirname+"/",R=(q,ue)=>(q=Ho(q)?new URL(q):j.normalize(q),G.readFileSync(q,ue?void 0:"utf8")),S=q=>{var ue=R(q,!0);return ue.buffer||(ue=new Uint8Array(ue)),ue},F=(q,ue,Te)=>{q=Ho(q)?new URL(q):j.normalize(q),G.readFile(q,function(De,Ae){De?Te(De):ue(Ae.buffer)})},process.argv.length>1&&(b=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof Ns))throw q}),process.on("unhandledRejection",function(q){throw q}),x=(q,ue)=>{if(pr())throw process.exitCode=q,ue;B(ue),process.exit(q)},p.inspect=function(){return"[Emscripten Module object]"};let M;try{M=lR()}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}global.Worker=M.Worker}else(v||I)&&(I?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",N||(R=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.send(null),q.responseText},I&&(S=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),F=(M,q,ue)=>{var Te=new XMLHttpRequest;Te.open("GET",M,!0),Te.responseType="arraybuffer",Te.onload=()=>{if(Te.status==200||Te.status==0&&Te.response){q(Te.response);return}ue()},Te.onerror=ue,Te.send(null)}),O=M=>document.title=M);N&&typeof performance>"u"&&(global.performance=uR().performance);var K=console.log.bind(console),X=console.warn.bind(console);N&&(K=M=>G.writeSync(1,M+`
`),X=M=>G.writeSync(2,M+`
`));var Y=p.print||K,ee=p.printErr||X;Object.assign(p,g),g=null,p.arguments&&(y=p.arguments),p.thisProgram&&(b=p.thisProgram),p.quit&&(x=p.quit);var te=4,ae=Atomics.load,ne=Atomics.store,se=Atomics.compareExchange,ie;p.wasmBinary&&(ie=p.wasmBinary);var ve=p.noExitRuntime||!0;typeof WebAssembly!="object"&&Ss("no native wasm support detected");var de,xe,Ie=!1,Ne;function Pe(M,q){M||Ss(q)}var Ve=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function pt(M,q,ue){q>>>=0;for(var Te=q+ue,De=q;M[De]&&!(De>=Te);)++De;if(De-q>16&&M.buffer&&Ve)return Ve.decode(M.buffer instanceof SharedArrayBuffer?M.slice(q,De):M.subarray(q,De));for(var Ae="";q<De;){var fe=M[q++];if(!(fe&128)){Ae+=String.fromCharCode(fe);continue}var ke=M[q++]&63;if((fe&224)==192){Ae+=String.fromCharCode((fe&31)<<6|ke);continue}var wt=M[q++]&63;if((fe&240)==224?fe=(fe&15)<<12|ke<<6|wt:fe=(fe&7)<<18|ke<<12|wt<<6|M[q++]&63,fe<65536)Ae+=String.fromCharCode(fe);else{var Qn=fe-65536;Ae+=String.fromCharCode(55296|Qn>>10,56320|Qn&1023)}}return Ae}function Qe(M,q){return M>>>=0,M?pt(i(),M,q):""}function Je(M,q,ue,Te){if(ue>>>=0,!(Te>0))return 0;for(var De=ue,Ae=ue+Te-1,fe=0;fe<M.length;++fe){var ke=M.charCodeAt(fe);if(ke>=55296&&ke<=57343){var wt=M.charCodeAt(++fe);ke=65536+((ke&1023)<<10)|wt&1023}if(ke<=127){if(ue>=Ae)break;q[ue++>>>0]=ke}else if(ke<=2047){if(ue+1>=Ae)break;q[ue++>>>0]=192|ke>>6,q[ue++>>>0]=128|ke&63}else if(ke<=65535){if(ue+2>=Ae)break;q[ue++>>>0]=224|ke>>12,q[ue++>>>0]=128|ke>>6&63,q[ue++>>>0]=128|ke&63}else{if(ue+3>=Ae)break;q[ue++>>>0]=240|ke>>18,q[ue++>>>0]=128|ke>>12&63,q[ue++>>>0]=128|ke>>6&63,q[ue++>>>0]=128|ke&63}}return q[ue>>>0]=0,ue-De}function Ye(M,q,ue){return Je(M,i(),q,ue)}var Fe,ct,Mn,Et,Zn,tn,Sn,Jn,Nn;_&&(Fe=p.buffer);function st(M){Fe=M,p.HEAP8=ct=new Int8Array(M),p.HEAP16=Et=new Int16Array(M),p.HEAP32=tn=new Int32Array(M),p.HEAPU8=Mn=new Uint8Array(M),p.HEAPU16=Zn=new Uint16Array(M),p.HEAPU32=Sn=new Uint32Array(M),p.HEAPF32=Jn=new Float32Array(M),p.HEAPF64=Nn=new Float64Array(M)}var Tn=p.INITIAL_MEMORY||16777216;if(_)de=p.wasmMemory,Fe=p.buffer;else if(p.wasmMemory)de=p.wasmMemory;else if(de=new WebAssembly.Memory({initial:Tn/65536,maximum:65536,shared:!0}),!(de.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),N&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");de&&(Fe=de.buffer),Tn=Fe.byteLength,st(Fe);var On,sa=[],Uo=[],Or=[],td=!1;function pr(){return ve}function Na(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)nf(p.preRun.shift());rd(sa)}function Gt(){td=!0,!_&&rd(Uo)}function th(){if(!_){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)q0(p.postRun.shift());rd(Or)}}function nf(M){sa.unshift(M)}function rf(M){Uo.unshift(M)}function q0(M){Or.unshift(M)}var Ta=0,Go=null,ia=null;function af(M){Ta++,p.monitorRunDependencies&&p.monitorRunDependencies(Ta)}function nh(M){if(Ta--,p.monitorRunDependencies&&p.monitorRunDependencies(Ta),Ta==0&&(Go!==null&&(clearInterval(Go),Go=null),ia)){var q=ia;ia=null,q()}}function Ss(M){p.onAbort&&p.onAbort(M),M="Aborted("+M+")",ee(M),Ie=!0,Ne=1,M+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(M);throw m(q),q}var sf="data:application/octet-stream;base64,";function rh(M){return M.startsWith(sf)}function Ho(M){return M.startsWith("file://")}var ln;ln="tfjs-backend-wasm-threaded-simd.wasm",rh(ln)||(ln=A(ln));function ah(M){try{if(M==ln&&ie)return new Uint8Array(ie);if(S)return S(M);throw"both async and sync fetching of the wasm failed"}catch(q){Ss(q)}}function of(){if(!ie&&(v||I)){if(typeof fetch=="function"&&!Ho(ln))return fetch(ln,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+ln+"'";return M.arrayBuffer()}).catch(function(){return ah(ln)});if(F)return new Promise(function(M,q){F(ln,function(ue){M(new Uint8Array(ue))},q)})}return Promise.resolve().then(function(){return ah(ln)})}function lf(){var M={env:yh,wasi_snapshot_preview1:yh};function q(fe,ke){var wt=fe.exports;if(p.asm=wt,yf(p.asm._emscripten_tls_init),On=p.asm.__indirect_function_table,rf(p.asm.__wasm_call_ctors),xe=ke,!_){var Qn=$e.unusedWorkers.length;$e.unusedWorkers.forEach(function(la){$e.loadWasmModuleToWorker(la,function(){--Qn||nh("wasm-instantiate")})})}}_||af("wasm-instantiate");function ue(fe){q(fe.instance,fe.module)}function Te(fe){return of().then(function(ke){return WebAssembly.instantiate(ke,M)}).then(function(ke){return ke}).then(fe,function(ke){ee("failed to asynchronously prepare wasm: "+ke),Ss(ke)})}function De(){return!ie&&typeof WebAssembly.instantiateStreaming=="function"&&!rh(ln)&&!Ho(ln)&&!N&&typeof fetch=="function"?fetch(ln,{credentials:"same-origin"}).then(function(fe){var ke=WebAssembly.instantiateStreaming(fe,M);return ke.then(ue,function(wt){return ee("wasm streaming compile failed: "+wt),ee("falling back to ArrayBuffer instantiation"),Te(ue)})}):Te(ue)}if(p.instantiateWasm)try{var Ae=p.instantiateWasm(M,q);return Ae}catch(fe){ee("Module.instantiateWasm callback failed with error: "+fe),m(fe)}return De().catch(m),{}}var K0,X0,sh={};function Ns(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function uf(M){var q=$e.pthreads[M];delete $e.pthreads[M],q.terminate(),Dy(M),$e.runningWorkers.splice($e.runningWorkers.indexOf(q),1),q.pthread_ptr=0}function df(M){var q=$e.pthreads[M];q.postMessage({cmd:"cancel"})}function nd(M){var q=$e.pthreads[M];Pe(q),$e.returnWorkerToPool(q)}function pf(M){var q=$e.getNewWorker();if(!q)return 6;$e.runningWorkers.push(q),$e.pthreads[M.pthread_ptr]=q,q.pthread_ptr=M.pthread_ptr;var ue={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return q.runPthread=()=>{N&&q.ref(),q.postMessage(ue,M.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}var ih={varargs:void 0,get:function(){ih.varargs+=4;var M=l()[ih.varargs-4>>>2];return M},getStr:function(M){var q=Qe(M);return q}};function oh(M){if(_)return _a(1,1,M);Ne=M,pr()||($e.terminateAllThreads(),p.onExit&&p.onExit(M),Ie=!0),x(M,new Ns(M))}function hf(M,q){if(Ne=M,!q&&_)throw uh(M),"unwind";oh(M)}var lh=hf;function cf(M){if(M instanceof Ns||M=="unwind")return Ne;x(1,M)}var $e={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){_?$e.initWorker():$e.initMainThread()},initMainThread:function(){for(var M=8;M--;)$e.allocateUnusedWorker()},initWorker:function(){ve=!1},setExitStatus:function(M){Ne=M},terminateAllThreads:function(){for(var M of Object.values($e.pthreads))$e.returnWorkerToPool(M);for(var M of $e.unusedWorkers)M.terminate();$e.unusedWorkers=[]},returnWorkerToPool:function(M){var q=M.pthread_ptr;delete $e.pthreads[q],$e.unusedWorkers.push(M),$e.runningWorkers.splice($e.runningWorkers.indexOf(M),1),M.pthread_ptr=0,N&&M.unref(),Dy(q)},receiveObjectTransfer:function(M){},threadInitTLS:function(){$e.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,q){M.onmessage=Ae=>{var fe=Ae.data,ke=fe.cmd;if(M.pthread_ptr&&($e.currentProxiedOperationCallerThread=M.pthread_ptr),fe.targetThread&&fe.targetThread!=Ih()){var wt=$e.pthreads[fe.targetThread];wt?wt.postMessage(fe,fe.transferList):ee('Internal error! Worker sent a message "'+ke+'" to target pthread '+fe.targetThread+", but that thread no longer exists!"),$e.currentProxiedOperationCallerThread=void 0;return}ke==="processProxyingQueue"?ad(fe.queue):ke==="spawnThread"?pf(fe):ke==="cleanupThread"?nd(fe.thread):ke==="killThread"?uf(fe.thread):ke==="cancelThread"?df(fe.thread):ke==="loaded"?(M.loaded=!0,N&&M.unref(),q&&q(M),M.runPthread&&M.runPthread()):ke==="print"?Y("Thread "+fe.threadId+": "+fe.text):ke==="printErr"?ee("Thread "+fe.threadId+": "+fe.text):ke==="alert"?alert("Thread "+fe.threadId+": "+fe.text):fe.target==="setimmediate"?M.postMessage(fe):ke==="callHandler"?p[fe.handler](...fe.args):ke&&ee("worker sent an unknown command "+ke),$e.currentProxiedOperationCallerThread=void 0},M.onerror=Ae=>{var fe="worker sent an error!";throw ee(fe+" "+Ae.filename+":"+Ae.lineno+": "+Ae.message),Ae},N&&(M.on("message",function(Ae){M.onmessage({data:Ae})}),M.on("error",function(Ae){M.onerror(Ae)}),M.on("detachedExit",function(){}));var ue=[],Te=["onExit","onAbort","print","printErr"];for(var De of Te)p.hasOwnProperty(De)&&ue.push(De);M.postMessage({cmd:"load",handlers:ue,urlOrBlob:p.mainScriptUrlOrBlob||r,wasmMemory:de,wasmModule:xe})},allocateUnusedWorker:function(){var M,q=A("tfjs-backend-wasm-threaded-simd.worker.js");M=new Worker(q),$e.unusedWorkers.push(M)},getNewWorker:function(){return $e.unusedWorkers.length==0&&($e.allocateUnusedWorker(),$e.loadWasmModuleToWorker($e.unusedWorkers[0])),$e.unusedWorkers.pop()}};p.PThread=$e;function rd(M){for(;M.length>0;)M.shift()(p)}function mf(){var M=Ih(),q=l()[M+52>>>2],ue=l()[M+56>>>2],Te=q-ue;t1(q,Te),Sh(q)}p.establishStackSpace=mf;function uh(M){if(_)return _a(2,0,M);try{lh(M)}catch(q){cf(q)}}var jo=[];function ff(M){var q=jo[M];return q||(M>=jo.length&&(jo.length=M+1),jo[M]=q=On.get(M)),q}function gf(M,q){var ue=ff(M)(q);pr()?$e.setExitStatus(ue):e1(ue)}p.invokeEntryPoint=gf;function yf(M){$e.tlsInitFunctions.push(M)}function bf(M){J0(M,!I,1,!v),$e.threadInitTLS()}function xf(M){_?postMessage({cmd:"cleanupThread",thread:M}):nd(M)}function dh(M,q,ue,Te){return _?_a(3,1,M,q,ue,Te):ph(M,q,ue,Te)}function ph(M,q,ue,Te){if(typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var De=[],Ae=0;if(_&&(De.length===0||Ae))return dh(M,q,ue,Te);if(Ae)return Ae;var fe={startRoutine:ue,pthread_ptr:M,arg:Te,transferList:De};return _?(fe.cmd="spawnThread",postMessage(fe,De),0):pf(fe)}function vf(){return 65536}var wf=!0;function kf(){return wf}function ad(M){Atomics.store(l(),M>>2,1),Ih()&&Q0(M),Atomics.compareExchange(l(),M>>2,1,0)}p.executeNotifiedProxyingQueue=ad;function If(M,q,ue,Te){if(M==q)setTimeout(()=>ad(Te));else if(_)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:Te});else{var De=$e.pthreads[M];if(!De)return;De.postMessage({cmd:"processProxyingQueue",queue:Te})}return 1}function Sf(M,q,ue){return-1}function Nf(){Ss("")}function Ts(M){Ts.shown||(Ts.shown={}),Ts.shown[M]||(Ts.shown[M]=1,N&&(M="warning: "+M),ee(M))}function Tf(){N||I||Ts("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function _f(){return Date.now()}function hh(){return 4294901760}function Cf(){return hh()}var sd;N?sd=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:sd=()=>performance.timeOrigin+performance.now();function Ef(M,q,ue){i().copyWithin(M>>>0,q>>>0,q+ue>>>0)}function $f(){return N?dR().cpus().length:navigator.hardwareConcurrency}function Af(M){var q=Ry(),ue=M();return Sh(q),ue}function _a(M,q){var ue=arguments.length-2,Te=arguments;return Af(()=>{for(var De=ue,Ae=Nh(De*8),fe=Ae>>3,ke=0;ke<ue;ke++){var wt=Te[2+ke];h()[fe+ke>>>0]=wt}return Y0(M,De,Ae,q)})}var id=[];function Ff(M,q,ue){id.length=q;for(var Te=ue>>3,De=0;De<q;De++)id[De]=h()[Te+De>>>0];var Ae=M<0,fe=Ae?sh[-M-1]:Wf[M];return fe.apply(null,id)}function Df(M){try{return de.grow(M-Fe.byteLength+65535>>>16),st(de.buffer),1}catch{}}function Rf(M){var q=i().length;if(M=M>>>0,M<=q)return!1;var ue=hh();if(M>ue)return!1;let Te=(wt,Qn)=>wt+(Qn-wt%Qn)%Qn;for(var De=1;De<=4;De*=2){var Ae=q*(1+.2/De);Ae=Math.min(Ae,M+100663296);var fe=Math.min(ue,Te(Math.max(M,Ae),65536)),ke=Df(fe);if(ke)return!0}return!1}function Mf(){throw"unwind"}function ch(M){return _?_a(4,1,M):52}function mh(M,q,ue,Te,De){return _?_a(5,1,M,q,ue,Te,De):70}var Of=[null,[],[]];function Lf(M,q){var ue=Of[M];q===0||q===10?((M===1?Y:ee)(pt(ue,0)),ue.length=0):ue.push(q)}function fh(M,q,ue,Te){if(_)return _a(6,1,M,q,ue,Te);for(var De=0,Ae=0;Ae<ue;Ae++){var fe=u()[q>>>2],ke=u()[q+4>>>2];q+=8;for(var wt=0;wt<ke;wt++)Lf(M,i()[fe+wt>>>0]);De+=ke}return u()[Te>>>2]=De,0}function gh(M){var q=p["_"+M];return q}function Pf(M,q){s().set(M,q>>>0)}function zf(M,q,ue,Te,De){var Ae={string:er=>{var Zo=0;if(er!=null&&er!==0){var a1=(er.length<<2)+1;Zo=Nh(a1),Ye(er,Zo,a1)}return Zo},array:er=>{var Zo=Nh(er.length);return Pf(er,Zo),Zo}};function fe(er){return q==="string"?Qe(er):q==="boolean"?!!er:er}var ke=gh(M),wt=[],Qn=0;if(Te)for(var la=0;la<Te.length;la++){var r1=Ae[ue[la]];r1?(Qn===0&&(Qn=Ry()),wt[la]=r1(Te[la])):wt[la]=Te[la]}var My=ke.apply(null,wt);function WD(er){return Qn!==0&&Sh(Qn),fe(er)}return My=WD(My),My}function Bf(M,q,ue,Te){ue=ue||[];var De=ue.every(fe=>fe==="number"||fe==="boolean"),Ae=q!=="string";return Ae&&De&&!Te?gh(M):function(){return zf(M,q,ue,arguments,Te)}}$e.init();var Wf=[null,oh,uh,dh,ch,mh,fh],yh={__emscripten_init_main_thread_js:bf,__emscripten_thread_cleanup:xf,__pthread_create_js:ph,_emscripten_default_pthread_stack_size:vf,_emscripten_get_now_is_monotonic:kf,_emscripten_notify_task_queue:If,_emscripten_set_offscreencanvas_size:Sf,abort:Nf,emscripten_check_blocking_allowed:Tf,emscripten_date_now:_f,emscripten_get_heap_max:Cf,emscripten_get_now:sd,emscripten_memcpy_big:Ef,emscripten_num_logical_cores:$f,emscripten_receive_on_main_thread_js:Ff,emscripten_resize_heap:Rf,emscripten_unwind_to_js_event_loop:Mf,exit:lh,fd_close:ch,fd_seek:mh,fd_write:fh,memory:de||p.wasmMemory},Z0=lf(),Vf=p.___wasm_call_ctors=function(){return(Vf=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},Uf=p._init=function(){return(Uf=p._init=p.asm.init).apply(null,arguments)},Gf=p._init_with_threads_count=function(){return(Gf=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},Hf=p._get_threads_count=function(){return(Hf=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},jf=p._register_tensor=function(){return(jf=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},qf=p._dispose_data=function(){return(qf=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},Kf=p._dispose=function(){return(Kf=p._dispose=p.asm.dispose).apply(null,arguments)},Xf=p._Abs=function(){return(Xf=p._Abs=p.asm.Abs).apply(null,arguments)},Zf=p._Acos=function(){return(Zf=p._Acos=p.asm.Acos).apply(null,arguments)},Jf=p._Acosh=function(){return(Jf=p._Acosh=p.asm.Acosh).apply(null,arguments)},Yf=p._Add=function(){return(Yf=p._Add=p.asm.Add).apply(null,arguments)},Qf=p._AddN=function(){return(Qf=p._AddN=p.asm.AddN).apply(null,arguments)},eg=p._All=function(){return(eg=p._All=p.asm.All).apply(null,arguments)},tg=p._Any=function(){return(tg=p._Any=p.asm.Any).apply(null,arguments)},ng=p._ArgMax=function(){return(ng=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},rg=p._ArgMin=function(){return(rg=p._ArgMin=p.asm.ArgMin).apply(null,arguments)},ag=p._Asin=function(){return(ag=p._Asin=p.asm.Asin).apply(null,arguments)},sg=p._Asinh=function(){return(sg=p._Asinh=p.asm.Asinh).apply(null,arguments)},ig=p._Atan=function(){return(ig=p._Atan=p.asm.Atan).apply(null,arguments)},og=p._Atan2=function(){return(og=p._Atan2=p.asm.Atan2).apply(null,arguments)},lg=p._Atanh=function(){return(lg=p._Atanh=p.asm.Atanh).apply(null,arguments)},ug=p._AvgPool=function(){return(ug=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},dg=p._AvgPool3D=function(){return(dg=p._AvgPool3D=p.asm.AvgPool3D).apply(null,arguments)},pg=p._AvgPool3DGrad=function(){return(pg=p._AvgPool3DGrad=p.asm.AvgPool3DGrad).apply(null,arguments)},hg=p._AvgPoolGrad=function(){return(hg=p._AvgPoolGrad=p.asm.AvgPoolGrad).apply(null,arguments)},cg=p._BatchMatMul=function(){return(cg=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},mg=p._Bincount=function(){return(mg=p._Bincount=p.asm.Bincount).apply(null,arguments)},fg=p._BitwiseAnd=function(){return(fg=p._BitwiseAnd=p.asm.BitwiseAnd).apply(null,arguments)},gg=p._Ceil=function(){return(gg=p._Ceil=p.asm.Ceil).apply(null,arguments)},yg=p._ClipByValue=function(){return(yg=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},bg=p._Conv2D=function(){return(bg=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},xg=p._Conv2DBackpropInput=function(){return(xg=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},vg=p._Conv3D=function(){return(vg=p._Conv3D=p.asm.Conv3D).apply(null,arguments)},wg=p._Conv3DBackpropFilterV2=function(){return(wg=p._Conv3DBackpropFilterV2=p.asm.Conv3DBackpropFilterV2).apply(null,arguments)},kg=p._Conv3DBackpropInputV2=function(){return(kg=p._Conv3DBackpropInputV2=p.asm.Conv3DBackpropInputV2).apply(null,arguments)},Ig=p._Cos=function(){return(Ig=p._Cos=p.asm.Cos).apply(null,arguments)},Sg=p._Cosh=function(){return(Sg=p._Cosh=p.asm.Cosh).apply(null,arguments)},Ng=p._CropAndResize=function(){return(Ng=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},Tg=p._Cumprod=function(){return(Tg=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},_g=p._Cumsum=function(){return(_g=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},Cg=p._DenseBincount=function(){return(Cg=p._DenseBincount=p.asm.DenseBincount).apply(null,arguments)},Eg=p._DepthToSpace=function(){return(Eg=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},$g=p._DepthwiseConv2dNative=function(){return($g=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},Ag=p._Diag=function(){return(Ag=p._Diag=p.asm.Diag).apply(null,arguments)},Fg=p._Dilation2D=function(){return(Fg=p._Dilation2D=p.asm.Dilation2D).apply(null,arguments)},Dg=p._Dilation2DBackpropFilter=function(){return(Dg=p._Dilation2DBackpropFilter=p.asm.Dilation2DBackpropFilter).apply(null,arguments)},Rg=p._Dilation2DBackpropInput=function(){return(Rg=p._Dilation2DBackpropInput=p.asm.Dilation2DBackpropInput).apply(null,arguments)},Mg=p._Elu=function(){return(Mg=p._Elu=p.asm.Elu).apply(null,arguments)},Og=p._EluGrad=function(){return(Og=p._EluGrad=p.asm.EluGrad).apply(null,arguments)},Lg=p._Equal=function(){return(Lg=p._Equal=p.asm.Equal).apply(null,arguments)},Pg=p._Erf=function(){return(Pg=p._Erf=p.asm.Erf).apply(null,arguments)},zg=p._Exp=function(){return(zg=p._Exp=p.asm.Exp).apply(null,arguments)},Bg=p._Expm1=function(){return(Bg=p._Expm1=p.asm.Expm1).apply(null,arguments)},Wg=p._FlipLeftRight=function(){return(Wg=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},Vg=p._Floor=function(){return(Vg=p._Floor=p.asm.Floor).apply(null,arguments)},Ug=p._FloorDiv=function(){return(Ug=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},Gg=p._FusedBatchNorm=function(){return(Gg=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},Hg=p._FusedConv2D=function(){return(Hg=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},jg=p._FusedDepthwiseConv2D=function(){return(jg=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},qg=p._Gather=function(){return(qg=p._Gather=p.asm.Gather).apply(null,arguments)},Kg=p._GatherNd=function(){return(Kg=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},Xg=p._Greater=function(){return(Xg=p._Greater=p.asm.Greater).apply(null,arguments)},Zg=p._GreaterEqual=function(){return(Zg=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},Jg=p._IsFinite=function(){return(Jg=p._IsFinite=p.asm.IsFinite).apply(null,arguments)},Yg=p._IsInf=function(){return(Yg=p._IsInf=p.asm.IsInf).apply(null,arguments)},Qg=p._IsNan=function(){return(Qg=p._IsNan=p.asm.IsNan).apply(null,arguments)},ey=p._LRN=function(){return(ey=p._LRN=p.asm.LRN).apply(null,arguments)},ty=p._LRNGrad=function(){return(ty=p._LRNGrad=p.asm.LRNGrad).apply(null,arguments)},ny=p._LeakyRelu=function(){return(ny=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},ry=p._Less=function(){return(ry=p._Less=p.asm.Less).apply(null,arguments)},ay=p._LessEqual=function(){return(ay=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},sy=p._LinSpace=function(){return(sy=p._LinSpace=p.asm.LinSpace).apply(null,arguments)},iy=p._Log=function(){return(iy=p._Log=p.asm.Log).apply(null,arguments)},oy=p._Log1p=function(){return(oy=p._Log1p=p.asm.Log1p).apply(null,arguments)},ly=p._LogicalAnd=function(){return(ly=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},uy=p._LogicalNot=function(){return(uy=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},dy=p._LogicalOr=function(){return(dy=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},py=p._LogicalXor=function(){return(py=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},hy=p._Max=function(){return(hy=p._Max=p.asm.Max).apply(null,arguments)},cy=p._MaxPool=function(){return(cy=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},my=p._MaxPool3D=function(){return(my=p._MaxPool3D=p.asm.MaxPool3D).apply(null,arguments)},fy=p._MaxPool3DGrad=function(){return(fy=p._MaxPool3DGrad=p.asm.MaxPool3DGrad).apply(null,arguments)},gy=p._MaxPoolGrad=function(){return(gy=p._MaxPoolGrad=p.asm.MaxPoolGrad).apply(null,arguments)},yy=p._MaxPoolWithArgmax=function(){return(yy=p._MaxPoolWithArgmax=p.asm.MaxPoolWithArgmax).apply(null,arguments)},by=p._Maximum=function(){return(by=p._Maximum=p.asm.Maximum).apply(null,arguments)},xy=p._Mean=function(){return(xy=p._Mean=p.asm.Mean).apply(null,arguments)},vy=p._Min=function(){return(vy=p._Min=p.asm.Min).apply(null,arguments)},wy=p._Minimum=function(){return(wy=p._Minimum=p.asm.Minimum).apply(null,arguments)},ky=p._MirrorPad=function(){return(ky=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},Iy=p._Mod=function(){return(Iy=p._Mod=p.asm.Mod).apply(null,arguments)},Sy=p._Multinomial=function(){return(Sy=p._Multinomial=p.asm.Multinomial).apply(null,arguments)},Ny=p._Multiply=function(){return(Ny=p._Multiply=p.asm.Multiply).apply(null,arguments)},Ty=p._Neg=function(){return(Ty=p._Neg=p.asm.Neg).apply(null,arguments)},_y=p._NonMaxSuppressionV3=function(){return(_y=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},Cy=p._NonMaxSuppressionV4=function(){return(Cy=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},bh=p._NonMaxSuppressionV5=function(){return(bh=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},xh=p._NotEqual=function(){return(xh=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},od=p._OneHot=function(){return(od=p._OneHot=p.asm.OneHot).apply(null,arguments)},Ey=p._PadV2=function(){return(Ey=p._PadV2=p.asm.PadV2).apply(null,arguments)},$y=p._Pow=function(){return($y=p._Pow=p.asm.Pow).apply(null,arguments)},qo=p._Prelu=function(){return(qo=p._Prelu=p.asm.Prelu).apply(null,arguments)},vh=p._Prod=function(){return(vh=p._Prod=p.asm.Prod).apply(null,arguments)},Ko=p._RealDiv=function(){return(Ko=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},Xo=p._Reciprocal=function(){return(Xo=p._Reciprocal=p.asm.Reciprocal).apply(null,arguments)},Ay=p._Relu=function(){return(Ay=p._Relu=p.asm.Relu).apply(null,arguments)},Z=p._Relu6=function(){return(Z=p._Relu6=p.asm.Relu6).apply(null,arguments)},oe=p._ResizeBilinear=function(){return(oe=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},Se=p._ResizeBilinearGrad=function(){return(Se=p._ResizeBilinearGrad=p.asm.ResizeBilinearGrad).apply(null,arguments)},qe=p._ResizeNearestNeighbor=function(){return(qe=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},yt=p._ResizeNearestNeighborGrad=function(){return(yt=p._ResizeNearestNeighborGrad=p.asm.ResizeNearestNeighborGrad).apply(null,arguments)},bt=p._Reverse=function(){return(bt=p._Reverse=p.asm.Reverse).apply(null,arguments)},Ue=p._RotateWithOffset=function(){return(Ue=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},We=p._Round=function(){return(We=p._Round=p.asm.Round).apply(null,arguments)},$t=p._Rsqrt=function(){return($t=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},Yn=p._ScatterNd=function(){return(Yn=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},oa=p._SearchSorted=function(){return(oa=p._SearchSorted=p.asm.SearchSorted).apply(null,arguments)},wh=p._SelectV2=function(){return(wh=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},ld=p._Selu=function(){return(ld=p._Selu=p.asm.Selu).apply(null,arguments)},Fy=p._Sigmoid=function(){return(Fy=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},_n=p._Sign=function(){return(_n=p._Sign=p.asm.Sign).apply(null,arguments)},Ca=p._Sin=function(){return(Ca=p._Sin=p.asm.Sin).apply(null,arguments)},kh=p._Sinh=function(){return(kh=p._Sinh=p.asm.Sinh).apply(null,arguments)},uD=p._Softmax=function(){return(uD=p._Softmax=p.asm.Softmax).apply(null,arguments)},dD=p._Softplus=function(){return(dD=p._Softplus=p.asm.Softplus).apply(null,arguments)},pD=p._SparseFillEmptyRows=function(){return(pD=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},hD=p._SparseReshape=function(){return(hD=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},cD=p._SparseSegmentReduction=function(){return(cD=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},mD=p._SparseToDense=function(){return(mD=p._SparseToDense=p.asm.SparseToDense).apply(null,arguments)},fD=p._Sqrt=function(){return(fD=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},gD=p._Square=function(){return(gD=p._Square=p.asm.Square).apply(null,arguments)},yD=p._SquaredDifference=function(){return(yD=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},bD=p._Step=function(){return(bD=p._Step=p.asm.Step).apply(null,arguments)},xD=p._StridedSlice=function(){return(xD=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},vD=p._Sub=function(){return(vD=p._Sub=p.asm.Sub).apply(null,arguments)},wD=p._Sum=function(){return(wD=p._Sum=p.asm.Sum).apply(null,arguments)},kD=p._Tan=function(){return(kD=p._Tan=p.asm.Tan).apply(null,arguments)},ID=p._Tanh=function(){return(ID=p._Tanh=p.asm.Tanh).apply(null,arguments)},SD=p._TensorScatterUpdate=function(){return(SD=p._TensorScatterUpdate=p.asm.TensorScatterUpdate).apply(null,arguments)},ND=p._Tile=function(){return(ND=p._Tile=p.asm.Tile).apply(null,arguments)},TD=p._TopK=function(){return(TD=p._TopK=p.asm.TopK).apply(null,arguments)},_D=p._Transform=function(){return(_D=p._Transform=p.asm.Transform).apply(null,arguments)},CD=p._Transpose=function(){return(CD=p._Transpose=p.asm.Transpose).apply(null,arguments)},ED=p.__FusedMatMul=function(){return(ED=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},$D=p._malloc=function(){return($D=p._malloc=p.asm.malloc).apply(null,arguments)},AD=p._free=function(){return(AD=p._free=p.asm.free).apply(null,arguments)},FD=p.__emscripten_tls_init=function(){return(FD=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},Ih=p._pthread_self=function(){return(Ih=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},DD=p.___errno_location=function(){return(DD=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},J0=p.__emscripten_thread_init=function(){return(J0=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},RD=p.__emscripten_thread_crashed=function(){return(RD=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},MD=p._emscripten_main_thread_process_queued_calls=function(){return(MD=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},OD=p._emscripten_main_browser_thread_id=function(){return(OD=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},Y0=p._emscripten_run_in_main_runtime_thread_js=function(){return(Y0=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},LD=p._emscripten_dispatch_to_thread_=function(){return(LD=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Q0=p.__emscripten_proxy_execute_task_queue=function(){return(Q0=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Dy=p.__emscripten_thread_free_data=function(){return(Dy=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},e1=p.__emscripten_thread_exit=function(){return(e1=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},t1=p._emscripten_stack_set_limits=function(){return(t1=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},Ry=p.stackSave=function(){return(Ry=p.stackSave=p.asm.stackSave).apply(null,arguments)},Sh=p.stackRestore=function(){return(Sh=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},Nh=p.stackAlloc=function(){return(Nh=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},PD=p.dynCall_iijjiiii=function(){return(PD=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},zD=p.dynCall_jiji=function(){return(zD=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=pr,p.wasmMemory=de,p.cwrap=Bf,p.ExitStatus=Ns,p.PThread=$e;var Th;ia=function M(){Th||n1(),Th||(ia=M)};function n1(M){if(M=M||y,Ta>0)return;if(_){c(p),Gt(),startWorker(p);return}if(Na(),Ta>0)return;function q(){Th||(Th=!0,p.calledRun=!0,!Ie&&(Gt(),c(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),th()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),q()},1)):q()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();n1();var _h;f&&(_h={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!f.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!f.unhandledRejection.indexOf(M)>-1})});var Ch;if(typeof WasmBackendModule<"u")Ch=WasmBackendModule;else if(typeof a<"u")Ch=a;else throw new Error("Could not find wasm module in post.js");if(_h){var BD=Ch._dispose;Ch._dispose=function(){BD(),_h.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),_h.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),hR=Ot((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),cR=Ot((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(Z,oe){i=Z,o=oe});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),d=[],h="./this.program",p=(Z,oe)=>{throw oe},c=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(Z){return s.locateFile?s.locateFile(Z,g):g+Z}var b,x,v,I;function N(Z){Z instanceof Go||R("exiting due to exception: "+Z)}if(f){var _=cx(),E=vI();m?g=E.dirname(g)+"/":g=__dirname+"/",b=(Z,oe)=>(Z=Na(Z)?new URL(Z):E.normalize(Z),_.readFileSync(Z,oe?void 0:"utf8")),v=Z=>{var oe=b(Z,!0);return oe.buffer||(oe=new Uint8Array(oe)),oe},x=(Z,oe,Se)=>{Z=Na(Z)?new URL(Z):E.normalize(Z),_.readFile(Z,function(qe,yt){qe?Se(qe):oe(yt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof Go))throw Z}),process.on("unhandledRejection",function(Z){throw Z}),p=(Z,oe)=>{if(Mn())throw process.exitCode=Z,oe;N(oe),process.exit(Z)},s.inspect=function(){return"[Emscripten Module object]"}}else(c||m)&&(m?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",b=Z=>{var oe=new XMLHttpRequest;return oe.open("GET",Z,!1),oe.send(null),oe.responseText},m&&(v=Z=>{var oe=new XMLHttpRequest;return oe.open("GET",Z,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),x=(Z,oe,Se)=>{var qe=new XMLHttpRequest;qe.open("GET",Z,!0),qe.responseType="arraybuffer",qe.onload=()=>{if(qe.status==200||qe.status==0&&qe.response){oe(qe.response);return}Se()},qe.onerror=Se,qe.send(null)},I=Z=>document.title=Z);var A=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&(h=s.thisProgram),s.quit&&(p=s.quit);var F=4,S;s.wasmBinary&&(S=s.wasmBinary);var O=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Or("no native wasm support detected");var B,G=!1,j;function K(Z,oe){Z||Or(oe)}var X=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Y(Z,oe,Se){oe>>>=0;for(var qe=oe+Se,yt=oe;Z[yt]&&!(yt>=qe);)++yt;if(yt-oe>16&&Z.buffer&&X)return X.decode(Z.subarray(oe,yt));for(var bt="";oe<yt;){var Ue=Z[oe++];if(!(Ue&128)){bt+=String.fromCharCode(Ue);continue}var We=Z[oe++]&63;if((Ue&224)==192){bt+=String.fromCharCode((Ue&31)<<6|We);continue}var $t=Z[oe++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|We<<6|$t:Ue=(Ue&7)<<18|We<<12|$t<<6|Z[oe++]&63,Ue<65536)bt+=String.fromCharCode(Ue);else{var Yn=Ue-65536;bt+=String.fromCharCode(55296|Yn>>10,56320|Yn&1023)}}return bt}function ee(Z,oe){return Z>>>=0,Z?Y(ie,Z,oe):""}function te(Z,oe,Se,qe){if(Se>>>=0,!(qe>0))return 0;for(var yt=Se,bt=Se+qe-1,Ue=0;Ue<Z.length;++Ue){var We=Z.charCodeAt(Ue);if(We>=55296&&We<=57343){var $t=Z.charCodeAt(++Ue);We=65536+((We&1023)<<10)|$t&1023}if(We<=127){if(Se>=bt)break;oe[Se++>>>0]=We}else if(We<=2047){if(Se+1>=bt)break;oe[Se++>>>0]=192|We>>6,oe[Se++>>>0]=128|We&63}else if(We<=65535){if(Se+2>=bt)break;oe[Se++>>>0]=224|We>>12,oe[Se++>>>0]=128|We>>6&63,oe[Se++>>>0]=128|We&63}else{if(Se+3>=bt)break;oe[Se++>>>0]=240|We>>18,oe[Se++>>>0]=128|We>>12&63,oe[Se++>>>0]=128|We>>6&63,oe[Se++>>>0]=128|We&63}}return oe[Se>>>0]=0,Se-yt}function ae(Z,oe,Se){return te(Z,ie,oe,Se)}var ne,se,ie,ve,de,xe,Ie,Ne,Pe;function Ve(Z){ne=Z,s.HEAP8=se=new Int8Array(Z),s.HEAP16=ve=new Int16Array(Z),s.HEAP32=xe=new Int32Array(Z),s.HEAPU8=ie=new Uint8Array(Z),s.HEAPU16=de=new Uint16Array(Z),s.HEAPU32=Ie=new Uint32Array(Z),s.HEAPF32=Ne=new Float32Array(Z),s.HEAPF64=Pe=new Float64Array(Z)}var pt=s.INITIAL_MEMORY||16777216,Qe,Je=[],Ye=[],Fe=[],ct=!1;function Mn(){return O}function Et(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Sn(s.preRun.shift());ia(Je)}function Zn(){ct=!0,ia(Ye)}function tn(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)Nn(s.postRun.shift());ia(Fe)}function Sn(Z){Je.unshift(Z)}function Jn(Z){Ye.unshift(Z)}function Nn(Z){Fe.unshift(Z)}var st=0,Tn=null,On=null;function sa(Z){st++,s.monitorRunDependencies&&s.monitorRunDependencies(st)}function Uo(Z){if(st--,s.monitorRunDependencies&&s.monitorRunDependencies(st),st==0&&(Tn!==null&&(clearInterval(Tn),Tn=null),On)){var oe=On;On=null,oe()}}function Or(Z){s.onAbort&&s.onAbort(Z),Z="Aborted("+Z+")",R(Z),G=!0,j=1,Z+=". Build with -sASSERTIONS for more info.";var oe=new WebAssembly.RuntimeError(Z);throw o(oe),oe}var td="data:application/octet-stream;base64,";function pr(Z){return Z.startsWith(td)}function Na(Z){return Z.startsWith("file://")}var Gt;Gt="tfjs-backend-wasm.wasm",pr(Gt)||(Gt=y(Gt));function th(Z){try{if(Z==Gt&&S)return new Uint8Array(S);if(v)return v(Z);throw"both async and sync fetching of the wasm failed"}catch(oe){Or(oe)}}function nf(){if(!S&&(c||m)){if(typeof fetch=="function"&&!Na(Gt))return fetch(Gt,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+Gt+"'";return Z.arrayBuffer()}).catch(function(){return th(Gt)});if(x)return new Promise(function(Z,oe){x(Gt,function(Se){Z(new Uint8Array(Se))},oe)})}return Promise.resolve().then(function(){return th(Gt)})}function rf(){var Z={env:nd,wasi_snapshot_preview1:nd};function oe(Ue,We){var $t=Ue.exports;s.asm=$t,B=s.asm.memory,Ve(B.buffer),Qe=s.asm.__indirect_function_table,Jn(s.asm.__wasm_call_ctors),Uo("wasm-instantiate")}sa("wasm-instantiate");function Se(Ue){oe(Ue.instance)}function qe(Ue){return nf().then(function(We){return WebAssembly.instantiate(We,Z)}).then(function(We){return We}).then(Ue,function(We){R("failed to asynchronously prepare wasm: "+We),Or(We)})}function yt(){return!S&&typeof WebAssembly.instantiateStreaming=="function"&&!pr(Gt)&&!Na(Gt)&&!f&&typeof fetch=="function"?fetch(Gt,{credentials:"same-origin"}).then(function(Ue){var We=WebAssembly.instantiateStreaming(Ue,Z);return We.then(Se,function($t){return R("wasm streaming compile failed: "+$t),R("falling back to ArrayBuffer instantiation"),qe(Se)})}):qe(Se)}if(s.instantiateWasm)try{var bt=s.instantiateWasm(Z,oe);return bt}catch(Ue){R("Module.instantiateWasm callback failed with error: "+Ue),o(Ue)}return yt().catch(o),{}}var q0,Ta;function Go(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}function ia(Z){for(;Z.length>0;)Z.shift()(s)}function af(){Or("")}function nh(){return 4294901760}function Ss(){return nh()}function sf(Z,oe,Se){ie.copyWithin(Z>>>0,oe>>>0,oe+Se>>>0)}function rh(Z){try{return B.grow(Z-ne.byteLength+65535>>>16),Ve(B.buffer),1}catch{}}function Ho(Z){var oe=ie.length;Z=Z>>>0;var Se=nh();if(Z>Se)return!1;let qe=($t,Yn)=>$t+(Yn-$t%Yn)%Yn;for(var yt=1;yt<=4;yt*=2){var bt=oe*(1+.2/yt);bt=Math.min(bt,Z+100663296);var Ue=Math.min(Se,qe(Math.max(Z,bt),65536)),We=rh(Ue);if(We)return!0}return!1}var ln={varargs:void 0,get:function(){ln.varargs+=4;var Z=xe[ln.varargs-4>>>2];return Z},getStr:function(Z){var oe=ee(Z);return oe}};function ah(Z){return 52}function of(Z,oe,Se,qe,yt){return 70}var lf=[null,[],[]];function K0(Z,oe){var Se=lf[Z];oe===0||oe===10?((Z===1?A:R)(Y(Se,0)),Se.length=0):Se.push(oe)}function X0(Z,oe,Se,qe){for(var yt=0,bt=0;bt<Se;bt++){var Ue=Ie[oe>>>2],We=Ie[oe+4>>>2];oe+=8;for(var $t=0;$t<We;$t++)K0(Z,ie[Ue+$t>>>0]);yt+=We}return Ie[qe>>>2]=yt,0}function sh(Z){var oe=s["_"+Z];return oe}function Ns(Z,oe){se.set(Z,oe>>>0)}function uf(Z,oe,Se,qe,yt){var bt={string:_n=>{var Ca=0;if(_n!=null&&_n!==0){var kh=(_n.length<<2)+1;Ca=od(kh),ae(_n,Ca,kh)}return Ca},array:_n=>{var Ca=od(_n.length);return Ns(_n,Ca),Ca}};function Ue(_n){return oe==="string"?ee(_n):oe==="boolean"?!!_n:_n}var We=sh(Z),$t=[],Yn=0;if(qe)for(var oa=0;oa<qe.length;oa++){var wh=bt[Se[oa]];wh?(Yn===0&&(Yn=bh()),$t[oa]=wh(qe[oa])):$t[oa]=qe[oa]}var ld=We.apply(null,$t);function Fy(_n){return Yn!==0&&xh(Yn),Ue(_n)}return ld=Fy(ld),ld}function df(Z,oe,Se,qe){Se=Se||[];var yt=Se.every(Ue=>Ue==="number"||Ue==="boolean"),bt=oe!=="string";return bt&&yt&&!qe?sh(Z):function(){return uf(Z,oe,Se,arguments,qe)}}var nd={abort:af,emscripten_get_heap_max:Ss,emscripten_memcpy_big:sf,emscripten_resize_heap:Ho,fd_close:ah,fd_seek:of,fd_write:X0},pf=rf(),ih=s.___wasm_call_ctors=function(){return(ih=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},oh=s._init=function(){return(oh=s._init=s.asm.init).apply(null,arguments)},hf=s._init_with_threads_count=function(){return(hf=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},lh=s._get_threads_count=function(){return(lh=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},cf=s._register_tensor=function(){return(cf=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},$e=s._dispose_data=function(){return($e=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},rd=s._dispose=function(){return(rd=s._dispose=s.asm.dispose).apply(null,arguments)},mf=s._Abs=function(){return(mf=s._Abs=s.asm.Abs).apply(null,arguments)},uh=s._Acos=function(){return(uh=s._Acos=s.asm.Acos).apply(null,arguments)},jo=s._Acosh=function(){return(jo=s._Acosh=s.asm.Acosh).apply(null,arguments)},ff=s._Add=function(){return(ff=s._Add=s.asm.Add).apply(null,arguments)},gf=s._AddN=function(){return(gf=s._AddN=s.asm.AddN).apply(null,arguments)},yf=s._All=function(){return(yf=s._All=s.asm.All).apply(null,arguments)},bf=s._Any=function(){return(bf=s._Any=s.asm.Any).apply(null,arguments)},xf=s._ArgMax=function(){return(xf=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},dh=s._ArgMin=function(){return(dh=s._ArgMin=s.asm.ArgMin).apply(null,arguments)},ph=s._Asin=function(){return(ph=s._Asin=s.asm.Asin).apply(null,arguments)},vf=s._Asinh=function(){return(vf=s._Asinh=s.asm.Asinh).apply(null,arguments)},wf=s._Atan=function(){return(wf=s._Atan=s.asm.Atan).apply(null,arguments)},kf=s._Atan2=function(){return(kf=s._Atan2=s.asm.Atan2).apply(null,arguments)},ad=s._Atanh=function(){return(ad=s._Atanh=s.asm.Atanh).apply(null,arguments)},If=s._AvgPool=function(){return(If=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},Sf=s._AvgPool3D=function(){return(Sf=s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},Nf=s._AvgPool3DGrad=function(){return(Nf=s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},Ts=s._AvgPoolGrad=function(){return(Ts=s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},Tf=s._BatchMatMul=function(){return(Tf=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},_f=s._Bincount=function(){return(_f=s._Bincount=s.asm.Bincount).apply(null,arguments)},hh=s._BitwiseAnd=function(){return(hh=s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},Cf=s._Ceil=function(){return(Cf=s._Ceil=s.asm.Ceil).apply(null,arguments)},sd=s._ClipByValue=function(){return(sd=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},Ef=s._Conv2D=function(){return(Ef=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},$f=s._Conv2DBackpropInput=function(){return($f=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},Af=s._Conv3D=function(){return(Af=s._Conv3D=s.asm.Conv3D).apply(null,arguments)},_a=s._Conv3DBackpropFilterV2=function(){return(_a=s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},id=s._Conv3DBackpropInputV2=function(){return(id=s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},Ff=s._Cos=function(){return(Ff=s._Cos=s.asm.Cos).apply(null,arguments)},Df=s._Cosh=function(){return(Df=s._Cosh=s.asm.Cosh).apply(null,arguments)},Rf=s._CropAndResize=function(){return(Rf=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},Mf=s._Cumprod=function(){return(Mf=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},ch=s._Cumsum=function(){return(ch=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},mh=s._DenseBincount=function(){return(mh=s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},Of=s._DepthToSpace=function(){return(Of=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},Lf=s._DepthwiseConv2dNative=function(){return(Lf=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},fh=s._Diag=function(){return(fh=s._Diag=s.asm.Diag).apply(null,arguments)},gh=s._Dilation2D=function(){return(gh=s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},Pf=s._Dilation2DBackpropFilter=function(){return(Pf=s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},zf=s._Dilation2DBackpropInput=function(){return(zf=s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},Bf=s._Elu=function(){return(Bf=s._Elu=s.asm.Elu).apply(null,arguments)},Wf=s._EluGrad=function(){return(Wf=s._EluGrad=s.asm.EluGrad).apply(null,arguments)},yh=s._Equal=function(){return(yh=s._Equal=s.asm.Equal).apply(null,arguments)},Z0=s._Erf=function(){return(Z0=s._Erf=s.asm.Erf).apply(null,arguments)},Vf=s._Exp=function(){return(Vf=s._Exp=s.asm.Exp).apply(null,arguments)},Uf=s._Expm1=function(){return(Uf=s._Expm1=s.asm.Expm1).apply(null,arguments)},Gf=s._FlipLeftRight=function(){return(Gf=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},Hf=s._Floor=function(){return(Hf=s._Floor=s.asm.Floor).apply(null,arguments)},jf=s._FloorDiv=function(){return(jf=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},qf=s._FusedBatchNorm=function(){return(qf=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},Kf=s._FusedConv2D=function(){return(Kf=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},Xf=s._FusedDepthwiseConv2D=function(){return(Xf=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},Zf=s._Gather=function(){return(Zf=s._Gather=s.asm.Gather).apply(null,arguments)},Jf=s._GatherNd=function(){return(Jf=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},Yf=s._Greater=function(){return(Yf=s._Greater=s.asm.Greater).apply(null,arguments)},Qf=s._GreaterEqual=function(){return(Qf=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},eg=s._IsFinite=function(){return(eg=s._IsFinite=s.asm.IsFinite).apply(null,arguments)},tg=s._IsInf=function(){return(tg=s._IsInf=s.asm.IsInf).apply(null,arguments)},ng=s._IsNan=function(){return(ng=s._IsNan=s.asm.IsNan).apply(null,arguments)},rg=s._LRN=function(){return(rg=s._LRN=s.asm.LRN).apply(null,arguments)},ag=s._LRNGrad=function(){return(ag=s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},sg=s._LeakyRelu=function(){return(sg=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},ig=s._Less=function(){return(ig=s._Less=s.asm.Less).apply(null,arguments)},og=s._LessEqual=function(){return(og=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},lg=s._LinSpace=function(){return(lg=s._LinSpace=s.asm.LinSpace).apply(null,arguments)},ug=s._Log=function(){return(ug=s._Log=s.asm.Log).apply(null,arguments)},dg=s._Log1p=function(){return(dg=s._Log1p=s.asm.Log1p).apply(null,arguments)},pg=s._LogicalAnd=function(){return(pg=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},hg=s._LogicalNot=function(){return(hg=s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},cg=s._LogicalOr=function(){return(cg=s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},mg=s._LogicalXor=function(){return(mg=s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},fg=s._Max=function(){return(fg=s._Max=s.asm.Max).apply(null,arguments)},gg=s._MaxPool=function(){return(gg=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},yg=s._MaxPool3D=function(){return(yg=s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},bg=s._MaxPool3DGrad=function(){return(bg=s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},xg=s._MaxPoolGrad=function(){return(xg=s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},vg=s._MaxPoolWithArgmax=function(){return(vg=s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},wg=s._Maximum=function(){return(wg=s._Maximum=s.asm.Maximum).apply(null,arguments)},kg=s._Mean=function(){return(kg=s._Mean=s.asm.Mean).apply(null,arguments)},Ig=s._Min=function(){return(Ig=s._Min=s.asm.Min).apply(null,arguments)},Sg=s._Minimum=function(){return(Sg=s._Minimum=s.asm.Minimum).apply(null,arguments)},Ng=s._MirrorPad=function(){return(Ng=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},Tg=s._Mod=function(){return(Tg=s._Mod=s.asm.Mod).apply(null,arguments)},_g=s._Multinomial=function(){return(_g=s._Multinomial=s.asm.Multinomial).apply(null,arguments)},Cg=s._Multiply=function(){return(Cg=s._Multiply=s.asm.Multiply).apply(null,arguments)},Eg=s._Neg=function(){return(Eg=s._Neg=s.asm.Neg).apply(null,arguments)},$g=s._NonMaxSuppressionV3=function(){return($g=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},Ag=s._NonMaxSuppressionV4=function(){return(Ag=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},Fg=s._NonMaxSuppressionV5=function(){return(Fg=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},Dg=s._NotEqual=function(){return(Dg=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},Rg=s._OneHot=function(){return(Rg=s._OneHot=s.asm.OneHot).apply(null,arguments)},Mg=s._PadV2=function(){return(Mg=s._PadV2=s.asm.PadV2).apply(null,arguments)},Og=s._Pow=function(){return(Og=s._Pow=s.asm.Pow).apply(null,arguments)},Lg=s._Prelu=function(){return(Lg=s._Prelu=s.asm.Prelu).apply(null,arguments)},Pg=s._Prod=function(){return(Pg=s._Prod=s.asm.Prod).apply(null,arguments)},zg=s._RealDiv=function(){return(zg=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},Bg=s._Reciprocal=function(){return(Bg=s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},Wg=s._Relu=function(){return(Wg=s._Relu=s.asm.Relu).apply(null,arguments)},Vg=s._Relu6=function(){return(Vg=s._Relu6=s.asm.Relu6).apply(null,arguments)},Ug=s._ResizeBilinear=function(){return(Ug=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},Gg=s._ResizeBilinearGrad=function(){return(Gg=s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},Hg=s._ResizeNearestNeighbor=function(){return(Hg=s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},jg=s._ResizeNearestNeighborGrad=function(){return(jg=s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},qg=s._Reverse=function(){return(qg=s._Reverse=s.asm.Reverse).apply(null,arguments)},Kg=s._RotateWithOffset=function(){return(Kg=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},Xg=s._Round=function(){return(Xg=s._Round=s.asm.Round).apply(null,arguments)},Zg=s._Rsqrt=function(){return(Zg=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},Jg=s._ScatterNd=function(){return(Jg=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},Yg=s._SearchSorted=function(){return(Yg=s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},Qg=s._SelectV2=function(){return(Qg=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},ey=s._Selu=function(){return(ey=s._Selu=s.asm.Selu).apply(null,arguments)},ty=s._Sigmoid=function(){return(ty=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},ny=s._Sign=function(){return(ny=s._Sign=s.asm.Sign).apply(null,arguments)},ry=s._Sin=function(){return(ry=s._Sin=s.asm.Sin).apply(null,arguments)},ay=s._Sinh=function(){return(ay=s._Sinh=s.asm.Sinh).apply(null,arguments)},sy=s._Softmax=function(){return(sy=s._Softmax=s.asm.Softmax).apply(null,arguments)},iy=s._Softplus=function(){return(iy=s._Softplus=s.asm.Softplus).apply(null,arguments)},oy=s._SparseFillEmptyRows=function(){return(oy=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},ly=s._SparseReshape=function(){return(ly=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},uy=s._SparseSegmentReduction=function(){return(uy=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},dy=s._SparseToDense=function(){return(dy=s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},py=s._Sqrt=function(){return(py=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},hy=s._Square=function(){return(hy=s._Square=s.asm.Square).apply(null,arguments)},cy=s._SquaredDifference=function(){return(cy=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},my=s._Step=function(){return(my=s._Step=s.asm.Step).apply(null,arguments)},fy=s._StridedSlice=function(){return(fy=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},gy=s._Sub=function(){return(gy=s._Sub=s.asm.Sub).apply(null,arguments)},yy=s._Sum=function(){return(yy=s._Sum=s.asm.Sum).apply(null,arguments)},by=s._Tan=function(){return(by=s._Tan=s.asm.Tan).apply(null,arguments)},xy=s._Tanh=function(){return(xy=s._Tanh=s.asm.Tanh).apply(null,arguments)},vy=s._TensorScatterUpdate=function(){return(vy=s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},wy=s._Tile=function(){return(wy=s._Tile=s.asm.Tile).apply(null,arguments)},ky=s._TopK=function(){return(ky=s._TopK=s.asm.TopK).apply(null,arguments)},Iy=s._Transform=function(){return(Iy=s._Transform=s.asm.Transform).apply(null,arguments)},Sy=s._Transpose=function(){return(Sy=s._Transpose=s.asm.Transpose).apply(null,arguments)},Ny=s.__FusedMatMul=function(){return(Ny=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},Ty=s._malloc=function(){return(Ty=s._malloc=s.asm.malloc).apply(null,arguments)},_y=s._free=function(){return(_y=s._free=s.asm.free).apply(null,arguments)},Cy=s.___errno_location=function(){return(Cy=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},bh=s.stackSave=function(){return(bh=s.stackSave=s.asm.stackSave).apply(null,arguments)},xh=s.stackRestore=function(){return(xh=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},od=s.stackAlloc=function(){return(od=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},Ey=s.dynCall_iijjiiii=function(){return(Ey=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},$y=s.dynCall_jiji=function(){return($y=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=df;var qo;On=function Z(){qo||vh(),qo||(On=Z)};function vh(Z){if(Z=Z||d,st>0||(Et(),st>0))return;function oe(){qo||(qo=!0,s.calledRun=!0,!G&&(Zn(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),tn()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),oe()},1)):oe()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();vh();var Ko;l&&(Ko={uncaughtException:process.listeners("uncaughtException").filter(function(Z){return!l.uncaughtException.indexOf(Z)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Z){return!l.unhandledRejection.indexOf(Z)>-1})});var Xo;if(typeof a<"u")Xo=a;else if(typeof WasmBackendModuleThreadedSimd<"u")Xo=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ko){var Ay=Xo._dispose;Xo._dispose=function(){Ay(),Ko.uncaughtException.forEach(function(Z){process.removeListener("uncaughtException",Z)}),Ko.unhandledRejection.forEach(function(Z){process.removeListener("unhandledRejection",Z)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),Pc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Zd=class{refCount(e){return Ln("refCount")}incRef(e){return Ln("incRef")}timerAvailable(){return!0}time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}readToGPU(e,t){return Ln("readToGPU")}numDataIds(){return Ln("numDataIds")}disposeData(e,t){return Ln("disposeData")}write(e,t,n){return Ln("write")}move(e,t,n,r,a){return Ln("move")}createTensorFromGPUData(e,t,n){return Ln("createTensorFromGPUData")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Ln("dispose")}};function Ln(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function wI(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ic(e,t,n)}function mR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ic(e,n,r),ic(t,n,r)}function $d(e,t,n){return Math.max(e,Math.min(t,n))}function fR(e){return e%2===0?e:e+1}function ic(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function gR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function yR(e,t){let n=Math.random();return t*n+(1-n)*e}function bR(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function vn(e,t,n=""){$(ba(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function pi(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function rt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function xR(e){return e.length===0}function kI(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==null&&t[n]!==null&&e[n]!==t[n])return!1;return!0}function ba(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pl(e){return e%1===0}function vR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function wR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function kR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return wI(t),t}function Nd(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function IR(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function SR(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function xr(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),$(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>pl(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function II(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:xr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function SI(e,t){return mx(e,t)}function mx(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function NI(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function TI(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function NR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function oc(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function _I(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Pa(e){return typeof e=="string"||e instanceof String}function CI(e){return typeof e=="boolean"}function EI(e){return typeof e=="number"}function Jd(e){return Array.isArray(e)?Jd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":EI(e)?"float32":Pa(e)?"string":CI(e)?"bool":"float32"}function Ha(e){return!!(e&&e.constructor&&e.call&&e.apply)}function lc(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Al(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $I(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<s;l++)a[l]=$I(e+l*o,i,n,r)}return a}function ol(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $I(0,e,t,n)}function TR(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function fx(e,t){let n=zc(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function zc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _R(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return ol(e,new Float32Array(n));if(t==="int32")return ol(e,new Int32Array(n));if(t==="bool")return ol(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Xn(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function CR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function ER(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Bc(e){return e&&e.then&&typeof e.then=="function"}var F1="tfjsflags",AI=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$R,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}getAsync(e){return D(this,null,function*(){return e in this.flags?this.flags[e]:(this.flags[e]=yield this.evaluateFlag(e),this.flags[e])})}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Bc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);F1 in e&&e[F1].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=FR(n,r)})}};function $R(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(AR(t,r[0],r[1]),r.join("="))),t}function AR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function FR(e,t){let n=t.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:t}function H(){return gx}var gx=null;function DR(e){gx=e}var zy;function FI(){if(zy==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");zy=e}return zy}function RR(){let e=FI();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function yx(e,t){let n=RR();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Fl="Abs",hi="Acos",ci="Acosh",os="Add",mi="AddN",Dl="All",Rl="Any",Ml="ArgMax",Ol="ArgMin",fi="Asin",gi="Asinh",yi="Atan",bi="Atanh",xi="Atan2",vi="AvgPool",Yd="AvgPoolGrad",Ll="AvgPool3D",Qd="AvgPool3DGrad",wi="BatchMatMul",Pl="BatchToSpaceND",zl="Bincount",Bl="BitwiseAnd",DI="BroadcastTo",ep="BroadcastArgs",ki="Cast",Ii="Ceil",ls="ClipByValue",Wc="Complex",tp="ComplexAbs",Wl="Concat",Si="Conv2D",Vc="Conv2DBackpropFilter",Ni="Conv2DBackpropInput",Ti="Conv3D",Vl="Conv3DBackpropFilterV2",Ul="Conv3DBackpropInputV2",_i="Cos",Ci="Cosh",Gl="Cumprod",Ei="Cumsum",Hl="CropAndResize",np="DenseBincount",jl="DepthToSpace",$i="DepthwiseConv2dNative",Uc="DepthwiseConv2dNativeBackpropFilter",Gc="DepthwiseConv2dNativeBackpropInput",rp="Diag",Ai="Dilation2D",hl="Dilation2DBackpropInput",cl="Dilation2DBackpropFilter",Hc="Draw",Fi="RealDiv",jc="Einsum",Di="Elu",ql="EluGrad",Ri="Erf",Kl="Equal",Mi="Exp",Xl="ExpandDims",Oi="Expm1",qc="FFT",ap="Fill",Zl="FlipLeftRight",Li="Floor",Pi="FloorDiv",zi="FusedBatchNorm",Jl="GatherV2",Yl="GatherNd",Ql="Greater",Bi="GreaterEqual",Wi="Identity",Kc="IFFT",Xc="Imag",Vi="IsFinite",Ui="IsInf",Gi="IsNan",Hi="LeakyRelu",eu="Less",tu="LessEqual",nu="LinSpace",ji="Log",qi="Log1p",ru="LogicalAnd",au="LogicalNot",su="LogicalOr",RI="LogicalXor",MI="LogSoftmax",MR="LowerBound",Ki="LRN",iu="LRNGrad",OR="MatrixBandPart",Xi="Max",Zi="Maximum",Ji="MaxPool",sp="MaxPoolGrad",ou="MaxPool3D",ip="MaxPool3DGrad",op="MaxPoolWithArgmax",Yi="Mean",Qi="Min",eo="Minimum",to="MirrorPad",no="Mod",lu="Multinomial",ro="Multiply",uu="Neg",du="NotEqual",pu="NonMaxSuppressionV3",hu="NonMaxSuppressionV4",cu="NonMaxSuppressionV5",mu="OnesLike",ao="OneHot",fu="Pack",so="PadV2",LR="Pool",io="Pow",oo="Prelu",lo="Prod",Zc="RaggedGather",Jc="RaggedRange",Yc="RaggedTensorToTensor",lp="Range",Qc="Real",uo="Reciprocal",po="Relu",gu="Reshape",ho="ResizeNearestNeighbor",yu="ResizeNearestNeighborGrad",co="ResizeBilinear",bu="ResizeBilinearGrad",mo="Relu6",fo="Reverse",go="Round",yo="Rsqrt",xu="ScatterNd",vu="TensorScatterUpdate",wu="SearchSorted",ku="Select",bo="Selu",Iu="Slice",xo="Sin",vo="Sinh",wo="Sign",ko="Sigmoid",Io="Softplus",So="Sqrt",No="Sum",Su="SpaceToBatchND",Nu="SplitV",To="Softmax",up="SparseFillEmptyRows",Tu="SparseReshape",dp="SparseSegmentMean",pp="SparseSegmentSum",_u="SparseToDense",_o="SquaredDifference",hp="Square",cp="StaticRegexReplace",Cu="StridedSlice",mp="StringNGrams",fp="StringSplit",gp="StringToHashBucketFast",Co="Sub",Eo="Tan",$o="Tanh",us="Tile",Eu="TopK",$u="Transform",ca="Transpose",yp="Unique",Au="Unpack",bp="UnsortedSegmentSum",PR="UpperBound",Fu="ZerosLike",ds="Step",uc="FromPixels",Du="RotateWithOffset",qs="_FusedMatMul",Ks="FusedConv2D",Xs="FusedDepthwiseConv2D";function La(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...e)}function zR(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...e)}var ml=yx("kernelRegistry",()=>new Map),Ad=yx("gradRegistry",()=>new Map);function Fd(e,t){let n=bx(e,t);return ml.get(n)}function ab(e){return Ad.get(e)}function dc(e){let t=ml.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function xp(e){let{kernelName:t,backendName:n}=e,r=bx(t,n);ml.has(r)&&La(`The kernel '${t}' for backend '${n}' is already registered`),ml.set(r,e)}function OI(e){let{kernelName:t}=e;Ad.has(t)&&H().getBool("DEBUG")&&La(`Overriding the gradient for '${t}'`),Ad.set(t,e)}function BR(e,t){let n=bx(e,t);if(!ml.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ml.delete(n)}function WR(e){if(!Ad.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Ad.delete(e)}function VR(e,t){dc(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});xp(r)})}function bx(e,t){return`${t}_${e}`}var w={};Ee(w,{arraysEqual:()=>ba,arraysEqualWithNull:()=>kI,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Xn,assertNonNull:()=>pi,assertShapesMatch:()=>vn,bytesFromStringArray:()=>_I,bytesPerElement:()=>oc,checkConversionForErrors:()=>NI,clamp:()=>$d,computeStrides:()=>Al,convertBackendValuesAndArrayBuffer:()=>TR,createScalarValue:()=>KR,createShuffledIndices:()=>kR,decodeString:()=>pc,distSquared:()=>bR,encodeString:()=>wp,fetch:()=>ZR,fingerPrint64:()=>qR,flatten:()=>ja,getArrayFromDType:()=>mx,getTypedArrayFromDType:()=>SI,hasEncodingLoss:()=>NR,hexToLong:()=>vp,indexToLoc:()=>ER,inferDtype:()=>Jd,inferFromImplicitShape:()=>SR,isBoolean:()=>CI,isFunction:()=>Ha,isInt:()=>pl,isNumber:()=>EI,isPromise:()=>Bc,isScalarShape:()=>xR,isString:()=>Pa,isTypedArray:()=>Kt,isValidDtype:()=>TI,locToIndex:()=>CR,makeOnesTypedArray:()=>fx,makeZerosNestedTypedArray:()=>_R,makeZerosTypedArray:()=>zc,nearestDivisor:()=>lc,nearestLargerEven:()=>fR,now:()=>Dd,parseAxisParam:()=>xr,randUniform:()=>yR,repeatedTry:()=>IR,rightPad:()=>Nd,shuffle:()=>wI,shuffleCombo:()=>mR,sizeFromShape:()=>rt,sizeToSquarishShape:()=>wR,squeezeShape:()=>II,sum:()=>gR,swap:()=>ic,tanh:()=>vR,toNestedArray:()=>ol,toTypedArray:()=>em});function LI(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var D1=is(JD()),Ms=D1.default||D1;function vp(e){return Ms.fromString(e,!0,16)}var PI=vp("c3a5c85c97cb3127"),Fs=vp("b492b66fbe98f273"),cn=vp("9ae16a3b2f90404f");function sb(e){return e.xor(e.shru(47))}function zI(e,t,n){let r=e.slice(t,t+n);return Ms.fromBytes(Array.from(r),!0,!0)}function mt(e,t){return zI(e,t,8)}function R1(e,t){return zI(e,t,4)}function qt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Va(e,t,n=vp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function UR(e,t,n,r,a,s){a=a.add(e),s=qt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(qt(a,44)),[a.add(r),s.add(i)]}function Rh(e,t,n,r){return UR(mt(e,t),mt(e,t+8),mt(e,t+16),mt(e,t+24),n,r)}function GR(e,t=e.length){if(t>=8){let n=cn.add(t*2),r=mt(e,0).add(cn),a=mt(e,t-8),s=qt(a,37).mul(n).add(r),i=qt(r,25).add(a).mul(n);return Va(s,i,n)}if(t>=4){let n=cn.add(t*2),r=R1(e,0);return Va(r.shl(3).add(t),R1(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return sb(cn.mul(s).xor(PI.mul(i))).mul(cn)}return cn}function HR(e,t=e.length){let n=cn.add(t*2),r=mt(e,0).mul(Fs),a=mt(e,8),s=mt(e,t-8).mul(n),i=mt(e,t-16).mul(cn);return Va(qt(r.add(a),43).add(qt(s,30)).add(i),r.add(qt(a.add(cn),18)).add(s),n)}function jR(e,t=e.length){let n=cn.add(t*2),r=mt(e,0).mul(cn),a=mt(e,8),s=mt(e,t-8).mul(n),i=mt(e,t-16).mul(cn),o=qt(r.add(a),43).add(qt(s,30)).add(i),l=Va(o,r.add(qt(a.add(cn),18)).add(s),n),u=mt(e,16).mul(n),d=mt(e,24),h=o.add(mt(e,t-32)).mul(n),p=l.add(mt(e,t-24)).mul(n);return Va(qt(u.add(d),43).add(qt(h,30)).add(p),u.add(qt(d.add(r),18)).add(h),n)}function qR(e,t=e.length){let n=Ms.fromNumber(81,!0);if(t<=32)return t<=16?GR(e,t):HR(e,t);if(t<=64)return jR(e,t);let r=n,a=n.mul(Fs).add(113),s=sb(a.mul(cn).add(113)).mul(cn),i=[Ms.UZERO,Ms.UZERO],o=[Ms.UZERO,Ms.UZERO];r=r.mul(cn).add(mt(e,0));let l=0,u=(t-1>>6)*64,d=u+(t-1&63)-63;do r=qt(r.add(a).add(i[0]).add(mt(e,l+8)),37).mul(Fs),a=qt(a.add(i[1]).add(mt(e,l+48)),42).mul(Fs),r=r.xor(o[1]),a=a.add(i[0]).add(mt(e,l+40)),s=qt(s.add(o[0]),33).mul(Fs),i=Rh(e,l,i[1].mul(Fs),r.add(o[0])),o=Rh(e,l+32,s.add(o[1]),a.add(mt(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u);let h=Fs.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=qt(r.add(a).add(i[0]).add(mt(e,l+8)),37).mul(h),a=qt(a.add(i[1]).add(mt(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(mt(e,l+40))),s=qt(s.add(o[0]),33).mul(h),i=Rh(e,l,i[1].mul(h),r.add(o[0])),o=Rh(e,l+32,s.add(o[1]),a.add(mt(e,l+16))),[s,r]=[r,s],Va(Va(i[0],o[0],h).add(sb(a).mul(PI)).add(s),Va(i[1],o[1],h).add(r),h)}function KR(e,t){return t==="string"?wp(e):em([e],t)}function XR(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function em(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ja(e)),H().getBool("DEBUG")&&NI(e,t),XR(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Dd(){return H().platform.now()}function ZR(e,t){return H().platform.fetch(e,t)}function wp(e,t="utf-8"){return t=t||"utf-8",H().platform.encode(e,t)}function pc(e,t="utf-8"){return t=t||"utf-8",H().platform.decode(e,t)}function Kt(e){return H().platform.isTypedArray!=null?H().platform.isTypedArray(e):LI(e)}function ja(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||Bc(e)||e==null||Kt(e)&&n)t.push(e);else if(Array.isArray(e)||Kt(e))for(let r=0;r<e.length;++r)ja(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)ja(e[a],t,n)}return t}var JR=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new QR)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=Dd();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:Dd()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(u=>{YR(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function YR(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var QR=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?Nd(`${r}ms`,9):r.error,o=Nd(e,25),l=t.rank,u=t.size,d=Nd(t.shape.toString(),14),h="";for(let p in a){let c=a[p];if(c!=null){let m=c.shape||t.shape,f=m.length;h+=`${p}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${d}	%c${u}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function eM(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],d=u.inputs;for(let h in d){let p=d[h],c=!1;for(let m=0;m<t.length;m++)if(r[p.id]){u.outputs.forEach(f=>r[f.id]=!0),c=!0,a[u.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],d=u.inputs;for(let h=0;h<u.outputs.length;h++)if(s[u.outputs[h].id]){for(let p in d)s[d[p].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(a[u.id]&&i[u.id]){let d={};for(let p in u.inputs){let c=u.inputs[p];r[c.id]&&(d[p]=c)}let h=Object.assign({},u);h.inputs=d,h.outputs=u.outputs,o.push(h)}}return o}function tM(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let d=s.inputs[l];if(!ba(u.shape,d.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(e[d.id]==null)e[d.id]=u;else{let h=e[d.id];e[d.id]=r(h,u),h.dispose()}}}}var M1=20,dd=3,By=7;function nM(e,t,n,r){let a=Al(t),s=rM(e,t,n,a),i=t.length,o=Jh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function rM(e,t,n,r){let a=rt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?gd(e):e;if(o>1)for(let u=0;u<a/s;u++){let d=u*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],fd(l[d+h],0,n).length)}return i}function fd(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(By))} + ${parseFloat(e[1].toFixed(By))}j`:Pa(e)?r=`'${e}'`:n==="bool"?r=BI(e):r=parseFloat(e.toFixed(By)).toString(),Nd(r,t)}function BI(e){return e===0?"false":"true"}function Jh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let f=gd(e);return[fd(f[0],0,n)]}return n==="bool"?[BI(e[0])]:[e[0].toString()]}if(l===1){if(o>M1){let f=dd*i,g=Array.from(e.slice(0,f)),y=Array.from(e.slice((o-dd)*i,o*i));return n==="complex64"&&(g=gd(g),y=gd(y)),["["+g.map((b,x)=>fd(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>fd(b,a[o-dd+x],n)).join(", ")+"]"]}return["["+(n==="complex64"?gd(e):Array.from(e)).map((f,g)=>fd(f,a[g],n)).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>M1){for(let f=0;f<dd;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,!1))}p.push("...");for(let f=o-dd;f<o;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,f===o-1))}}else for(let f=0;f<o;f++){let g=f*h,y=g+h;p.push(...Jh(e.slice(g,y),u,n,d,a,f===o-1))}let c=l===2?",":"";p[0]="["+(o>0?p[0]+c:"");for(let f=1;f<p.length-1;f++)p[f]=" "+p[f]+c;let m=`,
`;for(let f=2;f<l;f++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":m),p}function gd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Dt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=rt(e),n!=null){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||mx(t,this.size),this.strides=Al(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Tr().makeTensor(this.values,this.shape,this.dtype)}},Tr=null,rl=null,aM=null;function sM(e){Tr=e}function iM(e){rl=e}function oM(e){aM=e}var Re=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=rt(e),this.strides=Al(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return D(this,null,function*(){let e=yield this.data();return rl.buffer(this.shape,this.dtype,e)})}bufferSync(){return rl.buffer(this.shape,this.dtype,this.dataSync())}array(){return D(this,null,function*(){let e=yield this.data();return ol(this.shape,e,this.dtype==="complex64")})}arraySync(){return ol(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return D(this,null,function*(){this.throwIfDisposed();let e=Tr().read(this.dataId);if(this.dtype==="string"){let t=yield e;try{return t.map(n=>pc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})}dataToGPU(e){return this.throwIfDisposed(),Tr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Tr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>pc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}bytes(){return D(this,null,function*(){this.throwIfDisposed();let e=yield Tr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Tr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return rl.print(this,e)}clone(){return this.throwIfDisposed(),rl.clone(this)}toString(e=!1){let t=this.dataSync();return nM(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),rl.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Tr().makeVariable(this,e,t,n)}};Object.defineProperty(Re,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Q(){return yx("Tensor",()=>Re)}Q();var Zs=class extends Re{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ba(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Tr().disposeTensor(this),this.dataId=e.dataId,Tr().incRef(this,null)}dispose(){Tr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Zs,Symbol.hasInstance,{value:e=>e instanceof Re&&e.assign!=null&&e.assign instanceof Function});var _r={};Ee(_r,{assertTypesMatch:()=>UI,getTensorsInContainer:()=>xx,isTensorInList:()=>uM,makeTypesMatch:()=>Nt});var ib;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(ib||(ib={}));var ob;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(ob||(ob={}));var lb;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(lb||(lb={}));var ub;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(ub||(ub={}));var db;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(db||(db={}));var lM={float32:ub,int32:ob,bool:lb,complex64:db};function or(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return lM[e][t]}function tm(e){return or(e,"int32")}function WI(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function VI(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Nt(e,t){if(e.dtype===t.dtype)return[e,t];let n=or(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function UI(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function uM(e,t){return t.some(n=>n.id===e.id)}function xx(e){let t=[];return GI(e,t,new Set),t}function GI(e,t,n){if(e==null)return;if(e instanceof Re){t.push(e);return}if(!dM(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),GI(s,t,n))}}function dM(e){return Array.isArray(e)||typeof e=="object"}function Wy(e){return e.kernelName!=null}var O1=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},vx=class pb{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new O1}ready(){return D(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n];if(yield this.initializeBackend(r).success){yield this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(La(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}setBackend(t){return D(this,null,function*(){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?yield n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new JR(this.backendInstance),!0})}setupRegisteredKernels(){dc(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){dc(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=n.factory();if(r&&!(r instanceof Zd)&&typeof r.then=="function"){let a=++this.pendingBackendInitId,s=r.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,La(`Initialization of backend ${t} failed`),La(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return La(`Initialization of backend ${t} failed`),La(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n],{success:a,asyncInit:s}=this.initializeBackend(r);if(s||a)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){let r=this.state.tensorInfo.get(n),a=r.backend,s=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),r.backend=t,t.move(n,s,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let a;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,n,r){t();try{let a=r();return n(),a}catch(a){throw n(),a}}nextTensorId(){return pb.nextTensorId++}nextVariableId(){return pb.nextVariableId++}clone(t){let n=L.runKernel(Wi,{x:t}),r={x:t},a=i=>({x:()=>{let o="float32",l={x:i},u={dtype:o};return L.runKernel(ki,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[n],a,s,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,Fd(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){let a=this.backend.numDataIds(),s=0;r.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l,u=Wy(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Wy(t)){let{kernelName:m,inputs:f,attrs:g}=t;this.backendName==null&&this.backend;let y=Fd(m,this.backendName);$(y!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:f,attrs:g,backend:this.backend});let x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,b,x);let v=x.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){let I=this.getTensorsForGradient(m,f,v);r=this.saveTensorsForBackwardMode(I)}return v}}else{let{forwardFunc:m}=t,f=g=>{a&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,f));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:d,attrs:h}=t,p=Wy(t)?null:t.backwardsFunc,c;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(c=this.profiler.profileKernel(u,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),n=c.outputs)}),a&&this.addTapeNode(u,d,n,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(m=>d[m]!=null?d[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,n,r){let a=ab(t);if(a!=null){let s=a.inputsToSave||[],i=a.outputsToSave||[],o;a.saveAllInputs?($(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=s.map(u=>n[u]);let l=r.filter((u,d)=>i[d]);return o.concat(l)}return[]}makeTensor(t,n,r,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",a=a||this.backend;let s=t;r==="string"&&Pa(t[0])&&(s=t.map(l=>wp(l)));let i=a.write(s,n,r),o=new Re(n,r,i,this.nextTensorId());if(this.trackTensor(o,a),r==="string"){let l=this.state.tensorInfo.get(i),u=_I(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(t,n,r,a){r=r||"float32";let s={dataId:t,shape:n,dtype:r};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,n){let{dataId:r,shape:a,dtype:s}=t,i=new Re(a,s,r,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(t,n=!0,r,a){r=r||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));let s=new Zs(t,n,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*oc(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Zs||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let r=t.size*oc(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return D(this,null,function*(){this.state.profiling=!0;let n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=yield a.kernelTimeMs,a.extraInfo=yield a.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,a,s,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:s},l=ab(t);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=u=>(u=u.map((d,h)=>{if(d==null){let p=r[h],c=zc(p.size,p.dtype);return this.makeTensor(c,p.shape,p.dtype)}return d}),a(u.length>1?u:u[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){let n=xx(t),r=new Set(n.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!r.has(i.id)&&i.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(s=>{!s.kept&&s.scopeId===a.id&&this.track(s)})}gradients(t,n,r,a=!1){if($(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));$(s instanceof Re,()=>"The result y returned by f() must be a tensor.");let i=eM(this.state.activeTape,n,s);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=r??pM(s.shape),tM(o,i,u=>this.tidy(u),hM);let l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let d of u.saved)d.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return $(Ha(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{$(n.every(o=>o instanceof Re),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,a={};n.forEach((o,l)=>{a[l]=o});let s=(o,l)=>(r=t(...n,l),$(r.value instanceof Re,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Ha(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(o,l)=>{let u=r.gradFunc(o,l),d=Array.isArray(u)?u:[u];$(d.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(d.every(p=>p instanceof Re),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let h={};return d.forEach((p,c)=>{h[c]=()=>p}),h};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}time(t){return D(this,null,function*(){let n=Dd(),r=yield this.backend.time(t);return r.wallMs=Dd()-n,r})}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new O1;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};vx.nextTensorId=0;vx.nextVariableId=0;function pM(e){let t=fx(rt(e),"float32");return L.makeTensor(t,e,"float32")}function HI(){let e=FI();if(e._tfengine==null){let t=new AI(e);e._tfengine=new vx(t)}return DR(e._tfengine.ENV),sM(()=>e._tfengine),e._tfengine}var L=HI();function hM(e,t){let n={a:e,b:t};return L.runKernel(os,n)}var kp={};Ee(kp,{isBrowser:()=>jI,isMobile:()=>fM,mockIsMobile:()=>mM});function cM(){return typeof navigator<"u"&&navigator!=null}var hb;function mM(e){hb=e}function fM(e){if(hb!==void 0)return hb;if(e||cM()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function jI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Fn=H();Fn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Fn.registerFlag("IS_BROWSER",()=>jI());Fn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Fn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Fn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Fn.registerFlag("PROD",()=>!1);Fn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Fn.getBool("DEBUG"));Fn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Fn.registerFlag("IS_TEST",()=>!1);Fn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Fn.getBool("DEBUG"));Fn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Fn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Fn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Jr(e,t){let n=e;if(Kt(e))return t==="string"?[]:[e.length];if(WI(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(VI(e))return[e.buffer.size/(t==null?4:oc(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Kt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&qI(e,r,[]),r}function qI(e,t,n){if(n=n||[],!Array.isArray(e)&&!Kt(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)qI(e[a],r,n.concat(a))}function L1(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function C(e,t,n,r="numeric"){if(e instanceof Q())return L1(r,e.dtype,t,n),e;let a=Jd(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),L1(r,a,t,n),e==null||!Kt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Jr(e,a);!Kt(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?em(e,a):ja(e,[],!0);return L.makeTensor(i,s,a)}function Rd(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>C(a,`${t}[${s}]`,n,r))}var wx="__op";function P(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+wx;let a=(...s)=>{L.startScope(n);try{let i=r(...s);return Bc(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function gM(e,t){let n=C(e,"real","complex"),r=C(t,"imag","complex");vn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return L.runKernel(Wc,a)}var ga=P({complex_:gM});function ps(e,t,n,r){if(r==null)r=Jd(e);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(VI(e)||WI(e)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return L.backend.createTensorFromGPUData(e,t||n,r)}if(!Kt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Xn(t);let a=rt(t),s=rt(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==rt(t.slice(i)):!0;$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Kt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?em(e,r):ja(e,[],!0),L.makeTensor(e,t,r)}function gn(e,t,n){let r=Jr(e,n);return ps(e,t,r,n)}var Js={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},xa=class KI{static join(t){return new KI(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(r=>Kt(r)?r.buffer:r),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let n=0;for(let r=0;r<t.length;r++){let a=t[r];r!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=n+a.byteLength;this.shards.push({buffer:a,start:n,end:s}),n=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,n=isNaN(Number(n))?0:n,t=Math.max(0,t),n=Math.min(this.byteLength,n),n<=t)return new ArrayBuffer(0);let r=this.findShardForByte(t);if(r===-1)throw new Error(`Could not find start shard for byte ${t}`);let a=n-t,s=new ArrayBuffer(a),i=new Uint8Array(s),o=0;for(let l=r;l<this.shards.length;l++){let u=this.shards[l],d=t+o-u.start,h=o,p=Math.min(n,u.end)-u.start,c=new Uint8Array(u.buffer,d,p-d);if(i.set(c,h),o+=c.length,n<u.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function n(a){return t<a.start?-1:t>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let r=yM(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}};function yM(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(s===0)return a;s<0?r=a:n=a+1}return-1}function bM(){H().set("PROD",!0)}function xM(){H().set("DEBUG",!0)}function vM(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function kx(e){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}oM(kx);function wM(){L.disposeVariables()}function mr(){return L}function hc(){return L.memory()}function kM(e){return L.profile(e)}function V(e,t){return L.tidy(e,t)}function Ce(e){xx(e).forEach(t=>t.dispose())}function Pt(e){return L.keep(e)}function IM(e){return L.time(e)}function SM(e){return L.setBackend(e)}function NM(){return L.ready()}function XI(){return L.backendName}function TM(e){L.removeBackend(e)}function _M(e){return L.findBackend(e)}function CM(e){return L.findBackendFactory(e)}function nm(e,t,n=1){return L.registerBackend(e,t,n)}function Ix(){return L.backend}function EM(e,t){H().setPlatform(e,t)}var qa=4;function $M(e,t){return D(this,null,function*(){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let d=new Promise(h=>D(this,null,function*(){let p=yield l.bytes(),c=p.reduce((g,y)=>g+y.length,0)+qa*p.length,m=new Uint8Array(c),f=0;for(let g=0;g<p.length;g++){let y=p[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=qa,m.set(y,f),f+=y.length}h(m)}));r.push(d)}else r.push(l.data());t!=null&&(u.group=t),n.push(u)}let s=yield Promise.all(r);return{data:DM(s),specs:n}})}function ZI(e,t){let n=new xa(e),r={},a=0;for(let s of t){let i=AM(s,(o,l)=>n.slice(a+o,a+l));r[s.name]=JI(s,n.slice(a,a+i)),a+=i}return r}function AM(e,t){let n=rt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Js[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=qa+new Uint32Array(t(a,a+qa))[0];return a}else r=Js[e.dtype];return n*r}function FM(e,t){return D(this,null,function*(){let n=rt(e.shape),r;if("quantization"in e){let a=e.quantization;r=Js[a.dtype]}else if(e.dtype==="string"){let a=0;for(let s=0;s<n;s++)a+=qa+new Uint32Array(yield t(a,a+qa))[0];return a}else r=Js[e.dtype];return n*r})}function JI(e,t){let n=e.name,r=e.dtype,a=e.shape,s=rt(a),i,o=0;if("quantization"in e){let l=e.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${e.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${e.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${e.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Js[l.dtype],d=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(d.length);for(let h=0;h<d.length;h++){let p=d[h];i[h]=p*l.scale+l.min}}else if(l.dtype==="float16")i=BM()(d);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(d.length);for(let h=0;h<d.length;h++){let p=d[h];i[h]=Math.round(p*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*u}else if(r==="string"){let l=rt(e.shape);i=[];for(let u=0;u<l;u++){let d=new Uint32Array(t.slice(o,o+qa))[0];o+=qa;let h=new Uint8Array(t.slice(o,o+d));i.push(h),o+=d}}else{let l=Js[r];if(r==="float32")i=new Float32Array(t);else if(r==="int32")i=new Int32Array(t);else if(r==="bool")i=new Uint8Array(t);else if(r==="complex64"){i=new Float32Array(t);let u=new Float32Array(i.length/2),d=new Float32Array(i.length/2);for(let m=0;m<u.length;m++)u[m]=i[m*2],d[m]=i[m*2+1];let h=gn(u,a,"float32"),p=gn(d,a,"float32"),c=ga(h,p);return h.dispose(),p.dispose(),c}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*l}return gn(i,a,r)}function P1(e,t,n){return D(this,null,function*(){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:a,value:s}=yield e.read();if(a&&s==null){let o=n-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}let i=new Uint8Array(r.length+s.byteLength);i.set(r,0),i.set(new Uint8Array(s),r.length),r=i}return r.buffer})}function YI(e,t){return D(this,null,function*(){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let i=yield FM(s,(u,d)=>D(this,null,function*(){return a=yield P1(r,a,d),a.slice(u,d)}));a=yield P1(r,a,i);let o=a.slice(0,i);a=a.slice(i);let l=JI(s,o);if(n[s.name]=l,XI()==="webgpu"){let u=Ix();"uploadToGPU"in u&&rt(l.shape)>=H().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n})}function DM(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var Sx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function z1(e){return Sx?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function RM(e){if(Sx)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function MM(e){if(Sx){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function OM(e){return xa.join(e)}function B1(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function QI(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function eS(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}function Nx(e,t){return D(this,null,function*(){let n,r;return e.weightsManifest!=null&&([n,r]=yield t(e.weightsManifest)),eS(e,n,r)})}function Ip(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:z1(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:z1(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new xa(e.weightData).byteLength}}function cb(e){let t=[];for(let n of e)t.push(...n.weights);return t}function LM(){let e=n=>{let r=n<<13,a=0;for(;!(r&8388608);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function PM(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function zM(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function BM(){let e=LM(),t=PM(),n=zM();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var lr=class Sr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Sr.instance==null&&(Sr.instance=new Sr),Sr.instance}static registerSaveRouter(t){Sr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Sr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Sr.getHandlers(t,"save")}static getLoadHandlers(t,n){return Sr.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return(n==="load"?Sr.getInstance().loadRouters:Sr.getInstance().saveRouters).forEach(s=>{let i=s(t,r);i!==null&&a.push(i)}),a}},WM=e=>lr.registerSaveRouter(e),VM=e=>lr.registerLoadRouter(e),UM=e=>lr.getSaveHandlers(e),GM=(e,t)=>lr.getLoadHandlers(e,t),mb="tensorflowjs",fb=1,Bs="models_store",za="model_info_store";function tS(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function gb(e){let t=e.result;t.createObjectStore(Bs,{keyPath:"modelPath"}),t.createObjectStore(za,{keyPath:"modelPath"})}var fl=(()=>{let e=class{constructor(t){if(this.indexedDB=tS(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return D(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return D(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,n){return new Promise((r,a)=>{let s=this.indexedDB.open(mb,fb);s.onupgradeneeded=()=>gb(s),s.onsuccess=()=>{let i=s.result;if(n==null){let o=i.transaction(Bs,"readonly"),l=o.objectStore(Bs).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=u=>(i.close(),a(l.error)),o.oncomplete=()=>i.close()}else{n.weightData=xa.join(n.weightData);let o=Ip(n),l=i.transaction(za,"readwrite"),u=l.objectStore(za),d;try{d=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(p){return a(p)}let h;d.onsuccess=()=>{h=i.transaction(Bs,"readwrite");let p=h.objectStore(Bs),c;try{c=p.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:o})}catch(m){return a(m)}c.onsuccess=()=>r({modelArtifactsInfo:o}),c.onerror=m=>{u=l.objectStore(za);let f=u.delete(this.modelPath);f.onsuccess=()=>(i.close(),a(c.error)),f.onerror=g=>(i.close(),a(c.error))}},d.onerror=p=>(i.close(),a(d.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},s.onerror=i=>a(s.error)})}};return e.URL_SCHEME="indexeddb://",e})(),nS=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fl.URL_SCHEME)?HM(e.slice(fl.URL_SCHEME.length)):null;lr.registerSaveRouter(nS);lr.registerLoadRouter(nS);function HM(e){return new fl(e)}function jM(e){return e.startsWith(fl.URL_SCHEME)?e.slice(fl.URL_SCHEME.length):e}var qM=class{constructor(){this.indexedDB=tS()}listModels(){return D(this,null,function*(){return new Promise((e,t)=>{let n=this.indexedDB.open(mb,fb);n.onupgradeneeded=()=>gb(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(za,"readonly"),s=a.objectStore(za).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})})}removeModel(e){return D(this,null,function*(){return e=jM(e),new Promise((t,n)=>{let r=this.indexedDB.open(mb,fb);r.onupgradeneeded=()=>gb(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(za,"readwrite"),i=s.objectStore(za),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),d=()=>{l=a.transaction(Bs,"readwrite");let h=l.objectStore(Bs).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=p=>n(o.error)};u.onsuccess=d,u.onerror=h=>(d(),a.close(),n(o.error))}},o.onerror=u=>(a.close(),n(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})})}},ha="/",al="tensorflowjs_models",rS="info",KM="model_topology",XM="weight_specs",ZM="weight_data",JM="model_metadata";function aS(e){return{info:[al,e,rS].join(ha),topology:[al,e,KM].join(ha),weightSpecs:[al,e,XM].join(ha),weightData:[al,e,ZM].join(ha),modelMetadata:[al,e,JM].join(ha)}}function sS(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function YM(e){let t=e.split(ha);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ha)}function QM(e){return e.startsWith(gl.URL_SCHEME)?e.slice(gl.URL_SCHEME.length):e}var gl=(()=>{let e=class{constructor(t){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=aS(this.modelPath)}save(t){return D(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Ip(t),s=xa.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,RM(s));let i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw sS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}})}load(){return D(this,null,function*(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=a;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let o=JSON.parse(s);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,o.signature!=null&&(n.signature=o.signature),o.userDefinedMetadata!=null&&(n.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(n.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(n.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(n.trainingConfig=o.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=MM(i),n})}};return e.URL_SCHEME="localstorage://",e})(),iS=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gl.URL_SCHEME)?eO(e.slice(gl.URL_SCHEME.length)):null;lr.registerSaveRouter(iS);lr.registerLoadRouter(iS);function eO(e){return new gl(e)}var tO=class{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return D(this,null,function*(){let e={},t=al+ha,n=ha+rS;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=YM(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e})}removeModel(e){return D(this,null,function*(){e=QM(e);let t=aS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return sS(t),n})}},ll="://",Ka=class Fa{constructor(){this.managers={}}static getInstance(){return Fa.instance==null&&(Fa.instance=new Fa),Fa.instance}static registerManager(t,n){$(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(ll)&&(t=t.slice(0,t.indexOf(ll))),$(t.length>0,()=>"scheme must not be an empty string.");let r=Fa.getInstance();$(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=Fa.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(Fa.getInstance().managers)}};function Yh(e){if(e.indexOf(ll)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ka.getSchemes().join(",")}`);return{scheme:e.split(ll)[0],path:e.split(ll)[1]}}function oS(e,t,n=!1){return D(this,null,function*(){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=lr.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=lr.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Yh(e).scheme,l=Yh(e).path,u=o===Yh(e).scheme,d=yield a.load();n&&u&&(yield Ka.getManager(o).removeModel(l));let h=yield i.save(d);return n&&!u&&(yield Ka.getManager(o).removeModel(l)),h.modelArtifactsInfo})}function nO(){return D(this,null,function*(){let e=Ka.getSchemes(),t={};for(let n of e){let r=yield Ka.getManager(n).listModels();for(let a in r){let s=n+ll+a;t[s]=r[a]}}return t})}function rO(e){return D(this,null,function*(){let t=Yh(e);return Ka.getManager(t.scheme).removeModel(t.path)})}function aO(e,t){return D(this,null,function*(){return oS(e,t,!1)})}function sO(e,t){return D(this,null,function*(){return oS(e,t,!0)})}var iO=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return LI(e)}};if(H().get("IS_BROWSER")){H().setPlatform("browser",new iO);try{Ka.registerManager(gl.URL_SCHEME,new tO)}catch{}try{Ka.registerManager(fl.URL_SCHEME,new qM)}catch{}}var oO={importFetch:()=>YD()},Vy,lO=class{constructor(){this.util=QD(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(Vy==null&&(Vy=oO.importFetch()),Vy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new lO);function Le(e,t="float32",n){return t=t||"float32",Xn(e),new Dt(e,t,n)}function uO(e,t){let n=C(e,"x","cast");if(!TI(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return L.runKernel(ki,r,a)}var le=P({cast_:uO});function dO(e){let t={x:C(e,"x","clone","string_or_numeric")};return L.runKernel(Wi,t)}var Kr=P({clone_:dO});function Tx(e,t=!1){console.log(e.toString(t))}HI();var pO={buffer:Le,cast:le,clone:Kr,print:Tx};iM(pO);function hO(e,t){let n=C(e,"a","add"),r=C(t,"b","add");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(os,a)}var J=P({add_:hO});function cO(e,t){let n=C(e,"a","floorDiv"),r=C(t,"b","floorDiv");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(Pi,a)}var rm=P({floorDiv_:cO});function mO(e,t){let n=C(e,"a","div"),r=C(t,"b","div");if([n,r]=Nt(n,r),n.dtype==="int32"&&r.dtype==="int32")return rm(n,r);let a={a:n,b:r},s={};return L.runKernel(Fi,a,s)}var me=P({div_:mO});function fO(e,t){let n=C(e,"a","mul"),r=C(t,"b","mul");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(ro,a)}var z=P({mul_:fO});function gO(e){let t=C(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return L.runKernel(tp,n)}else{let n={x:t};return L.runKernel(Fl,n)}}var At=P({abs_:gO});function yO(e){let t={x:C(e,"x","acos")};return L.runKernel(hi,t)}var _x=P({acos_:yO});function bO(e){let t={x:C(e,"x","acosh")};return L.runKernel(ci,t)}var Cx=P({acosh_:bO});function xO(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>C(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ba(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return L.runKernel(mi,r)}var lS=P({addN_:xO});function vO(e,t=null,n=!1){let r={x:C(e,"x","all","bool")},a={axis:t,keepDims:n};return L.runKernel(Dl,r,a)}var am=P({all_:vO});function wO(e,t=null,n=!1){let r={x:C(e,"x","any","bool")},a={axis:t,keepDims:n};return L.runKernel(Rl,r,a)}var Md=P({any_:wO});function kO(e,t=0){let n={x:C(e,"x","argMax")},r={axis:t};return L.runKernel(Ml,n,r)}var Ys=P({argMax_:kO});function IO(e,t=0){let n={x:C(e,"x","argMin")},r={axis:t};return L.runKernel(Ol,n,r)}var Ex=P({argMin_:IO});function SO(e){let t={x:C(e,"x","asin")};return L.runKernel(fi,t)}var $x=P({asin_:SO});function NO(e){let t={x:C(e,"x","asinh")};return L.runKernel(gi,t)}var Ax=P({asinh_:NO});function TO(e){let t={x:C(e,"x","atan")};return L.runKernel(yi,t)}var Fx=P({atan_:TO});function _O(e,t){let n=C(e,"a","atan2"),r=C(t,"b","atan2");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(xi,a)}var Dx=P({atan2_:_O});function CO(e){let t={x:C(e,"x","atanh")};return L.runKernel(bi,t)}var Rx=P({atanh_:CO});function EO(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=pS(a);return Sp(e,o,n,s,r,null,null,l)}function uS(e,t,n,r,a,s,i="channelsLast"){let[o,l]=Od(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Sp(e,u,n,r,a,s,!1,i)}function $O(e,t,n,r,a,s,i="NDHWC"){let[o,l,u]=yb(t),d,h;if(i==="NDHWC")h="channelsLast",d=[o,l,u,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",d=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return dS(e,d,n,r,a,!1,h,s)}function Sp(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,d,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,d,h]=e;else if(o==="channelsFirst")[l,h,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,c,,m]=t,[f,g]=Od(n),[y,b]=Od(r),x=ul(p,y),v=ul(c,b),{padInfo:I,outHeight:N,outWidth:_}=DO(a,u,d,f,g,x,v,s,o),E=i?m*h:m,A;return o==="channelsFirst"?A=[l,E,N,_]:o==="channelsLast"&&(A=[l,N,_,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:N,outWidth:_,outChannels:E,padInfo:I,strideHeight:f,strideWidth:g,filterHeight:p,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function dS(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,d,h,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,d,h,p]=e;else if(i==="channelsFirst")[l,p,u,d,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=yb(n),[v,I,N]=yb(r),_=ul(c,v),E=ul(m,I),A=ul(f,N),{padInfo:R,outDepth:F,outHeight:S,outWidth:O}=RO(a,u,d,h,y,b,x,_,E,A,o),B=s?g*p:g,G;return i==="channelsFirst"?G=[l,B,F,S,O]:i==="channelsLast"&&(G=[l,F,S,O,B]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:h,inChannels:p,outDepth:F,outHeight:S,outWidth:O,outChannels:B,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:_,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:I,dilationWidth:N,inShape:e,outShape:G,filterShape:t}}function AO(e,t,n,r,a){r==null&&(r=Mx(e,t,n));let s=e[0],i=e[1],o=Ld((s-t+2*r)/n+1,a),l=Ld((i-t+2*r)/n+1,a);return[o,l]}function FO(e,t,n,r,a,s){a==null&&(a=Mx(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Ld((e[o]-t[o]+2*a)/r[o]+1,s));return i}function Mx(e,t,n,r=1){let a=ul(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Od(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function yb(e){return typeof e=="number"?[e,e,e]:e}function ul(e,t){return t<=1?e:e+(e-1)*(t-1)}function DO(e,t,n,r,a,s,i,o,l){let u,d,h;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=AO([t,n],s,r,e,o);d=p[0],h=p[1]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a);let p=Math.max(0,(d-1)*r+s-t),c=Math.max(0,(h-1)*a+i-n),m=Math.floor(p/2),f=p-m,g=Math.floor(c/2),y=c-g;u={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],m=l==="channelsLast"?e[2][0]:e[3][0],f=l==="channelsLast"?e[2][1]:e[3][1];u={top:p,bottom:c,left:m,right:f,type:p===0&&c===0&&m===0&&f===0?"VALID":"EXPLICIT"},d=Ld((t-s+p+c)/r+1,o),h=Ld((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:d,outWidth:h}}function RO(e,t,n,r,a,s,i,o,l,u,d){let h,p,c,m;if(e==="valid"&&(e=0),typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=FO([t,n,r,1],[o,l,u],1,[a,s,i],e,d);p=f[0],c=f[1],m=f[2]}else if(e==="same"){p=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let f=(p-1)*a+o-t,g=(c-1)*s+l-n,y=(m-1)*i+u-r,b=Math.floor(f/2),x=f-b,v=Math.floor(g/2),I=g-v,N=Math.floor(y/2),_=y-N;h={top:v,bottom:I,left:N,right:_,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:p,outHeight:c,outWidth:m}}function Ld(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Xa(e){let[t,n,r]=Od(e);return t===1&&n===1&&r===1}function ta(e,t){return Xa(e)||Xa(t)}function Qs(e){return Od(e).every(t=>t>0)}function pS(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function wn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")$(pl(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{$(pl(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function MO(e,t){let n={x:C(e,"x","reshape","string_or_numeric")},r={shape:t};return L.runKernel(gu,n,r)}var W=P({reshape_:MO});function OO(e,t,n,r,a){let s=C(e,"x","avgPool","float32"),i=1;$(ta(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=W(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),wn("avgPool",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=L.runKernel(vi,u,d);return h=le(h,s.dtype),l?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var va=P({avgPool_:OO});function LO(e,t,n,r,a,s="NDHWC"){let i=C(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),wn("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=L.runKernel(Ll,u,d);return h=le(h,o.dtype),l?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Ox=P({avgPool3d_:LO});function PO(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=Rd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Kr(n[0]);let r=n,a={axis:t};return L.runKernel(Wl,r,a)}var lt=P({concat_:PO});function zO(e,t,n=!1,r=!1){let a=C(e,"a","matMul"),s=C(t,"b","matMul");[a,s]=Nt(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return L.runKernel(wi,i,o)}var Me=P({matMul_:zO});function BO(e){let t={x:C(e,"x","sigmoid","float32")};return L.runKernel(ko,t)}var gr=P({sigmoid_:BO});function WO(e,t,n){let r=C(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return L.runKernel(Iu,a,s)}var Ge=P({slice_:WO});function VO(e){let t={x:C(e,"x","tanh","float32")};return L.runKernel($o,t)}var Za=P({tanh_:VO});function UO(e,t,n,r,a,s){let i=C(e,"forgetBias","basicLSTMCell"),o=C(t,"lstmKernel","basicLSTMCell"),l=C(n,"lstmBias","basicLSTMCell"),u=C(r,"data","basicLSTMCell"),d=C(a,"c","basicLSTMCell"),h=C(s,"h","basicLSTMCell"),p=lt([u,h],1),c=Me(p,o),m=J(c,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Ge(m,[0,0],y),x=Ge(m,[0,g],y),v=Ge(m,[0,g*2],y),I=Ge(m,[0,g*3],y),N=J(z(gr(b),Za(x)),z(d,gr(J(i,v)))),_=z(Za(N),gr(I));return[N,_]}var hS=P({basicLSTMCell_:UO});function GO(e,t,n){let r=C(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);$(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return L.runKernel(Pl,s,i)}var Np=P({batchToSpaceND_:GO});function HO(e){let t;return e.rank===0||e.rank===1?t=W(e,[1,1,1,e.size]):e.rank===2?t=W(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function jO(e,t,n,r,a,s){s==null&&(s=.001);let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;r!=null&&(d=C(r,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:HO(i),scale:u,offset:d,mean:o,variance:l},p={varianceEpsilon:s},c=L.runKernel(zi,h,p);return W(c,i.shape)}var Ao=P({batchNorm_:jO});function qO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),Ao(i,o,l,d,u,s)}var Lx=P({batchNorm2d_:qO});function KO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),Ao(i,o,l,d,u,s)}var Px=P({batchNorm3d_:KO});function XO(e,t,n,r,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm"),u;a!=null&&(u=C(a,"scale","batchNorm"));let d;return r!=null&&(d=C(r,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&$(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),Ao(i,o,l,d,u,s)}var zx=P({batchNorm4d_:XO});function ZO(e,t,n){let r=C(e,"x","bincount"),a=C(t,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return L.runKernel(zl,s,i)}var Bx=P({bincount_:ZO});function JO(e,t){let n=C(e,"x","bitwiseAnd"),r=C(t,"y","bitwiseAnd");if(!ba(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return L.runKernel(Bl,a)}var cS=P({bitwiseAnd_:JO});function YO(e,t){let n=C(e,"s0","broadcastArgs","int32"),r=C(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return L.runKernel(ep,a)}var mS=P({broadcastArgs_:YO});function QO(e,t){let n=C(e,"broadcastTo","x"),r=n.shape;if(Xn(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=W(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return Kr(n);let i={x:n},o={reps:s};return L.runKernel(us,i,o)}var Vs=P({broadcastTo_:QO});function e3(e){let t={x:C(e,"x","ceil","float32")};return L.runKernel(Ii,t)}var Wx=P({ceil_:e3});function Un(e,t,n){Xn(e),n=n||Jd(t);let r={shape:e,value:t,dtype:n};return L.runKernel(ap,{},r)}function t3(e,t,n){let r=C(e,"x","clipByValue");if($(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Un(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return L.runKernel(ls,a,s)}var un=P({clipByValue_:t3});function n3(e){return lt(e,0)}var Vx=P({concat1d_:n3});function r3(e,t){return lt(e,t)}var Ux=P({concat2d_:r3});function a3(e,t){return lt(e,t)}var Gx=P({concat3d_:a3});function s3(e,t){return lt(e,t)}var Hx=P({concat4d_:s3});function i3(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),wn("conv2d",r,i);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),$(ta(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(Qs(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(Qs(n),()=>"Error in conv2D: Strides should be larger than 0.");let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=L.runKernel(Si,p,c);return d?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var yn=P({conv2d_:i3});function o3(e,t,n,r,a="NWC",s=1,i){let o=C(e,"x","conv1d"),l=C(t,"filter","conv1d"),u=o,d=!1;o.rank===2&&(d=!0,u=W(o,[1,o.shape[0],o.shape[1]])),$(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),wn("conv1d",r,i),$(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(ta(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(Qs(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(Qs(n),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=W(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=W(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=yn(p,h,[1,n],r,"NHWC",[1,s],i);return d?W(c,[c.shape[2],c.shape[3]]):W(c,[c.shape[0],c.shape[2],c.shape[3]])}var sm=P({conv1d_:o3});function l3(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let d=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];$(d===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`),$(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),wn("conv2dDerInput",a,i);let p={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=L.runKernel(Ni,p,c);return u?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var jx=P({conv2DBackpropInput_:l3});function u3(e,t,n,r,a,s){let i=C(e,"x","conv2dTranspose"),o=C(t,"filter","conv2dTranspose");return jx(n,i,o,r,a,"NHWC",s)}var im=P({conv2dTranspose_:u3});function d3(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=C(e,"x","conv3d"),o=C(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(ta(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(Qs(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(Qs(n),()=>"Error in conv3D: Strides should be larger than 0.");let d={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=L.runKernel(Ti,d,h);return u?W(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var qx=P({conv3d_:d3});function p3(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=W(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=L.runKernel(Ul,d,h);return o?W(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var fS=P({conv3DBackpropInput_:p3});function h3(e,t,n,r,a){let s=C(e,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return fS(n,s,i,r,a)}var Kx=P({conv3dTranspose_:h3});function c3(e){let t={x:C(e,"x","cos","float32")};return L.runKernel(_i,t)}var Tp=P({cos_:c3});function m3(e){let t={x:C(e,"x","cosh","float32")};return L.runKernel(Ci,t)}var om=P({cosh_:m3});function f3(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return L.runKernel(Gl,a,s)}var Pd=P({cumprod_:f3});function g3(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return L.runKernel(Ei,a,s)}var lm=P({cumsum_:g3});function y3(e,t,n,r=!1){let a=C(e,"x","denseBincount"),s=C(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return L.runKernel(np,i,o)}var cc=P({denseBincount_:y3});function b3(e,t,n="NHWC"){let r=C(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return L.runKernel(jl,o,l)}var Xx=P({depthToSpace_:b3});function x3(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=a==="NHWC"?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),wn("depthwiseConv2d",r,i);let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=L.runKernel($i,p,c);return d?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Fo=P({depthwiseConv2d_:x3});function v3(e){let t={x:C(e,"x","diag")};return L.runKernel(rp,t)}var gS=P({diag_:v3});function w3(e,t,n,r,a=[1,1],s="NHWC"){let i=C(e,"x","dilation2d"),o=C(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=W(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),$(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let d={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=L.runKernel(Ai,d,h);return u?W(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zx=P({dilation2d_:w3}),Ru={};Ee(Ru,{assertAndGetBroadcastShape:()=>ut,getBroadcastDims:()=>yS,getReductionAxes:()=>Mt});function yS(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function Mt(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function ut(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r[n-a-1]=i;else if(i===1)r[n-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r[n-a-1]=s}return r}function k3(e,t){let n=C(e,"a","equal","string_or_numeric"),r=C(t,"b","equal","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(Kl,a)}var Gn=P({equal_:k3});function I3(e,t,n){let r=C(t,"a","where"),a=C(n,"b","where"),s=C(e,"condition","where","bool"),i=ut(ut(s.shape,r.shape),a.shape),o=Vs(s,i),l=Vs(r,i),u=Vs(a,i),d={condition:o,t:l,e:u};return L.runKernel(ku,d)}var Jt=P({where_:I3});function S3(e){let t={x:C(e,"x","zerosLike")};return L.runKernel(Fu,t)}var He=P({zerosLike_:S3});function N3(e,t){let n=C(e,"a","div"),r=C(t,"b","div");[n,r]=Nt(n,r);let a=me(n,r),s=He(a),i=Gn(r,s);return Jt(i,s,a)}var Jx=P({divNoNan_:N3});function T3(e,t){let n=C(e,"t1","dot"),r=C(t,"t2","dot");$((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=W(n,[1,-1]),o=W(r,[-1,1]),l=Me(i,o);return W(l,[])}else if(n.rank===1&&r.rank===2){let i=W(n,[1,-1]),o=W(r,[r.shape[0],r.shape[1]]),l=Me(i,o);return W(l,[l.size])}else if(n.rank===2&&r.rank===1){let i=W(r,[-1,1]),o=Me(n,i);return W(o,[o.size])}else{let i=W(r,[r.shape[0],r.shape[1]]);return Me(n,i)}}var Yx=P({dot_:T3});function _3(e,...t){let n=t.map((a,s)=>C(a,`tensors${s}`,"einsum")),r={equation:e};return L.runKernel(jc,n,r)}var Os=P({einsum_:_3});function C3(e){let t={x:C(e,"x","elu","float32")};return L.runKernel(Di,t)}var Mu=P({elu_:C3});function E3(e,t){let n=C(e,"x","ensureShape","string_or_numeric");if(!kI(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var bS=P({ensureShape_:E3});function $3(e){let t=C(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=le(t,"float32"));let n={x:t};return L.runKernel(Ri,n)}var um=P({erf_:$3});function Qx(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function xS(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function vS(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function ei(e,t){let n=t.map(r=>1);return xS(e,n,t)}function A3(e,t,n){$(Qx(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function wS(e,t){if(Qx(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function ev(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function F3(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function D3(e,t=null,n=!1){let r={x:C(e,"x","max")},a={reductionIndices:t,keepDims:n};return L.runKernel(Xi,r,a)}var ir=P({max_:D3});function R3(e,t=null,n=!1){let r={x:C(e,"x","min")},a={axis:t,keepDims:n};return L.runKernel(Qi,r,a)}var yl=P({min_:R3});function M3(e,t){let n=C(e,"base","pow"),r=C(t,"exp","pow");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(io,a)}var Yr=P({pow_:M3});function we(e,t){if((Kt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Kt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ps(e,[],[],t)}function O3(e){let t={x:C(e,"x","sqrt","float32")};return L.runKernel(So,t)}var Yt=P({sqrt_:O3});function L3(e){let t=C(e,"x","square"),n={};return L.runKernel("Square",{x:t},n)}var ot=P({square_:L3});function P3(e,t=null,n=!1){let r=C(e,"x","sum");r.dtype==="bool"&&(r=le(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return L.runKernel(No,a,s)}var ge=P({sum_:P3});function z3(e,t="euclidean",n=null,r=!1){e=C(e,"x","norm");let a=kS(e,t,n),s=a.shape;if(r){let i=xr(n,e.shape);s=ei(a.shape,i)}return W(a,s)}function kS(e,t,n=null){if(e.rank===0)return At(e);if(e.rank!==1&&n===null)return kS(W(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ge(At(e),n);if(t===1/0)return ir(At(e),n);if(t===-1/0)return yl(At(e),n);if(t==="euclidean"||t===2)return Yt(ge(Yr(At(e),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return ir(ge(At(e),n[0]),n[1]-1);if(t===1/0)return ir(ge(At(e),n[1]),n[0]);if(t===-1/0)return yl(ge(At(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Yt(ge(ot(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Ou=P({norm_:z3});function B3(e,t=null,n=!1){return Ou(e,"euclidean",t,n)}var tv=P({euclideanNorm_:B3});function W3(e){let t={x:C(e,"x","exp")};return L.runKernel(Mi,t)}var dn=P({exp_:W3});function V3(e,t=0){let n=C(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return L.runKernel(Xl,r,a)}var Xt=P({expandDims_:V3});function U3(e){let t={x:C(e,"x","expm1")};return L.runKernel(Oi,t)}var nv=P({expm1_:U3});function G3(e,t){let n=C(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return L.runKernel(us,r,a)}var Vn=P({tile_:G3});function H3(e,t,n,r="float32"){t==null&&(t=e);let a=Le([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=W(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Vn(Xt(i,0),[n[0],1,1]);if(n.length===2)return Vn(Xt(Xt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Vn(Xt(Xt(Xt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var dm=P({eye_:H3});function j3(e){let t={x:C(e,"x","floor","float32")};return L.runKernel(Li,t)}var Lu=P({floor_:j3});function q3(e,t,n=0,r=0){let a=C(e,"x","gather"),s=C(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return L.runKernel(Jl,i,o)}var Pu=P({gather_:q3});function K3(e,t){let n=C(e,"a","greater","string_or_numeric"),r=C(t,"b","greater","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(Ql,a)}var kn=P({greater_:K3});function X3(e,t){let n=C(e,"a","greaterEqual","string_or_numeric"),r=C(t,"b","greaterEqual","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(Bi,a)}var wa=P({greaterEqual_:X3});function Z3(e){let t={input:C(e,"input","imag")};return L.runKernel(Xc,t)}var _p=P({imag_:Z3});function J3(e){let t={x:C(e,"x","isFinite")};return L.runKernel(Vi,t)}var rv=P({isFinite_:J3});function Y3(e){let t={x:C(e,"x","isInf")};return L.runKernel(Ui,t)}var av=P({isInf_:Y3});function Q3(e){let t={x:C(e,"x","isNaN")};return L.runKernel(Gi,t)}var sv=P({isNaN_:Q3});function eL(e,t=.2){let n={x:C(e,"x","leakyRelu")},r={alpha:t};return L.runKernel(Hi,n,r)}var Cp=P({leakyRelu_:eL});function tL(e,t){let n=C(e,"a","less","string_or_numeric"),r=C(t,"b","less","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(eu,a)}var bl=P({less_:tL});function nL(e,t){let n=C(e,"a","lessEqual","string_or_numeric"),r=C(t,"b","lessEqual","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(tu,a)}var hs=P({lessEqual_:nL});function IS(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return L.runKernel(nu,{},r)}function rL(e,t=5,n=1,r=1,a=.5){let s=C(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(pl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=W(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=L.runKernel(Ki,l,u);return o?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var iv=P({localResponseNormalization_:rL});function aL(e){let t={x:C(e,"x","log","float32")};return L.runKernel(ji,t)}var Hn=P({log_:aL});function sL(e){let t={x:C(e,"x","log1p")};return L.runKernel(qi,t)}var Ep=P({log1p_:sL});function iL(e){return $(Ha(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=C(t,"x","tf.grad","string_or_numeric"),a=n!=null?C(n,"dy","tf.grad"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(r),[r],a);return a!=null&&vn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),pm(i),i[0]})}}function oL(e){return $(Ha(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Rd(t,"args","tf.grads","string_or_numeric"),a=n!=null?C(n,"dy","tf.grads"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(...r),r,a);return a!=null&&vn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(i),i})}}function lL(e){return $(Ha(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Re,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Re,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=L.gradients(()=>e(t),[t],n);return pm(r),{grad:r[0],value:a}}}function uL(e){return $(Ha(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof Re),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Re,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=L.gradients(()=>e(...t),t,n);return n!=null&&vn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pm(r.grads),r}}function SS(e,t){$(Ha(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(u=>u instanceof Zs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in L.registeredVariables)t.push(L.registeredVariables[u])}let r=n?t.filter(u=>!u.trainable):null,a=t.length;t=t.filter(u=>u.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=L.gradients(e,t,null,s);$(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,d)=>{o[d]!=null&&(l[u.name]=o[d])}),r?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Qr(e){return L.customGrad(e)}function pm(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function dL(e){let t={x:C(e,"x","neg")};return L.runKernel(uu,t)}var ft=P({neg_:dL});function pL(e){let t={x:C(e,"x","softplus")};return L.runKernel(Io,t)}var Do=P({softplus_:pL});function hL(e){let t=C(e,"x","logSigmoid");return Qr(n=>({value:ft(Do(ft(n))),gradFunc:r=>z(r,gr(ft(n)))}))(t)}var ov=P({logSigmoid_:hL});function cL(e,t){let n=C(e,"a","sub"),r=C(t,"b","sub");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(Co,a)}var ce=P({sub_:cL});function mL(e,t=-1){let n=C(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Qr((r,a)=>{let s=ir(r,t,!0),i=ce(r,s),o=ce(le(i,"float32"),Hn(ge(dn(i),t,!0)));return a([o]),{value:o,gradFunc:(l,u)=>{let[d]=u,h=!0,p=dn(d);return ce(l,z(ge(l,t,h),p))}}})(n)}var hm=P({logSoftmax_:mL});function fL(e,t=null,n=!1){let r=C(e,"x","logSumExp"),a=xr(t,r.shape),s=ir(r,a,!0),i=ce(r,s),o=dn(i),l=ge(o,a),u=Hn(l),d=J(W(s,u.shape),u);if(n){let h=ei(d.shape,a);return W(d,h)}return d}var $p=P({logSumExp_:fL});function gL(e,t){let n=C(e,"a","logicalAnd","bool"),r=C(t,"b","logicalAnd","bool");ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(ru,a)}var yr=P({logicalAnd_:gL});function yL(e){let t={x:C(e,"x","logicalNot","bool")};return L.runKernel(au,t)}var Ap=P({logicalNot_:yL});function bL(e,t){let n=C(e,"a","logicalOr","bool"),r=C(t,"b","logicalOr","bool");ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(su,a)}var cm=P({logicalOr_:bL});function xL(e,t){let n=C(e,"a","logicalXor","bool"),r=C(t,"b","logicalXor","bool");return ut(n.shape,r.shape),yr(cm(e,t),Ap(yr(e,t)))}var lv=P({logicalXor_:xL}),Mh=2147483648;function vL(e,t,n="left"){let r=C(e,"sortedSequence","searchSorted"),a=C(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=W(r,[-1,s]),l=W(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(rt(l.shape)>=Mh)throw new Error(`values tensor size must less than ${Mh}`);if(o.shape[1]>=Mh)throw new Error(`trailing dim_size must less than ${Mh} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return L.runKernel(wu,u,d)}var mm=P({searchSorted_:vL});function NS(e,t){return mm(e,t,"left")}function wL(e,t,n,r,a){let s=C(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=W(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(ta(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),wn("maxPool",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=L.runKernel(Ji,u,d);return l?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var jt=P({maxPool_:wL});function kL(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=C(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),wn("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=L.runKernel(ou,u,d);return l?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var uv=P({maxPool3d_:kL});function IL(e,t,n,r,a=!1){let s={x:C(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=L.runKernel(op,s,i);return{result:o[0],indexes:o[1]}}var TS=P({maxPoolWithArgmax_:IL});function SL(e,t){let n=C(e,"a","maximum"),r=C(t,"b","maximum");[n,r]=Nt(n,r),n.dtype==="bool"&&(n=le(n,"int32"),r=le(r,"int32")),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(Zi,a)}var na=P({maximum_:SL});function NL(e,t=null,n=!1){let r={x:C(e,"x","mean")},a={axis:t,keepDims:n};return L.runKernel(Yi,r,a)}var kt=P({mean_:NL});function It(e,t="float32"){if(Xn(e),t==="complex64"){let r=It(e,"float32"),a=It(e,"float32");return ga(r,a)}let n=zc(rt(e),t);return L.makeTensor(n,e,t)}function En(e,t="float32"){if(Xn(e),t==="complex64"){let r=En(e,"float32"),a=It(e,"float32");return ga(r,a)}let n=fx(rt(e),t);return L.makeTensor(n,e,t)}function _S(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=C(e,"x","meshgrid",e instanceof Re?e.dtype:"float32");if(t===void 0)return[r];let a=C(t,"y","meshgrid",t instanceof Re?t.dtype:"float32"),s=rt(r.shape),i=rt(a.shape);return n==="xy"?(r=W(r,[1,-1]),a=W(a,[-1,1]),[Me(En([i,1],r.dtype),r),Me(a,En([1,s],a.dtype))]):(r=W(r,[-1,1]),a=W(a,[1,-1]),[Me(r,En([1,i],r.dtype)),Me(En([s,1],a.dtype),a)])}function TL(e,t){let n=C(e,"a","minimum"),r=C(t,"b","minimum");[n,r]=Nt(n,r),n.dtype==="bool"&&(n=le(n,"int32"),r=le(r,"int32")),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(eo,a)}var Ja=P({minimum_:TL});function _L(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=C(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return L.runKernel(to,i,s)}var dv=P({mirrorPad_:_L});function CL(e,t){let n=C(e,"a","mod"),r=C(t,"b","mod");[n,r]=Nt(n,r);let a={a:n,b:r};return L.runKernel(no,a)}var pv=P({mod_:CL});function EL(e,t=null,n=!1){e=C(e,"x","moments");let r=xr(t,e.shape),a=kt(e,r,n),s=a.shape;n||(s=ei(a.shape,r));let i=ot(ce(le(e,"float32"),W(a,s))),o=kt(i,r,n);return{mean:a,variance:o}}var Fp=P({moments_:EL});function $L(e,t,n,r){let a=C(t,"data","multiRNNCell"),s=Rd(n,"c","multiRNNCell"),i=Rd(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let p=e[h](o,s[h],i[h]);l.push(p[0]),l.push(p[1]),o=p[1]}let u=[],d=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),d.push(l[h+1]);return[u,d]}var CS=P({multiRNNCell_:$L});function AL(e,t,n,r=!1){let a=C(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?W(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=L.runKernel(lu,o,l);return i===1?W(u,[u.size]):u}var ES=P({multinomial_:AL});function FL(e,t){let n=C(e,"a","notEqual","string_or_numeric"),r=C(t,"b","notEqual","string_or_numeric");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r};return L.runKernel(du,a)}var ti=P({notEqual_:FL});function DL(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return L.runKernel(ao,s,i)}var xl=P({oneHot_:DL});function RL(e){let t={x:C(e,"x","onesLike")};return L.runKernel(mu,t)}var jn=P({onesLike_:RL});function ML(e,t){let n=C(e,"v1","outerProduct"),r=C(t,"v2","outerProduct");$(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=W(n,[-1,1]),s=W(r,[1,-1]);return Me(a,s)}var $S=P({outerProduct_:ML});function OL(e,t,n=0){let r=C(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return L.runKernel(so,s,a)}var Rr=P({pad_:OL});function LL(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Rr(e,[t],n)}var AS=P({pad1d_:LL});function PL(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(e,t,n)}var FS=P({pad2d_:PL});function zL(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(e,t,n)}var DS=P({pad3d_:zL});function BL(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(e,t,n)}var RS=P({pad4d_:BL});function WL(e,t,n){let r=C(e,"x","spaceToBatchND");$(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return L.runKernel(Su,a,s)}var Dp=P({spaceToBatchND_:WL});function VL(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=C(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(ta(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let d=uS(l.shape,t,s,a,r),h=[d.dilationHeight,d.dilationWidth],p;r==="same"?p=GL([d.filterHeight,d.filterWidth],h):p=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[m,f]=UL([d.inHeight,d.inWidth],h,p),g=c?r:"valid",y=c?l:Dp(l,h,m),b=(n==="avg"?()=>va(y,t,s,g,i):()=>jt(y,t,s,g,i))(),x=c?b:Np(b,h,f);return u?W(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function UL(e,t,n){let r=n.map(d=>d[0]),a=n.map(d=>d[1]),s=e.concat(r,a),i=t.map((d,h)=>(d-s[h]%d)%d),o=a.map((d,h)=>d+i[h]),l=t.map((d,h)=>[r[h],o[h]]),u=t.map((d,h)=>[0,i[h]]);return[l,u]}function GL(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var hv=P({pool_:VL});function HL(e,t){let n=C(e,"x","prelu"),r=C(t,"alpha","prelu"),a={x:n,alpha:r};return L.runKernel(oo,a)}var Rp=P({prelu_:HL});function jL(e,t=null,n=!1){let r=C(e,"x","prod");r.dtype==="bool"&&(r=le(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return L.runKernel(lo,a,s)}var cv=P({prod_:jL});function qL(e,t,n,r){let a=e.map((d,h)=>C(d,`tensors${h}`,"raggedGather","int32")),s=C(t,"paramsDenseValues","raggedGather"),i=C(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=L.runKernel(Zc,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var MS=P({raggedGather_:qL});function KL(e,t,n){let r=C(e,"starts","raggedRange"),a=C(t,"limits","raggedRange",r.dtype),s=C(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=L.runKernel(Jc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var OS=P({raggedRange_:KL});function XL(e,t,n,r,a){let s=C(e,"shape","raggedTensorToTensor","int32"),i=C(t,"values","raggedTensorToTensor"),o=C(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((h,p)=>C(h,`tensors${p}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},d={rowPartitionTypes:a};return L.runKernel(Yc,u,d)}var LS=P({raggedTensorToTensor_:XL});function ZL(e,t,n){Xn(e);let r=rt(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return L.makeTensor(a,e,n)}var PS=P({rand_:ZL}),mv=is(Lc()),zS={};Ee(zS,{TEST_EPSILON_FLOAT16:()=>BS,createVideoElement:()=>aP,encodeStrings:()=>WS,expectArrayBuffersEqual:()=>rP,expectArraysClose:()=>YL,expectArraysEqual:()=>eP,expectNumbersClose:()=>tP,expectPromiseToFail:()=>QL,expectValuesInRange:()=>nP,play:()=>sP,testEpsilon:()=>fv});var JL=.001,BS=.1;function YL(e,t,n){return n==null&&(n=fv()),bb(e,t,(r,a)=>gv(r,a,n))}function fv(){return L.backend.floatPrecision()===32?JL:BS}function bb(e,t,n){let r=!0;if((Kt(e)||Kt(t))&&(r=!1),Kt(e)&&Kt(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Jr(e),o=Jr(t);if(!ba(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Kt(e)?e:ja(e),s=Kt(t)?t:ja(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function QL(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function eP(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Pa(e)||Pa(e[0])||Pa(t)||Pa(t[0])?bb(e,n,(r,a)=>r==a):bb(e,t,(r,a)=>gv(r,a,0))}function tP(e,t,n){if(n==null&&(n=fv()),!gv(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function gv(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function nP(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function rP(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function WS(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?WS(n):e[t]=wp(n)}return e}function aP(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}function sP(e){return D(this,null,function*(){yield e.play(),"requestVideoFrameCallback"in e&&(yield new Promise(t=>{e.requestVideoFrameCallback(t)}))})}var yv=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=mv.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},iP=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=mv.alea(a.toString()),this.randn=new yv(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},oP=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=mv.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function lP(e,t,n=1,r="float32",a){if(Xn(e),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new iP(t,n,r,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var VS=P({randomGamma_:lP});function uP(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new yv(t,n,r,!1,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var fm=P({randomNormal_:uP});function dP(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return fm(e,0,1,t,n)}var US=P({randomStandardNormal_:dP});function pP(e,t=0,n=1,r="float32",a){Xn(e);let s=Le(e,r),i=new oP(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var cs=P({randomUniform_:pP});function hP(e,t,n,r){return cs(e,t,n,"int32",r)}var GS=P({randomUniformInt_:hP});function ni(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return L.runKernel(lp,{},a)}function cP(e){let t={input:C(e,"input","real")};return L.runKernel(Qc,t)}var vl=P({real_:cP});function mP(e){let t={x:C(e,"x","reciprocal")};return L.runKernel(uo,t)}var bv=P({reciprocal_:mP});function fP(e){let t={x:C(e,"x","relu")};return L.runKernel(po,t)}var nt=P({relu_:fP});function gP(e){let t={x:C(e,"x","relu6")};return L.runKernel(mo,t)}var gm=P({relu6_:gP});function yP(e,t){let n={x:C(e,"x","reverse")},r={dims:t};return L.runKernel(fo,n,r)}var ur=P({reverse_:yP});function bP(e){let t=C(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ur(t,0)}var HS=P({reverse1d_:bP});function xP(e,t){let n=C(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ur(n,t)}var jS=P({reverse2d_:xP});function vP(e,t){let n=C(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ur(n,t)}var qS=P({reverse3d_:vP});function wP(e,t){let n=C(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ur(n,t)}var KS=P({reverse4d_:wP});function kP(e){let t={x:C(e,"x","round")};return L.runKernel(go,t)}var ym=P({round_:kP});function IP(e){let t={x:C(e,"x","rsqrt","float32")};return L.runKernel(yo,t)}var bm=P({rsqrt_:IP});function SP(e){let t={x:C(e,"x","selu")};return L.runKernel(bo,t)}var xm=P({selu_:SP});function NP(e,t,n,r,a,s=[1,1],i="NHWC"){let o=C(e,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(n,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(o.rank===3&&(h=!0,d=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let p=l.shape[2],c=l.shape[3];$(u.shape[2]===p*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${u.shape[2]}.`);let m=Fo(d,l,r,a,i,s),f=yn(m,u,1,"valid",i);return h?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var zu=P({separableConv2d_:NP});function TP(e,t){return D(this,null,function*(){let n=C(e,"x","setdiff1d"),r=C(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=yield n.data(),s=yield r.data(),i=new Set(s),o=0;for(let d=0;d<a.length;d++)i.has(a[d])||o++;let l=new Dt([o],n.dtype),u=new Dt([o],"int32");for(let d=0,h=0;d<a.length;d++)i.has(a[d])||(l.values[h]=a[d],u.values[h]=d,h++);return[l.toTensor(),u.toTensor()]})}var XS=TP;function _P(e){let t={x:C(e,"x","sign")};return L.runKernel(wo,t)}var xv=P({sign_:_P});function CP(e){let t={x:C(e,"x","sin","float32")};return L.runKernel(xo,t)}var vm=P({sin_:CP});function EP(e){let t={x:C(e,"x","sinh")};return L.runKernel(vo,t)}var wm=P({sinh_:EP});function $P(e,t,n){let r=C(e,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ge(r,[t],[n])}var Mp=P({slice1d_:$P});function AP(e,t,n){let r=C(e,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ge(r,t,n)}var km=P({slice2d_:AP});function FP(e,t,n){let r=C(e,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ge(r,t,n)}var Bu=P({slice3d_:FP});function DP(e,t,n){let r=C(e,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ge(r,t,n)}var wl=P({slice4d_:DP});function RP(e,t=-1){let n=C(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return L.runKernel(To,r,a)}var ms=P({softmax_:RP});function MP(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(qc,t)}var Op=P({fft_:MP});function OP(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(Kc,t)}var kl=P({ifft_:OP});function LP(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=W(e,[n,t]);r=kl(a)}else{let a=[n,2*(t-1)],s=W(vl(e),[n,t]),i=W(_p(e),[n,t]),o=ur(Ge(s,[0,1],[n,t-2]),1),l=z(ur(Ge(i,[0,1],[n,t-2]),1),we(-1)),u=lt([s,o],1),d=lt([i,l],1),h=W(ga(u,d),[a[0],a[1]]);r=kl(h)}if(r=vl(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=W(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var Im=P({irfft_:LP});function PP(e,t,n=0){let r={x:C(e,"x","split")},a={numOrSizeSplits:t,axis:n};return L.runKernel(Nu,r,a)}var $n=P({split_:PP});function zP(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,a=Ge(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,a=lt([e,It(m)],e.shape.length-1),n=t}else a=e;let s=He(a),i=W(ga(a,s),[r,n]),o=Op(i),l=Math.floor(n/2)+1,u=vl(o),d=_p(o),h=$n(u,[l,n-l],u.shape.length-1),p=$n(d,[l,n-l],d.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,W(ga(h[0],p[0]),c)}var Lp=P({rfft_:zP});function BP(e,t){let n=C(e,"a","squaredDifference"),r=C(t,"b","squaredDifference");[n,r]=Nt(n,r),ut(n.shape,r.shape);let a={a:n,b:r},s={};return L.runKernel(_o,a,s)}var Sm=P({squaredDifference_:BP});function WP(e,t){let n=C(e,"x","squeeze","string_or_numeric");return W(n,II(n.shape,t).newShape)}var fs=P({squeeze_:WP});function VP(e,t=0){let n=Rd(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return L.runKernel(fu,r,a)}var Rt=P({stack_:VP});function UP(e,t=0){let n={x:C(e,"x","step")},r={alpha:t};return L.runKernel(ds,n,r)}var Ro=P({step_:UP});function GP(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:C(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return L.runKernel(Cu,u,d)}var vv=P({stridedSlice_:GP});function HP(e){let t={x:C(e,"x","tan","float32")};return L.runKernel(Eo,t)}var wv=P({tan_:HP});function et(e,t){pi(e);let n=Jr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ps(e,null,n,t)}function Xr(e,t,n){if(pi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Jr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ps(e,t,r,n)}function Nm(e,t,n){if(pi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Jr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ps(e,t,r,n)}function Ya(e,t,n){if(pi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Jr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ps(e,t,r,n)}function ZS(e,t,n){if(pi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Jr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ps(e,t,r,n)}function JS(e,t,n){if(pi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Jr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ps(e,t,r,n)}var Tm={};Ee(Tm,{calculateShapes:()=>YS,validateInput:()=>_m,validateUpdateShape:()=>kv});function kv(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function _m(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}kv(n,t,e)}function YS(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a,l=rt(t.shape)/o,u=[...Al(n.slice(0,a)),1],d=rt(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:d}}function jP(e,t,n){let r=C(e,"tensor","tensorScatterupdate"),a=C(t,"indices","tensorScatterupdate","int32"),s=C(n,"updates","tensorScatterupdate");if(_m(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return L.runKernel(vu,i,o)}var QS=P({tensorScatterUpdate_:jP});function qP(e,t=1,n=!0){let r=C(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=L.runKernel(Eu,s,i);return{values:o,indices:l}}var Iv=P({topk_:qP});function KP(e,t=0,n=1,r,a){if(Xn(e),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new yv(t,n,r,!0,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Cm=P({truncatedNormal_:KP});function XP(e,t=0){let n=C(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=L.runKernel(yp,r,a);return{values:s,indices:i}}var Sv=P({unique_:XP});function ZP(e,t,n){let r=C(e,"x","unsortedSegmentSum"),a=C(t,"segmentIds","unsortedSegmentSum","int32");$(pl(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return L.runKernel(bp,s,i)}var Em=P({unsortedSegmentSum_:ZP});function JP(e,t=0){let n=C(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return L.runKernel(Au,r,a)}var Tt=P({unstack_:JP});function eN(e,t){return mm(e,t,"right")}function Nv(e,t=!0,n,r){return L.makeVariable(e,t,n,r)}function tN(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Le(e,"int32"),a=Le([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}function YP(e){return D(this,null,function*(){let t=C(e,"condition","whereAsync","bool"),n=yield t.data(),r=tN(t.shape,n);return e!==t&&t.dispose(),r})}var Tv=YP;function QP(e,t,n){return D(this,null,function*(){let r=C(e,"tensor","boolMask"),a=C(t,"mask","boolMask","bool"),s=n??0,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),vn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=s;f<s+i;f++)l*=o[f];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=W(r,u),h=W(a,[-1]),p=yield Tv(h),c=fs(p,[1]),m=Pu(d,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),d.dispose(),h.dispose(),p.dispose(),m})}var nN=QP;function ez(e,t,n){let r=C(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?V(()=>{let i=vl(r),o=_p(r);return i=L.runKernel(ca,{x:i},s),o=L.runKernel(ca,{x:o},s),n&&(o=ft(o)),ga(i,o)}):L.runKernel(ca,a,s)}var Oe=P({transpose_:ez});function tz(e,t,n,r,a=!0){let s=C(e,"v","movingAverage"),i=C(t,"x","movingAverage"),o=C(n,"decay","movingAverage");UI(s,i),$(ba(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=we(1),u=ce(l,o),d=z(ce(i,s),u);if(a){$(r!=null,()=>"When using zeroDebias: true, step is required.");let h=C(r,"step","movingAverage");d=me(d,ce(l,Yr(o,h)))}return J(s,d)}var rN=P({movingAverage_:tz});function nz(e,t,n){Xn(n);let r=C(e,"indices","scatterND","int32"),a=C(t,"updates","scatterND");_m(a,r,n);let s={indices:r,updates:a},i={shape:n};return L.runKernel(xu,s,i)}var aN=P({scatterND_:nz});function rz(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function az(e,t,n,r=0){Xn(n);let a=C(e,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense","string_or_numeric"),i=C(r,"defaultValue","sparseToDense",s.dtype);rz(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return L.runKernel(_u,o,l)}var sN=P({sparseToDense_:az});function sz(e,t){let n=C(t,"indices","gatherND","int32"),r={params:C(e,"x","gatherND","string_or_numeric"),indices:n};return L.runKernel(Yl,r)}var iN=P({gatherND_:sz});function iz(e,t){if(t==null)return e.shape.slice();if(ba(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function oz(e,t,n,r){let a=C(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Re?a.clone():a;let s=iz(a,n),i=1-t,o=me(Lu(J(cs(s,0,1,"float32",r),i)),i);return z(a,o)}var _v=P({dropout_:oz});function Cv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $m(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return et(a,"float32")}function lz(e,t,n=1){return D(this,null,function*(){let r=C(e,"predictions","inTopK"),a=C(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),vn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=yield r.data(),o=yield a.data(),[l,u]=[i.length/s,s],d=SI("bool",l);for(let h=0;h<l;h++){let p=h*u,c=i.subarray(p,p+u),m=[];for(let f=0;f<c.length;f++)m.push({value:c[f],index:f});m.sort((f,g)=>g.value-f.value),d[h]=0;for(let f=0;f<n;f++)if(m[f].index===o[h]){d[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),gn(d,a.shape,"bool")})}var oN=lz,Il={};Ee(Il,{conv2d:()=>pz,depthwiseConv2d:()=>fz,matMul:()=>yz});function uz(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],d=s==="NHWC"?l.shape[3]:l.shape[1];$(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),$(d===n[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`),wn("conv2dDerFilter",a,i);let h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return L.runKernel(Vc,h,p)}var Ev=P({conv2DBackpropFilter_:uz});function Am(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,Ro(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Fm(e,t){let n=t,r=Mt(e.shape,t.shape);return r.length>0&&(n=ge(n,r)),W(n,e.shape)}function Dm(e,t,n,r){if(t==="linear")return e;if(t==="relu")return nt(e);if(t==="elu")return Mu(e);if(t==="relu6")return gm(e);if(t==="prelu")return Rp(e,n);if(t==="leakyrelu")return Cp(e,r);if(t==="sigmoid")return gr(e);throw new Error(`Unknown fused activation ${t}.`)}var Rm=(e,t)=>!(e>0)||t==="linear";function dz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",Rm(L.state.gradientDepth,l)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=yn(e,t,n,r,a,s,i);return o!=null&&(N=J(N,o)),Dm(N,l,u,d)}let h=C(e,"x","conv2d","float32"),p=C(t,"filter","conv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=W(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),wn("fused conv2d",r,i);let f=a==="NHWC"?c.shape[3]:c.shape[1];$(p.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${p.shape[2]}.`),$(ta(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=Sp(c.shape,p.shape,n,s,r,i),y;o!=null&&(y=C(o,"bias","fused conv2d"),[y]=Nt(y,h),a==="NHWC"?ut(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(u!=null){let N=u.shape;if($(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)$(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{ut(N,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=C(u,"prelu weights","fused conv2d")}let x=(N,_)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,R,F]=_,S=Am(N,R,l);$(Xa(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let O=jx(A.shape,S,E,n,r),B=Ev(A,S,E.shape,n,r),G=[O,B];if(F!=null){let j=Fm(F,S);G.push(j)}return G},v={x:c,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Qr((N,_,E)=>{let A=L.runKernel(Ks,v,I);return E([_,N,A]),m&&(A=W(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,p):Qr((N,_,E,A)=>{let R=L.runKernel(Ks,v,I);return A([_,N,R,E]),m&&(R=W(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,p,y)}var pz=P({fusedConv2d_:dz});function hz(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return L.runKernel(Uc,u,d)}var lN=P({depthwiseConv2dNativeBackpropFilter_:hz});function cz(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=L.runKernel(Gc,u,d);return l?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var uN=P({depthwiseConv2dNativeBackpropInput_:cz});function mz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(Rm(L.state.gradientDepth,l)===!1){let I=Fo(e,t,n,r,a,s,i);return o!=null&&(I=J(I,o)),Dm(I,l,u,d)}let h=C(e,"x","depthwiseConv2d","float32"),p=C(t,"filter","depthwiseConv2d","float32"),c=h,m=!1;h.rank===3&&(m=!0,c=W(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),$(c.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),s==null&&(s=[1,1]),$(ta(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),wn("fused depthwiseConv2d",r,i);let f=Sp(c.shape,p.shape,n,s,r,i,!0),g;o!=null&&(g=C(o,"bias","fused conv2d"),[g]=Nt(g,h),ut(f.outShape,g.shape));let y;u!=null&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let b=(I,N)=>{$(Xa(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,E,A,R]=N,F=Am(I,A,l),S=uN(E.shape,F,_,n,r,s,i),O=lN(E,F,_.shape,n,r,s,i);if(R!=null){let B=Fm(g,F);return[S,O,B]}return[S,O]},x={x:c,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Qr((I,N,_)=>{let E=L.runKernel(Xs,x,v);return _([N,I,E]),m&&(E=W(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,p):Qr((I,N,_,E)=>{let A=L.runKernel(Xs,x,v);return E([N,I,A,_]),m&&(A=W(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,p,g)}var fz=P({fusedDepthwiseConv2d_:mz});function gz({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Rm(L.state.gradientDepth,s)===!1){let R=Me(e,t,n,r);return a!=null&&(R=J(R,a)),Dm(R,s,i,o)}let l=C(e,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=Nt(l,u);let d=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=rt(m),y=rt(f);$(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=ut(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,c]),x=n?W(l,[g,d,p]):W(l,[g,p,d]),v=r?W(u,[y,c,h]):W(u,[y,h,c]),I;a!=null&&(I=C(a,"bias","fused matMul"),[I]=Nt(I,l),ut(b,I.shape));let N;i!=null&&(N=C(i,"prelu weights","fused matMul"));let _=(R,F)=>{let[S,O,B,G]=F,j=Am(W(R,B.shape),B,s),K,X;if(!n&&!r?(K=Me(j,O,!1,!0),X=Me(S,j,!0,!1)):!n&&r?(K=Me(j,O,!1,!1),X=Me(j,S,!0,!1)):n&&!r?(K=Me(O,j,!1,!0),X=Me(S,j,!1,!1)):(K=Me(O,j,!0,!0),X=Me(j,S,!0,!0)),a!=null){let Y=Fm(G,j);return[K,X,Y]}else return[K,X]},E={a:x,b:v,bias:I,preluActivationWeights:N},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?Qr((R,F,S)=>{let O=L.runKernel(qs,E,A);return S([R,F,O]),{value:W(O,b),gradFunc:_}})(x,v):Qr((R,F,S,O)=>{let B=L.runKernel(qs,E,A);return O([R,F,B,S]),{value:W(B,b),gradFunc:_}})(x,v,I)}var yz=P({fusedMatMul_:gz});function bz(e){return $m(e,.54,.46)}var xz=P({hammingWindow_:bz});function vz(e){return $m(e,.5,.5)}var dN=P({hannWindow_:vz});function wz(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ge(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=lt([Ge(e,s,t-o),Un([o],a)]);i.push(l),s+=n}return i.length===0?Xr([],[0,t]):W(lt(i),[i.length,t])}var pN=P({frame_:wz});function kz(e,t,n,r,a=dN){r==null&&(r=Cv(t));let s=pN(e,t,n),i=z(s,a(t));return Lp(i,r)}var Iz=P({stft_:kz});function Sz(e,t,n,r,a="bilinear",s=0){let i=C(e,"image","cropAndResize"),o=C(t,"boxes","cropAndResize","float32"),l=C(n,"boxInd","cropAndResize","int32"),u=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),$(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let d={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return L.runKernel(Hl,d,h)}var Nz=P({cropAndResize_:Sz});function Tz(e){let t=C(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return L.runKernel(Zl,n,{})}var _z=P({flipLeftRight_:Tz});function Cz(e){let t=C(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Vn(t,a)}var Ez=P({grayscaleToRGB_:Cz});function $z(e){let t=C(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),$(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a=t.dtype,s=le(t,"float32"),i=et([.2989,.587,.114]),o;switch(t.rank){case 2:o=Os("ij,j->i",s,i);break;case 3:o=Os("ijk,k->ij",s,i);break;case 4:o=Os("ijkl,l->ijk",s,i);break;case 5:o=Os("ijklm,m->ijkl",s,i);break;case 6:o=Os("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Xt(o,-1),le(o,a)}var Az=P({rgbToGrayscale_:$z});function Fz(e,t,n=0,r=.5){let a=C(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return L.runKernel(Du,s,i)}var Dz=P({rotateWithOffset_:Fz});function Wu(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function Rz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppression","float32"),i=C(t,"scores","nonMaxSuppression","float32"),o=Wu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return L.runKernel(pu,{boxes:s,scores:i},l)}var Mz=P({nonMaxSuppression_:Rz});function Oz(e,t,n){let r=Lz(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Lz(e,t,n){return zz(e,t,n||Pz)}function Pz(e,t){return e>t?1:e<t?-1:0}function zz(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function hN(e,t,n,r,a){return $v(e,t,n,r,a,0)}function cN(e,t,n,r,a,s){return $v(e,t,n,r,a,0,!1,s,!0)}function mN(e,t,n,r,a,s){return $v(e,t,n,r,a,s,!0)}function $v(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(W1);let d=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let v=!1;for(let I=h.length-1;I>=x;--I){let N=Bz(e,b,h[I]);if(N>=r){v=!0;break}if(g.score=g.score*Wz(r,d,N),g.score<=a)break}g.suppressBeginIndex=h.length,v||(g.score===y?(h.push(b),p.push(g.score)):g.score>a&&Oz(u,g,W1))}let c=h.length,m=n-c;o&&m>0&&(h.push(...new Array(m).fill(0)),p.push(...new Array(m).fill(0)));let f={selectedIndices:h};return i&&(f.selectedScores=p),l&&(f.validOutputs=c),f}function Bz(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-s)*(l-i),m=(h-u)*(p-d);if(c<=0||m<=0)return 0;let f=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(c+m-x)}function Wz(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function W1(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Vz(s,i,o){return D(this,arguments,function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let l=C(e,"boxes","nonMaxSuppressionAsync"),u=C(t,"scores","nonMaxSuppressionAsync"),d=Wu(l,u,n,r,a);n=d.maxOutputSize,r=d.iouThreshold,a=d.scoreThreshold;let h=yield Promise.all([l.data(),u.data()]),p=h[0],c=h[1],{selectedIndices:m}=hN(p,c,n,r,a);return l!==e&&l.dispose(),u!==t&&u.dispose(),et(m,"int32")})}var Uz=Vz;function Gz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=Wu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=L.runKernel(cu,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}var Hz=P({nonMaxSuppressionWithScore_:Gz});function jz(i,o,l){return D(this,arguments,function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let u=C(e,"boxes","nonMaxSuppressionAsync"),d=C(t,"scores","nonMaxSuppressionAsync"),h=Wu(u,d,n,r,a,s);n=h.maxOutputSize,r=h.iouThreshold,a=h.scoreThreshold,s=h.softNmsSigma;let p=yield Promise.all([u.data(),d.data()]),c=p[0],m=p[1],{selectedIndices:f,selectedScores:g}=mN(c,m,n,r,a,s);return u!==e&&u.dispose(),d!==t&&d.dispose(),{selectedIndices:et(f,"int32"),selectedScores:et(g)}})}var qz=jz;function Kz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=Wu(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},m=L.runKernel(hu,p,c);return{selectedIndices:m[0],validOutputs:m[1]}}var Xz=P({nonMaxSuppressionPadded_:Kz});function Zz(i,o,l){return D(this,arguments,function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let u=C(e,"boxes","nonMaxSuppressionAsync"),d=C(t,"scores","nonMaxSuppressionAsync"),h=Wu(u,d,n,r,a,null),p=h.maxOutputSize,c=h.iouThreshold,m=h.scoreThreshold,[f,g]=yield Promise.all([u.data(),d.data()]),{selectedIndices:y,validOutputs:b}=cN(f,g,p,c,m,s);return u!==e&&u.dispose(),d!==t&&d.dispose(),{selectedIndices:et(y,"int32"),validOutputs:we(b,"int32")}})}var Jz=Zz;function Yz(e,t,n=!1,r=!1){let a=C(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=W(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=L.runKernel(co,o,l);return i?W(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var fN=P({resizeBilinear_:Yz});function Qz(e,t,n=!1,r=!1){let a=C(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=W(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=L.runKernel(ho,o,l);return i?W(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var gN=P({resizeNearestNeighbor_:Qz});function eB(e,t="binary",n=!1,r=.5){let a=C(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],u=z(et([r]),255),d,h,p,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[d,h,p]=$n(a,[1,1,1],-1);let f=z(d,s),g=z(h,i),y=z(p,o);c=J(J(f,g),y)}else c=e;if(t==="otsu"){let f=Bx(le(ym(c),"int32"),gn([]),256);u=tB(f,l)}let m=n?hs(c,u):kn(c,u);return le(z(m,255),"int32")}function tB(e,t){let n=et([-1]),r=et([0]),a=et([0]),s,i,o,l,u,d;for(let h=0;h<e.size-1;h++){s=Ge(e,0,h+1),i=Ge(e,h+1),u=me(ge(s),t),d=me(ge(i),t);let p=ge(z(s,ni(0,s.size)));o=me(p,ge(s));let c=Un(i.shape,s.size),m=J(ni(0,i.size),c),f=z(i,m);l=me(ge(f),ge(i));let g=ce(o,l),y=ce(o,l),b=z(u,d);a=z(z(b,g),y);let x=kn(a,r);r=Jt(x,a,r),n=Jt(x,et([h]),n)}return n}var nB=P({threshold_:eB});function rB(e,t,n="nearest",r="constant",a=0,s){let i=C(e,"image","transform","float32"),o=C(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return L.runKernel($u,l,u)}var aB=P({transform_:rB});function sB(e,t,n){let r=C(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,l;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=C(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Jt(bl(t,0),s,Ja(t,s))),typeof n=="number"?($(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=C(n<0?i:n,"numUpper","bandPart")):($(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Jt(bl(n,0),i,Ja(n,i)));let u=W(ni(0,s,1,"int32"),[-1,1]),d=ni(0,i,1,"int32"),h=ce(u,d),p=yr(hs(h,o),wa(h,ft(l))),c=It([s,i],r.dtype);return W(Rt(Tt(W(r,[-1,s,i])).map(m=>Jt(p,m,c))),a)}var iB=P({bandPart_:sB});function oB(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=$n(e,e.shape[0],0).map(a=>fs(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(L.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=z(ge(z(n[i],s)),n[i]);s=ce(s,o)}return me(s,Ou(s,"euclidean"))}));return t?Rt(n,0):n}var lB=P({gramSchmidt_:oB});function uB(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return V1(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),r=Tt(W(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(l=>{let[u,d]=V1(l,t);a.push(u),s.push(d)});let i=W(Rt(a,0),e.shape),o=W(Rt(s,0),e.shape);return[i,o]}}function V1(e,t=!1){return L.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=dm(n),s=Kr(e),i=Xr([[1]],[1,1]),o=Kr(i),l=n>=r?r:n;for(let u=0;u<l;++u){let d=s,h=o,p=a;[o,s,a]=L.tidy(()=>{let c=Ge(s,[u,u],[n-u,1]),m=Ou(c),f=Ge(s,[u,u],[1,1]),g=Jt(kn(f,0),Xr([[-1]]),Xr([[1]])),y=ce(f,z(g,m)),b=me(c,y);b.shape[0]===1?o=Kr(i):o=lt([i,Ge(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=ft(me(Me(g,y),m)),v=Ge(s,[u,0],[n-u,r]),I=z(x,o),N=Oe(o);if(u===0)s=ce(v,Me(I,Me(N,v)));else{let A=ce(v,Me(I,Me(N,v)));s=lt([Ge(s,[0,0],[u,r]),A],0)}let _=Oe(I),E=Ge(a,[0,u],[n,a.shape[1]-u]);if(u===0)a=ce(E,Me(Me(E,o),_));else{let A=ce(E,Me(Me(E,o),_));a=lt([Ge(a,[0,0],[n,u]),A],1)}return[o,s,a]}),Ce([d,h,p])}return!t&&n>r&&(a=Ge(a,[0,0],[n,r]),s=Ge(s,[0,0],[r,r])),[a,s]})}var dB=P({qr_:uB}),mn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(mn||(mn={}));function pB(e,t,n=mn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=C(t,"weights","computeWeightedLoss"));let s=a==null?r:z(r,a);if(n===mn.NONE)return s;if(n===mn.SUM)return ge(s);if(n===mn.MEAN){if(a==null)return kt(s);{let i=r.size/a.size,o=me(ge(s),ge(a));return i>1?me(o,we(i)):o}}if(n===mn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return me(ge(s),we(r.size));{let i=z(a,En(r.shape)),o=le(ge(ti(i,we(0))),"float32");return me(ge(s),o)}}throw Error(`Unknown reduction: ${n}`)}var ka=P({computeWeightedLoss_:pB});function hB(e,t,n,r=mn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=C(n,"weights","absoluteDifference")),vn(a.shape,s.shape,"Error in absoluteDifference: ");let o=At(ce(a,s));return ka(o,i,r)}var cB=P({absoluteDifference_:hB});function mB(e,t,n,r,a=mn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),o=null;r!=null&&(o=C(r,"weights","cosineDistance")),vn(s.shape,i.shape,"Error in cosineDistance: ");let l=we(1),u=ce(l,ge(z(s,i),n,!0));return ka(u,o,a)}var fB=P({cosineDistance_:mB});function gB(e,t,n,r=mn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;n!=null&&(i=C(n,"weights","hingeLoss")),vn(a.shape,s.shape,"Error in hingeLoss: ");let o=we(1);a=ce(z(we(2),a),o);let l=nt(ce(o,z(a,s)));return ka(l,i,r)}var yB=P({hingeLoss_:gB});function bB(e,t,n,r=1,a=mn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),o=null;n!=null&&(o=C(n,"weights","huberLoss")),vn(s.shape,i.shape,"Error in huberLoss: ");let l=we(r),u=At(ce(i,s)),d=Ja(u,l),h=ce(u,d),p=J(z(we(.5),ot(d)),z(l,h));return ka(p,o,a)}var xB=P({huberLoss_:bB});function vB(e,t,n,r=1e-7,a=mn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","logLoss"),i=C(t,"predictions","logLoss"),o=null;n!=null&&(o=C(n,"weights","logLoss")),vn(s.shape,i.shape,"Error in logLoss: ");let l=we(1),u=we(r),d=ft(z(s,Hn(J(i,u)))),h=z(ce(l,s),Hn(J(ce(l,i),u))),p=ce(d,h);return ka(p,o,a)}var wB=P({logLoss_:vB});function kB(e,t,n,r=mn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=C(n,"weights","meanSquaredError")),vn(a.shape,s.shape,"Error in meanSquaredError: ");let o=Sm(a,s);return ka(o,i,r)}var IB=P({meanSquaredError_:kB});function SB(e,t){let n=C(e,"labels","sigmoidCrossEntropyWithLogits"),r=C(t,"logits","sigmoidCrossEntropyWithLogits");vn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=nt(r),s=z(r,n),i=Ep(dn(ft(At(r))));return J(ce(a,s),i)}function NB(e,t,n,r=0,a=mn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","sigmoidCrossEntropy")),vn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=we(r),d=we(1),h=we(.5);s=J(z(s,ce(d,u)),z(h,u))}let l=SB(s,i);return ka(l,o,a)}var TB=P({sigmoidCrossEntropy_:NB});function _B(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Qr((r,a,s)=>{let i=$p(a,[n],!0),o=ce(le(a,"float32"),i);s([r,o]);let l=ft(z(o,r));return{value:ge(l,[n]),gradFunc:(u,d)=>{let[h,p]=d,c=ei(u.shape,[n]);return[z(W(u,c),ce(le(h,"float32"),dn(p))),z(W(u,c),ce(dn(p),le(h,"float32")))]}}})(e,t)}function CB(e,t,n,r=0,a=mn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=C(n,"weights","softmaxCrossEntropy")),vn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let u=we(r),d=we(1),h=we(s.shape[1]);s=J(z(s,ce(d,u)),me(u,h))}let l=_B(s,i);return ka(l,o,a)}var EB=P({softmaxCrossEntropy_:CB});function $B(e,t,n,r){let a=C(e,"indices","sparseFillEmptyRows","int32"),s=C(t,"values","sparseFillEmptyRows"),i=C(n,"denseShape","sparseFillEmptyRows","int32"),o=C(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=L.runKernel(up,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var AB=P({sparseFillEmptyRows_:$B});function FB(e,t,n){let r=C(e,"inputIndices","sparseReshape","int32"),a=C(t,"inputShape","sparseReshape","int32"),s=C(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=L.runKernel(Tu,i);return{outputIndices:o[0],outputShape:o[1]}}var DB=P({sparseReshape_:FB});function RB(e,t,n){let r=C(e,"data","sparseSegmentMean"),a=C(t,"indices","sparseSegmentMean","int32"),s=C(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return L.runKernel(dp,i)}var MB=P({sparseSegmentMean_:RB});function OB(e,t,n){let r=C(e,"data","sparseSegmentSum"),a=C(t,"indices","sparseSegmentSum","int32"),s=C(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return L.runKernel(pp,i)}var LB=P({sparseSegmentSum_:OB});function PB(e,t,n,r,a,s,i,o){let l=C(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=L.runKernel(mp,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}var zB=P({stringNGrams_:PB});function BB(e,t,n=!0){let r=C(e,"input","stringSplit","string"),a=C(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=L.runKernel(fp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var WB=P({stringSplit_:BB});function VB(e,t){let n=C(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return L.runKernel(gp,a,r)}var UB=P({stringToHashBucketFast_:VB});function GB(e,t,n,r=!0){let a=C(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return L.runKernel(cp,{x:a},s)}var HB=P({staticRegexReplace_:GB}),yN={fft:Op,ifft:kl,rfft:Lp,irfft:Im},bN={hammingWindow:xz,hannWindow:dN,frame:pN,stft:Iz},nr={flipLeftRight:_z,grayscaleToRGB:Ez,resizeNearestNeighbor:gN,resizeBilinear:fN,rgbToGrayscale:Az,rotateWithOffset:Dz,cropAndResize:Nz,nonMaxSuppression:Mz,nonMaxSuppressionAsync:Uz,nonMaxSuppressionWithScore:Hz,nonMaxSuppressionWithScoreAsync:qz,nonMaxSuppressionPadded:Xz,nonMaxSuppressionPaddedAsync:Jz,threshold:nB,transform:aB},Av={bandPart:iB,gramSchmidt:lB,qr:dB},xN={absoluteDifference:cB,computeWeightedLoss:ka,cosineDistance:fB,hingeLoss:yB,huberLoss:xB,logLoss:wB,meanSquaredError:IB,sigmoidCrossEntropy:TB,softmaxCrossEntropy:EB},vN={sparseFillEmptyRows:AB,sparseReshape:DB,sparseSegmentMean:MB,sparseSegmentSum:LB},wN={stringNGrams:zB,stringSplit:WB,stringToHashBucketFast:UB,staticRegexReplace:HB},re={};Ee(re,{Serializable:()=>kN,SerializationMap:()=>IN,getRegisteredName:()=>qB,registerClass:()=>SN});var jB=new Map,xb=new Map,kN=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},IN=class sl{constructor(){this.classNameMap={}}static getMap(){return sl.instance==null&&(sl.instance=new sl),sl.instance}static register(t){sl.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function SN(e,t,n){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);let r=n,a=t+">"+r;return IN.register(e),jB.set(a,e),xb.set(e,a),e}function qB(e){return xb.has(e)?xb.get(e):e.className}var Ia=class extends kN{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return Ce(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return SS(e,t)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}saveIterations(){return D(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}})}getWeights(){return D(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(e){return D(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(e){return D(this,null,function*(){return this.iterations_=(yield e[0].tensor.data())[0],e.slice(1)})}};Object.defineProperty(Ia,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Fv=class extends Ia{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:V(()=>He(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:V(()=>He(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;V(()=>{let l=J(z(i,this.rho),z(ot(s),1-this.rho)),u=z(me(Yt(J(o,this.epsilon)),Yt(J(i,this.epsilon))),s),d=J(z(o,this.rho),z(ot(u),1-this.rho));i.assign(l),o.assign(d);let h=J(z(u,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(e=>e.variable)),Ce(this.accumulatedUpdates.map(e=>e.variable)))}getWeights(){return D(this,null,function*(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return D(this,null,function*(){e=yield this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Dv=class extends Ia{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:V(()=>Un(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;V(()=>{let i=J(s,ot(a));s.assign(i);let o=J(z(me(a,Yt(J(i,L.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(e=>e.variable))}getWeights(){return D(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return D(this,null,function*(){e=yield this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Rv=class extends Ia{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(n).variable()}),r==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ce(1,this.accBeta1),r=ce(1,this.accBeta2);t.forEach((a,s)=>{let i=L.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:V(()=>He(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:V(()=>He(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedSecondMoment[s].variable,h=J(z(u,this.beta1),z(l,1-this.beta1)),p=J(z(d,this.beta2),z(ot(l),1-this.beta2)),c=me(h,n),m=me(p,r);u.assign(h),d.assign(p);let f=J(z(me(c,J(Yt(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(e=>e.variable))}getWeights(){return D(this,null,function*(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return D(this,null,function*(){e=yield this.extractIterations(e),V(()=>{this.accBeta1.assign(Yr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Yr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Mv=class extends Ia{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),r==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ce(1,this.accBeta1),r=me(-this.learningRate,J(z(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=L.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:He(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:He(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedWeightedInfNorm[s].variable,h=J(z(u,this.beta1),z(l,1-this.beta1)),p=z(d,this.beta2),c=At(l),m=na(p,c);u.assign(h),d.assign(m);let f=J(z(me(r,n),me(h,J(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(e=>e.variable))}getWeights(){return D(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(e){return D(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Mm=class extends Ia{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=L.registeredVariables[t];V(()=>{let s=J(z(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Pt(we(-e))}dispose(){this.c.dispose()}getWeights(){return D(this,null,function*(){return[yield this.saveIterations()]})}setWeights(e){return D(this,null,function*(){if(e=yield this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Ov=class extends Mm{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:V(()=>He(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&V(()=>{let i,o=J(z(this.m,a),s);this.useNesterov?i=J(z(this.c,J(s,z(o,this.m))),r):i=J(z(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}getWeights(){return D(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(e){return D(this,null,function*(){e=yield this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Lv=class extends Ia{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=L.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:V(()=>He(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:V(()=>He(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:V(()=>He(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;V(()=>{let l=J(z(i,this.decay),z(ot(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[n].variable,d=J(z(u,this.decay),z(s,1-this.decay)),h=me(z(s,this.learningRate),Yt(ce(l,J(ot(d),this.epsilon)))),p=J(z(o,this.momentum),h);i.assign(l),u.assign(d),o.assign(p);let c=ce(r,p);r.assign(c)}else{let u=J(z(i,this.decay),z(ot(s),1-this.decay)),d=J(z(o,this.momentum),me(z(s,this.learningRate),Yt(J(u,this.epsilon))));i.assign(u),o.assign(d);let h=ce(r,d);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(e=>e.variable))}getWeights(){return D(this,null,function*(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(e){return D(this,null,function*(){e=yield this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},KB=[Fv,Dv,Rv,Mv,Ov,Lv,Mm];function XB(){for(let e of KB)SN(e)}var an={};Ee(an,{CompositeArrayBuffer:()=>xa,browserFiles:()=>nW,browserHTTPRequest:()=>lW,concatenateArrayBuffers:()=>OM,copyModel:()=>aO,decodeWeights:()=>ZI,decodeWeightsStream:()=>YI,encodeWeights:()=>$M,fromMemory:()=>dW,fromMemorySync:()=>EN,getLoadHandlers:()=>GM,getModelArtifactsForJSON:()=>Nx,getModelArtifactsForJSONSync:()=>eS,getModelArtifactsInfoForJSON:()=>Ip,getSaveHandlers:()=>UM,getWeightSpecs:()=>cb,http:()=>zv,isHTTPScheme:()=>kb,listModels:()=>nO,loadWeights:()=>aW,moveModel:()=>sO,registerLoadRouter:()=>VM,registerSaveRouter:()=>WM,removeModel:()=>rO,weightsLoaderFactory:()=>TN,withSaveHandler:()=>pW,withSaveHandlerSync:()=>hW});var ZB="model",JB=".json",YB=".weights.bin";function U1(e){return new Promise(t=>setTimeout(t)).then(e)}var vb=(()=>{let e=class wb{constructor(n){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");n.startsWith(wb.URL_SCHEME)&&(n=n.slice(wb.URL_SCHEME.length)),(n==null||n.length===0)&&(n=ZB),this.modelJsonFileName=n+JB,this.weightDataFileName=n+YB}save(n){return D(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let r=xa.join(n.weightData),a=window.URL.createObjectURL(new Blob([r],{type:"application/octet-stream"}));if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=[{paths:["./"+this.weightDataFileName],weights:n.weightSpecs}],i=QI(n,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=o,yield U1(()=>l.dispatchEvent(new MouseEvent("click"))),n.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=a,yield U1(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ip(n)}}})}};return e.URL_SCHEME="downloads://",e})(),QB=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}load(){return D(this,null,function*(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=Nx(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>B1(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=B1(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},eW=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vb.URL_SCHEME)?tW(e.slice(vb.URL_SCHEME.length)):null;lr.registerSaveRouter(eW);function tW(e="model"){return new vb(e)}function nW(e){return new QB(e)}function G1(e,t,n,r){i(e),n=n??0,r=r??1,o(n,r);let a=0,s=l=>(l.then(u=>{let d=n+ ++a/e.length*(r-n);return t(d),u}),l);function i(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}function NN(e,t){return D(this,null,function*(){t==null&&(t={});let n=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,r=e.map(s=>n(s,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(r):yield G1(r,t.onProgress,0,.5)).map(s=>s.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield G1(a,t.onProgress,.5,1)})}function rW(e,t){var n;let r=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,a=0,s;return(n=t.onProgress)===null||n===void 0||n.call(t,0),new ReadableStream({pull:i=>D(this,null,function*(){for(var o;a<e.length;){s||(s=(yield r(e[a],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield s.read();if(l){a++,s=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,a/e.length);continue}i.enqueue(u);return}i.close()})})}function aW(e,t="",n,r){return D(this,null,function*(){return TN(a=>NN(a,{requestInit:r}))(e,t,n)})}function TN(e){return(t,n="",r)=>D(this,null,function*(){let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,m)=>{let f=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Js[y]*rt(g.shape),x=()=>{a[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((v,I)=>{v===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(c=>c)){let c=r.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,m,f)=>(m&&c.push(f),c),[]),u=[];l.forEach(c=>{t[c].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;u.push(f)})});let d=yield e(u),h={},p=0;return l.forEach(c=>{let m=t[c].paths.length,f=new xa(d.slice(p,p+m));s[c].forEach(g=>{let y=f.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=ZI(y,[g.manifestEntry]);for(let x in b)h[x]=b[x]}),p+=m}),h})}var sW="application/octet-stream",iW="application/json",Pv=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}save(e){return D(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=QI(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:iW}),"model.json"),e.weightData!=null){let s=xa.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:sW}),"model.weights.bin")}let a=yield this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ip(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)})}loadModelJSON(){return D(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=yield e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t})}load(){return D(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return Nx(e,t=>this.loadWeights(t))})}loadStream(){return D(this,null,function*(){let e=yield this.loadModelJSON(),t=yield this.getWeightUrls(e.weightsManifest),n=cb(e.weightsManifest),r=()=>rW(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})})}getWeightUrls(e){return D(this,null,function*(){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=oW(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let l of o.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):s.push(a+l+r);return this.weightUrlConverter&&s.push(...yield Promise.all(i)),s})}loadWeights(e){return D(this,null,function*(){let t=yield this.getWeightUrls(e),n=cb(e),r=yield NN(t,this.loadOptions);return[n,r]})}};Pv.URL_SCHEME_REGEX=/^https?:\/\//;function oW(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function kb(e){return e.match(Pv.URL_SCHEME_REGEX)!=null}var _N=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>kb(r)):n=kb(e),n)return zv(e,t)}return null};lr.registerSaveRouter(_N);lr.registerLoadRouter(_N);function zv(e,t){return new Pv(e,t)}function lW(e,t){return zv(e,t)}var Uy=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},CN=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},uW=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function dW(e,t,n,r){let a=arguments;return new uW(EN(...a))}function EN(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Uy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function pW(e){return new CN(e)}function hW(e){return new CN(e)}var $N={};Ee($N,{confusionMatrix:()=>mW});function cW(e,t,n){let r=C(e,"labels","confusionMatrix"),a=C(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=xl(le(r,"int32"),n),i=xl(le(a,"int32"),n),o=Oe(s),l=Me(o,i);return le(l,"int32")}var mW=P({confusionMatrix_:cW}),Pp={};Ee(Pp,{draw:()=>kW,fromPixels:()=>IW,fromPixelsAsync:()=>xW,toPixels:()=>wW});var $s,H1=!1;function AN(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(Fd(uc,L.backendName)!=null){let p={pixels:e},c={numChannels:t};return L.runKernel(uc,p,c)}let[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)d=e.data;else if(s||a||o){if($s==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")$s=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else $s=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});$s.canvas.width=l,$s.canvas.height=u,$s.drawImage(e,0,0,l,u),d=$s.getImageData(0,0,l,u).data}let h;if(t===4)h=new Int32Array(d);else{let p=l*u;h=new Int32Array(p*t);for(let c=0;c<p;c++)for(let m=0;m<t;++m)h[c*t+m]=d[c*4+m]}return Nm(h,[u,l,t],"int32")}function fW(e){return e!=null&&e.data instanceof Uint8Array}function gW(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function yW(e){return e!=null&&e.width!==0&&e.height!==0}function bW(e){return gW()&&!(e instanceof ImageBitmap)&&yW(e)&&!fW(e)}function xW(e,t=3){return D(this,null,function*(){let n=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&bW(e)){let r;try{r=yield createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return AN(n,t)})}function FN(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function vW(e){let t=e?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}function wW(e,t){return D(this,null,function*(){let n=C(e,"img","toPixels");if(!(e instanceof Re)){let u=n;n=le(u,"int32"),u.dispose()}FN(n);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2],i=yield n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let d=[0,0,0,255];for(let p=0;p<s;p++){let c=i[u*s+p];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(d[0]=c*o,d[1]=c*o,d[2]=c*o):d[p]=c*o}let h=u*4;l[h+0]=Math.round(d[0]),l[h+1]=Math.round(d[1]),l[h+2]=Math.round(d[2]),l[h+3]=Math.round(d[3])}if(t!=null){H1||Fd(Hc,L.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),H1=!0),t.width=a,t.height=r;let u=t.getContext("2d"),d=new ImageData(l,a,r);u.putImageData(d,0,0)}return n!==e&&n.dispose(),l})}function kW(e,t,n){let r=C(e,"img","draw");if(!(e instanceof Re)){let i=r;r=le(i,"int32"),i.dispose()}FN(r),vW(n?.imageOptions);let a={image:r},s={canvas:t,options:n};L.runKernel(Hc,a,s)}var IW=P({fromPixels_:AN}),Bv={};Ee(Bv,{prepareAndValidate:()=>DN});function DN(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(rt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let d=[...Al(e.shape).map(h=>h/u),1].slice(0,s);return[l,i,u,d]}var Bt={};Ee(Bt,{assertParamsValid:()=>NW,computeFlatOffset:()=>$W,computeOutShape:()=>_W,getNormalizedAxes:()=>CW,isSliceContinous:()=>EW,maskToAxes:()=>TW,parseSliceParams:()=>VN,sliceInfo:()=>AW,startForAxis:()=>BN,startIndicesWithElidedDims:()=>LN,stopForAxis:()=>WN,stopIndicesWithElidedDims:()=>PN,stridesForAxis:()=>zN,stridesWithElidedDims:()=>RN});var Ib=-2,SW=-1;function NW(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function TW(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function _W(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function RN(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function MN(e,t,n){return n<=e?n:n-(t-1)}function ON(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function CW(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){let c=t[0],m=n+1;d=LN(i,c,m,r,e),h=PN(o,c,m,a,e),p=RN(s,c,m,e)}else for(let c=0;c<u;c++)d[c]=BN(i,r,s,e,c,l),h[c]=WN(o,a,s,e,c,l),p[c]=zN(s,c,l);return{begin:d,end:h,strides:p}}function LN(e,t,n,r,a){let s=[...a],i=ON(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=MN(t,n,o),u=r[l];e&1<<l&&(u=0),s[o]=u}return s}function PN(e,t,n,r,a){let s=[...a],i=ON(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=MN(t,n,o),u=r[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=$d(0,s[o],a[o])}return s}function zN(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function BN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=$d(0,i,l-1),i}function WN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),o>0?i=$d(0,i,l):i=$d(-1,i,l-1),i}function EW(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function $W(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function VN(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function AW(e,t,n,r,a,s,i,o,l){let u;if(r==null?(u=new Array(t.length),u.fill(1)):u=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)d&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};FW(h,p);let c=!0,m=!0,f=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(p.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<b),v=e[b];if(v===-1){g.push(x?1:-1);continue}let I=[p.beginMask&1<<b,p.endMask&1<<b],N=[p.strides[b]>0?0:-1,p.strides[b]>0?v:v-1];if(x&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&p.strides[b]===1;let _=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(x){let F=p.begin[b]<0?v+p.begin[b]:p.begin[b];if(p.begin[b]=F,p.end[b]=p.begin[b]+1,F<0||F>=v)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=j1(p.begin[b],0,p.strides[b],v,I,N),p.end[b]=j1(p.end[b],1,p.strides[b],v,I,N);let R=p.strides[b]===1&&p.begin[b]===0&&p.end[b]===v;c=c&&R,m=m&&(b===0&&p.strides[b]===1||R)}else c=c&&p.strides[b]===1&&_,m=m&&(b===0&&p.strides[b]===1||_);let E,A=!1;if(p.beginValid&&p.endValid?(E=p.end[b]-p.begin[b],A=!0):x?(E=1,A=!0):_&&v>=0&&(p.strides[b]<0?E=-v:E=v,A=!0),A){let R;E===0||E<0!=p.strides[b]<0?R=0:R=Math.trunc(E/p.strides[b])+(E%p.strides[b]!==0?1:0),g.push(R)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){let x=p.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===Ib&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>p.finalShapeGatherIndices[x]!==Ib),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:p.begin,end:p.end,strides:p.strides}}function FW(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ib),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(SW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function j1(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var DW="4.21.0",UN=class{static sgd(e){return new Mm(e)}static momentum(e,t,n=!1){return new Ov(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Lv(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Rv(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Fv(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Mv(e,t,n,r,a)}static adagrad(e,t=.1){return new Dv(e,t)}},Ds=UN,RW=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function Wv(){return new Promise(e=>RW(()=>e()))}var T={};Ee(T,{ERF_A1:()=>XW,ERF_A2:()=>ZW,ERF_A3:()=>JW,ERF_A4:()=>YW,ERF_A5:()=>QW,ERF_P:()=>KW,PARALLELIZE_THRESHOLD:()=>Vv,RowPartitionType:()=>Ur,SELU_SCALE:()=>HN,SELU_SCALEALPHA:()=>GN,applyActivation:()=>Dm,assertAndGetBroadcastShape:()=>ut,assertAxesAreInnerMostDims:()=>A3,assertParamsConsistent:()=>MW,assignToTypedArray:()=>s4,axesAreInnerMostDims:()=>Qx,calculateShapes:()=>YS,checkEinsumDimSizes:()=>p4,checkPadOnDimRoundingMode:()=>wn,combineLocations:()=>xS,combineRaggedTensorToTensorShapes:()=>LW,complexWithEvenIndex:()=>n4,complexWithOddIndex:()=>r4,computeConv2DInfo:()=>Sp,computeConv3DInfo:()=>dS,computeDefaultPad:()=>Mx,computeDilation2DInfo:()=>EO,computeOptimalWindowSize:()=>WW,computeOutAndReduceShapes:()=>vS,computeOutShape:()=>OW,computePool2DInfo:()=>uS,computePool3DInfo:()=>$O,convertConv2DDataFormat:()=>pS,decodeEinsumEquation:()=>u4,eitherStridesOrDilationsAreOne:()=>ta,expandShapeToKeepDim:()=>ei,exponent:()=>o4,exponents:()=>i4,fromStringArrayToUint8:()=>F4,fromUint8ToStringArray:()=>A4,getAxesPermutation:()=>wS,getBroadcastDims:()=>yS,getComplexWithIndex:()=>a4,getEinsumComputePath:()=>h4,getEinsumPermutation:()=>d4,getFusedBiasGradient:()=>Fm,getFusedDyActivation:()=>Am,getImageCenter:()=>VW,getInnerMostAxes:()=>F3,getPermuted:()=>GW,getRaggedRank:()=>zW,getReductionAxes:()=>Mt,getReshaped:()=>UW,getReshapedPermuted:()=>HW,getRowPartitionTypesHelper:()=>PW,getSliceBeginCoords:()=>jW,getSliceSize:()=>qW,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>g4,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>y4,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>b4,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>w4,getSparseReshapeInputOutputMismatchErrorMessage:()=>I4,getSparseReshapeInputOutputMultipleErrorMessage:()=>k4,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>x4,getSparseReshapeNegativeOutputDimErrorMessage:()=>v4,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>_4,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>S4,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>N4,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>T4,getUndoAxesPermutation:()=>ev,isIdentityPermutation:()=>c4,log:()=>zR,mergeRealAndImagArrays:()=>e4,prepareAndValidate:()=>DN,prepareSplitSize:()=>f4,segment_util:()=>jN,shouldFuse:()=>Rm,slice_util:()=>Bt,splitRealAndImagArrays:()=>t4,stridesOrDilationsArePositive:()=>Qs,tupleValuesAreOne:()=>Xa,upcastType:()=>or,validateDefaultValueShape:()=>BW,validateInput:()=>_m,validateUpdateShape:()=>kv,warn:()=>La});function MW(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function OW(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Ur;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Ur||(Ur={}));function LW(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function PW(e){let t={FIRST_DIM_SIZE:Ur.FIRST_DIM_SIZE,VALUE_ROWIDS:Ur.VALUE_ROWIDS,ROW_LENGTHS:Ur.ROW_LENGTHS,ROW_SPLITS:Ur.ROW_SPLITS,ROW_LIMITS:Ur.ROW_LIMITS,ROW_STARTS:Ur.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function zW(e){return e.length===0?0:e[0]===Ur.FIRST_DIM_SIZE?e.length-1:e.length}function BW(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Vv=30;function WW(e){return e<=Vv?e:lc(e,Math.floor(Math.sqrt(e)))}function VW(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function UW(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function GW(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function HW(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function jW(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function qW(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var GN=1.7580993408473768,HN=1.0507009873554805,KW=.3275911,XW=.254829592,ZW=-.284496736,JW=1.421413741,YW=-1.453152027,QW=1.061405429;function e4(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function t4(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function n4(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function r4(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function a4(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function s4(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function i4(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function o4(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Gy="->",l4=/->/g,q1=",",K1="...";function u4(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(l4,"").length)/Gy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Gy}").`);let[r,a]=e.split(Gy);$(r.indexOf(K1)===-1,()=>`The ellipsis notation ("${K1}") is not supported yet.`);let s=r.split(q1),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<a.length;++p){let c=a[p];if(!s.some(m=>m.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let p=0;p<r.length;++p){let c=r[p];o.indexOf(c)===-1&&c!==q1&&o.push(c)}let l=new Array(s.length);for(let p=0;p<i;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let c=0;c<s[p].length;++c)l[p].push(o.indexOf(s[p][c]))}let u=o.length,d=a.length,h=[];for(let p=d;p<u;++p)h.push(p);return{allDims:o,summedDims:h,idDims:l}}function d4(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function p4(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function h4(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],l=m4(t,o);for(let u of l)s.indexOf(u)===-1&&(r[i].push(u),s.push(u))}return{path:n,steps:r}}function c4(e){return e.every((t,n)=>t===n)}function m4(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function f4(e,t,n=0){let r=[];if(typeof t=="number")$(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function g4(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function y4(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function b4(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function x4(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function v4(e,t){return`size ${e} must be non-negative, not ${t}`}function w4(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function k4(e,t){let n=rt(e),r=rt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function I4(e,t){let n=rt(e),r=rt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function S4(){return"segment ids must be >= 0"}function N4(){return"segment ids are not increasing"}function T4(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function _4(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var jN={};Ee(jN,{collectGatherOpShapeInfo:()=>$4,computeOutShape:()=>E4,segOpComputeOptimalWindowSize:()=>C4});function C4(e,t){let n=!1,r;for(e<=Vv?(r=e,n=!0):r=lc(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=lc(e,r+1);return r}function E4(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function $4(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),d*=e.shape[h];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function A4(e){try{return e.map(t=>pc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function F4(e){return e.map(t=>wp(t))}var ra={};Ee(ra,{nonMaxSuppressionV3Impl:()=>hN,nonMaxSuppressionV4Impl:()=>cN,nonMaxSuppressionV5Impl:()=>mN,whereImpl:()=>tN});XB();var qN={kernelName:Fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,Ro(le(n,"float32"),-1))}}},D4={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=ot(le(n,"float32")),a=Yt(ce(we(1),r));return ft(me(e,a))}}}},R4={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Yt(ce(ot(le(n,"float32")),1));return me(e,r)}}}},M4={kernelName:os,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=e,i=Mt(n.shape,a);return i.length>0&&(s=ge(s,i)),W(s,n.shape)},b:()=>{let s=e,i=Mt(r.shape,a);return i.length>0&&(s=ge(s,i)),W(s,r.shape)}}}},O4={kernelName:mi,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},L4={kernelName:Ml,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},P4={kernelName:Ol,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},z4={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Yt(ce(we(1),ot(le(n,"float32")))))}}},B4={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Yt(J(we(1),ot(le(n,"float32"))));return me(e,r)}}}},W4={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=J(ot(n),ot(r)),i=z(e,me(r,s)),o=Mt(n.shape,a);return o.length>0&&(i=ge(i,o)),W(i,n.shape)},b:()=>{let s=J(ot(n),ot(r)),i=ft(z(e,me(n,s))),o=Mt(r.shape,a);return o.length>0&&(i=ge(i,o)),W(i,r.shape)}}}},V4={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,J(ot(le(n,"float32")),1))}}},U4={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ce(we(1),ot(le(n,"float32"))))}}};function G4(e,t,n,r,a,s){let i=C(e,"dy","avgPool3dGrad"),o=C(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;o.rank===4&&(d=!0,l=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),wn("avgPool3dGrad",a,s);let h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=L.runKernel(Qd,h,p);return d?W(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var H4=P({avgPool3dGrad_:G4}),j4={kernelName:Ll,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>H4(e,r,a,s,i,o)}}};function q4(e,t,n,r,a){let s=C(e,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=W(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let d={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=L.runKernel(Yd,d,h);return u?W(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var K4=P({avgPoolGrad_:q4}),X4={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>K4(e,r,a,s,i)}}},Z4={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Me(e,a,!1,!0),b:()=>Me(r,e,!0,!1)}:!s&&i?{a:()=>Me(e,a,!1,!1),b:()=>Me(e,r,!0,!1)}:s&&!i?{a:()=>Me(a,e,!1,!0),b:()=>Me(r,e,!1,!1)}:{a:()=>Me(a,e,!0,!0),b:()=>Me(e,r,!0,!0)}}},J4={kernelName:Pl,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Dp(e,r,a)}}},Y4={kernelName:DI,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ge(e,o,!0)}}},Q4={kernelName:ki,gradFunc:e=>({x:()=>e.clone()})},eV={kernelName:Ii,gradFunc:e=>({x:()=>He(e)})},tV={kernelName:ls,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Jt(yr(wa(r,a),hs(r,s)),e,He(e))}}},nV={kernelName:tp,inputsToSave:["x"],gradFunc:qN.gradFunc},rV={kernelName:Wl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=xr(a,t[0].shape)[0],i=r.map(o=>o[s]);return $n(e,i,s).map(o=>()=>o)}},aV={kernelName:Si,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(Xa(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>jx(r.shape,e,a,i,o,l),filter:()=>Ev(r,e,a.shape,i,o,l)}}},sV={kernelName:Ni,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>yn(e,a,s,i,o,1,l),filter:()=>Ev(e,r,a.shape,s,i,o,l)}}};function iV(e,t,n,r,a){let s=e;e.rank===4&&(s=W(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=W(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return L.runKernel(Vl,o,l)}var oV=P({conv3DBackpropFilter_:iV}),lV={kernelName:Ti,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(Xa(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>fS(i.shape,e,o,a,s),filter:()=>oV(i,e,o.shape,a,s)}}},uV={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(ft(vm(le(n,"float32"))),e)}}},dV={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(wm(le(n,"float32")),e)}}},pV={kernelName:Ei,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=wS([a],r.rank),l=lm(e,a,s,!i);return o!=null&&(l=Oe(l,o)),l}}}},hV={kernelName:$i,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r??[1,1];$(Xa(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(ta(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),wn("depthwiseConv2d",s,i),{x:()=>uN(l.shape,e,u,a,s,o,i),filter:()=>lN(l,e,u.shape,a,s,o,i)}}},cV={kernelName:Ai,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>L.runKernel(hl,s,n),filter:()=>L.runKernel(cl,i,n)}}},mV={kernelName:Di,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>L.runKernel(ql,r)}}},fV={kernelName:Ri,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(dn(ft(ot(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,r)}}},gV={kernelName:Mi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},yV={kernelName:Xl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>W(e,n.shape)}}},bV={kernelName:Oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,dn(n))}}},xV={kernelName:Li,gradFunc:e=>({x:()=>He(e)})},vV={kernelName:Pi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=me(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?W(ge(s,i),n.shape):s},b:()=>{let s=z(e,le(n,"float32")),i=Mt(r.shape,a);i.length>0&&(s=W(ge(s,i),r.shape));let o=ot(r);return ft(me(s,le(o,"float32")))}}}},wV={kernelName:zi,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o??we(1),u=Mt(s.shape,a.shape),d=[];if(s.rank===1){for(let f=0;f<a.shape.length-1;++f)d.push(a.shape[f]);d.push(1)}let h=ce(a,s),p=z(e,l),c=bm(J(i,we(r))),m=z(z(z(c,c),c),we(-.5));return{x:()=>s.rank===1?W(z(z(e,Vn(W(c,[1,1,1,s.shape[0]]),d)),l),a.shape):W(z(z(e,c),l),a.shape),mean:()=>{let f=z(z(c,we(-1)),p);return s.rank===1&&(f=ge(f,u)),W(f,s.shape)},variance:()=>{let f=z(z(m,h),p);return s.rank===1&&(f=ge(f,u)),W(f,s.shape)},scale:()=>{let f=z(h,c),g=z(e,f);return s.rank===1&&(g=ge(g,u)),W(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=ge(f,u)),W(f,s.shape)}}}},kV={kernelName:Jl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=xr(s,r.shape)[0],l=(u,d,h)=>()=>{let p=u.shape,c=d.size,m=p.slice(0,o),f=m.length,g=p.slice(s,p.length).slice(1),y=g.length,b=X1(0,f),x=X1(f+1,f+1+y),v=Z1([m,[c],g]),I=W(h,v),N=W(d,[c]),_=Z1([[f],b,x]),E=Oe(I,_),A=Em(E,N,u.shape[o]),R=ev(_);return A=Oe(A,R),A};if(i===1){let u=r.shape[0],d=r.split(u,0);return{x:()=>Rt(d.map((h,p)=>l(h,a.slice(p,1),e.slice(p,1))())).reshape(r.shape),indices:()=>a}}else return{x:l(r,a,e),indices:()=>a}}};function X1(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Z1(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var IV={kernelName:Bi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>He(n),b:()=>He(r)}}},SV={kernelName:Wi,gradFunc:e=>({x:()=>le(e,"float32")})},NV={kernelName:Vi,gradFunc:e=>({x:()=>He(e)})},TV={kernelName:Ui,gradFunc:e=>({x:()=>He(e)})},_V={kernelName:Gi,gradFunc:e=>({x:()=>He(e)})},CV={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=kn(r,0);return{x:()=>Jt(s,e,z(e,a))}}},EV={kernelName:qi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,J(n,1))}}},$V={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,le(n,"float32"))}}},AV={kernelName:MI,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=dn(r);return ce(e,z(ge(e,a,!0),s))}}}};function FV(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return L.runKernel(iu,o,l)}var DV=P({localResponseNormalizationBackprop_:FV}),RV={kernelName:Ki,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>DV(r,a,e,s,i,o,l)}}};function KN(e,t,n,r){return t.rank<n.rank&&(t=W(t,ei(t.shape,r))),e.rank<n.rank&&(e=W(e,ei(e.shape,r))),{x:()=>z(e,le(Gn(n,t),e.dtype))}}var J1={kernelName:Xi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=xr(a,s.shape),l=KN(e,i,s,o);return{x:()=>l.x()}}},MV={kernelName:Zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,le(wa(n,r),"float32")),b:()=>z(e,le(bl(n,r),"float32"))}}};function OV(e,t,n,r,a,s,i){let o=C(e,"dy","maxPool3dGrad"),l=C(t,"input","maxPool3dGrad"),u=C(n,"output","maxPool3dGrad"),d=o,h=l,p=u,c=!1;l.rank===4&&(c=!0,d=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=W(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=W(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),wn("maxPool3dGrad",s,i);let m={dy:d,input:h,output:p},f={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=L.runKernel(ip,m,f);return c?W(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var LV=P({maxPool3dGrad_:OV}),PV={kernelName:ou,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>LV(e,r,a,s,i,o,l)}}};function zV(e,t,n,r,a,s,i){let o=C(e,"dy","maxPoolGrad"),l=C(t,"input","maxPoolGrad"),u=C(n,"output","maxPoolGrad");$(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),wn("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return L.runKernel(sp,d,h)}var BV=P({maxPoolGrad_:zV}),WV={kernelName:Ji,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>BV(e,r,a,s,i,o)}}},VV={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=xr(a,r.shape),i=vS(r.shape,s)[1],o=rt(i);return{x:()=>{let l=r.shape.slice();s.forEach(d=>{l[d]=1});let u=W(e,l);return me(z(u,En(r.shape,"float32")),o)}}}},UV={kernelName:Qi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=xr(a,s.shape),l=KN(e,i,s,o);return{x:()=>l.x()}}},GV={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,le(hs(n,r),"float32")),b:()=>z(e,le(kn(n,r),"float32"))}}},HV={kernelName:to,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ge(e,s,r.shape)}}},jV={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=Mt(n.shape,a);return s.length>0?W(ge(e,s),n.shape):e},b:()=>{let s=z(e,ft(Lu(me(n,r)))),i=Mt(r.shape,a);return i.length>0?W(ge(s,i),r.shape):s}}}},qV={kernelName:ro,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=z(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?W(ge(s,i),n.shape):s},b:()=>{let s=z(e,le(n,"float32")),i=Mt(r.shape,a);return i.length>0?W(ge(s,i),r.shape):s}}}},KV={kernelName:uu,gradFunc:e=>({x:()=>ft(e)})},XV={kernelName:ao,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>It(n.shape,"float32")}}},ZV={kernelName:mu,gradFunc:e=>({x:()=>He(e)})},JV={kernelName:fu,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Tt(e,r).map(a=>()=>a)}},Y1={kernelName:so,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ge(e,s,r.shape)}}},YV={kernelName:io,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=ut(s.shape,i.shape);return{a:()=>{let l=le(i,"float32"),u=z(e,z(l,Yr(s,ce(l,we(1))))),d=Mt(s.shape,o);return d.length>0&&(u=ge(u,d)),W(u,s.shape)},b:()=>{let l=kn(s,0),u=Jt(l,Hn(s),He(s)),d=z(e,z(a,u)),h=Mt(i.shape,o);return h.length>0&&(d=ge(d,h)),W(d,i.shape)}}}},QV={kernelName:oo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=kn(n,0);return{x:()=>Jt(a,e,z(e,r)),alpha:()=>{let s=Jt(a,He(e),z(e,n)),i=Mt(r.shape,e.shape);return i.length>0&&(s=ge(s,i)),W(s,r.shape)}}}};function eU(e,t,n){let r=e.shape.slice();r[n]=1;let a=W(t,r),s=Pd(e,n,!0,!1),i=Pd(e,n,!0,!0),o=z(s,i);return z(a,o)}function tU(e,t,n){let r=e.shape.length,a=r-n.length,s=T.getAxesPermutation(n,r),i=e;s!=null&&(i=Oe(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((h,p)=>h*p,1);o.push(l);let u=i.reshape(o),d=eU(u,t,a);if(d=d.reshape(i.shape),s!=null){let h=T.getUndoAxesPermutation(s);d=Oe(d,h)}return d}var nU={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>tU(r,e,s)}}},rU={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=me(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?W(ge(s,i),n.shape):s},b:()=>{let s=z(e,le(n,"float32")),i=Mt(r.shape,a);i.length>0&&(s=W(ge(s,i),r.shape));let o=ot(r);return ft(me(s,le(o,"float32")))}}}},aU={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ft(ot(n)))}}},sU={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(hs(n,6),Ro(n));return{x:()=>z(e,le(r,"float32"))}}},iU={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,le(Ro(n),"float32"))}}},oU={kernelName:gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,n.shape)}}},lU={kernelName:co,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>L.runKernel(bu,a,n)}}},uU={kernelName:ho,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>L.runKernel(yu,a,n)}}},dU={kernelName:fo,gradFunc:(e,t,n)=>{let{dims:r}=n,a=xr(r,e.shape);return{x:()=>ur(e,a)}}},pU={kernelName:go,gradFunc:e=>({x:()=>He(e)})},hU={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ft(me(e,z(Yr(n,1.5),2)))}}},cU={kernelName:ku,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>le(He(n),"float32"),t:()=>z(e,le(n,e.dtype)),e:()=>z(e,le(Ap(n),e.dtype))}}},mU={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=kn(n,we(0)),a=we(GN),s=we(HN),i=z(e,s),o=z(z(e,a),dn(le(n,"float32")));return Jt(r,i,o)}}}},fU={kernelName:ko,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,ce(we(1),n)))}}},gU={kernelName:wo,gradFunc:e=>({x:()=>He(e)})},yU={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Tp(le(n,"float32")),e)}}},bU={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(om(le(n,"float32")),e)}}},xU={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=VN(r,a,s),u=[];for(let d=0;d<e.rank;d++)u.push([o[d],i[d]-o[d]-l[d]]);return{x:()=>Rr(e,u)}}},vU={kernelName:To,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=z(e,r);return{logits:()=>ce(i,z(ge(i,[a],s),r))}}},wU={kernelName:Io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,gr(n))}}},Q1={kernelName:Su,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Np(e,r,a)}}},ek={kernelName:Nu,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>lt(e,r)}}},kU={kernelName:So,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,z(Yt(le(n,"float32")),2))}}},IU={kernelName:hp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(le(n,"float32"),2))}}},SU={kernelName:_o,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=we(2);return{a:()=>z(e,z(a,ce(n,r))),b:()=>z(e,z(a,ce(r,n)))}}},NU={kernelName:ds,gradFunc:e=>({x:()=>He(e)})},TU={kernelName:Co,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ut(n.shape,r.shape);return{a:()=>{let s=e,i=Mt(n.shape,a);return i.length>0&&(s=ge(s,i)),W(s,n.shape)},b:()=>{let s=e,i=Mt(r.shape,a);return i.length>0&&(s=ge(s,i)),W(ft(s),r.shape)}}}},_U={kernelName:No,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;xr(s,r.shape).forEach(l=>{a[l]=1});let i=W(e,a),o=z(i,En(r.shape,"float32"));return{x:()=>o}}},CU={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ot(Tp(n)))}}},EU={kernelName:$o,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(ce(we(1),ot(n)),e)}}},$U={kernelName:us,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=He(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=J(s,Ge(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=J(s,Ge(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=J(s,Ge(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let u=0;u<a[3];++u)s=J(s,Ge(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},AU={kernelName:ca,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=ev(a);return{x:()=>Oe(e,s)}}},FU={kernelName:Au,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Rt(e,a)}}},DU={kernelName:bp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>RU(e,n)}}};function RU(e,t){let n=na(t,He(t)),r=Pu(e,n),a=wa(t,we(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Xt(a,o+1);a=yr(a,En(r.shape,"bool"));let i=He(r);return Jt(a,r,i)}var MU={kernelName:Fu,gradFunc:e=>({x:()=>He(e)})},OU=[qN,D4,R4,M4,O4,L4,P4,z4,B4,W4,V4,U4,j4,X4,Z4,J4,Y4,Q4,eV,tV,nV,rV,sV,aV,lV,uV,dV,pV,hV,cV,rU,mV,fV,gV,yV,bV,vV,xV,wV,kV,IV,SV,NV,TV,_V,CV,EV,$V,AV,RV,J1,J1,MV,PV,WV,VV,UV,GV,HV,jV,qV,KV,XV,ZV,JV,Y1,Y1,YV,QV,nU,aU,sU,iU,oU,lU,uU,dU,pU,hU,cU,mU,fU,gU,yU,bU,xU,vU,wU,Q1,Q1,ek,ek,kU,SU,IU,NU,TU,_U,CU,EU,$U,AU,FU,DU,MU];for(let e of OU)OI(e);Q().prototype.abs=function(){return this.throwIfDisposed(),At(this)};Q().prototype.acos=function(){return this.throwIfDisposed(),_x(this)};Q().prototype.acosh=function(){return this.throwIfDisposed(),Cx(this)};Q().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Q().prototype.all=function(e,t){return this.throwIfDisposed(),am(this,e,t)};Q().prototype.any=function(e,t){return this.throwIfDisposed(),Md(this,e,t)};Q().prototype.argMax=function(e){return this.throwIfDisposed(),Ys(this,e)};Q().prototype.argMin=function(e){return this.throwIfDisposed(),Ex(this,e)};Q().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),W(this,[])};Q().prototype.asType=function(e){return this.throwIfDisposed(),le(this,e)};Q().prototype.as1D=function(){return this.throwIfDisposed(),W(this,[this.size])};Q().prototype.as2D=function(e,t){return this.throwIfDisposed(),W(this,[e,t])};Q().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),W(this,[e,t,n])};Q().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),W(this,[e,t,n,r])};Q().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),W(this,[e,t,n,r,a])};Q().prototype.asin=function(){return this.throwIfDisposed(),$x(this)};Q().prototype.asinh=function(){return this.throwIfDisposed(),Ax(this)};Q().prototype.atan=function(){return this.throwIfDisposed(),Fx(this)};Q().prototype.atan2=function(e){return this.throwIfDisposed(),Dx(this,e)};Q().prototype.atanh=function(){return this.throwIfDisposed(),Rx(this)};Q().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),va(this,e,t,n,r)};Q().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Np(this,e,t)};Q().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Ao(this,e,t,n,r,a)};Q().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Vs(this,e)};Q().prototype.cast=function(e){return this.throwIfDisposed(),le(this,e)};Q().prototype.ceil=function(){return this.throwIfDisposed(),Wx(this)};Q().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),un(this,e,t)};Q().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Re&&(e=[e]),lt([this,...e],t)};Q().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),sm(this,e,t,n,r,a,s)};Q().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),im(this,e,t,n,r,a)};Q().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),yn(this,e,t,n,r,a,s)};Q().prototype.cos=function(){return this.throwIfDisposed(),Tp(this)};Q().prototype.cosh=function(){return this.throwIfDisposed(),om(this)};Q().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Pd(this,e,t,n)};Q().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),lm(this,e,t,n)};Q().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Xx(this,e,t)};Q().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fo(this,e,t,n,r,a,s)};Q().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Zx(this,e,t,n,r,a)};Q().prototype.divNoNan=function(e){return this.throwIfDisposed(),Jx(this,e)};Q().prototype.div=function(e){return this.throwIfDisposed(),me(this,e)};Q().prototype.dot=function(e){return this.throwIfDisposed(),Yx(this,e)};Q().prototype.elu=function(){return this.throwIfDisposed(),Mu(this)};Q().prototype.equal=function(e){return this.throwIfDisposed(),Gn(this,e)};Q().prototype.erf=function(){return this.throwIfDisposed(),um(this)};Q().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),tv(this,e,t)};Q().prototype.exp=function(){return this.throwIfDisposed(),dn(this)};Q().prototype.expandDims=function(e){return this.throwIfDisposed(),Xt(this,e)};Q().prototype.expm1=function(){return this.throwIfDisposed(),nv(this)};Q().prototype.fft=function(){return this.throwIfDisposed(),Op(this)};Q().prototype.flatten=function(){return this.throwIfDisposed(),W(this,[this.size])};Q().prototype.floor=function(){return this.throwIfDisposed(),Lu(this)};Q().prototype.floorDiv=function(e){return this.throwIfDisposed(),rm(this,e)};Q().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Pu(this,e,t,n)};Q().prototype.greaterEqual=function(e){return this.throwIfDisposed(),wa(this,e)};Q().prototype.greater=function(e){return this.throwIfDisposed(),kn(this,e)};Q().prototype.ifft=function(){return this.throwIfDisposed(),kl(this)};Q().prototype.irfft=function(){return this.throwIfDisposed(),Im(this)};Q().prototype.isFinite=function(){return this.throwIfDisposed(),rv(this)};Q().prototype.isInf=function(){return this.throwIfDisposed(),av(this)};Q().prototype.isNaN=function(){return this.throwIfDisposed(),sv(this)};Q().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Cp(this,e)};Q().prototype.lessEqual=function(e){return this.throwIfDisposed(),hs(this,e)};Q().prototype.less=function(e){return this.throwIfDisposed(),bl(this,e)};Q().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),iv(this,e,t,n,r)};Q().prototype.logSigmoid=function(){return this.throwIfDisposed(),ov(this)};Q().prototype.logSoftmax=function(e){return this.throwIfDisposed(),hm(this,e)};Q().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),$p(this,e,t)};Q().prototype.log=function(){return this.throwIfDisposed(),Hn(this)};Q().prototype.log1p=function(){return this.throwIfDisposed(),Ep(this)};Q().prototype.logicalAnd=function(e){return this.throwIfDisposed(),yr(this,e)};Q().prototype.logicalNot=function(){return this.throwIfDisposed(),Ap(this)};Q().prototype.logicalOr=function(e){return this.throwIfDisposed(),cm(this,e)};Q().prototype.logicalXor=function(e){return this.throwIfDisposed(),lv(this,e)};Q().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Me(this,e,t,n)};Q().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),jt(this,e,t,n,r)};Q().prototype.max=function(e,t){return this.throwIfDisposed(),ir(this,e,t)};Q().prototype.maximum=function(e){return this.throwIfDisposed(),na(this,e)};Q().prototype.mean=function(e,t){return this.throwIfDisposed(),kt(this,e,t)};Q().prototype.min=function(e,t){return this.throwIfDisposed(),yl(this,e,t)};Q().prototype.minimum=function(e){return this.throwIfDisposed(),Ja(this,e)};Q().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),dv(this,e,t)};Q().prototype.mod=function(e){return this.throwIfDisposed(),pv(this,e)};Q().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};Q().prototype.neg=function(){return this.throwIfDisposed(),ft(this)};Q().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ou(this,e,t,n)};Q().prototype.notEqual=function(e){return this.throwIfDisposed(),ti(this,e)};Q().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),xl(this,e,t,n)};Q().prototype.onesLike=function(){return this.throwIfDisposed(),jn(this)};Q().prototype.pad=function(e,t){return this.throwIfDisposed(),Rr(this,e,t)};Q().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),hv(this,e,t,n,r,a,s)};Q().prototype.pow=function(e){return this.throwIfDisposed(),Yr(this,e)};Q().prototype.prelu=function(e){return this.throwIfDisposed(),Rp(this,e)};Q().prototype.prod=function(e,t){return this.throwIfDisposed(),cv(this,e,t)};Q().prototype.reciprocal=function(){return this.throwIfDisposed(),bv(this)};Q().prototype.relu=function(){return this.throwIfDisposed(),nt(this)};Q().prototype.relu6=function(){return this.throwIfDisposed(),gm(this)};Q().prototype.reshapeAs=function(e){return this.throwIfDisposed(),W(this,e.shape)};Q().prototype.reshape=function(e){return this.throwIfDisposed(),W(this,e)};Q().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),fN(this,e,t,n)};Q().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),gN(this,e,t,n)};Q().prototype.reverse=function(e){return this.throwIfDisposed(),ur(this,e)};Q().prototype.rfft=function(){return this.throwIfDisposed(),Lp(this)};Q().prototype.round=function(){return this.throwIfDisposed(),ym(this)};Q().prototype.rsqrt=function(){return this.throwIfDisposed(),bm(this)};Q().prototype.selu=function(){return this.throwIfDisposed(),xm(this)};Q().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),zu(this,e,t,n,r,a,s)};Q().prototype.sigmoid=function(){return this.throwIfDisposed(),gr(this)};Q().prototype.sign=function(){return this.throwIfDisposed(),xv(this)};Q().prototype.sin=function(){return this.throwIfDisposed(),vm(this)};Q().prototype.sinh=function(){return this.throwIfDisposed(),wm(this)};Q().prototype.slice=function(e,t){return this.throwIfDisposed(),Ge(this,e,t)};Q().prototype.softmax=function(e){return this.throwIfDisposed(),ms(this,e)};Q().prototype.softplus=function(){return this.throwIfDisposed(),Do(this)};Q().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Dp(this,e,t)};Q().prototype.split=function(e,t){return this.throwIfDisposed(),$n(this,e,t)};Q().prototype.sqrt=function(){return this.throwIfDisposed(),Yt(this)};Q().prototype.square=function(){return this.throwIfDisposed(),ot(this)};Q().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Sm(this,e)};Q().prototype.squeeze=function(e){return this.throwIfDisposed(),fs(this,e)};Q().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Re?[this,e]:[this,...e];return Rt(n,t)};Q().prototype.step=function(e){return this.throwIfDisposed(),Ro(this,e)};Q().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),vv(this,e,t,n,r,a,s,i,o)};Q().prototype.sub=function(e){return this.throwIfDisposed(),ce(this,e)};Q().prototype.sum=function(e,t){return this.throwIfDisposed(),ge(this,e,t)};Q().prototype.tan=function(){return this.throwIfDisposed(),wv(this)};Q().prototype.tanh=function(){return this.throwIfDisposed(),Za(this)};Q().prototype.tile=function(e){return this.throwIfDisposed(),Vn(this,e)};Q().prototype.toBool=function(){return this.throwIfDisposed(),le(this,"bool")};Q().prototype.toFloat=function(){return this.throwIfDisposed(),le(this,"float32")};Q().prototype.toInt=function(){return this.throwIfDisposed(),le(this,"int32")};Q().prototype.topk=function(e,t){return this.throwIfDisposed(),Iv(this,e,t)};Q().prototype.transpose=function(e){return this.throwIfDisposed(),Oe(this,e)};Q().prototype.unique=function(e){return this.throwIfDisposed(),Sv(this,e)};Q().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Em(this,e,t)};Q().prototype.unstack=function(e){return this.throwIfDisposed(),Tt(this,e)};Q().prototype.where=function(e,t){return this.throwIfDisposed(),Jt(e,this,t)};Q().prototype.zerosLike=function(){return this.throwIfDisposed(),He(this)};var Ma=class XN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,XN.prototype)}},jr=class ZN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ZN.prototype)}},U=class JN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,JN.prototype)}},ze=class YN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,YN.prototype)}},LU=class QN extends Error{constructor(t){super(t),Object.setPrototypeOf(this,QN.prototype)}},e2=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function ri(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Gr(e,t){if(!e)throw new LU(t)}function tk(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Cn(e){return e.length===1?e[0]:e}function tt(e){return Array.isArray(e)?e:[e]}function ua(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ls(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var hr={};function Uv(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Sb(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Sb(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:Sb(r))}}}function zp(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in hr)i=hr[s];else if(i=t[s],i==null)throw new U(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new U(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in hr?[o,l]=hr.className:i in t&&([o,l]=t[i]),o==null)throw new U(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let c of Object.keys(hr))u[c]=hr[c];for(let c of Object.keys(n))u[c]=n[c];let d=s.config;d.customObjects=u;let h=Object.assign({},hr);for(let c of Object.keys(n))hr[c]=n[c];Sb(s.config);let p=l(o,s.config,n,a);return hr=Object.assign({},h),p}else{let u=Object.assign({},hr);for(let h of Object.keys(n))hr[h]=n[h];let d=new o(s.config);return hr=Object.assign({},u),d}}}function PU(e,t){return e<t?-1:e>t?1:0}function Oh(e,t){return-1*PU(e,t)}function Ua(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function zU(e){if(e==null)throw new U(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Mo(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new U(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Gv(e,t,n=0,r=1/0){return Gr(n>=0),Gr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function Zt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Zt(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${t2(e)}.`)}function t2(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>t2(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function BU(e,t,n){let r=n!=null?n():w.now(),a;return(...s)=>{let i=n!=null?n():w.now();return i-r<t||(r=i,a=e(...s)),a}}function n2(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var WU=0;function r2(){return WU++}var Lh={};function Om(e=""){return e in Lh||(Lh[e]=0),Lh[e]+=1,e+Lh[e].toString()}var VU=["channelsFirst","channelsLast"],UU=["nearest","bilinear"],GU=["valid","same","causal"],HU=["max","avg"],jU=["sum","mul","concat","ave"],el=new Map;function _t(e){Mo(VU,"DataFormat",e)}function qU(e){Mo(UU,"InterpolationFormat",e)}function dr(e){Mo(GU,"PaddingMode",e)}function a2(e){Mo(HU,"PoolMode",e)}var Td=[],nk="/";function Us(e,t){Td.push(e);try{let n=t();return Td.pop(),n}catch(n){throw Td.pop(),n}}function KU(){return Td.length===0?"":Td.join(nk)+nk}function s2(e){if(!o2(e))throw new Error("Not a valid tensor name: '"+e+"'");return KU()+e}function i2(e){if(!o2(e))throw new Error("Not a valid tensor name: '"+e+"'");el.has(e)||el.set(e,0);let t=el.get(e);if(el.set(e,el.get(e)+1),t>0){let n=`${e}_${t}`;return el.set(n,1),n}else return e}var XU=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function o2(e){return!!e.match(XU)}function ZU(e){return e===parseInt(e.toString(),10)}function Ga(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Sl(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Qa(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function $r(e,t){if(t<e)throw new U(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var Hy;function zt(){return Hy==null&&(Hy=Ix().epsilon()),Hy}function Ar(){return"channelsLast"}function ya(e,t){return le(e,t)}function Bp(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),W(e,n)}function JU(e,t){return V(()=>{if(e.shape.length!==2)throw new U(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Bp(e,1);return Nb(n,[1,t,1])})}function YU(e){let t=[Ga(e.shape)];return W(e,t)}function QU(e){if(e.rank<=1)throw new U(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ga(e.shape,1)];return W(e,t)}function Gs(e,t,n){return V(()=>{switch(e.rank){case 1:return Mp(e,t,n);case 2:return km(e,[t,0],[n,e.shape[1]]);case 3:return Bu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return wl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ge(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ge(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new U(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function jy(e,t,n){return V(()=>{switch(e.rank){case 1:return Mp(e,t,n);case 2:return km(e,[0,t],[e.shape[0],n]);case 3:return Bu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return wl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ph(e,t,n,r){return V(()=>{switch(e.rank){case 1:return Mp(e,t,n);case 2:switch(r){case 1:return Gs(e,t,n);case 2:return jy(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Gs(e,t,n);case 2:return Bu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jy(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Gs(e,t,n);case 2:return wl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return wl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jy(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Hv(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),lt(e,t)}function rk(e,t){switch(e.rank){case 1:return Vx([e,t]);case 2:return Ux([e,t],0);case 3:return Gx([e,t],0);case 4:return Hx([e,t],0);default:throw new U(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Nb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new U(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Vn(e,t)}function Lm(e,t=0,n=1,r,a){return fm(e,t,n,r,a)}function Zr(e,t,n,r){if(e.rank<2||t.rank<2)throw new ze(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new ze(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Il.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tb(e.rank,r,Ar()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=W(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},(p,c)=>c===0?t.rank-2:c<=t.rank-2?c-1:c);t=W(Oe(t,d),[l,-1]);let h=[...a,...u];return W(Il.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tb(e.rank,r,Ar()):null,activation:n}),h)}}function l2(e,t,n){return V(()=>(Array.isArray(t)?t=et(t,"int32"):t=le(t,"int32"),Pu(e,t,n)))}function Wp(e){return z(e,e)}function Tb(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new U(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?W(t,[1,r[0],1,1,1]):W(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?W(t,[1,1,1,1,r[0]]):W(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?W(t,[1,r[0],1,1]):W(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?W(t,[1,1,1,r[0]]):W(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?W(t,[1,r[0],1]):W(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?W(t,[1,1,r[0]]):W(t,[1].concat(r))}else if(e<3)return t;throw new U(`Unsupported input rank by biasAdd: ${t.rank}`)}function Mr(e,t,n){return V(()=>(n==null&&(n=Ar()),_t(n),J(e,Tb(e.rank,t,n))))}function eG(e,t=1){if(t!==1)throw new ze(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Mu(e)}function tG(e){return V(()=>me(e,J(At(e),1)))}function u2(e,t,n,r){return V(()=>_v(e,t,n,r))}function nG(e){return V(()=>{let t=J(.5,z(.2,e));return un(t,0,1)})}function Vp(e,t,n=!1){return n?e():t()}var rG=["fanIn","fanOut","fanAvg"],aG=["normal","uniform","truncatedNormal"];function sG(e){Mo(rG,"FanMode",e)}function iG(e){Mo(aG,"Distribution",e)}var vr=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},jv=class extends vr{apply(e,t){return It(e,t)}};jv.className="Zeros";re.registerClass(jv);var qv=(()=>{let e=class extends vr{apply(t,n){return En(t,n)}};return e.className="Ones",e})();re.registerClass(qv);var d2=(()=>{let e=class extends vr{constructor(t){if(super(),typeof t!="object")throw new U(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new U(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return V(()=>z(we(this.value),En(t,n)))}getConfig(){return{value:this.value}}};return e.className="Constant",e})();re.registerClass(d2);var p2=(()=>{let e=class extends vr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return cs(t,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};return e.className="RandomUniform",e})();re.registerClass(p2);var h2=(()=>{let e=class extends vr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ze(`randomNormal does not support dType ${n}.`);return Lm(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};return e.className="RandomNormal",e})();re.registerClass(h2);var c2=(()=>{let e=class extends vr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ze(`truncatedNormal does not support dType ${n}.`);return Cm(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};return e.className="TruncatedNormal",e})();re.registerClass(c2);var m2=(()=>{let e=class extends vr{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,n){return V(()=>{if(t.length!==2||t[0]!==t[1])throw new U("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,dm(t[0]))})}getConfig(){return{gain:this.gain}}};return e.className="Identity",e})();re.registerClass(m2);function oG(e,t="channelsLast"){let n,r;if(_t(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Ga(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Ga(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Ga(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var qn=(()=>{let e=class extends vr{constructor(t){if(super(),t.scale<0)throw new U(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,sG(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,iG(this.distribution),this.seed=t.seed}apply(t,n){let r=oG(t),a=r[0],s=r[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(a+s)/2),this.distribution==="normal"){let o=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ze(`${this.getClassName()} does not support dType ${n}.`);return Cm(t,0,o,n,this.seed)}else{let o=Math.sqrt(3*i);return cs(t,-o,o,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};return e.className="VarianceScaling",e})();re.registerClass(qn);var Kv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="GlorotUniform",e})();re.registerClass(Kv);var Xv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="GlorotNormal",e})();re.registerClass(Xv);var Zv=(()=>{let e=class extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="HeNormal",e})();re.registerClass(Zv);var Jv=(()=>{let e=class extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="HeUniform",e})();re.registerClass(Jv);var Yv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="LeCunNormal",e})();re.registerClass(Yv);var Qv=(()=>{let e=class extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}};return e.className="LeCunUniform",e})();re.registerClass(Qv);var f2=(()=>{let e=class extends vr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,n){return V(()=>{if(t.length<2)throw new ze("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;let r=w.sizeFromShape(t.slice(0,-1)),a=t[t.length-1],s=r*a;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);let i=[Math.max(a,r),Math.min(a,r)],o=Lm(i,0,1,n,this.seed),l=Av.qr(o,!1),u=l[0],d=l[1].flatten().stridedSlice([0],[Math.min(a,r)*Math.min(a,r)],[Math.min(a,r)+1]);return u=z(u,d.sign()),r<a&&(u=u.transpose()),z(we(this.gain),u.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}};return e.className="Orthogonal",e})();re.registerClass(f2);var ak={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sk(e,t={}){return zp(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function St(e){return Uv(e)}function xt(e){if(typeof e=="string"){let t=e in ak?ak[e]:e;if(t==="GlorotNormal")return new Xv;if(t==="GlorotUniform")return new Kv;if(t==="HeNormal")return new Zv;if(t==="HeUniform")return new Jv;if(t==="LeCunNormal")return new Yv;if(t==="LeCunUniform")return new Qv;{let n={};return n.className=t,n.config={},sk(n)}}else return e instanceof vr?e:sk(e)}function _b(e){return Array.isArray(e)&&Array.isArray(e[0])}function mc(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function _e(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new U(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Xe(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new U(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function fc(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var ik="Variable",g2=class{constructor(e,t="float32",n=ik,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=r2(),n=n??ik,this.originalName=s2(n),this.name=i2(this.originalName),this.trainable_=r,this.constraint=a,this.val=Nv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),lG(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function lG(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Cb(e){return e.map(t=>t.read())}function ew(e){e.forEach(t=>{t[0].write(t[1])})}var Ft=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Fr=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=r2(),s!=null&&(this.originalName=s2(s),this.name=i2(this.originalName)),this.rank=t.length}},uG=0,Pm=class{constructor(e,t){this.callArgs=t,this.id=uG++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},dG=0,Be=class extends re.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dG++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ua(n)+"_"+Om(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new jr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new U(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Cn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Cn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ma(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ma(`Layer ${this.name} is not connected, no input to return.`);return Cn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ma(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ma(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Cn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=tt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=tt(this.inputSpec);if(t.length!==n.length)throw new U(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let a=t[r],s=n[r];if(s==null)continue;let i=a.rank;if(s.ndim!=null&&i!==s.ndim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&a.dtype!==s.dtype)throw new U(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){let o=a.shape;for(let l in s.axes){let u=Number(l),d=s.axes[l],h=u>=0?o[u]:o[o.length+u];if(d!=null&&[d,null].indexOf(h)===-1)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${d} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let l=s.shape[o],u=a.shape[o];if(l!=null&&u!=null&&l!==u)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=tt(e),r=cG(e),a=mG(e);if(r===a)throw new U("Arguments to apply() must be all SymbolicTensors or all Tensors");return Us(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of tt(e))s.push(i.shape);this.build(Cn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);let i=tt(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=Cn(o),this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=pG(e),i=this.computeOutputShape(s),o,l=hG(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,d)=>new Fr(l,u,this,tt(e),t,this.name,d)):o=new Fr(l,i,this,tt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ma(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ma(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Cb(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{let t=this.weights;if(t.length!==e.length)throw new U(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Cb(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!w.arraysEqual(s.shape,o.shape))throw new U(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ew(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new U(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():xt("zeros"));let l=r.apply(t,n),u=new g2(l,n,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),s==null&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=tt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=tt(t),s=tt(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s,i=null){let o=tt(e);t=tt(t),n=tt(n),r=tt(r),a=mc(a),s=mc(s);let l=[],u=[],d=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new Pm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function pG(e){e=tt(e);let t=[];for(let n of e)t.push(n.shape);return Cn(t)}function hG(e){return"float32"}function y2(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],u=y2(i,o,l);for(let d of u)a.indexOf(d)===-1&&a.push(d)}return a}}}function cG(e){let t=!0;for(let n of tt(e))if(!(n instanceof Fr)){t=!1;break}return t}function mG(e){let t=!0;for(let n of tt(e))if(n instanceof Fr){t=!1;break}return t}var Up=(()=>{let e=class extends Be{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Om("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new U("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new U("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new U("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=t.dtype||"float32";this.batchInputShape=n,this.dtype=r,this.inputSpec=[{shape:n}];let a=new Fr(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new U(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};return e.className="InputLayer",e})();re.registerClass(Up);function b2(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new U("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Up({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function fG(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return le(t,e.dtype)}catch{throw new U(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var il=class x2{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof x2)for(let n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(let n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=fG(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new U(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Fr){if(this.id2Value[t.id]==null)throw new U(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let n=this.name2Id[t];if(n==null)throw new U(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof Fr){if(this.id2Value[t.id]==null)throw new U(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let n=this.name2Id[t];if(n==null)throw new U(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}},gc=new e2,yc=new e2;function gG(e){gc?.setMaxEntries(e),yc?.setMaxEntries(e)}function yd(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),l=[],u=t.names();for(let m of o)u.indexOf(m)!==-1?l.push(t.getValue(m)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d=o.join(",")+"|"+t.names().sort().join(","),h=gc.get(d),p;if(h==null){let m=yG(i,t);h=m.sorted,p=m.recipientCounts,gc.put(d,h),yc.put(d,p)}p={},a||Object.assign(p,yc.get(d));let c=new il(t);for(let m=0;m<h.length;++m){if(r!=null){let A=hc().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let f=h[m],g=f.sourceLayer;if(g instanceof Up)continue;let y=[],b=[],x=[],v=!1;for(let A of f.inputs){let R=c.getValue(A),F=c.getMask(A);y.push(R),b.push(F),F!=null&&(v=!0),a||(p[A.name]--,p[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}v&&(n=n||{},n.mask=b[0]);let I=tt(g.apply(y,n)),N=null;g.supportsMasking&&(N=g.computeMask(y,b));let _=xG(f),E=Array.isArray(_)?_:[_];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(N)?N[0]:N);let R=o.indexOf(E[A].name);R!==-1&&(l[R]=I[A])}a||Ce(x)}return c.disposeMasks(),s?l:l[0]}function yG(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=ok(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=ok(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:n,recipientCounts:bG(r)}}function bG(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ok(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&s.push(u)}}return{sorted:r,recipientMap:a}}function xG(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var vG=H();vG.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,gG);var v2={};Ee(v2,{maxNorm:()=>wG,minMaxNorm:()=>SG,nonNeg:()=>IG,unitNorm:()=>kG});function tw(e,t){return V(()=>Yt(ge(z(e,e),t,!0)))}var Gp=class extends re.Serializable{getConfig(){return{}}},nw=class extends Gp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=tw(e,this.axis),n=un(t,0,this.maxValue);return z(e,me(n,J(zt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};nw.className="MaxNorm";re.registerClass(nw);var w2=(()=>{let e=class extends Gp{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return V(()=>me(t,J(zt(),tw(t,this.axis))))}getConfig(){return{axis:this.axis}}};return e.className="UnitNorm",e})();re.registerClass(w2);var k2=(()=>{let e=class extends Gp{apply(t){return nt(t)}};return e.className="NonNeg",e})();re.registerClass(k2);var I2=(()=>{let e=class extends Gp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return V(()=>{let n=tw(t,this.axis),r=J(z(this.rate,un(n,this.minValue,this.maxValue)),z(1-this.rate,n));return z(t,me(r,J(zt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};return e.className="MinMaxNorm",e})();re.registerClass(I2);var lk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Wt(e){return Uv(e)}function uk(e,t={}){return zp(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Vt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in lk?lk[e]:e,config:{}};return uk(t)}else return e instanceof Gp?e:uk(e)}function wG(e){return new nw(e)}function kG(e){return new w2(e)}function IG(){return new k2}function SG(e){return new I2(e)}var S2={};Ee(S2,{constant:()=>_G,glorotNormal:()=>RG,glorotUniform:()=>DG,heNormal:()=>MG,heUniform:()=>OG,identity:()=>AG,leCunNormal:()=>LG,leCunUniform:()=>PG,ones:()=>TG,orthogonal:()=>zG,randomNormal:()=>EG,randomUniform:()=>CG,truncatedNormal:()=>$G,varianceScaling:()=>FG,zeros:()=>NG});function NG(){return new jv}function TG(){return new qv}function _G(e){return new d2(e)}function CG(e){return new p2(e)}function EG(e){return new h2(e)}function $G(e){return new c2(e)}function AG(e){return new m2(e)}function FG(e){return new qn(e)}function DG(e){return new Kv(e)}function RG(e){return new Xv(e)}function MG(e){return new Zv(e)}function OG(e){return new Jv(e)}function LG(e){return new Yv(e)}function PG(e){return new Qv(e)}function zG(e){return new f2(e)}var N2={};Ee(N2,{Layer:()=>Be,RNN:()=>gs,RNNCell:()=>jp,activation:()=>R6,add:()=>U6,alphaDropout:()=>Tj,average:()=>G6,averagePooling1d:()=>_w,averagePooling2d:()=>Cw,averagePooling3d:()=>Ew,avgPool1d:()=>Q6,avgPool2d:()=>tj,avgPool3d:()=>rj,avgPooling1d:()=>ej,avgPooling2d:()=>nj,avgPooling3d:()=>aj,batchNormalization:()=>Z6,bidirectional:()=>bj,categoryEncoding:()=>Aj,centerCrop:()=>Ej,concatenate:()=>H6,conv1d:()=>N6,conv2d:()=>T6,conv2dTranspose:()=>_6,conv3d:()=>C6,conv3dTranspose:()=>E6,convLstm2d:()=>mj,convLstm2dCell:()=>fj,cropping2D:()=>A6,dense:()=>M6,depthwiseConv2d:()=>D6,dot:()=>X6,dropout:()=>O6,elu:()=>x6,embedding:()=>V6,flatten:()=>P6,gaussianDropout:()=>Nj,gaussianNoise:()=>Sj,globalAveragePooling1d:()=>sj,globalAveragePooling2d:()=>ij,globalMaxPool1d:()=>vj,globalMaxPool2d:()=>wj,globalMaxPooling1d:()=>n_,globalMaxPooling2d:()=>r_,gru:()=>lj,gruCell:()=>uj,input:()=>U2,inputLayer:()=>b6,layerNormalization:()=>J6,leakyReLU:()=>w6,lstm:()=>dj,lstmCell:()=>pj,masking:()=>_j,maxPool1d:()=>kj,maxPool2d:()=>Ij,maxPooling1d:()=>a_,maxPooling2d:()=>s_,maxPooling3d:()=>oj,maximum:()=>j6,minimum:()=>q6,multiply:()=>K6,permute:()=>W6,prelu:()=>k6,randomWidth:()=>Fj,reLU:()=>v6,repeatVector:()=>z6,rescaling:()=>Cj,reshape:()=>B6,resizing:()=>$j,rnn:()=>gj,separableConv2d:()=>$6,simpleRNN:()=>hj,simpleRNNCell:()=>cj,softmax:()=>I6,spatialDropout1d:()=>L6,stackedRNNCells:()=>yj,thresholdedReLU:()=>S6,timeDistributed:()=>xj,upSampling2d:()=>F6,zeroPadding2d:()=>Y6});function Da(e){return D(this,null,function*(){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=yield Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];Ce(r)}})}function T2(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var dk;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(dk||(dk={}));var BG=125,Nl=class{constructor(){this.validationData=null}setParams(e){this.params=e}onEpochBegin(e,t){return D(this,null,function*(){})}onEpochEnd(e,t){return D(this,null,function*(){})}onBatchBegin(e,t){return D(this,null,function*(){})}onBatchEnd(e,t){return D(this,null,function*(){})}onTrainBegin(e){return D(this,null,function*(){})}onTrainEnd(e){return D(this,null,function*(){})}setModel(e){}},_2=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}onEpochBegin(e,t){return D(this,null,function*(){t==null&&(t={});for(let n of this.callbacks)yield n.onEpochBegin(e,t)})}onEpochEnd(e,t){return D(this,null,function*(){t==null&&(t={});for(let n of this.callbacks)yield n.onEpochEnd(e,t)})}onBatchBegin(e,t){return D(this,null,function*(){t==null&&(t={});for(let n of this.callbacks)yield n.onBatchBegin(e,t)})}onBatchEnd(e,t){return D(this,null,function*(){t==null&&(t={});for(let n of this.callbacks)yield n.onBatchEnd(e,t)})}onTrainBegin(e){return D(this,null,function*(){e==null&&(e={});for(let t of this.callbacks)yield t.onTrainBegin(e)})}onTrainEnd(e){return D(this,null,function*(){e==null&&(e={});for(let t of this.callbacks)yield t.onTrainEnd(e)})}},WG=class extends Nl{constructor(){super()}onEpochBegin(e){return D(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(e,t){return D(this,null,function*(){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=V(()=>J(this.totals[r],z(a,n)));this.totals[r]=i,s?.dispose()}}})}onEpochEnd(e,t){return D(this,null,function*(){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:V(()=>{let r=z(me(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Pt(t[n])}))})}},C2=class extends Nl{onTrainBegin(e){return D(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(e,t){return D(this,null,function*(){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])})}syncData(){return D(this,null,function*(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=yield Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]})}},E2=class extends Nl{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Wv,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=BG),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=BU(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}maybeWait(e,t,n){return D(this,null,function*(){let r=[];this.yield!=null&&(yield Da(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),yield Promise.all(r)})}onEpochBegin(e,t){return D(this,null,function*(){this.currentEpoch=e,this.epochBegin!=null&&(yield Da(t),yield this.epochBegin(e,t))})}onEpochEnd(e,t){return D(this,null,function*(){let n=[];this.epochEnd!=null&&(yield Da(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),yield Promise.all(n)})}onBatchBegin(e,t){return D(this,null,function*(){this.batchBegin!=null&&(yield Da(t),yield this.batchBegin(e,t))})}onBatchEnd(e,t){return D(this,null,function*(){let n=[];this.batchEnd!=null&&(yield Da(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),yield Promise.all(n)})}onTrainBegin(e){return D(this,null,function*(){this.trainBegin!=null&&(yield Da(e),yield this.trainBegin(e))})}onTrainEnd(e){return D(this,null,function*(){this.trainEnd!=null&&(yield Da(e),yield this.trainEnd(e))})}};function $2(e,t){return e==null&&(e={}),e instanceof Nl?[e]:Array.isArray(e)&&e[0]instanceof Nl?e:tt(e).map(n=>new E2(n,t))}var A2=(()=>{let e=class Br{constructor(){}static registerCallbackConstructor(n,r){w.assert(n>=0&&Number.isInteger(n),()=>`Verbosity level is expected to be an integer >= 0, but got ${n}`),Br.checkForDuplicate(r),Br.constructors[n]==null&&(Br.constructors[n]=[]),Br.constructors[n].push(r)}static checkForDuplicate(n){for(let r in Br.constructors)Br.constructors[+r].forEach(a=>{if(a===n)throw new U("Duplicate callback constructor.")})}static clear(){Br.constructors={}}static createCallbacks(n){let r=[];for(let a in Br.constructors){let s=+a;n>=s&&r.push(...Br.constructors[s])}return r.map(a=>new a)}};return e.constructors={},e})();function F2(e,t,n,r,a,s,i,o,l){let u=new C2,d=[new WG,...A2.createCallbacks(t)];e!=null&&d.push(...e),d.push(u);let h=new _2(d);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Cr(e,t={},n=!1){return zp(e,re.SerializationMap.getMap().classNameMap,t,"layer",n)}function bc(e,t){return V(()=>{e.dtype!=="float32"&&(e=le(e,"float32"));let n=ge(Wp(e),t,!0),r=Un(n.shape,zt()),a=Yt(na(n,r));return me(e,a)})}function Oo(e,t){return V(()=>kt(Wp(ce(t,e)),-1))}function zm(e,t){return V(()=>kt(At(ce(t,e)),-1))}function Vu(e,t){return V(()=>{let n=ce(e,t),r=un(At(e),zt(),Number.MAX_VALUE),a=At(me(n,r));return z(100,kt(a,-1))})}function VG(e,t){return V(()=>{let n=un(t,zt(),Number.MAX_VALUE),r=Hn(J(1,n)),a=un(e,zt(),Number.MAX_VALUE),s=Hn(J(1,a));return kt(Wp(ce(r,s)),-1)})}function UG(e,t){return V(()=>{let n=na(0,ce(1,z(e,t)));return kt(Wp(n),-1)})}function GG(e,t){return V(()=>{let n=na(0,ce(1,z(e,t)));return kt(n,-1)})}function HG(e,t){return V(()=>{let n=ge(z(e,t),-1),r=ir(z(ce(1,e),t),-1);return na(0,J(1,ce(r,n)))})}function jG(e,t){return V(()=>{let n=Math.log(2),r=ce(t,e),a=ce(J(r,Do(z(-2,r))),n);return kt(a,-1)})}function zd(e,t,n=!1){return V(()=>{if(n)t=ms(t);else{let r=ge(t,t.shape.length-1,!0);t=me(t,r)}return t=un(t,zt(),1-zt()),ft(ge(z(le(e,"float32"),Hn(t)),t.shape.length-1))})}function xc(e,t,n=!1){return V(()=>{let r=le(Lu(YU(e)),"int32");t=un(t,zt(),1-zt());let a=t.shape,s=W(xl(r,a[a.length-1]),a);return zd(s,t,n)})}function qG(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new U(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return V(()=>{let n=nt(t),r=ft(At(t));return J(ce(n,z(t,e)),Ep(dn(r)))})}function Bm(e,t){return V(()=>{let n;return n=un(t,zt(),1-zt()),n=Hn(me(n,ce(1,n))),kt(qG(e,n),-1)})}function KG(e,t){return V(()=>{let n=un(e,zt(),1),r=un(t,zt(),1);return ge(z(e,Hn(me(n,r))),-1)})}function XG(e,t){return V(()=>{let n=Hn(J(zt(),t));return kt(ce(t,z(e,n)),-1)})}function rw(e,t){return V(()=>{let n=bc(e,-1),r=bc(t,-1),a=z(n,r);return ft(ge(a,-1))})}var vc={meanSquaredError:Oo,meanAbsoluteError:zm,meanAbsolutePercentageError:Vu,meanSquaredLogarithmicError:VG,squaredHinge:UG,hinge:GG,categoricalHinge:HG,logcosh:jG,categoricalCrossentropy:zd,sparseCategoricalCrossentropy:xc,binaryCrossentropy:Bm,kullbackLeiblerDivergence:KG,poisson:XG,cosineProximity:rw};function qy(e){if(typeof e=="string"){if(e in vc)return vc[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new U(t)}else return e}function aw(e,t){return V(()=>{let n=z(.5,jn(t)),r=ya(kn(t,n),e.dtype);return kt(Gn(e,r),-1)})}function sw(e,t){return V(()=>ya(Gn(Ys(e,-1),Ys(t,-1)),"float32"))}function D2(e,t){return V(()=>le(ge(yr(Gn(e,1),Gn(t,1))),"float32"))}function ZG(e,t){return V(()=>le(ge(yr(Gn(e,1),Gn(t,0))),"float32"))}function JG(e,t){return V(()=>le(ge(yr(Gn(e,0),Gn(t,1))),"float32"))}function R2(e,t){return V(()=>{let n=D2(e,t),r=JG(e,t),a=J(n,r);return le(Jt(kn(a,0),me(n,a),0),"float32")})}function YG(e,t){return V(()=>{let n=D2(e,t),r=ZG(e,t),a=J(n,r);return le(Jt(kn(a,0),me(n,a),0),"float32")})}function M2(e,t){return Bm(e,t)}function O2(e,t){return e.rank===t.rank&&(e=fs(e,[e.rank-1])),t=Ys(t,-1),t.dtype!==e.dtype&&(t=le(t,e.dtype)),le(Gn(e,t),"float32")}function QG(e,t){return V(()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return we(1).sub(n.div(r))})}var eH=Oo,tH=Oo,nH=zm,rH=zm,aH=Vu,sH=Vu,iw=zd,iH=rw,L2=xc,wc={binaryAccuracy:aw,categoricalAccuracy:sw,precision:R2,categoricalCrossentropy:iw,sparseCategoricalCrossentropy:L2,mse:eH,MSE:tH,mae:nH,MAE:rH,mape:aH,MAPE:sH,cosine:iH};function oH(e){if(typeof e=="string"&&e in wc)return wc[e];if(typeof e!="string"&&e!=null)return e;throw new U(`Unknown metric ${e}`)}function zh(e){if(Gr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(vc))if(vc[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(wc))if(wc[n]===e){t=n;break}return t!==void 0?t:e.name}}function lH(e){let t={Adagrad:()=>Ds.adagrad(.01),Adadelta:()=>Ds.adadelta(1,.95,zt()),Adam:()=>Ds.adam(.001,.9,.999,zt()),Adamax:()=>Ds.adamax(.002,.9,.999,zt(),0),RMSProp:()=>Ds.rmsprop(.001,.9,0,zt()),SGD:()=>Ds.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new U(`Unknown Optimizer ${e}`)}function pk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Eb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Eb(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Eb(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Eb(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function uH(e,t,n,r=console.log){let a=pH(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(d=>Math.floor(t*d)));let i;if(!a){s.push("Receives inputs"),i=[];for(let d in e.nodesByDepth)i.push(...e.nodesByDepth[d])}r("_".repeat(t)),kc(s,n,r),r("=".repeat(t));let o=e.layers;for(let d=0;d<o.length;++d)a?hH(o[d],n,r):cH(o[d],n,i,r),r((d===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=dH(e),u=fc(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function dH(e){let t;return e.collectedTrainableWeights!=null?t=fc(e.collectedTrainableWeights):t=fc(e.trainableWeights),t}function pH(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function kc(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function hH(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];kc(o,t,n)}function cH(e,t,n,r){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let p=0;p<h.inboundLayers.length;++p){let c=h.inboundLayers[p].name,m=h.nodeIndices[p],f=h.tensorIndices[p];i.push(`${c}[${m}][${f}]`)}let o=e.name,l=e.getClassName(),u=i.length===0?"":i[0],d=[`${o} (${l})`,s,a,e.countParams().toString(),u];kc(d,t,r);for(let h=1;h<i.length;++h)kc(["","","","",i[h]],t,r)}function P2(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Bd(e,t){if(e===null)return null;if(typeof e=="string")return Ls(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];P2(t,a,s)?n.push(s):n.push(Bd(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=Ls(r);n[s]=Bd(a,s)}}return n}}function $b(e,t){if(e==null)return null;if(typeof e=="string")return ua(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];P2(t,a,s)?n.push(s):n.push($b(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=ua(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=$b(a,r)}return n}}var ow="4.21.0",mH=e=>{let t=Object.keys(e);if(t.length===0)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},fH=class Wr extends Be{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Om(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ua(this.inputs).length!==this.inputs.length)throw new U(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Ua(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(I)}for(let b of this.inputs){let x=b.sourceLayer,v=b.nodeIndex,I=b.tensorIndex;Gr(v===0,"input layer has >1 nodes"),Gr(I===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let x=this.inputLayers[b];if(!(x instanceof Up))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let n={},r={},a={},s={},i={},o=[],l=(b,x,v,I,N,_)=>{(I==null||N==null||_==null)&&(I=b.sourceLayer,N=b.nodeIndex,_=b.tensorIndex);let E=I.inboundNodes[N];if(v.indexOf(E)!==-1)throw new jr(`The tensor ${b.name} at layer "${I.name}" is part of a cycle.`);if(x.indexOf(E)!==-1)return;this.containerNodes.add(Wr.nodeKey(I,N)),I.id in i||(i[I.id]=Object.keys(i).length),v.indexOf(E)===-1&&v.push(E);let A=E.inboundLayers.length;for(let R=0;R<A;R++){let F=E.inputTensors[R],S=E.inboundLayers[R],O=E.nodeIndices[R],B=E.tensorIndices[R];l(F,x,v,S,O,B)}for(x.push(E);v.indexOf(E)>=0;)v.splice(v.indexOf(E),1);o.push(E)},u=[],d=[];for(let b of this.outputs)l(b,u,d);let h=o.slice().reverse();for(let b of h){r[b.id]=b,b.id in n||(n[b.id]=0);let x=n[b.id],v=a[b.outboundLayer.id]==null?0:a[b.outboundLayer.id];x=Math.max(x,v),a[b.outboundLayer.id]=x,s[b.outboundLayer.id]=b.outboundLayer,n[b.id]=x;for(let I=0;I<b.inboundLayers.length;I++){let N=b.inboundLayers[I],_=b.nodeIndices[I],E=N.inboundNodes[_],A=n[E.id]==null?0:n[E.id];n[E.id]=Math.max(x+1,A),r[E.id]=E}}let p={};for(let b in n){let x=n[b];x in p||(p[x]=[]),p[x].push(r[b])}let c={};for(let b in a){let x=a[b];x in c||(c[x]=[]),c[x].push(s[b])}let m=Object.keys(c).map(b=>parseInt(b,10)).sort(Oh);this.layers=[];for(let b of m){let x=c[b];x.sort((v,I)=>{let N=i[v.id],_=i[I.id];return N<_?-1:N>_?1:0});for(let v of x)v instanceof Wr&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=c,m=Object.keys(p).map(b=>parseInt(b,10)).sort(Oh);let f=this.inputs.slice(),g=[];for(let b of m)for(let x of p[b]){let v=x.outboundLayer;if(v!=null){for(let I of x.inputTensors)if(f.indexOf(I)===-1)throw new jr(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(let I of x.outputTensors)f.push(I);g.push(v.name)}}this.nodesByDepth=p;let y=this.layers.map(b=>b.name);for(let b of y){let x=y.filter(v=>v===b).length;if(x!==1)throw new jr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new U("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){let r={},a=0,s=mH(t);s&&this.parseWeights(t);for(let o of this.layers)for(let[l,u]of o.weights.entries()){let d=s?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(r[d]!=null)throw new U(`Duplicate weight name: ${d}`);r[d]=u,a++}let i=[];for(let o in t){let l=o;if(r[o]==null){let u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(r[l]!=null)i.push([r[l],t[o]]);else if(n)throw new U(`Provided weight data has no target variable: ${o}`);delete r[l]}if(n){let o=[];for(let l in r)o.push(l);if(o.length>0)throw new U(`${o.length} of ${a} weights are not set: ${o}`)}ew(i)}parseWeights(t){for(let n in Object.keys(t)){let r=n.split("/"),a=["vars","layer_checkpoint_dependencies"],s=r.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");s!==n&&(t[s]=t[n],delete t[n])}}updatedConfig(){let t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${ow}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){let r=$b(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return V(()=>{t=tt(t);let r=new il;for(let a=0;a<this.inputs.length;++a)r.add(this.inputs[a],t[a]);return yd(this.outputs,r,n)})}computeMask(t,n){return V(()=>{t=tt(t);let r;return n==null?r=ri(null,t.length):r=tt(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let n=mc(t);if(n.length!==this.inputLayers.length)throw new U(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let o=0;o<n.length;o++){let l=this.inputLayers[o],u=n[o],d=l.name+"_0_0";r[d]=u}let a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Oh);if(a.length>1)for(let o of a){let l=this.nodesByDepth[o];for(let u of l){let d=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(d.id)!==-1)continue;let h=[];for(let f=0;f<u.inboundLayers.length;f++){let g=u.inboundLayers[f],y=u.nodeIndices[f],b=u.tensorIndices[f],x=`${g.name}_${y}_${b}`,v=r[x];h.push(v)}let p=d.computeOutputShape(Cn(h)),c=mc(p),m=d.inboundNodes.indexOf(u);for(let f=0;f<c.length;f++){let g=`${d.name}_${m}_${f}`;r[g]=c[f]}}}let s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){let l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],d=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${d}`;i.push(h)}for(let o=0;o<i.length;o++){let l=i[o];Gr(l in r),s.push(r[l])}return Cn(s)}runInternalGraph(t,n){n==null&&(n=ri(null,t.length));let r={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],d=t[l],h=n[l];r[u.id]=[d,h]}let a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Oh);for(let l of a){let u=this.nodesByDepth[l];for(let d of u){let h=d.outboundLayer,p=d.inputTensors,c=d.outputTensors,m=new Array;for(let f of p)f.id in r&&m.push(r[f.id]);if(m.length===p.length){let f={},g,y,b,x;if(d.callArgs!=null&&(f=d.callArgs),m.length===1){let[v,I]=m[0];f.mask==null&&(f.mask=I),b=tt(h.call(v,f)),x=tt(h.computeMask(v,I)),g=[v],y=[I]}else g=m.map(v=>v[0]),y=m.map(v=>v[1]),f.mask==null&&(f.mask=y),b=tt(h.call(g,f)),x=tt(h.computeMask(g,y));if(h.activityRegularizer)throw new ze("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<c.length;++v){let I=c[v],N=b[v],_=x[v];r[I.id]=[N,_]}}}}let s=[],i=[],o=[];for(let l of this.outputs){Gr(l.id in r,`Could not compute output ${l.name} : ${l.id}`);let[u,d]=r[l.id];o.push(u.shape),s.push(u),i.push(d)}return[s,i,o]}buildNodeConversionMap(t){let n={},r;for(let a of this.layers){r=a instanceof Wr?1:0;for(let s=0;s<a.inboundNodes.length;s++){let i=Wr.nodeKey(a,s);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null)return this.findLayer(n);if(t==null)throw new U("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let r of this.layers)if(r.name===t)return r;throw new U(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new U(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return V(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=Wr.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let i of this.layers){let o=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){let p=i.inboundNodes[h],c=Wr.nodeKey(i,h),m={};if(this.containerNodes.has(c)){if(p.callArgs)try{JSON.stringify(p.callArgs),m=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(p.inboundLayers.length>0){let f=[];for(let g=0;g<p.inboundLayers.length;g++){let y=p.inboundLayers[g],b=p.nodeIndices[g],x=p.tensorIndices[g],v=Wr.nodeKey(y,b),I=n[v];I==null&&(I=0),f.push([y.name,I,x,m])}u.push(f)}}}let d={};d.name=i.name,d.className=o,d.config=l,d.inboundNodes=u,r.push(d)}t.layers=r;let a=[];for(let i=0;i<this.inputLayers.length;i++){let o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Wr.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=n[u];d==null&&(d=0);let h=this.inputLayersTensorIndices[i];a.push([o.name,d,h])}t.inputLayers=a;let s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Wr.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=n[u];d==null&&(d=0);let h=this.outputLayersTensorIndices[i];s.push([o.name,d,h])}return t.outputLayers=s,t}static fromConfig(t,n,r={},a=!1){let s={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){let b=[],x;for(let v of y){let I=v[0],N=v[1],_=v[2];if(x=v[3]==null?{}:v[3],!(I in s)){o(g,y);return}let E=s[I];if(E.inboundNodes.length<=N){o(g,y);return}let A=E.inboundNodes[N];b.push(A.outputTensors[_])}b.length>0&&g.apply(Cn(b),x)}function u(g){let y=g.name,b=Cr(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(a),s[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new U(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}let d=n.name,h=n.layers;for(let g of h)u(g);for(;!zU(i);)for(let g of h){let y=s[g.name];if(y.name in i){let b=i[y.name];delete i[y.name];for(let x of b)l(y,x)}}let p=[],c=[],m=n.inputLayers;for(let g of m){let y=g[0],b=g[1],x=g[2];Gr(y in s);let v=s[y].inboundNodes[b].outputTensors;p.push(v[x])}let f=n.outputLayers;for(let g of f){let y=g[0],b=g[1],x=g[2];Gr(y in s);let v=s[y].inboundNodes[b].outputTensors;c.push(v[x])}return new t({inputs:p,outputs:c,name:d})}get stateful(){if(this._stateful)throw new U("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function gH(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function z2(e,t){return gH(e,t,"classWeight")}function B2(e,t,n,r){return D(this,null,function*(){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=V(()=>{if(e.shape.length===1)return Kr(e);if(e.shape.length===2){if(e.shape[1]>1)return Ys(e,1);if(e.shape[1]===1)return W(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield a.data());Ce(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),et(i,"float32")}else return null})}function yH(e,t){return z(e,t)}var bH=32;function W2(e,t){let n,r,a=t;n=a.xs,r=a.ys,w.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=hk("input",e.inputNames,n),i=hk("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function hk(e,t,n){if(n instanceof Re)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new U(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function xH(e){if(e.length===3)throw new ze("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}function vH(e,t,n){return D(this,null,function*(){let r=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(ck(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=xH(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;a?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let d=$2(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:p,history:c}=F2(d,h,n.epochs,null,null,wH(t,n),null,a,u);p.setModel(e),e.history=c,yield p.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=yield t.iterator();for(;m<n.epochs;){let g={};yield p.onEpochBegin(m);let y=0,b=0;for(r||(f=yield t.iterator());!r||y<n.batchesPerEpoch;){let x=yield f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:I}=W2(e,x.value),N={};N.batch=b,N.size=v[0].shape[0],yield p.onBatchBegin(b,N);let _=[];if(n.classWeight!=null){let R=z2(n.classWeight,e.outputNames);for(let F=0;F<R.length;++F)_.push(yield B2(I[F],null,R[F]))}let E=v.concat(I).concat(_),A=o(E);Ce(E);for(let R=0;R<l.length;++R){let F=l[R],S=A[R];N[F]=S,Pt(S)}yield p.onBatchEnd(b,N),T2(N),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let v;ck(n.validationData)?v=tt(yield e.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=tt(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?bH:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=v[I]}break}if(e.stopTraining_)break}if(yield p.onEpochEnd(m,g),m++,e.stopTraining_)break}return yield p.onTrainEnd(),yield e.history.syncData(),e.history}finally{e.isTraining=!1}})}function wH(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function ck(e){return typeof e.iterator=="function"}function kH(e){return typeof e.next=="function"}function IH(e,t,n){return D(this,null,function*(){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new ze("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=kH(t)?t:yield t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let u=yield i.next();if(s=V(()=>{if(u.value){let{xs:d,ys:h}=W2(e,u.value),p=d.concat(h),c=V(()=>a(p));if(Ce(p),l===0)for(let f=0;f<c.length;++f)s.push(we(0));let m=p[0].shape[0];for(let f=0;f<c.length;++f){let g=c[f],y=s[f];s[f]=V(()=>J(s[f],z(m,g))),l>0&&Ce(y)}Ce(c),o+=m,++l}return s}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let d=s[u];s[u]=me(s[u],o),Ce(d)}return Cn(s)})}function Ky(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function pd(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Gs(r,t,n-t)):Gs(e,t,n-t)}function Ab(e,t){return V(()=>e==null?null:Array.isArray(e)?e.map(n=>Ab(n,t)):l2(e,t.dtype==="int32"?t:le(t,"int32")))}function Xy(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function V2(e){let t=[];e instanceof Re&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(Bp(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Ir(e,t){if(e==null)return;let n=[];if(t instanceof Re)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof Re)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function SH(e){return e instanceof Re}function Fb(e){return Array.isArray(e)}function mk(e){return!SH(e)&&!Fb(e)}function fk(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(Fb(e)&&e.length>0)i=!0;else if(mk(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new U(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(mk(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new U(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(Fb(e)){if(e=e,e.length!==t.length)throw new U(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new U(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=V2(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new U(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=n[i][l];if(d!=null&&d>=0&&u!==d)throw new U(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function NH(e,t,n){let r=Ua(e.map(s=>s.shape[0]));r.sort();let a=Ua(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new U(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new U(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!w.arraysEqual(r,a))throw new U(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function TH(e,t,n){let r=[Oo,Bm,zd];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===zd&&s.shape[s.shape.length-1]===1)throw new U(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let d=0;d<l.length;++d){let h=l[d],p=u[d];if(p!=null&&h!==p)throw new U(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gk(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new U(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new U(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new U(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let u=o.shape[l],d=n[i][l];if(d!=null&&d!==u)throw new U(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function _H(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var CH="layers-model",ma=class extends fH{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new U("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");uH(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=lH(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ia))throw new U("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new U(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(qy(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new U(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>qy(s))}else{let s=qy(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Us("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=_H(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Us("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",u,d,h;for(let p of o){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===Bm?["accuracy","acc"].indexOf(p)!==-1?d=aw:["crossentropy","ce"].indexOf(p)!==-1&&(d=M2):this.lossFunctions[s]===xc?["accuracy","acc"].indexOf(p)!==-1?d=O2:["crossentropy","ce"].indexOf(p)!==-1&&(d=L2):["accuracy","acc"].indexOf(p)!==-1?d=sw:["crossentropy","ce"].indexOf(p)!==-1&&(d=iw);let f;["accuracy","acc"].indexOf(p)!==-1?f="acc":["crossentropy","ce"].indexOf(p)!==-1&&(f="ce"),h=d,u=l+f}else h=oH(p),u=l+zh(p);let c;Us(u,()=>{c=h}),a(s,u,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Ky(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return Cn(o)}finally{Ir(a[0],e),Ir(a[1],t)}}evaluateDataset(e,t){return D(this,null,function*(){return this.makeTestFunction(),IH(this,e,t)})}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new U(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new U(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new U("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new il;if(e instanceof Re&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new U(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new U(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=yd(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ri(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new U(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return V(()=>{let r=this.checkNumSamples(e);if(n)throw new ze("Verbose predictLoop() is not implemented yet.");let a=Xy(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)V(()=>{let o=a[i][0],l=a[i][1],u=pd(e,o,l),d=[];if(Array.isArray(u))for(let p=0;p<u.length;++p)d.push({key:this.inputs[p],value:u[p]});else d.push({key:this.inputs[0],value:u});let h=new il(d);return yd(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return Cn(s.map(i=>lt(i,0)))})}predict(e,t={}){let n=V2(e);gk(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Ky(r),this.predictLoop(n,r)}finally{Ir(n,e)}}predictOnBatch(e){gk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===xc?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=fk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fk(t,this.feedOutputNames,a,!1,"target"),NH(e,t,null),TH(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new U(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}standardizeUserData(e,t,n,r,a=!0,s){return D(this,null,function*(){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let u=z2(r,this.outputNames);l=[];for(let d=0;d<u.length;++d)l.push(yield B2(o[d],null,u[d]))}return[i,o,l]})}testLoop(e,t,n,r=0,a){return V(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ze("Verbose mode is not implemented yet.");if(a!=null)throw new ze("steps mode in testLoop() is not implemented yet");{let o=Xy(s,n),l=et($r(0,s));for(let u=0;u<o.length;++u){let d=o[u][0],h=o[u][1],p=Gs(l,d,h-d),c=Ab(t,p),m=e(c);if(u===0)for(let f=0;f<m.length;++f)i.push(we(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=J(i[f],z(h-d,g))}}for(let u=0;u<i.length;++u)i[u]=me(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(tk(e,r)>1){let s=tk(e.slice(0,n),r);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let l=[];for(let p=0;p<this.inputs.length;++p)l.push({key:this.inputs[p],value:n[p]});let u=new il(l),d=yd(this.outputs,u,{training:!0}),h;for(let p=0;p<this.lossFunctions.length;++p){let c=this.lossFunctions[p],m=c(r[p],d[p]);a[p]!=null&&(m=yH(m,a[p]));let f=kt(m);t.push(f),p===0?h=m:h=J(h,m)}for(let p=0;p<this.metricsTensors.length;++p){let c;if(this.outputs.length>1&&p<this.outputs.length)c=t[p];else{let m=this.metricsTensors[p][0],f=this.metricsTensors[p][1];c=kt(m(r[f],d[f]))}Pt(c),s.push(c)}return h=kt(h),this.calculateLosses().forEach(p=>{h=J(h,p)}),h},o=this.collectedTrainableWeights.map(l=>l.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>V(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new il(s),o=yd(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],d=kt(u(a[l],o[l]));l===0?n=d:n=J(n,d),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],d=this.metricsTensors[l][1],h=kt(u(a[d],o[d]));t.push(h)}return t})}fit(r,a){return D(this,arguments,function*(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,i,o,l,u,d,h,p,c;try{let m=n.batchSize==null?32:n.batchSize;Ky(m);let f=yield this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,m);s=f[0],i=f[1],c=f[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],d=n.validationData[1];else throw n.validationData.length===3?new ze("validationData including sample weights is not supported yet."):new U(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let E=yield this.standardizeUserData(u,d,null,null,!0,m);h=E[0],p=E[1],y=h.concat(p)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let E=Math.floor(s[0].shape[0]*(1-n.validationSplit)),A=s[0].shape[0];h=pd(s,E,A),o=s,s=pd(s,0,E),p=pd(i,E,A),l=i,i=pd(i,0,E),y=h.concat(p)}else n.validationSteps!=null&&(g=!0);let b=s.concat(i).concat(c);this.checkTrainableWeightsConsistency();let x=this.makeTrainFunction(),v=this.getDedupedMetricsNames(),I,N;g?(this.makeTestFunction(),I=this.testFunction,N=v.slice().concat(v.map(E=>"val_"+E))):(I=null,y=[],N=v.slice());let _=$2(n.callbacks,n.yieldEvery);return yield this.fitLoop(x,b,v,m,n.epochs,n.verbose,_,I,y,n.shuffle,N,n.initialEpoch,null,null)}finally{this.isTraining=!1,Ir(s,e),Ir(i,t),Ir(o,e),Ir(l,t),Ir(h,u),Ir(p,d),c!=null&&Ce(c)}})}fitLoop(e,t,n,r,a,s,i,o,l,u,d,h,p,c){return D(this,null,function*(){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(o!=null&&l!=null&&(m=!0),c!=null&&(m=!0,p==null))throw new U("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,p,"steps_per_epoch"),g;f!=null&&(g=$r(0,f)),s==null&&(s=1);let{callbackList:y,history:b}=F2(i,s,a,h,f,p,r,m,d);y.setModel(this),this.history=b,yield y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<a;++x){yield y.onEpochBegin(x);let v={};if(p!=null)throw new ze("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new ze("batch shuffling is not implemneted yet");u&&w.shuffle(g);let I=et(g),N=Xy(f,r);for(let _=0;_<N.length;++_){let E={};if(yield y.onBatchBegin(_,E),V(()=>{let A=N[_][0],R=N[_][1],F=Gs(I,A,R-A);E.batch=_,E.size=R-A;let S=Ab(t,F),O=e(S);for(let B=0;B<n.length;++B){let G=n[B],j=O[B];E[G]=j,Pt(j)}if(_===N.length-1&&m){let B=this.testLoop(o,l,r);for(let G=0;G<n.length;++G){let j=n[G],K=B[G];Pt(K),v["val_"+j]=K}}}),yield y.onBatchEnd(_,E),T2(E),this.stopTraining_)break}I.dispose()}if(yield y.onEpochEnd(x,v),this.stopTraining_)break}return yield y.onTrainEnd(),yield this.history.syncData(),this.history})}fitDataset(e,t){return D(this,null,function*(){return vH(this,e,t)})}trainOnBatch(e,t){return D(this,null,function*(){let n=yield this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let l=yield o.data();i.push(l[0])}return Ce(s),Ir(n[0],e),Ir(n[1],t),Cn(i)})}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=hc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-hc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ua(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ua(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=ua(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ua(zh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ua(zh(e)));{let e={};for(let t in this.metrics)e[t]=ua(zh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Bd(e.optimizer_config),n=Cr(t),r;if(typeof e.loss=="string")r=Ls(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>Ls(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=Ls(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>Ls(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=Ls(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}save(e,t){return D(this,null,function*(){if(typeof e=="string"){let a=an.getSaveHandlers(e);if(a.length===0)throw new U(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new U(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new U("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=yield an.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:CH,generatedBy:`TensorFlow.js tfjs-layers v${ow}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){r.trainingConfig=this.getTrainingConfig();let a="optimizer",{data:s,specs:i}=yield an.encodeWeights(yield this.optimizer.getWeights(),a);n.specs.push(...i),n.data=an.concatenateArrayBuffers([n.data,s])}return this.userDefinedMetadata!=null&&(pk(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)})}setUserDefinedMetadata(e){pk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ma.className="Model";re.registerClass(ma);var EH=(()=>{let e=class extends ma{};return e.className="Functional",e})();re.registerClass(EH);function $H(e,t){return D(this,null,function*(){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=Bd(n),a=Cr(r,t);if(e.weightsManifest!=null){let s=yield an.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),Ce(s)}return a})}function AH(e,t){return D(this,null,function*(){if(t==null&&(t={}),typeof e=="string"){let n=an.getLoadHandlers(e,t);if(n.length===0)n.push(an.browserHTTPRequest(e,t));else if(n.length>1)throw new U(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return FH(e,void 0,t)})}function FH(e,t,n){return D(this,null,function*(){if(n==null&&(n={}),e.load==null)throw new U("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=yield e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Cr(Bd(a),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new U("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:d}=DH(r.weightData,r.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&d.length>0&&(yield o.optimizer.setWeights(d)),Ce(u),Ce(d.map(h=>h.tensor))}return o})}function DH(e,t){let n=an.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var lw=(()=>{let e=class Db extends ma{constructor(n){if(super({inputs:[],outputs:[]}),n=n||{},this.trainable=!0,this.built=!1,this.name=n.name!=null?n.name:Om("sequential_"),n.layers!=null)for(let r of n.layers)this.add(r)}checkShape(n){if(n.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new U(`Negative dimension size caused by adding layer ${n.name} with input shape [${n.inboundNodes[0].inputTensors[0].shape}]`)}add(n){let r=n instanceof Db||n instanceof ma,a;if(r){if(a=n,a.outputs.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new U("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(n.inboundNodes.length===0){if(n.batchInputShape==null)throw new U("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=b2({batchShape:n.batchInputShape,dtype:n.dtype,name:n.name+"_input"});n.apply(s)}if(r)this.outputs=a.outputs,this.inputs=a.inputs;else{if(n.inboundNodes.length!==1)throw new U(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${n.name} which has ${n.inboundNodes.length} pre-existing inbound connections.`);if(n.inboundNodes[0].outputTensors.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(n),this.outputs=[n.inboundNodes[0].outputTensors[0]],this.inputs=y2(this.outputs[0])}this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ri(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=n.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(n),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(n),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let n=this.layers.length-1;this.layers[n].outboundNodes=[],this.outputs=[this.layers[n].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(n,r){return this.model==null&&this.build(),this.model.call(n,r)}build(n){if(Xe(n),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ma({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(n,r,a=console.log){this.built||this.build(),super.summary(n,r,a)}setWeights(n){this.model==null&&this.build(),this.model.setWeights(n)}evaluate(n,r,a={}){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.evaluate(n,r,a)}evaluateDataset(n,r){return D(this,null,function*(){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(n,r)})}predict(n,r={}){return this.model==null&&this.build(),this.model.predict(n,r)}predictOnBatch(n){return this.model==null&&this.build(),this.model.predictOnBatch(n)}compile(n){this.build(),this.model.compile(n),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(n){this.model.optimizer=n}fit(s,i){return D(this,arguments,function*(n,r,a={}){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.fit(n,r,a)})}fitDataset(n,r){return D(this,null,function*(){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.fitDataset(n,r)})}trainOnBatch(n,r){return D(this,null,function*(){return this.model.trainOnBatch(n,r)})}static fromConfig(n,r,a={},s=!1){let i,o={};if(r instanceof Array){if(r[0].className==null||r[0].className==="Merge")throw new U("Legacy serialization format not supported yet.");i=r}else w.assert(r.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=r.layers,delete r.layers,o=r;let l=new n(o);if(!(l instanceof Db))throw new ze(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(let u of i){let d=Cr(u,void 0,s);s&&d.setFastWeightInitDuringBuild(!0),l.add(d)}return l}set stopTraining(n){if(this.model==null)throw new U("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=n}get stopTraining(){if(this.model==null)throw new U("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let n=[];for(let r of this.layers){let a={};a.className=r.getClassName(),a.config=r.getConfig(),n.push(a)}return{name:this.name,layers:n}}};return e.className="Sequential",e})();re.registerClass(lw);function RH(e){return new ma(e)}function MH(e){return new lw(e)}function U2(e){return b2(e)}function OH(e,t){A2.registerCallbackConstructor(e,t)}var pn=class extends re.Serializable{getConfig(){return{}}},G2=class extends pn{apply(e,t=1){return eG(e,t)}};G2.className="elu";re.registerClass(G2);var LH=(()=>{let e=class extends pn{apply(t){return xm(t)}};return e.className="selu",e})();re.registerClass(LH);var PH=(()=>{let e=class extends pn{apply(t){return nt(t)}};return e.className="relu",e})();re.registerClass(PH);var zH=(()=>{let e=class extends pn{apply(t){return V(()=>Ja(6,nt(t)))}};return e.className="relu6",e})();re.registerClass(zH);var BH=(()=>{let e=class extends pn{apply(t){return t}};return e.className="linear",e})();re.registerClass(BH);var WH=(()=>{let e=class extends pn{apply(t){return gr(t)}};return e.className="sigmoid",e})();re.registerClass(WH);var VH=(()=>{let e=class extends pn{apply(t){return nG(t)}};return e.className="hardSigmoid",e})();re.registerClass(VH);var UH=(()=>{let e=class extends pn{apply(t){return Do(t)}};return e.className="softplus",e})();re.registerClass(UH);var GH=(()=>{let e=class extends pn{apply(t){return tG(t)}};return e.className="softsign",e})();re.registerClass(GH);var HH=(()=>{let e=class extends pn{apply(t){return Za(t)}};return e.className="tanh",e})();re.registerClass(HH);var H2=(()=>{let e=class extends pn{apply(t,n=-1){return ms(t,n)}};return e.className="softmax",e})();re.registerClass(H2);var jH=(()=>{let e=class extends pn{apply(t,n=-1){return hm(t,n)}};return e.className="logSoftmax",e})();re.registerClass(jH);var qH=(()=>{let e=class extends pn{apply(t){return V(()=>V(()=>{let n=Math.sqrt(2),r=z(.5,J(1,um(me(t,n))));return z(t,r)}))}};return e.className="gelu",e})();re.registerClass(qH);var KH=(()=>{let e=class extends pn{apply(t){return V(()=>z(.5,z(t,J(1,Za(z(Yt(me(2,Math.PI)),J(t,z(.044715,Yr(t,3)))))))))}};return e.className="gelu_new",e})();re.registerClass(KH);var XH=(()=>{let e=class extends pn{apply(t){return V(()=>z(t,Za(Do(t))))}};return e.className="mish",e})();re.registerClass(XH);var ZH=(()=>{let e=class extends pn{apply(t,n=1){return V(()=>z(gr(z(t,n)),t))}};return e.className="swish",e})();re.registerClass(ZH);function es(e){return e.getClassName()}function Zy(e,t={}){return zp(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function ts(e){if(e==null){let t={};return t.className="linear",t.config={},Zy(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Zy(t)}else return e instanceof pn?e:Zy(e)}function uw(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var j2=class extends re.Serializable{},Hp=class extends j2{constructor(e){super(),uw(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=It([1]);return this.hasL1&&(t=J(t,ge(z(this.l1,At(e))))),this.hasL2&&(t=J(t,ge(z(this.l2,Wp(e))))),W(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Hp.className="L1L2";re.registerClass(Hp);function JH(e){return uw(e),new Hp({l1:e!=null?e.l1:null,l2:0})}function YH(e){return uw(e),new Hp({l2:e!=null?e.l2:null,l1:0})}var yk={l1l2:"L1L2"};function ht(e){return Uv(e)}function bk(e,t={}){return zp(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function vt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in yk?yk[e]:e,config:{}};return bk(t)}else return e instanceof j2?e:bk(e)}var q2=(()=>{let e=class extends Be{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=_e(t);let r=nt(t);return this.maxValue!=null&&(r=un(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ReLU",e})();re.registerClass(q2);var K2=(()=>{let e=class extends Be{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let r=_e(t);return Cp(r,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}};return e.className="LeakyReLU",e})();re.registerClass(K2);var X2=(()=>{let e=class extends Be{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=xt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vt(t.alphaRegularizer),this.alphaConstraint=Vt(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new U(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Xe(t);let n=t.slice(1);if(this.sharedAxes!=null)for(let a of this.sharedAxes)n[a-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)r[a]=t[a];this.inputSpec=[new Ft({ndim:t.length,axes:r})],this.built=!0}call(t,n){return t=_e(t),Rp(t,this.alpha.read())}getConfig(){let t={alphaInitializer:St(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:Wt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}};return e.className="PReLU",e})();re.registerClass(X2);var Z2=(()=>{let e=class extends Be{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new ze(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let r=_e(t);return Mu(r)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ELU",e})();re.registerClass(Z2);var J2=(()=>{let e=class extends Be{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){let r=_e(t);return z(r,le(kn(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ThresholdedReLU",e})();re.registerClass(J2);var Y2=(()=>{let e=class extends Be{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new H2().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){return V(()=>{let r=_e(t),a=n.mask;if(a!=null){let s=z(ce(En(r.shape),le(a,r.dtype)),we(-1e9));r=J(r,s)}return this.axis instanceof Array?this.axis.length>1?dn(ce(r,$p(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Softmax",e})();re.registerClass(Y2);function dl(e,t,n){if(typeof e=="number")return ri(e,t);if(e.length!==t)throw new U(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!ZU(a))throw new U(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Er(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function Hr(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Qa([n-t,0]);else if(r==="same")e=e*t;else throw new U(`Unsupport padding mode: ${r}.`);return e}function dw(e,t){return V(()=>(_t(t),t==="channelsFirst"?Oe(e,[0,2,3,1]):e))}function Q2(e,t){return V(()=>(_t(t),t==="channelsFirst"?Oe(e,[0,2,3,4,1]):e))}function QH(e,t,n,r=1,a="valid",s,i=1){return V(()=>{if(s==null&&(s=Ar()),_t(s),e.shape.length!==3)throw new U(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new U(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new U(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(s==="channelsFirst"&&(e=Oe(e,[0,2,1])),a==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=sm(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Mr(o,n)),o})}function xk(e,t,n,r=[1,1],a="valid",s,i,o=null){return V(()=>{if(s==null&&(s=Ar()),_t(s),e.rank!==3&&e.rank!==4)throw new U(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new U(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=dw(e,s);if(a==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Il.conv2d({x:l,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Oe(l,[0,3,1,2])),l})}function e6(e,t,n,r=[1,1,1],a="valid",s,i){return V(()=>{if(s==null&&(s=Ar()),_t(s),e.rank!==4&&e.rank!==5)throw new U(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new U(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Q2(e,s);if(a==="causal")throw new ze("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=qx(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Mr(o,n)),s==="channelsFirst"&&(o=Oe(o,[0,4,1,2,3])),o})}var eT=class tT extends Be{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tT.verifyArgs(n),this.rank=t,Zt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ze(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=dl(n.kernelSize,t,"kernelSize"),this.strides=dl(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,dr(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,_t(this.dataFormat),this.activation=ts(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=xt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Vt(n.biasConstraint),this.biasRegularizer=vt(n.biasRegularizer),this.activityRegularizer=vt(n.activityRegularizer),this.dilationRate=dl(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new U(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new U(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new U(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Gr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Gv(t.kernelSize,"number",1,3))throw new U(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:es(this.activation),useBias:this.useBias,biasInitializer:St(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:Wt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}},Wm=class nT extends eT{constructor(t,n){super(t,n),this.kernel=null,nT.verifyArgs(n),this.filters=n.filters,Zt(this.filters,"filters"),this.kernelInitializer=xt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Vt(n.kernelConstraint),this.kernelRegularizer=vt(n.kernelRegularizer)}build(t){t=Xe(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new U(`The channel dimension of the input should be defined. Found ${t[n]}`);let r=t[n],a=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return V(()=>{t=_e(t);let r,a=this.bias==null?null:this.bias.read(),s=n2(this.activation.getClassName());if(s!=null&&this.rank===2)r=xk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)r=QH(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=xk(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=e6(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ze("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Xe(t);let n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<r.length;++s){let i=Er(r[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);n.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){let t={filters:this.filters,kernelInitializer:St(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:Wt(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new U(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Vm=class rT extends Wm{constructor(t){super(2,t),rT.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Gv(t.kernelSize,"number",1,2))throw new U(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Vm.className="Conv2D";re.registerClass(Vm);var pw=(()=>{let e=class aT extends Wm{constructor(n){super(3,n),aT.verifyArgs(n)}getConfig(){let n=super.getConfig();return delete n.rank,n}static verifyArgs(n){if(typeof n.kernelSize!="number"&&!(Array.isArray(n.kernelSize)&&(n.kernelSize.length===1||n.kernelSize.length===3)))throw new U(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(n.kernelSize)}.`)}};return e.className="Conv3D",e})();re.registerClass(pw);var sT=(()=>{let e=class extends Vm{constructor(t){if(super(t),this.inputSpec=[new Ft({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Xe(t),t.length!==4)throw new U("Input should have rank 4; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");let r=t[n],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ft({ndim:4,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{let r=_e(t);if(r.shape.length!==4)throw new U(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let a=r.shape,s=a[0],i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);let l=a[i],u=a[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.strides[0],c=this.strides[1],m=Hr(l,p,d,this.padding),f=Hr(u,c,h,this.padding),g=[s,m,f,this.filters];this.dataFormat!=="channelsLast"&&(r=Oe(r,[0,2,3,1]));let y=im(r,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Oe(y,[0,3,1,2])),this.bias!=null&&(y=Mr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=Xe(t);let n=t.slice(),r,a,s;this.dataFormat==="channelsFirst"?(r=1,a=2,s=3):(r=3,a=1,s=2);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[r]=this.filters,n[a]=Hr(n[a],l,i,this.padding),n[s]=Hr(n[s],u,o,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};return e.className="Conv2DTranspose",e})();re.registerClass(sT);var iT=(()=>{let e=class extends pw{constructor(t){if(super(t),this.inputSpec=[new Ft({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Xe(t),t.length!==5)throw new U("Input should have rank 5; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");let r=t[n],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ft({ndim:5,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{let r=_e(t);if(r.shape.length!==5)throw new U(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let a=r.shape,s=a[0],i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);let u=a[l],d=a[i],h=a[o],p=this.kernelSize[0],c=this.kernelSize[1],m=this.kernelSize[2],f=this.strides[0],g=this.strides[1],y=this.strides[2],b=Hr(u,f,p,this.padding),x=Hr(d,g,c,this.padding),v=Hr(h,y,m,this.padding),I=[s,b,x,v,this.filters];this.dataFormat!=="channelsLast"&&(r=Oe(r,[0,2,3,4,1]));let N=Kx(r,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=Oe(N,[0,4,1,2,3])),this.bias!==null&&(N=Mr(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(t){t=Xe(t);let n=t.slice(),r,a,s,i;this.dataFormat==="channelsFirst"?(r=1,a=2,s=3,i=4):(r=4,a=1,s=2,i=3);let o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],d=this.strides[0],h=this.strides[1],p=this.strides[2];return n[r]=this.filters,n[a]=Hr(n[a],d,o,this.padding),n[s]=Hr(n[s],h,l,this.padding),n[i]=Hr(n[i],p,u,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};return e.className="Conv3DTranspose",e})();re.registerClass(iT);var t6=(()=>{let e=class extends Wm{constructor(t,n){if(super(t,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new U("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new U("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new U(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=xt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vt(n.depthwiseRegularizer),this.depthwiseConstraint=Vt(n.depthwiseConstraint),this.pointwiseInitializer=xt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vt(n.pointwiseRegularizer),this.pointwiseConstraint=Vt(n.pointwiseConstraint)}build(t){if(t=Xe(t),t.length<this.rank+2)throw new U(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new U(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);let r=t[n],a=this.kernelSize.concat([r,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(r*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Ft({ndim:this.rank+2,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{t=_e(t);let r;if(this.rank===1)throw new ze("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Oe(t,[0,2,3,1])),r=zu(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Mr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Oe(r,[0,3,1,2])),r})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=St(this.depthwiseInitializer),t.pointwiseInitializer=St(this.pointwiseInitializer),t.depthwiseRegularizer=ht(this.depthwiseRegularizer),t.pointwiseRegularizer=ht(this.pointwiseRegularizer),t.depthwiseConstraint=Wt(this.depthwiseConstraint),t.pointwiseConstraint=Wt(this.pointwiseConstraint),t}};return e.className="SeparableConv",e})(),oT=(()=>{let e=class extends t6{constructor(t){super(2,t)}};return e.className="SeparableConv2D",e})();re.registerClass(oT);var lT=(()=>{let e=class uT extends Wm{constructor(n){super(1,n),uT.verifyArgs(n),this.inputSpec=[{ndim:3}]}getConfig(){let n=super.getConfig();return delete n.rank,delete n.dataFormat,n}static verifyArgs(n){if(typeof n.kernelSize!="number"&&!Gv(n.kernelSize,"number",1,1))throw new U(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(n.kernelSize)}.`)}};return e.className="Conv1D",e})();re.registerClass(lT);var dT=(()=>{let e=class extends Be{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return V(()=>{if(t=_e(t),this.dataFormat==="channelsLast"){let r=Ph(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ph(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let r=Ph(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ph(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Cropping2D",e})();re.registerClass(dT);var pT=(()=>{let e=class extends Be{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,_t(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,qU(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let n=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,r]}else{let n=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],n,r,t[3]]}}call(t,n){return V(()=>{let r=_e(t),a=r.shape;if(this.dataFormat==="channelsFirst"){r=Oe(r,[0,2,3,1]);let s=this.size[0]*a[2],i=this.size[1]*a[3],o=this.interpolation==="nearest"?nr.resizeNearestNeighbor(r,[s,i]):nr.resizeBilinear(r,[s,i]);return Oe(o,[0,3,1,2])}else{let s=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?nr.resizeNearestNeighbor(r,[s,i]):nr.resizeBilinear(r,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}};return e.className="UpSampling2D",e})();re.registerClass(pT);function n6(e,t,n=[1,1],r="valid",a,s){return V(()=>{a==null&&(a=Ar()),_t(a);let i=dw(e,a);if(e.rank!==4)throw new U(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new U(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Fo(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=Oe(i,[0,3,1,2])),i})}var hT=(()=>{let e=class extends eT{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Vt(t.depthwiseConstraint),this.depthwiseRegularizer=vt(t.depthwiseRegularizer)}build(t){if(t=Xe(t),t.length<4)throw new U(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new U(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);let r=t[n],a=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return V(()=>{t=_e(t);let r=n6(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Mr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Xe(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Er(n,this.kernelSize[0],this.padding,this.strides[0]),i=Er(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,s,i]:[t[0],s,i,a]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=St(this.depthwiseInitializer),t.depthwiseRegularizer=ht(this.depthwiseRegularizer),t.depthwiseConstraint=Wt(this.depthwiseRegularizer),t}};return e.className="DepthwiseConv2D",e})();re.registerClass(hT);function cT(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new U("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function mT(e,t,n,r=!1,a,s,i=!1,o=!1){return V(()=>{let l=t.shape.length;if(l<3)throw new U(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat($r(2,l));if(t=Oe(t,u),s!=null)throw new ze("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=le(le(a,"bool"),"float32"),a.rank===l-1&&(a=Xt(a,-1)),a=Oe(a,u)),r&&(t=ur(t,0),a!=null&&(a=ur(a,0)));let d=[],h,p=n,c=t.shape[0],m=Tt(t),f;a!=null&&(f=Tt(a));for(let y=0;y<c;++y){let b=m[y],x=V(()=>e(b,p));if(a==null)h=x[0],p=x[1];else{let v=V(()=>{let I=f[y],N=ce(jn(I),I),_=J(z(x[0],I),z(p[0],N)),E=p.map((A,R)=>J(z(x[1][R],I),z(A,N)));return{output:_,newStates:E}});h=v.output,p=v.newStates}o&&d.push(h)}let g;return o&&(g=Rt(d,1)),[h,g,p]})}var gs=(()=>{let e=class fT extends Be{constructor(n){super(n);let r;if(n.cell==null)throw new U("cell property is missing for the constructor of RNN.");if(Array.isArray(n.cell)?r=new cw({cells:n.cell}):r=n.cell,r.stateSize==null)throw new U("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=r,this.returnSequences=n.returnSequences==null?!1:n.returnSequences,this.returnState=n.returnState==null?!1:n.returnState,this.goBackwards=n.goBackwards==null?!1:n.goBackwards,this._stateful=n.stateful==null?!1:n.stateful,this.unroll=n.unroll==null?!1:n.unroll,this.supportsMasking=!0,this.inputSpec=[new Ft({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let n=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $r(0,n).map(r=>null)}else return this.states_}setStates(n){this.states_=n}computeOutputShape(n){_b(n)&&(n=n[0]),n=n;let r=this.cell.stateSize;Array.isArray(r)||(r=[r]);let a=r[0],s;if(this.returnSequences?s=[n[0],n[1],a]:s=[n[0],a],this.returnState){let i=[];for(let o of r)i.push([n[0],o]);return[s].concat(i)}else return s}computeMask(n,r){return V(()=>{Array.isArray(r)&&(r=r[0]);let a=this.returnSequences?r:null;if(this.returnState){let s=this.states.map(i=>null);return[a].concat(s)}else return a})}get states(){if(this.states_==null){let n=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,r=[];for(let a=0;a<n;++a)r.push(null);return r}else return this.states_}set states(n){this.states_=n}build(n){if(this.numConstants!=null)throw new ze("Constants support is not implemented in RNN yet.");_b(n)&&(n=n[0]),n=n;let r=this.stateful?n[0]:null,a=n.slice(2);this.inputSpec[0]=new Ft({shape:[r,null,...a]});let s=[n[0]].concat(n.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new U(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new Ft({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(n,r=!1){V(()=>{if(!this.stateful)throw new Ma("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape[0];if(a==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([a,s])):this.states_=[It([a,this.cell.stateSize])];else if(n==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([a,s])):this.states_[0]=It([a,this.cell.stateSize]);else{if(Array.isArray(n)||(n=[n]),n.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${n.length} state value(s). Input received: ${n}`);r===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let s=0;s<this.states_.length;++s){let i=n[s],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,l=[a,o];if(!w.arraysEqual(i.shape,l))throw new U(`State ${s} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Pt(s.clone()))})}apply(n,r){let a=r==null?null:r.initialState,s=r==null?null:r.constants;r==null&&(r={});let i=cT(n,a,s,this.numConstants);n=i.inputs,a=i.initialState,s=i.constants;let o=[],l=[];if(a!=null){r.initialState=a,o=o.concat(a),this.stateSpec=[];for(let u of a)this.stateSpec.push(new Ft({shape:u.shape}));l=l.concat(this.stateSpec)}if(s!=null&&(r.constants=s,o=o.concat(s),this.numConstants=s.length),o[0]instanceof Fr){let u=[n].concat(o),d=this.inputSpec.concat(l),h=this.inputSpec;this.inputSpec=d;let p=super.apply(u,r);return this.inputSpec=h,p}else return super.apply(n,r)}call(n,r){return V(()=>{let a=r==null?null:r.mask,s=r==null?null:r.training,i=r==null?null:r.initialState;n=_e(n),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(n));let o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new U(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let l={training:s},u=mT((m,f)=>{let g=this.cell.call([m].concat(f),l);return[g[0],g.slice(1)]},n,i,this.goBackwards,a,null,this.unroll,this.returnSequences),d=u[0],h=u[1],p=u[2];this.stateful&&this.resetStates(p,s);let c=this.returnSequences?h:d;return this.returnState?[c].concat(p):c})}getInitialState(n){return V(()=>{let r=It(n.shape);return r=ge(r,[1,2]),r=Bp(r),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?Nb(r,[1,a]):r):this.cell.stateSize>1?[Nb(r,[1,this.cell.stateSize])]:[r]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(n){super.setFastWeightInitDuringBuild(n),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(n)}getConfig(){let n=super.getConfig(),r={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(r.numConstants=this.numConstants);let a=this.cell.getConfig();return this.getClassName()===fT.className&&(r.cell={className:this.cell.getClassName(),config:a}),Object.assign(Object.assign(Object.assign({},a),n),r)}static fromConfig(n,r,a={}){let s=r.cell,i=Cr(s,a);return new n(Object.assign(r,{cell:i}))}};return e.className="RNN",e})();re.registerClass(gs);var jp=class extends Be{},Um=class extends jp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Zt(this.units,"units"),this.activation=ts(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Sl([1,Qa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Sl([1,Qa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xe(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new U(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Zr(z(e,s),this.kernel.read()):a=Zr(e,this.kernel.read()),this.bias!=null&&(a=Mr(a,this.bias.read())),i!=null&&(n=z(n,i));let o=J(a,Zr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:es(this.activation),useBias:this.useBias,kernelInitializer:St(this.kernelInitializer),recurrentInitializer:St(this.recurrentInitializer),biasInitializer:St(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Wt(this.kernelConstraint),recurrentConstraint:Wt(this.recurrentConstraint),biasConstraint:Wt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Um.className="SimpleRNNCell";re.registerClass(Um);var gT=(()=>{let e=class extends gs{constructor(t){t.cell=new Um(t),super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return new t(n)}};return e.className="SimpleRNN",e})();re.registerClass(gT);var hw=(()=>{let e=class extends jp{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new U("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Zt(this.units,"units"),this.activation=ts(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ts(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(t.kernelRegularizer),this.recurrentRegularizer=vt(t.recurrentRegularizer),this.biasRegularizer=vt(t.biasRegularizer),this.kernelConstraint=Vt(t.kernelConstraint),this.recurrentConstraint=Vt(t.recurrentConstraint),this.biasConstraint=Vt(t.biasConstraint),this.dropout=Sl([1,Qa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Sl([1,Qa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Xe(t);let n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return V(()=>{if(t=t,t.length!==2)throw new U(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let r=n.training==null?!1:n.training,a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jn(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u;0<this.dropout&&this.dropout<1&&(t=z(t,s[0]));let d=Zr(t,this.kernel.read());this.useBias&&(d=Mr(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=z(a,i[0]));let h=this.recurrentKernel.read(),[p,c]=$n(h,[2*this.units,this.units],h.rank-1),m=Zr(a,p),[f,g,y]=$n(d,3,d.rank-1),[b,x]=$n(m,2,m.rank-1);o=this.recurrentActivation.apply(J(f,b)),l=this.recurrentActivation.apply(J(g,x));let v=Zr(z(l,a),c);u=this.activation.apply(J(y,v));let I=J(z(o,a),z(J(1,ft(o)),u));return[I,I]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:es(this.activation),recurrentActivation:es(this.recurrentActivation),useBias:this.useBias,kernelInitializer:St(this.kernelInitializer),recurrentInitializer:St(this.recurrentInitializer),biasInitializer:St(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Wt(this.kernelConstraint),recurrentConstraint:Wt(this.recurrentConstraint),biasConstraint:Wt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),n)}};return e.className="GRUCell",e})();re.registerClass(hw);var yT=(()=>{let e=class extends gs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new hw(t),super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}};return e.className="GRU",e})();re.registerClass(yT);var Gm=(()=>{let e=class extends jp{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Zt(this.units,"units"),this.activation=ts(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ts(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=vt(t.kernelRegularizer),this.recurrentRegularizer=vt(t.recurrentRegularizer),this.biasRegularizer=vt(t.biasRegularizer),this.kernelConstraint=Vt(t.kernelConstraint),this.recurrentConstraint=Vt(t.recurrentConstraint),this.biasConstraint=Vt(t.biasConstraint),this.dropout=Sl([1,Qa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Sl([1,Qa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Xe(t);let r=t[t.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;a=new(n=class extends vr{apply(o,l){let u=s.apply([i]),d=new qv().apply([i]),h=s.apply([i*2]);return rk(rk(u,d),h)}},n.className="CustomInit",n)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return V(()=>{let r=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new U(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jn(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=this.recurrentDropoutMask,l,u,d,h;0<this.dropout&&this.dropout<1&&(t=z(t,i[0]));let p=Zr(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=z(a,o[0])),p=J(p,Zr(a,this.recurrentKernel.read())),this.useBias&&(p=Mr(p,this.bias.read()));let[c,m,f,g]=$n(p,4,p.rank-1);l=this.recurrentActivation.apply(c),u=this.recurrentActivation.apply(m),d=J(z(u,s),z(l,this.activation.apply(f))),h=this.recurrentActivation.apply(g);let y=z(h,this.activation.apply(d));return[y,y,d]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:es(this.activation),recurrentActivation:es(this.recurrentActivation),useBias:this.useBias,kernelInitializer:St(this.kernelInitializer),recurrentInitializer:St(this.recurrentInitializer),biasInitializer:St(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Wt(this.kernelConstraint),recurrentConstraint:Wt(this.recurrentConstraint),biasConstraint:Wt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),n)}};return e.className="LSTMCell",e})();re.registerClass(Gm);var bT=(()=>{let e=class extends gs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Gm(t),super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=n==null?null:n.mask,a=n==null?null:n.training,s=n==null?null:n.initialState;return super.call(t,{mask:r,training:a,initialState:s})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}};return e.className="LSTM",e})();re.registerClass(bT);var cw=(()=>{let e=class extends jp{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return V(()=>{t=t;let r=t.slice(1),a=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?a.push(r.splice(0,o.stateSize.length)):a.push(r.splice(0,1));a.reverse();let s=[],i;for(let o=0;o<this.cells.length;++o){let l=this.cells[o];r=a[o],o===0?i=[t[0]].concat(r):i=[i[0]].concat(r),i=l.call(i,n),s.push(i.slice(1))}r=[];for(let o of s.slice().reverse())r.push(...o);return[i[0]].concat(r)})}build(t){_b(t)&&(t=t[0]),t=t;let n;this.cells.forEach((r,a)=>{Us(`RNNCell_${a}`,()=>{r.build(t),Array.isArray(r.stateSize)?n=r.stateSize[0]:n=r.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){let t=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,n,r={}){let a=[];for(let s of n.cells)a.push(Cr(s,r));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let r of this.cells)n.push(...r.trainableWeights);return n.concat(t)}return t}getWeights(){let t=[];for(let n of this.cells)t.push(...n.weights);return Cb(t)}setWeights(t){let n=[];for(let r of this.cells){let a=r.weights.length,s=t.splice(a);for(let i=0;i<r.weights.length;++i)n.push([r.weights[i],s[i]])}ew(n)}};return e.className="StackedRNNCells",e})();re.registerClass(cw);function ns(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):u2(t(),n),o=()=>Vp(i,t,r);return!a||a<=1?Pt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Pt(l.clone()))}var r6=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},xT=class extends gs{constructor(e){if(e.unroll)throw new ze("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ze("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ft({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new U("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=It(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Ma("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_=[It(a)];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_[0]=It(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!w.arraysEqual(i.shape,o))throw new U(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Pt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],d=Er(l,r[0],a,s[0],i[0]),h=Er(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,h]:[d,h,n]]}};xT.className="ConvRNN2D";var mw=(()=>{let e=class extends Gm{constructor(t){let{filters:n,kernelSize:r,strides:a,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:n})),this.filters=n,Zt(this.filters,"filters"),this.kernelSize=dl(r,2,"kernelSize"),this.kernelSize.forEach(l=>Zt(l,"kernelSize")),this.strides=dl(a||1,2,"strides"),this.strides.forEach(l=>Zt(l,"strides")),this.padding=s||"valid",dr(this.padding),this.dataFormat=i||"channelsLast",_t(this.dataFormat),this.dilationRate=dl(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Zt(l,"dilationRate"))}build(t){var n;t=Xe(t);let r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new U(`The channel dimension of the input should be defined. Found ${t[r]}`);let a=t[r],s=4,i=this.kernelSize.concat([a,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,d=this.filters;l=new(n=class extends vr{apply(h,p){let c=u.apply([d]),m=En([d]),f=u.apply([d*2]);return Hv([c,m,f])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return V(()=>{if(t.length!==3)throw new U(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=n.training||!1,a=t[0],s=t[1],i=t[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jn(a),rate:this.dropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,u=(ee,te,ae)=>!te||!te[ae]?ee:z(te[ae],ee),d=u(a,l,0),h=u(a,l,1),p=u(a,l,2),c=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jn(s),rate:this.recurrentDropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));let m=this.recurrentDropoutMask,f=u(s,m,0),g=u(s,m,1),y=u(s,m,2),b=u(s,m,3),x=3,[v,I,N,_]=$n(this.kernel.read(),o,x),[E,A,R,F]=this.useBias?$n(this.bias.read(),o):[null,null,null,null];d=this.inputConv(d,v,E,this.padding),h=this.inputConv(h,I,A,this.padding),p=this.inputConv(p,N,R,this.padding),c=this.inputConv(c,_,F,this.padding);let[S,O,B,G]=$n(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,S),g=this.recurrentConv(g,O),y=this.recurrentConv(y,B),b=this.recurrentConv(b,G);let j=this.recurrentActivation.apply(J(d,f)),K=this.recurrentActivation.apply(J(h,g)),X=J(z(K,i),z(j,this.activation.apply(J(p,y)))),Y=z(this.recurrentActivation.apply(J(c,b)),this.activation.apply(X));return[Y,Y,X]})}getConfig(){let t=super.getConfig(),{units:n}=t,r=r6(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),a)}inputConv(t,n,r,a){let s=yn(t,n,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Mr(s,r,this.dataFormat):s}recurrentConv(t,n){return yn(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};return e.className="ConvLSTM2DCell",e})();re.registerClass(mw);var vT=(()=>{let e=class extends xT{constructor(t){let n=new mw(t);super(Object.assign(Object.assign({},t),{cell:n}))}static fromConfig(t,n){return new t(n)}};return e.className="ConvLSTM2D",e})();re.registerClass(vT);var fw=(()=>{let e=class extends Be{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let n=t.shape,r=[];for(let a=0;a<this.noiseShape.length;++a)r.push(this.noiseShape[a]==null?n[a]:this.noiseShape[a]);return r}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);if(0<this.rate&&this.rate<1){let a=n.training==null?!1:n.training,s=this.getNoiseShape(r);return Vp(()=>u2(r,this.rate,s,this.seed),()=>r,a)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}};return e.className="Dropout",e})();re.registerClass(fw);var wT=(()=>{let e=class extends fw{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let n=t.shape;return[n[0],1,n[2]]}};return e.className="SpatialDropout1D",e})();re.registerClass(wT);var kT=(()=>{let e=class extends Be{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,Zt(this.units,"units"),this.activation=ts(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Vt(t.kernelConstraint),this.biasConstraint=Vt(t.biasConstraint),this.kernelRegularizer=vt(t.kernelRegularizer),this.biasRegularizer=vt(t.biasRegularizer),this.activityRegularizer=vt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Xe(t);let n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Xe(t);let n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t),a=n2(this.activation.getClassName()),s;return a!=null?s=Zr(r,this.kernel.read(),a,this.bias?this.bias.read():null):(s=Zr(r,this.kernel.read()),this.bias!=null&&(s=Mr(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:es(this.activation),useBias:this.useBias,kernelInitializer:St(this.kernelInitializer),biasInitializer:St(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Wt(this.kernelConstraint),biasConstraint:Wt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Dense",e})();re.registerClass(kT);var IT=(()=>{let e=class extends Be{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Xe(t);for(let n of t.slice(1))if(n==null)throw new U(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Ga(t,1)]}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){let a=[0];for(let s=2;s<r.rank;++s)a.push(s);a.push(1),r=Oe(r,a)}return QU(r)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(t,n),t}};return e.className="Flatten",e})();re.registerClass(IT);var ST=(()=>{let e=class extends Be{constructor(t){super(t),this.supportsMasking=!0,this.activation=ts(t.activation)}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);return this.activation.apply(r)})}getConfig(){let t={activation:es(this.activation)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Activation",e})();re.registerClass(ST);var NT=(()=>{let e=class extends Be{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return V(()=>(t=_e(t),JU(t,this.n)))}getConfig(){let t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}};return e.className="RepeatVector",e})();re.registerClass(NT);var TT=(()=>{let e=class extends Be{constructor(t){super(t),this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){let r="Total size of new array must be unchanged.",a=n.slice(),s=1,i=null;for(let l=0;l<a.length;++l){let u=a[l];if(this.isUnknown(u))if(i===null)i=l;else throw new U("Can only specifiy one unknown dimension.");else s*=u}let o=Ga(t);if(i!==null){if(s===0||o%s!==0)throw new U(r);a[i]=o/s}else if(o!==s)throw new U(r);return a}computeOutputShape(t){let n=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t),a=r.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return W(r,s)})}getConfig(){let t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Reshape",e})();re.registerClass(TT);var _T=(()=>{let e=class extends Be{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let n=$r(1,t.dims.length+1);if(!w.arraysEqual(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ft({ndim:this.dims.length+1})]}computeOutputShape(t){t=Xe(t);let n=t.slice();return this.dims.forEach((r,a)=>{n[a+1]=t[r]}),n}call(t,n){return Oe(_e(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Permute",e})();re.registerClass(_T);var CT=(()=>{let e=class extends Be{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){let r=_e(t);return Md(ti(r,this.maskValue),-1)}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t),a=Md(ti(r,this.maskValue),-1,!0);return z(r,le(a,r.dtype))})}};return e.className="Masking",e})();re.registerClass(CT);var ET=(()=>{let e=class extends Be{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(tt(t.inputLength))}this.inputDim=t.inputDim,Zt(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Zt(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vt(t.embeddingsRegularizer),this.activityRegularizer=vt(t.activityRegularizer),this.embeddingsConstraint=Vt(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return V(()=>this.maskZero?(t=_e(t),ti(t,He(t))):null)}computeOutputShape(t){if(t=Xe(t),this.inputLength==null)return[...t,this.outputDim];let n=tt(this.inputLength);if(n.length!==t.length-1)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let a=0;a<n.length;++a){let s=n[a],i=t[a+1];if(s!=null&&i!=null&&s!==i)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(n[r]=i),r++}}return[t[0],...n,this.outputDim]}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);r.dtype!=="int32"&&(r=ya(r,"int32"));let a=l2(this.embeddings.read(),W(r,[r.size]));return W(a,Xe(this.computeOutputShape(r.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:St(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:Wt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Embedding",e})();re.registerClass(ET);var Lo=class extends Be{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ze}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new U("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Xe(e)]),e=e,e.length<2)throw new U(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Ua(t),t.length>1)throw new U(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&Ua(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=Qa(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=Bp(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,d=u[0],h=u.slice(1).concat([d]),p=W(o,[d].concat(Ga(u.slice(1))));p=Oe(p,[1,0]),p=W(p,h),n.push(p),a=!0}else if(l>1){let u=$r(1,l).concat([0]);n.push(Oe(o,u)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,u=o[l-1],d=[u].concat(o.slice(0,o.length-1));s=W(Oe(W(s,[-1,u]),[1,0]),d)}else if(i>1){let o=[i-1].concat($r(0,i-1));s=Oe(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Ua(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new U("`mask` should be an Array");if(!Array.isArray(e))throw new U("`inputs` should be an Array");if(t.length!==e.length)throw new U(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Xt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=yr(n,t[r]);return n})}},gw=class extends Lo{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return t})}};gw.className="Add";re.registerClass(gw);var $T=(()=>{let e=class extends Lo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=z(n,t[r]);return n})}};return e.className="Multiply",e})();re.registerClass($T);var AT=(()=>{let e=class extends Lo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=J(n,t[r]);return z(1/t.length,n)})}};return e.className="Average",e})();re.registerClass(AT);var FT=(()=>{let e=class extends Lo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=na(n,t[r]);return n})}};return e.className="Maximum",e})();re.registerClass(FT);var DT=(()=>{let e=class extends Lo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=Ja(n,t[r]);return n})}};return e.className="Minimum",e})();re.registerClass(DT);var RT=(()=>{let e=class extends Lo{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new U("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(let a of t)if(a!=null){n=!1;break}if(n)return;let r=[];for(let a=0;a<t.length;++a){let s=t[a].slice();s.splice(this.axis,1);let i=!1;for(let o of r)if(w.arraysEqual(o,s)){i=!0;break}i||r.push(s)}if(r.length>1)throw new U("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return V(()=>Hv(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new U("A `Concatenate` layer should be called on a list of inputs.");let n=t,r=n[0].slice(),a=this.axis<0?r.length+this.axis:this.axis;for(let s of n.slice(1)){if(r[a]==null||s[a]==null){r[a]=null;break}r[a]+=s[a]}return r}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new U("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new U("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new U(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return V(()=>{let r=!0;if(n.forEach(i=>{if(i!=null){r=!1;return}}),r)return null;let a=[];for(let i=0;i<t.length;++i)n[i]==null?a.push(le(jn(t[i]),"bool")):n[i].rank<t[i].rank?a.push(Xt(n[i],-1)):a.push(n[i]);let s=lt(a,this.axis);return am(s,-1,!1)})}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Concatenate",e})();re.registerClass(RT);function hd(e,t){for(;e<0;)e+=t;return e}function a6(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ze("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new ze("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return V(()=>{let i;if(r>a){i=r-a;let l=[];for(let u=0;u<i;++u)l.push(1);t=W(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let u=0;u<i;++u)l.push(1);e=W(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=ge(z(e,t),s[0]):o=ge(z(Oe(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=Me(e,t,l,u)}if(i>0){let l;r>a?l=r+a-3:l=r-1;let u=[];for(let d=l;d<l+i;++d)u.push(d);o=fs(o,u)}return o.shape.length===1&&(o=Xt(o,1)),o})}var MT=(()=>{let e=class extends Lo{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){w.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0],r=t[1];if(n.length>3||r.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(n,r);if(n[a[0]]!==r[a[1]])throw new U(`Dimension incompatibility: ${n[a[0]]} !== ${r[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new U(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],r=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((s,i)=>hd(s,t[i].shape.length)):a=[hd(this.axes,n.shape.length),hd(this.axes,r.shape.length)],this.normalize&&(n=bc(n,a[0]),r=bc(r,a[1])),a6(n,r,a)}interpretAxes(t,n){let r;return Array.isArray(this.axes)?r=this.axes:r=[hd(this.axes,t.length),hd(this.axes,n.length)],r}computeOutputShape(t){w.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0].slice(),r=t[1].slice();if(n.length>3||r.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(n,r);n.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);let s=n.concat(r);return s.length===1&&s.push(1),s}computeMask(t,n){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}};return e.className="Dot",e})();re.registerClass(MT);var OT=(()=>{let e=class extends Be{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);return Vp(()=>J(Lm(r.shape,0,this.stddev),r),()=>r,n.training||!1)})}};return e.className="GaussianNoise",e})();re.registerClass(OT);var LT=(()=>{let e=class extends Be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=_e(t);return this.rate>0&&this.rate<1?Vp(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return z(r,Lm(r.shape,1,a))},()=>r,n.training||!1):r})}};return e.className="GaussianDropout",e})();re.registerClass(LT);var PT=(()=>{let e=class extends Be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||_e(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return V(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(t);return Vp(()=>{let a=_e(t),s=-1.6732632423543772*1.0507009873554805,i=wa(cs(r),this.rate);i=ya(i,"float32");let o=((1-this.rate)*(1+this.rate*s**2))**-.5,l=-o*s*this.rate,u=J(z(a,i),z(J(i,-1),s));return J(z(u,o),l)},()=>_e(t),n.training||!1)}return t})}};return e.className="AlphaDropout",e})();re.registerClass(PT);function Wd(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=Lx(e,t,n,r,a,s);else if(e.rank===3)i=Px(e,t,n,r,a,s);else if(e.rank===4)i=zx(e,t,n,r,a,s);else throw new ze(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function s6(e,t,n,r,a=.001){return V(()=>{let s=Fp(e,r),i=s.mean,o=s.variance;return[Wd(e,i,o,n,t,a),i,o]})}function i6(e,t,n,r,a=.001){return V(()=>{let s=Fp(e,r),i=s.mean,o=s.variance,l=[];for(let c of $r(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let u=W(i,l),d=W(o,l),h=t==null?null:W(t,l),p=n==null?null:W(n,l);return[Wd(e,u,d,p,h,a),i,o]})}function o6(e,t,n,r,a=.001){return w.arraysEqual(r.slice().sort(),$r(0,e.rank-1))?s6(e,t,n,r,a):i6(e,t,n,r,a)}var zT=(()=>{let e=class extends Be{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=xt(t.betaInitializer||"zeros"),this.gammaInitializer=xt(t.gammaInitializer||"ones"),this.movingMeanInitializer=xt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(t.movingVarianceInitializer||"ones"),this.betaConstraint=Vt(t.betaConstraint),this.gammaConstraint=Vt(t.gammaConstraint),this.betaRegularizer=vt(t.betaRegularizer),this.gammaRegularizer=vt(t.gammaRegularizer)}build(t){t=Xe(t);let n=this.axis>=0?this.axis:this.axis+t.length,r=t[n];if(r==null)throw new U(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Ft({ndim:t.length,axes:{[n]:r}})];let a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return V(()=>{let r=n.training==null?!1:n.training,a=_e(t),s=a.shape,i=s.length,o=$r(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);let u=ri(1,i);u[l]=s[l];let d=o.slice();d.sort();let h=!w.arraysEqual(d,$r(0,i).slice(0,i-1)),p=()=>{if(h){let y=W(this.movingMean.read(),u),b=W(this.movingVariance.read(),u),x=this.center?W(this.beta.read(),u):null,v=this.scale?W(this.gamma.read(),u):null;return Wd(a,y,b,x,v,this.epsilon)}else return Wd(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return p();let[c,m,f]=o6(a,this.gamma.read(),this.beta.read(),o,this.epsilon),g=(y,b,x)=>{V(()=>{let v=1-x,I=y.read(),N=z(ce(I,b),v);y.write(ce(I,N))})};return g(this.movingMean,m,this.momentum),g(this.movingVariance,f,this.momentum),c})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:St(this.betaInitializer),gammaInitializer:St(this.gammaInitializer),movingMeanInitializer:St(this.movingMeanInitializer),movingVarianceInitializer:St(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:Wt(this.betaConstraint),gammaConstraint:Wt(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="BatchNormalization",e})();re.registerClass(zT);var BT=(()=>{let e=class extends Be{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=xt(t.betaInitializer||"zeros"),this.gammaInitializer=xt(t.gammaInitializer||"ones"),this.betaRegularizer=vt(t.betaRegularizer),this.gammaRegularizer=vt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Xe(t);let n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=n);for(let s of this.axis)if(s<0||s>=n)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Ua(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(s=>t[s]),a=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,n){let r=_e(t),a=r.shape,s=a.length;return V(()=>{let{mean:i,variance:o}=Fp(r,this.axis,!0),l=ri(1,s);for(let m of this.axis)l[m]=a[m];let u=m=>m!=null&&m.shape.length!==s?W(m,l):m,d=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null,p=[],c=[];for(let m=0;m<s;++m)this.axis.indexOf(m)!==-1?(p.push(a[m]),c.push(1)):(p.push(1),c.push(a[m]));return i=Vn(i,p),o=Vn(o,p),d!=null&&(d=Vn(d,c)),h!=null&&(h=Vn(h,c)),Wd(r,i,o,h,d,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:St(this.betaInitializer),gammaInitializer:St(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}};return e.className="LayerNormalization",e})();re.registerClass(BT);function l6(e,t,n){return V(()=>{if(e.rank!==4)throw new U(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new U("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ar()),n!=="channelsLast"&&n!=="channelsFirst")throw new U(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Rr(e,r)})}var WT=(()=>{let e=class extends Be{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Ar():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new U(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,r;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new U(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new U(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[n,r]}this.inputSpec=[new Ft({ndim:4})]}computeOutputShape(t){t=Xe(t);let n,r;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?r=t[3]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],t[1],n,r]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?r=t[2]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],n,r,t[3]])}call(t,n){return V(()=>l6(_e(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}};return e.className="ZeroPadding2D",e})();re.registerClass(WT);function Hm(e,t,n,r,a,s){return V(()=>{_t(a),a2(s),dr(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=Ar()),s==null&&(s="max"),e=dw(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=jt(e,t,n,o):i=va(e,t,n,o),a==="channelsFirst"&&(i=Oe(i,[0,3,1,2])),i})}function VT(e,t,n,r,a,s){return V(()=>{_t(a),a2(s),dr(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=Ar()),s==null&&(s="max"),e=Q2(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=uv(e,t,n,o):i=Ox(e,t,n,o),a==="channelsFirst"&&(i=Oe(i,[0,4,1,2,3])),i})}var UT=class extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new U(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Zt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new U(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Zt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,dr(this.padding),this.inputSpec=[new Ft({ndim:3})]}computeOutputShape(e){e=Xe(e);let t=Er(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=Bp(_e(e),2);let n=this.poolingFunction(_e(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return fs(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yw=class extends UT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return _t(a),dr(r),Hm(e,t,n,r,a,"max")}};yw.className="MaxPooling1D";re.registerClass(yw);var GT=(()=>{let e=class extends UT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return _t(s),dr(a),Hm(t,n,r,a,s,"avg")}};return e.className="AveragePooling1D",e})();re.registerClass(GT);var HT=class extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new U(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Zt(this.poolSize,"poolSize"),Zt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_t(this.dataFormat),dr(this.padding),this.inputSpec=[new Ft({ndim:4})]}computeOutputShape(e){e=Xe(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Er(t,this.poolSize[0],this.padding,this.strides[0]),n=Er(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bw=class extends HT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return _t(a),dr(r),Hm(e,t,n,r,a,"max")}};bw.className="MaxPooling2D";re.registerClass(bw);var jT=(()=>{let e=class extends HT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return _t(s),dr(a),Hm(t,n,r,a,s,"avg")}};return e.className="AveragePooling2D",e})();re.registerClass(jT);var qT=class extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new U(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Zt(this.poolSize,"poolSize"),Zt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_t(this.dataFormat),dr(this.padding),this.inputSpec=[new Ft({ndim:5})]}computeOutputShape(e){e=Xe(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Er(t,this.poolSize[0],this.padding,this.strides[0]),n=Er(n,this.poolSize[1],this.padding,this.strides[1]),r=Er(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xw=class extends qT{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return _t(a),dr(r),VT(e,t,n,r,a,"max")}};xw.className="MaxPooling3D";re.registerClass(xw);var KT=(()=>{let e=class extends qT{constructor(t){super(t)}poolingFunction(t,n,r,a,s){return _t(s),dr(a),VT(t,n,r,a,s,"avg")}};return e.className="AveragePooling3D",e})();re.registerClass(KT);var XT=class extends Be{constructor(e){super(e),this.inputSpec=[new Ft({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ze}},vw=class extends XT{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=_e(e);return kt(n,1)})}};vw.className="GlobalAveragePooling1D";re.registerClass(vw);var ZT=(()=>{let e=class extends XT{constructor(t){super(t||{})}call(t,n){return V(()=>{let r=_e(t);return ir(r,1)})}};return e.className="GlobalMaxPooling1D",e})();re.registerClass(ZT);var JT=class extends Be{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_t(this.dataFormat),this.inputSpec=[new Ft({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ze}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ww=class extends JT{call(e,t){return V(()=>{let n=_e(e);return this.dataFormat==="channelsLast"?kt(n,[1,2]):kt(n,[2,3])})}};ww.className="GlobalAveragePooling2D";re.registerClass(ww);var YT=(()=>{let e=class extends JT{call(t,n){return V(()=>{let r=_e(t);return this.dataFormat==="channelsLast"?ir(r,[1,2]):ir(r,[2,3])})}};return e.className="GlobalMaxPooling2D",e})();re.registerClass(YT);var QT=class extends Be{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=Cr(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},kw=class extends QT{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Xe(e),e.length<3)throw new U(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Xe(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return V(()=>(e=_e(e),mT((n,r)=>[_e(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};kw.className="TimeDistributed";re.registerClass(kw);function u6(e){Mo(jU,"BidirectionalMergeMode",e)}var d6="concat",Iw=class extends QT{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Cr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Cr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?d6:e.mergeMode,u6(this.mergeMode),e.weights)throw new ze("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):Cn(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=cT(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new U("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let u=n.map(d=>new Ft({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(r!=null)throw new ze("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Fr;for(let l of s)if(l instanceof Fr!==o)throw new U("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ur(a,1));let i;return this.mergeMode==="concat"?i=Hv([r,a]):this.mergeMode==="sum"?i=J(r,a):this.mergeMode==="ave"?i=z(.5,J(r,a)):this.mergeMode==="mul"?i=z(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Us(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Us(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Cr(t.layer);if(delete t.layer,t.numConstants!=null)throw new ze("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};Iw.className="Bidirectional";re.registerClass(Iw);var e_=(()=>{let e=class extends Be{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return V(()=>(t=_e(t),t.dtype!=="float32"&&(t=ya(t,"float32")),J(z(t,this.scale),this.offset)))}};return e.className="Rescaling",e})();re.registerClass(e_);var{resizeBilinear:p6,cropAndResize:h6}=nr,Sw=class extends Be{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return V(()=>{let l,u=!1,d=t/s,h=n/i,p=(r+t)/s,c=(a+n)/i,m=[d,h,p,c],f=[];e.rank===3?(u=!0,l=Rt([e])):l=e;for(let x=0;x<l.shape[0];x++)f.push(m);let g=gn(f,[f.length,4]),y=ni(0,f.length,1,"int32"),b=h6(l,g,y,[r,a],"nearest");return ya(u?_e(Tt(b)):b,o)})}upsize(e,t,n,r){return V(()=>{let a=p6(e,[t,n]);return ya(a,r)})}call(e,t){return V(()=>{let n=_e(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return i!==this.width&&(l=Math.floor((i-this.width)/2),l===0&&(l=1)),o>=0&&l>=0?this.centerCrop(n,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Xe(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};Sw.className="CenterCrop";re.registerClass(Sw);function c6(e,t,n,r){let a=_e(e);if(a.dtype!=="int32"&&(a=ya(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Xt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Xt(a,-1)),a.rank>2)throw new U(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(typeof r<"u"&&t==="count"?l=cc(o,r,n,i):l=cc(o,[],n,i),t!=="tfIdf")return l;if(r)return z(l,r);throw new U("When outputMode is 'tfIdf', weights must be provided.")}var t_=(()=>{let e=class extends Be{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){return t=Xe(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,n){return V(()=>{t=_e(t),t.dtype!=="int32"&&(t=ya(t,"int32"));let r;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new U(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);r=_e(n.countWeights)}let a=ir(t),s=yl(t),i=kn(this.numTokens,a).bufferSync().get(0),o=wa(s,0).bufferSync().get(0);if(!(i&&o))throw new U(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return c6(t,this.outputMode,this.numTokens,r)})}};return e.className="CategoryEncoding",e})();re.registerClass(t_);var m6=["bilinear","nearest"],vk=new Set(m6),Nw=class extends Be{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(vk.has(e.interpolation))this.interpolation=e.interpolation;else throw new U(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Xe(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return V(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return nr.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return nr.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vk]} are supported`)})}};Nw.className="Resizing";re.registerClass(Nw);var f6=(()=>{let e=class{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}};return e.className="RandomSeed",e})(),g6=(()=>{let e=class extends Be{constructor(t){super(t),this.randomGenerator=new f6(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(t,n),t}};return e.className="BaseRandomLayer",e})(),y6=["bilinear","nearest"],wk=new Set(y6),Tw=class extends g6{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new U(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new U(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new U(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(wk.has(n))this.interpolation=n;else throw new U(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Xe(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return V(()=>{let n=_e(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=cs([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return nr.resizeBilinear(e,s);case"nearest":return nr.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...wk]} are supported`)}})}};Tw.className="RandomWidth";re.registerClass(Tw);function b6(e){return new Up(e)}function x6(e){return new Z2(e)}function v6(e){return new q2(e)}function w6(e){return new K2(e)}function k6(e){return new X2(e)}function I6(e){return new Y2(e)}function S6(e){return new J2(e)}function N6(e){return new lT(e)}function T6(e){return new Vm(e)}function _6(e){return new sT(e)}function C6(e){return new pw(e)}function E6(e){return new iT(e)}function $6(e){return new oT(e)}function A6(e){return new dT(e)}function F6(e){return new pT(e)}function D6(e){return new hT(e)}function R6(e){return new ST(e)}function M6(e){return new kT(e)}function O6(e){return new fw(e)}function L6(e){return new wT(e)}function P6(e){return new IT(e)}function z6(e){return new NT(e)}function B6(e){return new TT(e)}function W6(e){return new _T(e)}function V6(e){return new ET(e)}function U6(e){return new gw(e)}function G6(e){return new AT(e)}function H6(e){return new RT(e)}function j6(e){return new FT(e)}function q6(e){return new DT(e)}function K6(e){return new $T(e)}function X6(e){return new MT(e)}function Z6(e){return new zT(e)}function J6(e){return new BT(e)}function Y6(e){return new WT(e)}function _w(e){return new GT(e)}function Q6(e){return _w(e)}function ej(e){return _w(e)}function Cw(e){return new jT(e)}function tj(e){return Cw(e)}function nj(e){return Cw(e)}function Ew(e){return new KT(e)}function rj(e){return Ew(e)}function aj(e){return Ew(e)}function sj(e){return new vw(e)}function ij(e){return new ww(e)}function n_(e){return new ZT(e)}function r_(e){return new YT(e)}function a_(e){return new yw(e)}function s_(e){return new bw(e)}function oj(e){return new xw(e)}function lj(e){return new yT(e)}function uj(e){return new hw(e)}function dj(e){return new bT(e)}function pj(e){return new Gm(e)}function hj(e){return new gT(e)}function cj(e){return new Um(e)}function mj(e){return new vT(e)}function fj(e){return new mw(e)}function gj(e){return new gs(e)}function yj(e){return new cw(e)}function bj(e){return new Iw(e)}function xj(e){return new kw(e)}var vj=n_,wj=r_,kj=a_,Ij=s_;function Sj(e){return new OT(e)}function Nj(e){return new LT(e)}function Tj(e){return new PT(e)}function _j(e){return new CT(e)}function Cj(e){return new e_(e)}function Ej(e){return new Sw(e)}function $j(e){return new Nw(e)}function Aj(e){return new t_(e)}function Fj(e){return new Tw(e)}var i_={};Ee(i_,{MAPE:()=>Uj,MSE:()=>jj,binaryAccuracy:()=>Dj,binaryCrossentropy:()=>Rj,categoricalAccuracy:()=>Oj,categoricalCrossentropy:()=>Lj,cosineProximity:()=>Bj,mape:()=>Gj,meanAbsoluteError:()=>Wj,meanAbsolutePercentageError:()=>Vj,meanSquaredError:()=>Hj,mse:()=>qj,precision:()=>Pj,r2Score:()=>Kj,recall:()=>zj,sparseCategoricalAccuracy:()=>Mj});function Dj(e,t){return aw(e,t)}function Rj(e,t){return M2(e,t)}function Mj(e,t){return O2(e,t)}function Oj(e,t){return sw(e,t)}function Lj(e,t){return iw(e,t)}function Pj(e,t){return R2(e,t)}function zj(e,t){return YG(e,t)}function Bj(e,t){return rw(e,t)}function Wj(e,t){return zm(e,t)}function Vj(e,t){return Vu(e,t)}function Uj(e,t){return Vu(e,t)}function Gj(e,t){return Vu(e,t)}function Hj(e,t){return Oo(e,t)}function jj(e,t){return Oo(e,t)}function qj(e,t){return Oo(e,t)}function Kj(e,t){return QG(e,t)}var o_={};Ee(o_,{modelFromJSON:()=>$H});var l_={};Ee(l_,{l1:()=>Zj,l1l2:()=>Xj,l2:()=>Jj});function Xj(e){return new Hp(e)}function Zj(e){return JH(e)}function Jj(e){return YH(e)}var u_=class extends Nl{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof ma))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Bh(e,t){return e<t}function kk(e,t){return e>t}var d_=class extends u_{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new ze("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Bh:this.mode==="max"?this.monitorFunc=kk:this.monitor.indexOf("acc")!==-1?this.monitorFunc=kk:this.monitorFunc=Bh,this.monitorFunc===Bh&&(this.minDelta*=-1)}onTrainBegin(e){return D(this,null,function*(){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Bh?1/0:-1/0})}onEpochEnd(e,t){return D(this,null,function*(){yield Da(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))})}onTrainEnd(e){return D(this,null,function*(){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)})}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Yj(e){return new d_(e)}var Qj={earlyStopping:Yj},eq=H();eq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Pn;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Pn||(Pn={}));var Ik;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Ik||(Ik={}));var $w={};function tq(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};$w[e]=n}function p_(e){return $w[e]}function nq(e){delete $w[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,u=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return nn(t.inputNames[u],n,r,a);if(s.type==="tensors"){let p=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((c,m)=>{var f;return((f=p[m])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(c=>nn(c,n,r,a))}let d=nn(t.inputNames[u],n,r,a),h=d.dataSync();return s.type==="number"?h[0]:w.toNestedArray(d.shape,h)}let i=t.attrParams[e];return i&&i.value}function nn(e,t,n,r){let[a,s]=Bn(e,n);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Ic(a,o)]);return i!==void 0?t[Ic(a,i)][s]:void 0}function Sk(e,t,n){return t[Ic(e,n.currentContextId)]}function da(e,t){let[n,r,a]=Bn(e,t);return[Ic(n,t&&t.currentContextId),r,a]}function Ic(e,t){return t?`${e}-${t}`:e}function Bn(e,t){if(e==="")return["",0,void 0];let n=t!=null&&t.parseNodeNameCache!=null;if(n){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let r=e.split(":"),a;if(r.length===1)a=[e,0,void 0];else{let s=r[0],i=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);a=[s,o,i]}return n&&t.parseNodeNameCache.set(e,a),a}function Qh(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function pa(e){return e.kept?e:Kr(e)}var h_={};Ee(h_,{json:()=>rq});var rq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],c_={};Ee(c_,{json:()=>aq});var aq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],m_={};Ee(m_,{json:()=>sq});var sq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],f_={};Ee(f_,{json:()=>iq});var iq=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],g_={};Ee(g_,{json:()=>oq});var oq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],y_={};Ee(y_,{json:()=>lq});var lq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],b_={};Ee(b_,{json:()=>uq});var uq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],x_={};Ee(x_,{json:()=>dq});var dq=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],v_={};Ee(v_,{json:()=>pq});var pq=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],w_={};Ee(w_,{json:()=>hq});var hq=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],k_={};Ee(k_,{json:()=>cq});var cq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],I_={};Ee(I_,{json:()=>mq});var mq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],S_={};Ee(S_,{json:()=>fq});var fq=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],N_={};Ee(N_,{json:()=>gq});var gq=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],T_={};Ee(T_,{json:()=>yq});var yq=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],__={};Ee(__,{json:()=>bq});var bq=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],C_={};Ee(C_,{json:()=>xq});var xq=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],E_={};Ee(E_,{json:()=>vq});var vq=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],$_={};Ee($_,{json:()=>wq});var wq=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Nk=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[h_,c_,m_,f_,g_,y_,b_,x_,v_,w_,k_,I_,S_,N_,T_,__,C_,E_,$_],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?r.push(m[f.name]):f.op==="Const"?a.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],l=[],u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(m=>{let f=i[m];f.inputNames.forEach((g,y)=>{let[b,,x]=da(g),v=i[b];if(v.outputs!=null){let I=v.outputs.indexOf(x);if(I!==-1){let N=`${b}:${I}`;f.inputNames[y]=N}}f.inputs.push(v),v.children.push(f)})}),Object.keys(d).length===0?h.forEach(m=>{let f=i[m];f.children.length===0&&l.push(f)}):Object.keys(d).forEach(m=>{let[f]=da(m),g=i[f];g!=null&&(g.signatureKey=d[m],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{let[f]=da(m),g=i[f];g&&(g.signatureKey=u[m],o.push(g))}):o=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=p_(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=Rb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Rb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=Wb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Wb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Ob(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=Ob(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Bb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Bb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Mb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Mb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Ub(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ub(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=zb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=zb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Vb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Vb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Lb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Lb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Pb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Pb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Tk(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Tk(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&r.push(u[d.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[d]=da(u.name),h={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Aw(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,s.push(h),a[d]=h}),Object.keys(a).forEach(u=>{let d=a[u];d.inputNames.forEach((h,p)=>{let[c,,m]=da(h),f=a[c];if(f.outputs!=null){let g=f.outputs.indexOf(m);if(g!==-1){let y=`${c}:${g}`;d.inputNames[p]=y}}d.inputs.push(f),f.children.push(d)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[d,h]=da(o[u.name]),p=a[d];p!=null&&(p.defaultOutput=h,i.push(p))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function kq(e){let t=H().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function A_(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):kq(e);return t?n:n.toLowerCase()}function Rb(e,t,n,r=!1){let a=e[t];return a!=null?A_(a.s,r):n}function Mb(e,t,n){let r=e[t];return r?r.b:n}function Ob(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function Aw(e){switch(typeof e=="string"&&(e=Pn[e]),e){case Pn.DT_FLOAT:case Pn.DT_HALF:return"float32";case Pn.DT_INT32:case Pn.DT_INT64:case Pn.DT_INT8:case Pn.DT_UINT8:return"int32";case Pn.DT_BOOL:return"bool";case Pn.DT_DOUBLE:return"float32";case Pn.DT_STRING:return"string";case Pn.DT_COMPLEX64:case Pn.DT_COMPLEX128:return"complex64";default:return null}}function Tk(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Lb(e,t,n){let r=e[t];return r&&r.type?Aw(r.type):n}function Pb(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>Aw(a)):n}function F_(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function zb(e,t,n){let r=e[t];return r&&r.shape?F_(r.shape):n}function Bb(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function Wb(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>A_(s,r)):n}function Vb(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>F_(a)):n}function Ub(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var Iq=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return nn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return nn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ob(this.node.rawAttrs,e,t);if(n.s!=null)return Rb(this.node.rawAttrs,e,t);if(n.b!=null)return Mb(this.node.rawAttrs,e,t);if(n.shape!=null)return zb(this.node.rawAttrs,e,t);if(n.type!=null)return Lb(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Bb(this.node.rawAttrs,e,t);if(n.list.s!=null)return Wb(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Vb(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ub(this.node.rawAttrs,e,t);if(n.list.type!=null)return Pb(this.node.rawAttrs,e,t)}return t}},en={};Ee(en,{OP_SCOPE_SUFFIX:()=>wx,abs:()=>At,acos:()=>_x,acosh:()=>Cx,add:()=>J,addN:()=>lS,all:()=>am,any:()=>Md,argMax:()=>Ys,argMin:()=>Ex,asin:()=>$x,asinh:()=>Ax,atan:()=>Fx,atan2:()=>Dx,atanh:()=>Rx,avgPool:()=>va,avgPool3d:()=>Ox,basicLSTMCell:()=>hS,batchNorm:()=>Ao,batchNorm2d:()=>Lx,batchNorm3d:()=>Px,batchNorm4d:()=>zx,batchToSpaceND:()=>Np,bincount:()=>Bx,bitwiseAnd:()=>cS,booleanMaskAsync:()=>nN,broadcastArgs:()=>mS,broadcastTo:()=>Vs,buffer:()=>Le,cast:()=>le,ceil:()=>Wx,clipByValue:()=>un,clone:()=>Kr,complex:()=>ga,concat:()=>lt,concat1d:()=>Vx,concat2d:()=>Ux,concat3d:()=>Gx,concat4d:()=>Hx,conv1d:()=>sm,conv2d:()=>yn,conv2dTranspose:()=>im,conv3d:()=>qx,conv3dTranspose:()=>Kx,cos:()=>Tp,cosh:()=>om,cosineWindow:()=>$m,cumprod:()=>Pd,cumsum:()=>lm,denseBincount:()=>cc,depthToSpace:()=>Xx,depthwiseConv2d:()=>Fo,diag:()=>gS,dilation2d:()=>Zx,div:()=>me,divNoNan:()=>Jx,dot:()=>Yx,dropout:()=>_v,einsum:()=>Os,elu:()=>Mu,enclosingPowerOfTwo:()=>Cv,ensureShape:()=>bS,equal:()=>Gn,erf:()=>um,euclideanNorm:()=>tv,exp:()=>dn,expandDims:()=>Xt,expm1:()=>nv,eye:()=>dm,fft:()=>Op,fill:()=>Un,floor:()=>Lu,floorDiv:()=>rm,fused:()=>Il,gather:()=>Pu,gatherND:()=>iN,greater:()=>kn,greaterEqual:()=>wa,ifft:()=>kl,imag:()=>_p,image:()=>nr,inTopKAsync:()=>oN,irfft:()=>Im,isFinite:()=>rv,isInf:()=>av,isNaN:()=>sv,leakyRelu:()=>Cp,less:()=>bl,lessEqual:()=>hs,linalg:()=>Av,linspace:()=>IS,localResponseNormalization:()=>iv,log:()=>Hn,log1p:()=>Ep,logSigmoid:()=>ov,logSoftmax:()=>hm,logSumExp:()=>$p,logicalAnd:()=>yr,logicalNot:()=>Ap,logicalOr:()=>cm,logicalXor:()=>lv,losses:()=>xN,lowerBound:()=>NS,matMul:()=>Me,max:()=>ir,maxPool:()=>jt,maxPool3d:()=>uv,maxPoolWithArgmax:()=>TS,maximum:()=>na,mean:()=>kt,meshgrid:()=>_S,min:()=>yl,minimum:()=>Ja,mirrorPad:()=>dv,mod:()=>pv,moments:()=>Fp,movingAverage:()=>rN,mul:()=>z,multiRNNCell:()=>CS,multinomial:()=>ES,neg:()=>ft,norm:()=>Ou,notEqual:()=>ti,oneHot:()=>xl,ones:()=>En,onesLike:()=>jn,op:()=>P,outerProduct:()=>$S,pad:()=>Rr,pad1d:()=>AS,pad2d:()=>FS,pad3d:()=>DS,pad4d:()=>RS,pool:()=>hv,pow:()=>Yr,prelu:()=>Rp,print:()=>Tx,prod:()=>cv,raggedGather:()=>MS,raggedRange:()=>OS,raggedTensorToTensor:()=>LS,rand:()=>PS,randomGamma:()=>VS,randomNormal:()=>fm,randomStandardNormal:()=>US,randomUniform:()=>cs,randomUniformInt:()=>GS,range:()=>ni,real:()=>vl,reciprocal:()=>bv,relu:()=>nt,relu6:()=>gm,reshape:()=>W,reverse:()=>ur,reverse1d:()=>HS,reverse2d:()=>jS,reverse3d:()=>qS,reverse4d:()=>KS,rfft:()=>Lp,round:()=>ym,rsqrt:()=>bm,scalar:()=>we,scatterND:()=>aN,searchSorted:()=>mm,selu:()=>xm,separableConv2d:()=>zu,setdiff1dAsync:()=>XS,sigmoid:()=>gr,sign:()=>xv,signal:()=>bN,sin:()=>vm,sinh:()=>wm,slice:()=>Ge,slice1d:()=>Mp,slice2d:()=>km,slice3d:()=>Bu,slice4d:()=>wl,softmax:()=>ms,softplus:()=>Do,spaceToBatchND:()=>Dp,sparse:()=>vN,sparseToDense:()=>sN,spectral:()=>yN,split:()=>$n,sqrt:()=>Yt,square:()=>ot,squaredDifference:()=>Sm,squeeze:()=>fs,stack:()=>Rt,step:()=>Ro,stridedSlice:()=>vv,string:()=>wN,sub:()=>ce,sum:()=>ge,tan:()=>wv,tanh:()=>Za,tensor:()=>gn,tensor1d:()=>et,tensor2d:()=>Xr,tensor3d:()=>Nm,tensor4d:()=>Ya,tensor5d:()=>ZS,tensor6d:()=>JS,tensorScatterUpdate:()=>QS,tile:()=>Vn,topk:()=>Iv,transpose:()=>Oe,truncatedNormal:()=>Cm,unique:()=>Sv,unsortedSegmentSum:()=>Em,unstack:()=>Tt,upperBound:()=>eN,variable:()=>Nv,where:()=>Jt,whereAsync:()=>Tv,zeros:()=>It,zerosLike:()=>He});var Sq=(e,t,n,r=en)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Nq=(e,t,n,r=en)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(nn(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(nn(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(nn(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(nn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function fr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];w.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function _k(e){return!(typeof e=="number"||e.some(t=>t<0))}function cd(e,t,n){let r=Gb(e,n),a=!_k(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Gb(s.shape,r)}),!_k(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Gb(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var Tq=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),Pt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),fr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Pt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return gn([],[0].concat(this.elementShape));let n=this.readMany(e);return fr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Rt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return gn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return fr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Tt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];V(()=>{t=W(t,[1,n,a]);for(let o=0;o<e.length;++o){let l=[0,o===0?0:r[o-1],0],u=[1,e[o],a];s[o]=W(Ge(t,l,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},jm=class Hb{get id(){return this.idTensor.id}constructor(t,n,r,a=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t?.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);fr(n,s.shape,"TensorList shape mismatch: "),Pt(s)}),this.idTensor=we(0),this.maxNumElements=a,Pt(this.idTensor)}copy(){return new Hb([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);fr(t,this.elementShape,"TensorList shape mismatch: ");let a=cd(this.elementShape,this.tensors,t);return V(()=>{let s=this.tensors.map(i=>W(i,a));return Rt(s,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=cd(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,fr(a.shape,t,"TensorList shape mismatch: "),W(a,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(fr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Pt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new Hb([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)n.tensors[r]=this.tensors[r];return n}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);fr(this.tensors[t].shape,n,"TensorList shape mismatch: ");let a=cd(this.elementShape,this.tensors,n);return W(this.tensors[t],a)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);fr(this.elementShape,n.shape,"TensorList shape mismatch: "),Pt(n),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);fr(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());let a=cd(this.elementShape,this.tensors,r);return t.length===0?gn([],[0].concat(a)):V(()=>{let s=t.map(i=>W(this.tensors[i],a));return Rt(s,0)})}concat(t,n){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);fr(this.elementShape,n,"TensorList shape mismatch: ");let r=cd(this.elementShape,this.tensors,n);return this.size()===0?gn([],[0].concat(r)):V(()=>{let a=this.tensors.map(s=>W(s,r));return lt(a,0)})}};function _q(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);fr(a,t,"TensorList shape mismatch: ");let s=Tt(e);return new jm(s,t,r)}function Cq(e,t,n,r){return new jm([],e,t,r)}function Eq(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new jm([],n,e.dtype,r),i=Tt(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function $q(e,t,n){let r=0,a=t.map(d=>(r+=d,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Gb(s,n),o=r===0?0:e.size/r,l=V(()=>{let d=[];e=W(e,[1,r,o]);for(let h=0;h<t.length;++h){let p=[0,h===0?0:a[h-1],0],c=[1,t[h],o];d[h]=W(Ge(e,p,c),i)}return e.dispose(),d}),u=new jm([],n,e.dtype,t.length);for(let d=0;d<l.length;d++)u.setItem(d,l[d]);return u}var Aq=(e,t,n)=>D(void 0,null,function*(){switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(yield s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=yield n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(d=>d.id),l=yield i[0].data();i.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let u=s;for(;l[0];){let d=u;u=yield n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let h=u.map(c=>c.id);d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let p=yield n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=yield p[0].data(),p.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return u}case"LoopCond":{let r=k("pred",e,t,n);return[pa(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=pa(a)),(yield r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>nn(a,t,n)!==void 0);if(r){let a=nn(r,t,n);return[pa(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[pa(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[pa(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[pa(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),u=k("name",e,t,n),d=new Tq(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,we(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[we(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=Eq(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,l=Cq(r,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=_q(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=$q(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[we(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}});function Ck(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",l=r==="fusedbatchnorm",u=k("numArgs",e,t,n);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=k("strides",e,t,n),h=Qh(e,t,n),p=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[m,f]=k("args",e,t,n);i&&(f=m,m=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:d,pad:h,dataFormat:p,dilations:c,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}var Fq=(e,t,n,r=en)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=Qh(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=Ck(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=Ck(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=Qh(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=Qh(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],u=i[1],d=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Dq=(e,t,n,r=en)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Jy(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var Rq=(s,i,o,l,...u)=>D(void 0,[s,i,o,l,...u],function*(e,t,n,r,a=en){switch(e.op){case"NonMaxSuppressionV5":{let{boxes:d,scores:h,maxOutputSize:p,iouThreshold:c,scoreThreshold:m,softNmsSigma:f}=Jy(e,t,n),g=yield a.image.nonMaxSuppressionWithScoreAsync(d,h,p,c,m,f);return[g.selectedIndices,g.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:d,scores:h,maxOutputSize:p,iouThreshold:c,scoreThreshold:m}=Jy(e,t,n),f=k("padToMaxOutputSize",e,t,n),g=yield a.image.nonMaxSuppressionPaddedAsync(d,h,p,c,m,f);return[g.selectedIndices,g.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:d,scores:h,maxOutputSize:p,iouThreshold:c,scoreThreshold:m}=Jy(e,t,n);return[yield a.image.nonMaxSuppressionAsync(d,h,p,c,m)]}case"Where":{let d=a.cast(k("condition",e,t,n),"bool"),h=[yield a.whereAsync(d)];return d.dispose(),h}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}),Mq=(e,t,n,r=en)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Oq=(e,t,n,r=en)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[nn(e.name,t,n)||a];case"Placeholder":return[nn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let d=k("x",e,t,n);return[pa(d)]}case"IdentityN":return k("x",e,t,n).map(d=>pa(d));case"Snapshot":let s=k("x",e,t,n);return[pa(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(d=>r.tensor1d(d.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),u=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let d=0;d<o.length;d++)console.log(Array.prototype.slice.call(o[d].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Lq=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,Pt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}import(e,t){return D(this,null,function*(){this.checkKeyAndValueTensor(e,t);let n=yield e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),V(()=>{let r=Tt(t),a=n.length,s=r.length;w.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],l=r[i];Pt(l),this.tensorMap.set(o,l)}return this.handle})})}find(e,t){return D(this,null,function*(){this.checkKeyAndValueTensor(e,t);let n=yield e.data();return V(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Rt(r)})})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},Pq=(e,t,n,r)=>D(void 0,null,function*(){switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new Lq(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[yield r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[yield r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}),zq=(e,t,n,r=en)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),u=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),u=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Bq=(e,t,n,r=en)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Wq=(e,t,n,r=en)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,n),u=k("leakyreluAlpha",e,t,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,h]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:d,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Vq=(e,t,n,r=en)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Uq=(e,t,n,r=en)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Gq=(e,t,n,r=en)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,u)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),u=k("size",e,t,n),d=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,u,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Hq=(e,t,n,r=en)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),u=k("ellipsisMask",e,t,n),d=k("newAxisMask",e,t,n),h=k("shrinkAxisMask",e,t,n),p=k("x",e,t,n);return[r.stridedSlice(p,a,s,i,o,l,u,d,h)]}case"Pack":return V(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(u=>{let d=w.arraysEqual(u.shape,i);if(!d&&!w.arraysEqual(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return d?u:r.reshape(u,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jq=(e,t,n,r=en)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},qq=(e,t,n,r=en)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Kq=(e,t,n,r=en)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Xq=(e,t,n,r=en)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ek(e,t,n,r,a=V){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>Sq(i,o,l));case"basic_math":return a(()=>Nq(i,o,l));case"control":return Aq(i,o,l);case"convolution":return a(()=>Fq(i,o,l));case"creation":return a(()=>Dq(i,o,l));case"dynamic":return Rq(i,o,l);case"evaluation":return a(()=>Mq(i,o,l));case"image":return a(()=>zq(i,o,l));case"graph":return a(()=>Oq(i,o,l));case"logical":return a(()=>Bq(i,o,l));case"matrices":return a(()=>Wq(i,o,l));case"normalization":return a(()=>Vq(i,o,l));case"ragged":return a(()=>Uq(i,o,l));case"reduction":return a(()=>Gq(i,o,l));case"slice_join":return a(()=>Hq(i,o,l));case"sparse":return a(()=>jq(i,o,l));case"spectral":return a(()=>qq(i,o,l));case"string":return a(()=>Kq(i,o,l));case"transformation":return a(()=>Xq(i,o,l));case"hash_table":return Pq(i,o,l,r);case"custom":let u=p_(i.op);if(u&&u.customExecutor)return u.customExecutor(new Iq(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var $k=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Ak(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(p=>Bn(p)[0]));r=r||[];let d=new Set(r.map(p=>Bn(p.name)[0])),h=[...t];for(;h.length>0;){let p=h.pop();if((Ps(p)||r5(p)||a5(p))&&i==null&&(i=p,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(p.name),n[p.name]==null&&!u.has(p.name)&&!d.has(p.name)){if(p.inputs.length===0){s.push(p.name);continue}p.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function Zq(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(g=>Bn(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),d=new Map(u.map(g=>[g.name,g])),h={};for(let g of u){h[g.name]=h[g.name]||0;for(let y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}let p=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),c=[...p];for(;p.length>0;){let g=p.pop(),y=d.get(g);for(let b of y.children.filter(i))--h[b.name]===0&&(c.push(b.name),p.push(b.name))}let m=c.map(g=>d.get(g)),f=Jq(m,l);return Yq(f,l),f}function Jq(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}var Wh=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function Yq(e,t){let n=new Map(e.map((o,l)=>[o.name,l])),r=new Set(t.map(o=>o.name)),a=o=>r.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let l of o.children.filter(i)){if(!n.has(l.name))throw new Wh(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new Wh(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(let l of o.inputs){if(!n.has(l.name))throw new Wh(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new Wh(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function Qq(e){let t=new Map(e.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,l)=>Ps(o)?n:l),a=o=>{let l=r[t.get(o.name)];return l??-1},s=e.map((o,l)=>o.children.map(a).reduce((u,d)=>Math.max(u,d),r[l])),i=new Map;for(let o=0;o<e.length;++o){let l=s[o];if(l===n)continue;let u=e[o],d=e[l];i.has(d.name)||i.set(d.name,[]),i.get(d.name).push(u)}return i}var e5=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),t5=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),n5=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ps(e){return e5.has(e.op)}function r5(e){return t5.has(e.op)}function a5(e){return n5.has(e.op)}var Fk=class D_{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let n=Object.keys(t).map(r=>t[r].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new D_(t.functions[r],this)})}getCompilationKey(t,n){let r=t.map(s=>s.name).sort(),a=n.map(s=>s.name).sort();return r.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,n){let r=Ak(t,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:s,syncInputs:i}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let u=n.map(h=>h.name),d=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${d}]. Missing the following inputs: [${a}]`)}let o=Zq(this.graph,r),l=Qq(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let n=t.clone();return Pt(n),n}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(t,n){this.disposeIntermediateTensors(),t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);let a=r.map(p=>this.graph.nodes[Bn(p)[0]]),s=n.map(p=>Bn(p)[0]),i=new Set(s),o=s.map(p=>this.graph.nodes[p]);o.length===0&&(o=this._outputs);let l=this.getCompilationKey(a,o),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let d={},h={};return V(()=>{let p=new $k(this.weightMap,d,h,this.functionExecutorMap,this.parseNodeNameCache),c=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[b,x]=Bn(y,p),v=[];v[x]=t[y],c[b]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(v))});let m=this.getFrozenTensorIds(c),{orderedNodes:f,nodeLiveUntilMap:g}=u;for(let y of f){if(c[y.name])continue;let b=Ek(y,c,p,this._resourceManager);if(w.isPromise(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);c[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,c,p,m,i,g.get(y.name))}return this.parent==null&&p.dispose(m),n.map(y=>nn(y,c,p))})}getFrozenTensorIds(t){let n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(t,n,r,a,s,i,o){if(!(Ps(n)||i.has(t))){for(let l of r[t])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(let l of n.inputs){if(Ps(l))continue;let u=Sk(l.name,r,a);if(u!=null)for(let d of u){if(!d||d.kept||s.has(d.id))continue;let h=o[d.id];h===1?(d.dispose(),delete o[d.id]):h!=null&&o[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,n,r,a,s,i){function o(l){return Ps(l)||s.has(l.name)}if(!(Ps(t)||i==null))for(let l of i){if(o(l))continue;let u=Sk(l.name,n,r);for(let d of u)!d||d.kept||a.has(d.id)||d.dispose()}}executeAsync(t,n){return D(this,null,function*(){return this._executeAsync(t,n)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let n of t)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(i,o){return D(this,arguments,function*(t,n,r=!1,a={},s={}){this.disposeIntermediateTensors(),r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let l=new $k(this.weightMap,a,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,n,r),d=n.map(m=>nn(m,u,l)),h=d.map(m=>m.id),p=Object.keys(t).map(m=>t[m].id),c=new Set([...h,...p,...this.weightIds]);return Object.values(u).forEach(m=>{m.forEach(f=>{f&&!f.isDisposed&&!c.has(f.id)&&f.dispose()})}),this.parent==null&&l.dispose(c),d})}executeFunctionAsync(t,n,r){return D(this,null,function*(){let a=t.reduce((s,i,o)=>(s[this.inputs[o].name]=i,s),{});return this._executeAsync(a,this.outputNodes,!0,n,r)})}executeWithControlFlow(t,n,r,a){return D(this,null,function*(){let s=Object.keys(t),i=s.map(v=>this.graph.nodes[Bn(v)[0]]),o=r.map(v=>Bn(v)[0]),l=new Set(o),u=o.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);let{usedNodes:d,missingInputs:h,dynamicNode:p,syncInputs:c}=Ak(t,u,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(v=>{let[I,N]=Bn(v),_=[];_[N]=t[v],f[I]=_});let g={},y=this.getFrozenTensorIds(f),b={};for(;m.length>0;){let v=this.processStack(i,m,n,f,b,y,l,g,d);yield Promise.all(v)}p==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(v=>!Ps(v)&&!nn(v.name,f,n)).map(v=>v.name);if(x.length>0){let v="";throw p!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${h}]. ${v}`)}return f})}processStack(t,n,r,a,s,i,o,l,u){let d=[];for(;n.length>0;){let h=n.pop();r.currentContext=h.contexts;let p="";if(h.node.op==="Enter"&&k("isConstant",h.node,a,r)&&([p]=da(h.node.name,r)),a[h.node.name]==null){let c=Ek(h.node,a,r,this._resourceManager);p||([p]=da(h.node.name,r));let m=r.currentContext;w.isPromise(c)?d.push(c.then(f=>(a[p]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(f)),r.currentContext=m,this.checkTensorForDisposal(p,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u),f))):(a[p]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(c)),this.checkTensorForDisposal(p,h.node,a,r,i,o,l),this.processChildNodes(h.node,n,r,a,s,u))}else this.processChildNodes(h.node,n,r,a,s,u)}return d}processChildNodes(t,n,r,a,s,i){t.children.forEach(o=>{let[l]=da(o.name,r);s[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!nn(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!nn(u,a,r))&&(s[l]=!0,n.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{let r=t[n],[a]=Bn(n),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,o=i.length===r.shape.length&&r.shape.every((l,u)=>i[u]===-1||i[u]===l);w.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&w.assert(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){var n,r;let a={};for(let s in t){let i=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[s];i!=null?a[i.name]=t[s]:a[s]=t[s]}return a}checkInputs(t){let n=Object.keys(t).filter(r=>{let[a]=Bn(r);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>{var r,a;let s=(a=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||a===void 0?void 0:a[n];return s!=null?s.name:n},{})}checkOutputs(t){t.forEach(n=>{let[r]=Bn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}},s5=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},i5="?tfjs-format=file",o5="model.json",Fw=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=an){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new s5}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}loadStreaming(e){return D(this,null,function*(){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=yield YI(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)})}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Fk(Nk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Nk.Instance.transformGraph(e.modelInitializer);this.initializer=new Fk(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}save(e,t){return D(this,null,function*(){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)})}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Re?[e]:e,n={};return t.forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}predictAsync(e,t){return D(this,null,function*(){let n=yield this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)})}normalizeInputs(e){var t;if(!(e instanceof Re)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,l;let u=(l=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||l===void 0?void 0:l.resourceId;return u!=null?a[s]=this.resourceIdToCapturedInput[u]:a[s]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return D(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}executeAsync(e,t){return D(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=yield this.executor.executeAsync(e,t);return n.length>1?n:n[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ce(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function l5(r){return D(this,arguments,function*(e,t={},n=an){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=d5(e));let a=new Fw(e,t,n);return yield a.load(),a})}function u5(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=an.getWeightSpecs(r.weightsManifest),i=an.getModelArtifactsForJSONSync(r,s,a);t=an.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=an.fromMemorySync(e);else throw new Error("Unknown model format");let n=new Fw(t);return n.load(),n}function d5(e){return e.endsWith("/")||(e=e+"/"),`${e}${o5}${i5}`}var p5="4.21.0",R_={};Ee(R_,{CSVDataset:()=>H_,Dataset:()=>Uu,FileDataSource:()=>Y_,TextLineDataset:()=>G_,URLDataSource:()=>Q_,array:()=>R5,csv:()=>q5,func:()=>K5,generator:()=>X5,microphone:()=>J5,version_data:()=>Y5,webcam:()=>Z5,zip:()=>M5});var h5=is(Lc()),c5=is(Lc());function m5(e,t){return Sc(e,t)}function Sc(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(Tl(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=Sc(o,t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function f5(e,t=O_){return M_(e,t)}function M_(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(Tl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(u=>u[i]),l=M_(o,t,n);s[i]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function O_(e){return e===null?null:Tl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function L_(e,t){return D(this,null,function*(){let n=new Map;Sc(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let s=yield a;n.set(r,s)}}return Sc(e,t,n)})}function Tl(e){let t=!1;if(H().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=xI();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Re)&&!(e instanceof Promise)&&!t)}function g5(e){return e==null||y5(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Re||w.isTypedArray(e)}function y5(e){return e===null||typeof e!="object"&&typeof e!="function"}function b5(e){return m5(e,x5)}function x5(e){return e instanceof Re?{value:e.clone(),recurse:!1}:Tl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var P_=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},z_=class B_ extends P_{constructor(){super(B_.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,n=new Array(t),r=this.length();for(let a=0;a<r;a++)n[a]=this.get(this.wrap(this.begin+a));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}};z_.INITIAL_CAPACITY=32;function W_(e){return new k5(e)}function Dw(e){return new I5(e)}function v5(e,t){return new V_(e,t)}function w5(e,t=Ba.FAIL){return new F5(e,t)}var Qt=class{toArray(){return D(this,null,function*(){let e=[],t=yield this.next();for(;!t.done;)e.push(t.value),t=yield this.next();return e})}toArrayForTest(){return D(this,null,function*(){let e=this.prefetch(100),t=[],n=yield e.next();for(;!n.done;)t.push(n.value),n=yield e.next();return t})}resolveFully(){return D(this,null,function*(){let e=yield this.next();for(;!e.done;)e=yield this.next()})}resolveWhile(e){return D(this,null,function*(){let t=yield this.next(),n=e(t.value);for(;!t.done&&n;)t=yield this.next(),n=e(t.value)})}handleErrors(e){return new $5(this,e)}filter(e){return new C5(this,e)}map(e){return new E5(this,e)}mapAsync(e){return new Dk(this,e)}serialMapAsync(e){return new Dk(this,e).serial()}flatmap(e){return new A5(this,e)}forEachAsync(e){return D(this,null,function*(){return this.map(e).resolveFully()})}serialForEach(e){return D(this,null,function*(){return this.serialMapAsync(e).resolveWhile(t=>t===!0)})}rowMajorBatch(e,t=!0){return new _5(this,e,t)}columnMajorBatch(e,t=!0,n=O_){return this.rowMajorBatch(e,t).map(r=>f5(r,n))}concatenate(e,t){return new V_(W_([this,e]),t)}take(e){return e<0||e==null?this:new T5(this,e)}skip(e){return e<0||e==null?this:new N5(this,e)}prefetch(e){return new U_(this,e)}shuffle(e,t){return new D5(this,e,t)}serial(){return new S5(this)}},k5=class extends Qt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){return D(this,null,function*(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:b5(e),done:!1}})}},I5=class extends Qt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}next(){return D(this,null,function*(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}})}},S5=class extends Qt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){return this.upstream.next()})}},N5=class extends Qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){for(;this.count++<this.maxCount;){let e=yield this.upstream.next();if(e.done)return e;Ce(e.value)}return this.upstream.next()})}},T5=class extends Qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){return D(this,null,function*(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()})}},_5=class extends Qt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){let e=[];for(;e.length<this.batchSize;){let t=yield this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}})}},C5=class extends Qt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){for(;;){let e=yield this.upstream.next();if(e.done||this.predicate(e.value))return e;Ce(e.value)}})}},E5=class extends Qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}next(){return D(this,null,function*(){let e=yield this.upstream.next();if(e.done)return{value:null,done:!0};let t=_r.getTensorsInContainer(e.value),n=this.transform(e.value),r=_r.getTensorsInContainer(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}})}},$5=class extends Qt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){for(;;)try{return yield this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}})}},Dk=class extends Qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){return D(this,null,function*(){let e=yield this.upstream.next();if(e.done)return{value:null,done:!0};let t=_r.getTensorsInContainer(e.value),n=yield this.transform(e.value),r=_r.getTensorsInContainer(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}})}},Rw=class extends Qt{constructor(){super(),this.outputQueue=new z_,this.lastRead=Promise.resolve({value:null,done:!1})}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return D(this,null,function*(){for(;this.outputQueue.length()===0;)if(!(yield this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}})}},A5=class extends Rw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){return D(this,null,function*(){let e=yield this.upstream.next();if(e.done)return!1;let t=_r.getTensorsInContainer(e.value),n=this.transform(e.value),r=_r.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)_r.isTensorInList(a,r)||a.dispose();return!0})}},V_=class extends Qt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){return D(this,null,function*(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead})}readFromChain(e){return D(this,null,function*(){if(yield e,this.iterator==null){let n=yield this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=yield this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t})}},Ba;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Ba||(Ba={}));var F5=class extends Qt{constructor(e,t=Ba.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(e){return D(this,null,function*(){yield e;let t=0,n=0;function r(s){return s instanceof Qt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=yield L_(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Ba.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ba.SHORTEST:return{value:null,done:!0};case Ba.LONGEST:default:}return this.count++,{value:a,done:!1}})}next(){return D(this,null,function*(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise})}},U_=class extends Qt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new P_(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},D5=class extends U_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=c5.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){return D(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){return D(this,null,function*(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=yield this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}})}},Uu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),zn(()=>D(this,null,function*(){return(yield n.iterator()).columnMajorBatch(e,t,O5)}),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,zn(()=>D(this,null,function*(){return(yield t.iterator()).concatenate(yield e.iterator())}),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,zn(()=>D(this,null,function*(){return(yield t.iterator()).filter(r=>V(()=>e(r)))}),n)}forEachAsync(e){return D(this,null,function*(){return(yield this.iterator()).forEachAsync(e)})}map(e){let t=this;return zn(()=>D(this,null,function*(){return(yield t.iterator()).map(n=>V(()=>e(n)))}),this.size)}mapAsync(e){let t=this;return zn(()=>D(this,null,function*(){return(yield t.iterator()).mapAsync(e)}),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return zn(()=>D(this,null,function*(){return(yield t.iterator()).prefetch(e)}),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,zn(()=>D(this,null,function*(){let r=Dw(()=>D(this,null,function*(){return{value:yield t.iterator(),done:!1}}));return v5(r.take(e))}),n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,zn(()=>D(this,null,function*(){return(yield t.iterator()).skip(e)}),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=h5.alea(t||w.now().toString());return zn(()=>D(this,null,function*(){let s=a.int32();return n&&(s+=a.int32()),(yield r.iterator()).shuffle(e,s.toString())}),this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,zn(()=>D(this,null,function*(){return(yield t.iterator()).take(e)}),n)}toArray(){return D(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArray()})}toArrayForTest(){return D(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArrayForTest()})}};Uu.MAX_BUFFER_SIZE=1e4;function zn(e,t=null){return new class extends Uu{constructor(){super(...arguments),this.size=t}iterator(){return D(this,null,function*(){return e()})}}}function R5(e){return zn(()=>D(this,null,function*(){return W_(e)}),e.length)}function M5(e){if(!Tl(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return zn(()=>D(this,null,function*(){let n=yield L_(e,r=>{if(r instanceof Uu)return{value:r.iterator(),recurse:!1};if(Tl(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return w5(n,Ba.SHORTEST)}),t)}function O5(e){if(e===null)return null;let t=e[0];return g5(t)?{value:L5(e),recurse:!1}:{value:null,recurse:!0}}function L5(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Re?Rt(e):gn(e)}var G_=class extends Uu{constructor(e){super(),this.input=e}iterator(){return D(this,null,function*(){return(yield this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))})}},Vh='"',md=Symbol("out"),Rk=Symbol("field"),Uh=Symbol("quote"),Yy=Symbol("quoteafterquote"),Mk=Symbol("quoteinquote"),H_=class extends Uu{columnNames(){return D(this,null,function*(){return this.columnNamesValidated||(yield this.setColumnNames()),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames})}setColumnNames(){return D(this,null,function*(){let e=yield this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0})}maybeReadHeaderLine(){return D(this,null,function*(){if(this.hasHeader){let e=yield(yield this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null})}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new G_(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}iterator(){return D(this,null,function*(){this.columnNamesValidated||(yield this.setColumnNames());let e=yield this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))})}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?r[s]=l:n[s]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=md;for(let i=0;i<a;i++)switch(s){case md:switch(e.charAt(i)){case Vh:r=i+1,s=Uh;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=md;break;default:s=Rk,r=i;break}break;case Rk:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=md,r=i+1;break;default:}break;case Uh:switch(e.charAt(i)){case Vh:s=Yy;break;default:}break;case Yy:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=md,r=i+1;break;case Vh:s=Uh;break;default:s=Mk;break}break;case Mk:switch(e.charAt(i)){case Vh:s=Uh;break;default:}break;default:}if(s===Yy?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},P5=class j_ extends Qt{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(){return D(this,arguments,function*(t={}){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new j_(t);return yield n.start(),n})}start(){return D(this,null,function*(){try{this.stream=yield navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)})}next(){return D(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t,n,r=yield this.getAudioData();if(this.includeSpectrogram){let a=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let a=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}})}capture(){return D(this,null,function*(){return(yield this.next()).value})}getAudioData(){return D(this,null,function*(){let t=[],n=[],r=0;return new Promise(a=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(s),a({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((a,s)=>r.set(a,s*n)),r}getTensorFromAudioDataArray(t,n){let r=new Float32Array(w.sizeFromShape(n));return r.set(t,r.length-t.length),gn(r,n)}},z5=class q_ extends Qt{constructor(t,n){if(super(),this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=et([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-r)/2,i=(1-a)/2,o=s+r,l=a+i;this.cropBox=Xr([i,s,l,o],[1,4])}else this.cropBox=Xr([0,0,1,1],[1,4])}summary(){return"webcam"}static create(r){return D(this,arguments,function*(t,n={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let a=new q_(t,n);return yield a.start(),a})}start(){return D(this,null,function*(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})})}next(){return D(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t;try{t=Pp.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}})}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return V(()=>{let n=Xt(le(t,"float32"),0),r;r=nr.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=r.shape;return W(r,a.slice(1))})}capture(){return D(this,null,function*(){return(yield this.next()).value})}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},K_=class{},X_=class extends Qt{split(e){return new B5(this,e)}},B5=class extends X_{constructor(e,t){super(),this.upstream=e,this.impl=new W5(e,t)}summary(){return this.impl.summary()}next(){return D(this,null,function*(){return this.impl.next()})}},W5=class extends Rw{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){return D(this,null,function*(){let e=yield this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0})}},V5=class extends Qt{decodeUTF8(){return new U5(this)}},U5=class extends X_{constructor(e){super(),this.upstream=e,this.impl=new G5(e)}summary(){return this.impl.summary()}next(){return D(this,null,function*(){return this.impl.next()})}},G5=class extends Rw{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=xI();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){return D(this,null,function*(){let e=yield this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return H().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0})}},Z_=class extends V5{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(H().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}next(){return D(this,null,function*(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:yield new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}})}};function H5(r){return D(this,arguments,function*(e,t={},n){let a,s;typeof e=="string"?a=e:(a=e.url,s=j5(e));let i=yield(n||w.fetch)(a,s);if(i.ok){let o=new Uint8Array(yield i.arrayBuffer());return new Z_(o,t)}else throw new Error(i.statusText)})}var j5=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function J_(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var Y_=class extends K_{constructor(e,t={}){super(),this.input=e,this.options=t}iterator(){return D(this,null,function*(){if(J_(this.input)&&H().get("IS_NODE")){let e=cx();this.input=e.readFileSync(this.input.slice(7))}return new Z_(this.input,this.options)})}},Q_=class extends K_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}iterator(){return D(this,null,function*(){return J_(this.url)?new Y_(this.url,this.fileOptions).iterator():H5(this.url,this.fileOptions)})}};function q5(e,t={}){return new H_(new Q_(e),t)}function K5(e){let t=Dw(e);return zn(()=>D(this,null,function*(){return t}))}function X5(e){return zn(()=>D(this,null,function*(){let t=yield e();return Dw(()=>t.next())}))}function Z5(e,t){return D(this,null,function*(){return z5.create(e,t)})}function J5(e){return D(this,null,function*(){return P5.create(e)})}var Y5="4.21.0";function ye(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Q5=ra.whereImpl,Mw=class eC extends Zd{nextDataId(){return eC.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Pc(this,mr())}write(t,n,r){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:r,refCount:1}),a}makeTensorInfo(t,n,r){let a;if(n==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let s=r.map(i=>w.encodeString(i));a=this.write(s,t,n)}else a=this.write(r,t,n);return{dataId:a,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){let n=this.data.get(t);n.refCount--}}move(t,n,r,a,s){this.data.set(t,{values:n,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}read(t){return D(this,null,function*(){return this.readSync(t)})}readSync(t){let{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){let a=this.readSync(r.real.dataId),s=this.readSync(r.imag.dataId);return T.mergeRealAndImagArrays(a,s)}return w.convertBackendValuesAndArrayBuffer(this.data.get(t).values,n)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let r=n.map(a=>w.decodeString(a));return Le(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(t.shape,t.dtype,n)}makeOutput(t,n,r){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return D(this,null,function*(){let n=w.now();return t(),{kernelMs:w.now()-n}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ye([t],"where");let n=this.readSync(t.dataId);return Q5(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Mw.nextDataId=0;var Ow={};Ee(Ow,{addImpl:()=>rC,bincountImpl:()=>Pw,bincountReduceImpl:()=>aC,bitwiseAndImpl:()=>sC,castImpl:()=>nC,ceilImpl:()=>iC,concatImpl:()=>zw,equalImpl:()=>oC,expImpl:()=>uC,expm1Impl:()=>pC,floorDivImpl:()=>cC,floorImpl:()=>hC,gatherNdImpl:()=>mC,gatherV2Impl:()=>fC,greaterEqualImpl:()=>yC,greaterImpl:()=>gC,lessEqualImpl:()=>xC,lessImpl:()=>bC,linSpaceImpl:()=>vC,logImpl:()=>wC,maxImpl:()=>kC,maximumImpl:()=>IC,minimumImpl:()=>SC,multiplyImpl:()=>Bw,negImpl:()=>NC,notEqualImpl:()=>TC,prodImpl:()=>_C,raggedGatherImpl:()=>CC,raggedRangeImpl:()=>EC,raggedTensorToTensorImpl:()=>$C,rangeImpl:()=>Vw,rsqrtImpl:()=>AC,scatterImpl:()=>Ws,sigmoidImpl:()=>YK,simpleAbsImpl:()=>tC,sliceImpl:()=>Tc,sparseFillEmptyRowsImpl:()=>DC,sparseReshapeImpl:()=>RC,sparseSegmentReductionImpl:()=>Uw,sqrtImpl:()=>t8,squaredDifferenceImpl:()=>MC,staticRegexReplaceImpl:()=>OC,stridedSliceImpl:()=>LC,stringNGramsImpl:()=>Gw,stringSplitImpl:()=>Hw,stringToHashBucketFastImpl:()=>jw,subImpl:()=>PC,tileImpl:()=>zC,topKImpl:()=>WC,transposeImpl:()=>Ww,uniqueImpl:()=>Kw});function tC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var eK=e=>{let{x:t}=e.inputs,n=e.backend;ye(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=tC(a),n.makeOutput(r,t.shape,t.dtype)},tK={kernelName:Fl,backendName:"cpu",kernelFunc:eK};function Ct(e){return(t,n,r,a,s)=>{let i=T.assertAndGetBroadcastShape(t,n),o=i.length,l=w.computeStrides(i),u=w.sizeFromShape(i),d=w.getTypedArrayFromDType(s,u),h=t.length,p=n.length,c=w.computeStrides(t),m=w.computeStrides(n),f=T.getBroadcastDims(t,i),g=T.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<d.length;++y)d[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<d.length;++y){let b=w.indexToLoc(y,o,l),x=b.slice(-h);f.forEach(_=>x[_]=0);let v=w.locToIndex(x,h,c),I=b.slice(-p);g.forEach(_=>I[_]=0);let N=w.locToIndex(I,p,m);d[y]=e(r[v],a[N])}return[d,i]}}function Wn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var nK={kernelName:Wc,backendName:"cpu",kernelFunc:Wn};function Nc(e,t,n="float32"){if(n==="complex64"){let a=Nc(e,t,"float32"),s=Nc(e,t,"float32");return Wn({inputs:{real:a,imag:s},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function ea(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var rK={kernelName:Wi,backendName:"cpu",kernelFunc:ea};function ai(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var aK={kernelName:Qc,backendName:"cpu",kernelFunc:ai};function nC(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=w.toTypedArray([0],n),[s,i]=Ct((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function rs(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return ea({inputs:{x:a},backend:n});let d=Nc(n,a.shape,a.dtype),h=rs({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),p=Wn({inputs:{real:h,imag:d},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),p}if(a.dtype==="complex64"){let d=ai({inputs:{input:a},backend:n}),h=rs({inputs:{x:d},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(d),h}if(!w.hasEncodingLoss(a.dtype,s)){let d=ea({inputs:{x:a},backend:n});return{dataId:d.dataId,shape:d.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=nC(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var sK={kernelName:ki,backendName:"cpu",kernelFunc:rs};function Ut(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;ye([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(u):u,p=i.dtype==="string"?T.fromUint8ToStringArray(d):d,c=r||i.dtype,[m,f]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(f,c,m)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=rs({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,c=l.data.get(h.dataId).values,m=l.data.get(p.dataId).values,f=rs({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,v=l.data.get(b.dataId).values,[I,N,_]=n(i.shape,o.shape,c,m,x,v),E=l.makeTensorInfo(_,"float32",I),A=l.makeTensorInfo(_,"float32",N),R=Wn({inputs:{real:E,imag:A},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(f),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(A),R}else{let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h=r||i.dtype,[p,c]=t(i.shape,o.shape,u,d,h);return l.makeTensorInfo(c,h,p)}}}function Lw(e){return(t,n,r,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(o),u=o.length,d=w.computeStrides(o),h=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),m=T.getBroadcastDims(n,o),f=T.mergeRealAndImagArrays(r,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=n.length,v=w.computeStrides(n);if(c.length+m.length===0)for(let I=0;I<h.length;I++){let N=I%f.length,_=I%g.length,E=e(f[N*2],f[N*2+1],g[_*2],g[_*2+1]);h[I]=E.real,p[I]=E.imag}else for(let I=0;I<h.length;I++){let N=w.indexToLoc(I,u,d),_=N.slice(-y);c.forEach(S=>_[S]=0);let E=w.locToIndex(_,y,b),A=N.slice(-x);m.forEach(S=>A[S]=0);let R=w.locToIndex(A,x,v),F=e(f[E*2],f[E*2+1],g[R*2],g[R*2+1]);h[I]=F.real,p[I]=F.imag}return[h,p,o]}}var rC=Ct((e,t)=>e+t),iK=Lw((e,t,n,r)=>({real:e+n,imag:t+r})),_l=Ut(os,rC,iK),oK={kernelName:os,backendName:"cpu",kernelFunc:_l};function Pw(e,t,n,r,a){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function aC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Le([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}var sC=Ct((e,t)=>e&t),lK=Ut(Bl,sC),uK={kernelName:Bl,backendName:"cpu",kernelFunc:lK};function aa(e){return(t,n,r)=>{let a=w.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function at(e,t,n){let r=aa(t);return ys(e,r,n)}function ys(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ye(i,e);let o=s,l=o.data.get(i.dataId).values,u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=T.fromUint8ToStringArray(l)}else u=l;let d=n||i.dtype,h=t(u,d,a);return o.makeTensorInfo(i.shape,d,h)}}var iC=aa(e=>Math.ceil(e)),dK=ys(Ii,iC),pK={kernelName:Ii,backendName:"cpu",kernelFunc:dK};function zw(e,t,n,r){let a=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let d=u*t[1]+s;for(let h=0;h<i.shape[1];++h)a[d+h]=o[l++]}s+=i.shape[1]})}return a}var oC=Ct((e,t)=>e===t?1:0),lC=Ut(Kl,oC,null,"bool"),hK={kernelName:Kl,backendName:"cpu",kernelFunc:lC},uC=aa(e=>Math.exp(e)),dC=ys(Mi,uC,"float32"),cK={kernelName:Mi,backendName:"cpu",kernelFunc:dC},pC=aa(e=>Math.expm1(e)),mK=ys(Oi,pC),fK={kernelName:Oi,backendName:"cpu",kernelFunc:mK},hC=aa(e=>Math.floor(e)),gK=ys(Li,hC),yK={kernelName:Li,backendName:"cpu",kernelFunc:gK},cC=Ct((e,t)=>Math.floor(e/t)),bK=Ut(Pi,cC,null,"int32"),xK={kernelName:Pi,backendName:"cpu",kernelFunc:bK};function mC(e,t,n,r,a,s,i,o,l){let u=Le([r,s],n);for(let d=0;d<r;d++){let h=[],p=0;for(let c=0;c<a;c++){let m=e[d*a+c];p+=m*i[c],h.push(m)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)u.values[d*s+c]=t.get(...t.indexToLoc(p*s+c))}return u}function fC(e,t,n){let r=Le(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[a]=e.values[u])}return r}var gC=Ct((e,t)=>e>t?1:0),vK=Ut(Ql,gC,null,"bool"),wK={kernelName:Ql,backendName:"cpu",kernelFunc:vK},yC=Ct((e,t)=>e>=t?1:0),kK=Ut(Bi,yC,null,"bool"),IK={kernelName:Bi,backendName:"cpu",kernelFunc:kK},bC=Ct((e,t)=>e<t?1:0),SK=Ut(eu,bC,null,"bool"),NK={kernelName:eu,backendName:"cpu",kernelFunc:SK},xC=Ct((e,t)=>e<=t?1:0),TK=Ut(tu,xC,null,"bool"),_K={kernelName:tu,backendName:"cpu",kernelFunc:TK};function vC(e,t,n){let r=(t-e)/(n-1),a=w.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var wC=aa(e=>Math.log(e)),CK=ys(ji,wC),EK={kernelName:ji,backendName:"cpu",kernelFunc:CK};function kC(e,t,n,r){let a=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[s]=o}return a}var IC=Ct((e,t)=>Math.max(e,t)),$K=Ut(Zi,IC),AK={kernelName:Zi,backendName:"cpu",kernelFunc:$K},SC=Ct((e,t)=>Math.min(e,t)),FK=Ut(eo,SC),DK={kernelName:eo,backendName:"cpu",kernelFunc:FK},Bw=Ct((e,t)=>e*t),RK=Lw((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),qm=Ut(ro,Bw,RK),MK={kernelName:ro,backendName:"cpu",kernelFunc:qm};function NC(e,t,n){let r=w.createScalarValue(-1,n);return Bw([],t,r,e,n)}function OK(e){let{inputs:t,backend:n}=e,{x:r}=t;ye(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=NC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var LK={kernelName:uu,backendName:"cpu",kernelFunc:OK},TC=Ct((e,t)=>e!==t?1:0),PK=Ut(du,TC,null,"bool"),zK={kernelName:du,backendName:"cpu",kernelFunc:PK};function Ww(e,t,n,r,a){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(a),u=w.getTypedArrayFromDType(n,w.sizeFromShape(a));for(let d=0;d<i;++d){let h=w.indexToLoc(d,s,o),p=new Array(h.length);for(let m=0;m<p.length;m++)p[m]=h[r[m]];let c=w.locToIndex(p,s,l);u[c]=e[d]}return u}function Dn(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ye(a,"transpose");let i=a.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=a.shape[s[d]];let l=r.data.get(a.dataId).values,u=Ww(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var BK={kernelName:ca,backendName:"cpu",kernelFunc:Dn};function _C(e,t,n,r){let[a,s]=T.computeOutAndReduceShapes(e,r),i=or(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(a),i),l=w.sizeFromShape(s);for(let u=0;u<o.length;++u){let d=u*l,h=1;for(let p=0;p<l;++p)h*=n[d+p];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function WK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"prod");let o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=T.getAxesPermutation(l,o),d=l,h=a,p=[];u!=null&&(h=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),d=T.getInnerMostAxes(d.length,o));let c=n.data.get(h.dataId).values,{outVals:m,outShape:f,outDtype:g}=_C(h.shape,h.dtype,c,d),y=f;return i&&(y=T.expandShapeToKeepDim(f,l)),p.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var VK={kernelName:lo,backendName:"cpu",kernelFunc:WK};function UK(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=w.indexToLoc(a,t.length,w.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function GK(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function HK(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);GK(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let d=t[u+1];for(let h=1;h<l+1;++h)o[u].push(h*d)}for(let u=0;u<e.length;++u){let d=e[u],h=e[u]+1;for(let p=0;p<n.length;++p){let c=n[p],m=p+t.length-1;if(m>=0){let f=o[m],g=f[f.length-1]-c[d];for(let y=d;y<h;++y)o[m].push(c[y+1]+g)}d=c[d],h=c[h]}h!==d&&(a.push([d,h]),s+=h-d)}return{outSplits:o,valueSlices:a,numValues:s}}function jK(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=w.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function Ok(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function qK(e,t,n,r,a,s){let i=Ok(t,2)[1],o=Ok(s,2)[1],l=0;for(let u of n)for(let d=u[0];d<u[1];++d){for(let h=0;h<r;++h)a[l*o+h]=e[d*i+h];++l}}function KK(e,t,n,r,a){let s=t.slice();s[0]=a;let i=w.getArrayFromDType(n,w.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return qK(e,t,r,l,i,s),[i,s]}function CC(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(UK(s,i,l),r.length===0)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:d,valueSlices:h,numValues:p}=HK(s,i,e,u),c=jK(d),m=KK(n,r,a,h,p);return[c,m[0],m[1]]}var Lk=2147483647;function EC(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=a.length===0,u=i.length===0,d=[];o||d.push(t[0]),l||d.push(a[0]),u||d.push(i[0]);for(let g=1;g<d.length;++g)if(d[g]!==d[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=d.length===0?1:d[0],p=w.getArrayFromDType("int32",h+1);p[0]=0;for(let g=0;g<h;++g){let y=o?e[0]:e[g],b=l?r[0]:r[g],x=u?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>Lk)throw new Error(`Requires ((limit - start) / delta) <= ${Lk}`);p[g+1]=p[g]+v}let c=p[h],m=w.getArrayFromDType(n,c),f=0;for(let g=0;g<h;++g){let y=p[g+1]-p[g],b=o?e[0]:e[g],x=u?s[0]:s[g];for(let v=0;v<y;++v)m[f++]=b,b+=x}return[p,m]}var cr=T.RowPartitionType,XK=class jb{constructor(t,n,r,a,s,i,o,l,u,d){this.shape=t,this.shapeShape=n,this.values=r,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=T.getRowPartitionTypesHelper(d),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===cr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===cr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case cr.VALUE_ROWIDS:return jb.getMaxWidthValueRowID(n);case cr.ROW_SPLITS:return jb.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${cr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let n=t.length;if(n===0||n===1)return 0;let r=0;for(let a=0;a<n-1;++a){let s=t[a+1]-t[a];s>r&&(r=s)}return r}static getMaxWidthValueRowID(t){let n=t.length;if(n===0)return 0;let r=0,a=t[0],s=0;for(let i=1;i<n;++i){let o=t[i];o!==a&&(a=o,s=Math.max(i-r,s),r=i)}return Math.max(n-r,s)}tensorShapeFromTensor(t,n,r=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zk(t,r)}calculateOutputSize(t){let n=this.valuesShape,r=this.defaultValueShape;T.validateDefaultValueShape(r,n);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=T.combineRaggedTensorToTensorShapes(this.raggedRank,a,n);s[0]<0&&(s[0]=t);for(let i=1;i<=this.raggedRank;++i)s[i]<0&&(s[i]=this.getMaxWidth(i));return s}calculateFirstParentOutputIndex(t,n,r){let a=Math.min(t,r),s=[],i=0;for(let o=0;o<a;++o,i+=n)s.push(i);for(let o=a;o<t;++o)s.push(-1);return w.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,n,r,a){let s=t.length,i=[];for(let o=0;o<s-1;++o){let l=t[o+1]-t[o],u=Math.min(a,l),d=n[o];d===-1&&(u=0);for(let h=0;h<u;++h)i.push(d),d+=r;for(let h=0;h<l-u;++h)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,n,r,a){let s=t.length,i=[];if(s===0)return[];let o=0,l=t[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let d=1;d<s;++d){let h=t[d];if(h===l)u>=0&&(++o,o<a?u+=r:u=-1);else{if(o=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,n,r,a){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case cr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,n,r,a);case cr.ROW_SPLITS:if(s.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(s,n,r,a);default:throw new Error(`Unsupported partition type: ${cr[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let n=this.rowPartitionTypes[0];switch(n){case cr.FIRST_DIM_SIZE:return t[0];case cr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case cr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${cr[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*n[i+1];let a=zk(n,!1),s=w.getArrayFromDType(this.valuesDType,w.sizeFromShape(a));if(r[0]*n[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],n[o]);this.setOutput(this.raggedRank,i,s,a)}return[a,s]}setOutput(t,n,r,a){if(r.length===0)return;let s=this.values,i=r,o=a.slice();o=o.slice(t+1);let l=w.sizeFromShape(o),u=n.length,d=this.defaultValue;if(d.length!==l&&d.length!==1){let m=this.defaultValueShape;V(()=>{let f=W(d,m);d=Vs(f,o).dataSync()})}let h=0,p=0,c=0;for(let m=0;m<=u;++m){let f=m<u?n[m]:-1;if(f===c){++c;continue}if(p<c){let g=s.subarray(h*l),y=i.subarray(p*l),b=(c-p)*l;Pk(y,g,b)}if(m>=u){let g=r.length;f=Math.floor(g/l)}if(f>c)if(this.defaultValue.length===1)i.subarray(c*l,f*l).fill(this.defaultValue[0]),c=f;else for(;f>c;){let g=i.slice(c*l);Pk(g,d,l),++c}f<0?(h=m+1,p=c):(h=m,p=c,c=p+1)}}};function Pk(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function zk(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function $C(e,t,n,r,a,s,i,o,l,u){return new XK(e,t,n,r,a,s,i,o,l,u).compute()}function Vw(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var AC=aa(e=>1/Math.sqrt(e)),ZK=ys(yo,AC),JK={kernelName:yo,backendName:"cpu",kernelFunc:ZK};function Ws(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],h=e.values,p=t.values;if(r===0)return Le(n,t.dtype);let c=l instanceof Dt?l:Le(d,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=h[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<a;y++)u?c.values[g*a+y]+=p[m*a+y]:c.values[g*a+y]=t.rank===0?p[0]:p[m*a+y]}return c}var YK=aa(e=>1/(1+Math.exp(-e))),FC=at(ko,e=>1/(1+Math.exp(-e))),QK={kernelName:ko,backendName:"cpu",kernelFunc:FC};function Tc(e,t,n,r,a){let s=Bt.isSliceContinous(r,t,n),i=w.sizeFromShape(n),o=w.computeStrides(r);if(s){let h=Bt.computeFlatOffset(t,o);return a==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,u=Le(r,a,l),d=Le(n,a);for(let h=0;h<d.size;++h){let p=d.indexToLoc(h),c=p.map((m,f)=>m+t[f]);d.set(u.get(...c),...p)}return a==="string"?T.fromStringArrayToUint8(d.values):d.values}function si(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ye(a,"slice");let[o,l]=Bt.parseSliceParams(a,s,i);Bt.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,d=Tc(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}var e8={kernelName:Iu,backendName:"cpu",kernelFunc:si};function DC(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(a,0);return[g,[0,h],y,u,d]}let p=!0,c=0,m=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++m[y],p=p&&y>=c,c=y}let f=!0;for(let g=0;g<l;++g){let y=m[g]===0;u[g]=y,f=f&&!y,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&p){let g=e,y=r;for(let b=0;b<o;++b)d[b]=b;return[g,[o,h],y,u,d]}else{let g=m[l-1],y=w.getArrayFromDType(n,g*h),b=w.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let v=0;v<o;++v){let I=e[v*h],N=x[I],_=(I===0?0:m[I-1])+N;x[I]++;for(let E=0;E<h;++E)y[_*h+E]=e[v*h+E];b[_]=r[v],d[v]=_}for(let v=0;v<l;++v)if(x[v]===0){let I=v===0?0:m[v-1];y[I*h+0]=v;for(let N=1;N<h;++N)y[I*h+N]=0;b[I]=i}return[y,[g,h],b,u,d]}}function RC(e,t,n,r,a){let s=w.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let f=0;f<o;++f){let g=a[f];if(g===-1){if(d!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,f));d=f,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(f,g));u*=g,l.push(g)}}if(d!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let f=Math.trunc(s/u);if(u*f!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=f}if(w.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let f=h-2;f>=0;--f)p[f]=p[f+1]*r[f+1]}let c=[];if(o>0){c[o-1]=1;for(let f=o-2;f>=0;--f)c[f]=c[f+1]*l[f+1]}let m=w.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let g=0;for(let y=0;y<h;++y)g+=e[f*h+y]*p[y];for(let y=0;y<o;++y)m[f*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[m,[i,o],l]}function Uw(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce((b,x)=>b*x,1),c=w.getArrayFromDType(n,p);if(o===0)return d>0&&c.fill(i),[c,h];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[m];for(;;){let b=0;if(f<o){if(b=a[f],y===b){++f;continue}if(y>=b)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let x=m;x<f;++x){let v=r[x];if(v<0||v>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<u;I++)c[y*u+I]+=e[v*u+I]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=f-m;if(m=f,++f,g=y+1,y=b,f>o)break}return g<d&&c.fill(i,g*u,d*u),[c,h]}var t8=aa(e=>Math.sqrt(e)),n8=at(So,e=>Math.sqrt(e)),r8={kernelName:So,backendName:"cpu",kernelFunc:n8},MC=Ct((e,t)=>{let n=e-t;return n*n}),a8=Ut(_o,MC),s8={kernelName:_o,backendName:"cpu",kernelFunc:a8},OC=aa((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),i8=ys(cp,OC),o8={kernelName:cp,backendName:"cpu",kernelFunc:i8};function LC(e,t,n,r){let a=Le(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var l8=class{constructor(e,t,n,r,a,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let y=0;y<d;++y)p+=e[h+y].length;p+=u*this.rightPad.length;let c=l+u+d-1;p+=c*this.separator.length,n[r+i]=new Uint8Array(p);let m=n[r+i],f=0,g=y=>y.forEach(b=>m[f++]=b);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<d-1;++y)g(e[h+y]),g(this.separator);if(d>0){g(e[h+d-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let u=t[l]>=o;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=w.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(d=>{let h=t[o+1]-t[o],p=this.getNumNGrams(h,d);this.createNGrams(e,l,i,u,p,d),u+=p}),this.preserveShort&&u===s[o]){let d=t[o+1]-t[o];if(d===0)continue;let h=d+2*this.padWidth;this.createNGrams(e,l,i,u,1,h)}}return[i,s]}};function Gw(e,t,n,r,a,s,i,o){return new l8(n,r,a,s,i,o).compute(e,t)}function u8(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function Hw(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let p=0;p<r;++p){let c=a.length;u8(e[p],t,n,a);let m=a.length-c;o[p]=m,s+=m,i=Math.max(i,m)}let l=w.getArrayFromDType("int32",s*2),u=new Array(s),d=[r,i],h=0;for(let p=0;p<r;++p)for(let c=0;c<o[p];++c)l[h*2]=p,l[h*2+1]=c,u[h]=a[h],++h;return[l,u,d]}function jw(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var PC=Ct((e,t)=>e-t),d8=Lw((e,t,n,r)=>({real:e-n,imag:t-r})),qw=Ut(Co,PC,d8),p8={kernelName:Co,backendName:"cpu",kernelFunc:qw};function zC(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Le(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var bd=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function BC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,u=Math.log(o),d=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),p=Math.max(n,Math.floor(t-l*d/o+h)),c=Math.min(r,Math.floor(t+(o-l)*d/o+h));BC(e,t,p,c)}let a=e[t],s=n,i=r;for(w.swap(e,n,t),bd(e[r],a)>0&&w.swap(e,n,r);s<i;){for(w.swap(e,s,i),s++,i--;bd(e[s],a)<0;)s=s+1;for(;bd(e[i],a)>0;)i=i-1}bd(e[n],a)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function WC(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(n,i*r),u=w.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let p=h*o,c=e.subarray(p,p+o),m=new Array(c.length);c.forEach((b,x)=>m[x]={value:b,index:x}),r<m.length&&(BC(m,r),m=m.slice(0,r)),a&&m.sort(bd);let f=h*r,g=l.subarray(f,f+r),y=u.subarray(f,f+r);for(let b=0;b<r;b++)g[b]=m[b].value,y[b]=m[b].index}let d=t.slice();return d[d.length-1]=r,[Le(d,n,l),Le(d,"int32",u)]}function Kw(e,t,n,r){let a=w.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<a;m++)s[0]*=n[m];s[1]=n[a];for(let m=a+1;m<n.length;m++)s[2]*=n[m];let i=new Map,o=new Int32Array(n[a]),l=new Dt(s,r,e),u=[],d=s[0]===1&&s[2]===1;for(let m=0;m<n[a];m++){let f;if(d)f=e[m].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(l.get(b,m,x));f=y.join(",")}let g=i.get(f);if(g!=null)o[m]=g;else{let y=i.size;i.set(f,y),o[m]=y,u.push(m)}}let h=s.slice();h[1]=i.size;let p=new Dt(h,r);u.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)p.set(l.get(g,m,y),g,f,y)});let c=n.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var h8="4.21.0";nm("cpu",()=>new Mw,1);var VC=at(Di,e=>e>=0?e:Math.exp(e)-1),c8={kernelName:Di,backendName:"cpu",kernelFunc:VC};function UC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ye([a],"leakyRelu");let i=w.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var m8={kernelName:Hi,backendName:"cpu",kernelFunc:UC},f8=Ct((e,t)=>e<0?t*e:e);function GC(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ye([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=f8(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var g8={kernelName:oo,backendName:"cpu",kernelFunc:GC},HC=at(po,e=>Math.max(0,e)),y8={kernelName:po,backendName:"cpu",kernelFunc:HC},jC=at(mo,e=>Math.min(Math.max(0,e),6)),b8={kernelName:mo,backendName:"cpu",kernelFunc:jC};function _c(e,t,n,r,a){if(n==="linear")return ea({inputs:{x:t},backend:e});if(n==="relu")return HC({inputs:{x:t},backend:e});if(n==="elu")return VC({inputs:{x:t},backend:e});if(n==="relu6")return jC({inputs:{x:t},backend:e});if(n==="prelu")return GC({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return UC({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return FC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function gt(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=w.sizeFromShape(a.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(u.complexTensorInfos!=null){let d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;d.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var x8={kernelName:gu,backendName:"cpu",kernelFunc:gt};function qC(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ye([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=Ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],v=o?[y,c,h]:[y,h,c],I=gt({inputs:{x:a},backend:n,attrs:{shape:x}}),N=gt({inputs:{x:s},backend:n,attrs:{shape:v}}),_=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?N.shape[1]:N.shape[2],R=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(N.dataId).values,O=w.computeStrides(I.shape),B=w.computeStrides(N.shape),[G,j,K]=i?[O[0],1,O[1]]:[O[0],O[1],1],[X,Y,ee]=o?[1,B[1],B[0]]:[B[1],1,B[0]],te=E*A,ae=Le([R,E,A],I.dtype),ne=ae.values,se=n.blockSize;for(let ie=0;ie<R;ie++){let ve=ie%g,de=ie%y;for(let xe=0;xe<E;xe+=se){let Ie=Math.min(xe+se,E);for(let Ne=0;Ne<A;Ne+=se){let Pe=Math.min(Ne+se,A);for(let Ve=0;Ve<_;Ve+=se){let pt=Math.min(Ve+se,_);for(let Qe=xe;Qe<Ie;Qe++)for(let Je=Ne;Je<Pe;Je++){let Ye=0;for(let Fe=Ve;Fe<pt;Fe++){let ct=F[ve*G+Qe*j+Fe*K],Mn=S[Fe*X+Je*Y+de*ee];Ye+=ct*Mn}ne[ie*te+(Qe*A+Je)]+=Ye}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,ae.dtype,ae.values)}var v8={kernelName:wi,backendName:"cpu",kernelFunc:qC};function w8(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p,c,m,f=[];p=qC({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(c=_l({inputs:{a:p,b:i},backend:n}),f.push(p),p=c),d&&(m=_c(n,p,d,o,h),f.push(p),p=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return p}var k8={kernelName:qs,backendName:"cpu",kernelFunc:w8},I8=at(hi,e=>Math.acos(e)),S8={kernelName:hi,backendName:"cpu",kernelFunc:I8},N8=at(ci,e=>Math.acosh(e)),T8={kernelName:ci,backendName:"cpu",kernelFunc:N8};function _8(e){let{inputs:t,backend:n}=e,r=t;ye(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Le(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var C8={kernelName:mi,backendName:"cpu",kernelFunc:_8};function E8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"all");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x&&I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=gt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var $8={kernelName:Dl,backendName:"cpu",kernelFunc:E8};function A8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"any");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];x=x||I}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=gt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var F8={kernelName:Rl,backendName:"cpu",kernelFunc:A8};function D8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMax");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=Dn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(d),c=w.makeZerosTypedArray(p,"int32"),m=w.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I>b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(d,"int32",c)}var R8={kernelName:Ml,backendName:"cpu",kernelFunc:D8};function M8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMin");let i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=Dn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(d),c=w.makeZerosTypedArray(p,"int32"),m=w.sizeFromShape(h),f=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let v=0;v<m;++v){let I=f[y+v];I<b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(d,"int32",c)}var O8={kernelName:Ol,backendName:"cpu",kernelFunc:M8},L8=at(fi,e=>Math.asin(e)),P8={kernelName:fi,backendName:"cpu",kernelFunc:L8},z8=at(gi,e=>Math.asinh(e)),B8={kernelName:gi,backendName:"cpu",kernelFunc:z8},W8=at(yi,e=>Math.atan(e)),V8={kernelName:yi,backendName:"cpu",kernelFunc:W8},U8=Ct((e,t)=>Math.atan2(e,t)),G8=Ut(xi,U8),H8={kernelName:xi,backendName:"cpu",kernelFunc:G8},j8=at(bi,e=>Math.atanh(e)),q8={kernelName:bi,backendName:"cpu",kernelFunc:j8};function Xw(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,c=a.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Le(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let I=v*y,N=v*r[0];for(let _=0;_<a.inChannels;++_)for(let E=0;E<a.outHeight;++E){let A=E*i-p,R=Math.max(0,A),F=Math.min(a.inHeight,d+A),S=I+E*b;for(let O=0;O<a.outWidth;++O){let B=O*o-c,G=Math.max(0,B),j=Math.min(a.inWidth,h+B),K=m,X=0,Y=0;for(let te=R;te<F;te+=l){let ae=N+te*r[1];for(let ne=G;ne<j;ne+=u){let se=ae+ne*r[2],ie=e[se+_];s==="max"&&ie>K?K=ie:s==="avg"&&(X+=ie,Y++)}if(isNaN(K))break}let ee=S+O*x+_;g[ee]=s==="avg"?X/Y:K}}}return f}function KC(e,t,n,r,a=!1,s=!1){let i=Le(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=Le(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,v=x;for(;v<0;)v+=u;let I=Math.min(r.inHeight,h+x);for(let N=0;N<r.outWidth;++N){let _=N*l-m,E=_;for(;E<0;)E+=d;let A=Math.min(r.inWidth,p+_),R=Number.NEGATIVE_INFINITY,F=-1;for(let S=v;S<I;S+=u){let O=S-x;for(let B=E;B<A;B+=d){let G=B-_,j=f.get(g,S,B,y);j>R&&(R=j,a?F=s?((g*r.inHeight+S)*r.inWidth+B)*r.inChannels+y:(S*r.inWidth+B)*r.inChannels+y:F=O*p+G)}}i.set(F,g,b,N,y)}}return i}function XC(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Le(a.outShape,n),v=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],_=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let R=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let O=0;O<a.outDepth;++O){let B=O*i-f,G=B;for(;G<0;)G+=u;let j=Math.min(a.inDepth,p+B),K=R+O*N;for(let X=0;X<a.outHeight;++X){let Y=X*o-g,ee=Y;for(;ee<0;)ee+=d;let te=Math.min(a.inHeight,c+Y),ae=K+X*_;for(let ne=0;ne<a.outWidth;++ne){let se=ne*l-y,ie=se;for(;ie<0;)ie+=h;let ve=Math.min(a.inWidth,m+se),de=ae+ne*E,xe=b,Ie=0,Ne=0;for(let Ve=G;Ve<j;Ve+=u){let pt=F+Ve*r[1];for(let Qe=ee;Qe<te;Qe+=d){let Je=pt+Qe*r[2];for(let Ye=ie;Ye<ve;Ye+=h){let Fe=Je+Ye*r[3],ct=e[Fe+S];if(s==="max"&&ct>xe?xe=ct:s==="avg"&&(Ie+=ct,Ne++),isNaN(xe))break}if(isNaN(xe))break}if(isNaN(xe))break}let Pe=de+S;v[Pe]=s==="avg"?Ie/Math.max(Ne,1):xe}}}}return x}function K8(e,t){let n=Le(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-p,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let I=0;I<t.outHeight;++I){let N=I*a-c,_=N;for(;_<0;)_+=o;let E=Math.min(t.inHeight,d+N);for(let A=0;A<t.outWidth;++A){let R=A*s-m,F=R;for(;F<0;)F+=l;let S=Math.min(t.inWidth,h+R),O=Number.NEGATIVE_INFINITY,B=-1;for(let G=x;G<v;G+=i){let j=G-b;for(let K=_;K<E;K+=o){let X=K-N;for(let Y=F;Y<S;Y+=l){let ee=Y-R,te=e.get(f,G,K,Y,g);te>=O&&(O=te,B=j*d*h+X*d+ee)}}}n.set(B,f,y,I,A,g)}}}return n}function X8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))h=ea({inputs:{x:a},backend:n});else{let p=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Xw(p,a.shape,a.dtype,c,d,"avg");h=n.makeTensorInfo(d.outShape,a.dtype,m.values)}return h}var Z8={kernelName:vi,backendName:"cpu",kernelFunc:X8};function J8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ye(a,"avgPool3d");let d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,p=XC(h,a.shape,a.dtype,w.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var Y8={kernelName:Ll,backendName:"cpu",kernelFunc:J8};function Q8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ye([a,s],"avgPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=d.strideDepth,p=d.strideHeight,c=d.strideWidth,m=d.filterDepth,f=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,b=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterDepth,I=d.effectiveFilterHeight,N=d.effectiveFilterWidth,_=v-1-d.padInfo.front,E=N-1-d.padInfo.left,A=I-1-d.padInfo.top,R=Le(s.shape,"float32"),F=1/(m*f*g),S=n.bufferSync(a);for(let O=0;O<d.batchSize;++O)for(let B=0;B<d.inChannels;++B)for(let G=0;G<d.inDepth;++G)for(let j=0;j<d.inHeight;++j)for(let K=0;K<d.inWidth;++K){let X=G-_,Y=j-A,ee=K-E,te=0;for(let ae=0;ae<v;ae+=y){let ne=(X+ae)/h;if(!(ne<0||ne>=d.outDepth||Math.floor(ne)!==ne))for(let se=0;se<I;se+=b){let ie=(Y+se)/p;if(!(ie<0||ie>=d.outHeight||Math.floor(ie)!==ie))for(let ve=0;ve<N;ve+=x){let de=(ee+ve)/c;if(de<0||de>=d.outWidth||Math.floor(de)!==de)continue;let xe=S.get(O,ne,ie,de,B);te+=xe}}}R.set(te*F,O,G,j,K,B)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var eX={kernelName:Qd,backendName:"cpu",kernelFunc:Q8};function tX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ye([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),h=d.strideHeight,p=d.strideWidth,c=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,x=b-1-d.padInfo.left,v=y-1-d.padInfo.top,I=Le(i.shape,"float32"),N=1/(c*m),_=n.data.get(a.dataId).values,E=Le(a.shape,"float32",_);for(let A=0;A<d.batchSize;++A)for(let R=0;R<d.inChannels;++R)for(let F=0;F<d.inHeight;++F)for(let S=0;S<d.inWidth;++S){let O=F-v,B=S-x,G=0;for(let j=0;j<y;j+=f){let K=(O+j)/h;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let X=0;X<b;X+=g){let Y=(B+X)/p;if(Y<0||Y>=d.outWidth||Math.floor(Y)!==Y)continue;let ee=E.get(A,K,Y,R);G+=ee}}I.set(G*N,A,F,S,R)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var nX={kernelName:Yd,backendName:"cpu",kernelFunc:tX};function rX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ye([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);let d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(d.length),g=m.length,y=c.length,b=p.length,x=h.length,v=0,I=0,N=0,_=0;for(let E=0;E<d.length;++E)f[E]=m[v++]+(d[E]-h[I++])*c[N++]/Math.sqrt(p[_++]+u),v>=g&&(v=0),I>=x&&(I=0),N>=y&&(N=0),_>=b&&(_=0);return n.makeTensorInfo(a.shape,a.dtype,f)}var aX={kernelName:zi,backendName:"cpu",kernelFunc:rX};function sX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ye([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=gt({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Dn({inputs:{x:c},backend:n,attrs:{perm:u}}),f=gt({inputs:{x:m},backend:n,attrs:{shape:d}}),g=si({inputs:{x:f},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var iX={kernelName:Pl,backendName:"cpu",kernelFunc:sX};function oX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=Pw(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var lX={kernelName:zl,backendName:"cpu",kernelFunc:oX};function uX(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var dX={kernelName:ep,backendName:"cpu",kernelFunc:uX},pX=at(ls,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),hX={kernelName:ls,backendName:"cpu",kernelFunc:pX},cX=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let d=o[u],h=l[u];r[u]=Math.hypot(d,h)}return n.makeOutput(r,t.shape,"float32")},mX={kernelName:tp,backendName:"cpu",kernelFunc:cX};function Cl(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var fX={kernelName:Xc,backendName:"cpu",kernelFunc:Cl};function El(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(f=>f.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(f=>f.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(f=>w.sizeFromShape(f.shape)>0);if(l.length===1)return ea({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){let f=l.map(v=>ai({inputs:{input:v},backend:n})),g=l.map(v=>Cl({inputs:{input:v},backend:n})),y=El({inputs:f,backend:n,attrs:{axis:s}}),b=El({inputs:g,backend:n,attrs:{axis:s}}),x=Wn({inputs:{real:y,imag:b},backend:n});return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let u=l.map(f=>{let g=[-1,w.sizeFromShape(f.shape.slice(s))];return gt({inputs:{x:f},backend:n,attrs:{shape:g}})}),d=u.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));o=T.computeOutShape(u.map(f=>f.shape),1);let h=u[0].shape[0]===1,p=zw(d,o,t[0].dtype,h),c=T.computeOutShape(l.map(f=>f.shape),s),m=n.makeTensorInfo(c,t[0].dtype,p);return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var gX={kernelName:Wl,backendName:"cpu",kernelFunc:El};function ZC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;ye([a,s],"conv2d");let h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c=p.filterHeight,m=p.filterWidth,f=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x=p.dataFormat==="channelsLast",v=new Dt(p.outShape,a.dtype),I=w.computeStrides(a.shape),N=w.computeStrides(s.shape),_=I[0],E=x?I[1]:I[2],A=x?I[2]:1,R=x?1:I[1],F=v.strides[0],S=x?v.strides[1]:v.strides[2],O=x?v.strides[2]:1,B=x?1:v.strides[1],G=n.data.get(a.dataId).values,j=n.data.get(s.dataId).values,K=v.values;for(let X=0;X<p.batchSize;++X){let Y=X*_,ee=X*F;for(let te=0;te<p.outHeight;++te){let ae=ee+te*S,ne=te*p.strideHeight-b;for(let se=0;se<c;++se){let ie=ne+se*f;if(ie<0||ie>=p.inHeight)continue;let ve=se*N[0],de=Y+ie*E;for(let xe=0;xe<p.outWidth;++xe){let Ie=ae+xe*O,Ne=xe*p.strideWidth-y;for(let Pe=0;Pe<m;++Pe){let Ve=Ne+Pe*g;if(Ve<0||Ve>=p.inWidth)continue;let pt=ve+Pe*N[1],Qe=de+Ve*A,Je=pt;for(let Ye=0;Ye<p.inChannels;++Ye){let Fe=G[Qe+Ye*R];for(let ct=0;ct<p.outChannels;++ct)K[Ie+ct*B]+=Fe*j[Je+ct];Je+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,K)}var yX={kernelName:Si,backendName:"cpu",kernelFunc:ZC};function bX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;ye([a,s],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=p,y=p.dataFormat==="channelsLast",b=new Dt(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,_=new Dt(a.shape,a.dtype,I),E=new Dt(s.shape,s.dtype,N);for(let A=0;A<f;++A){let R=Math.max(0,Math.ceil((v-A)/c)),F=Math.min(p.outHeight,(p.inHeight+v-A)/c);for(let S=0;S<g;++S){let O=Math.max(0,Math.ceil((x-S)/m)),B=Math.min(p.outWidth,(p.inWidth+x-S)/m);for(let G=0;G<p.inChannels;++G)for(let j=0;j<p.outChannels;++j){let K=0;for(let X=0;X<p.batchSize;++X)for(let Y=R;Y<F;++Y){let ee=A+Y*c-v;for(let te=O;te<B;++te){let ae=S+te*m-x;y?K+=_.get(X,ee,ae,G)*E.get(X,Y,te,j):K+=_.get(X,G,ee,ae)*E.get(X,j,Y,te)}}b.set(K,A,S,G,j)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var xX={kernelName:Vc,backendName:"cpu",kernelFunc:bX};function vX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;ye([a,s],"conv2dBackpropInput");let h=w.computeStrides(s.shape),p=w.computeStrides(a.shape),c=T.convertConv2DDataFormat(u),m=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),f=new Dt(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,I]=h,{batchSize:N,filterHeight:_,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:S,outHeight:O,outWidth:B,strideHeight:G,strideWidth:j}=m;c=m.dataFormat;let K=_-1-m.padInfo.top,X=E-1-m.padInfo.left,Y=c==="channelsLast",ee=f.strides[0],te=Y?f.strides[1]:f.strides[2],ae=Y?f.strides[2]:1,ne=Y?1:f.strides[1],se=p[0],ie=Y?p[1]:p[2],ve=Y?p[2]:1,de=Y?1:p[1];for(let xe=0;xe<N;++xe)for(let Ie=0;Ie<A;++Ie)for(let Ne=0;Ne<R;++Ne){let Pe=Ne-K,Ve=Math.max(0,Math.ceil(Pe/G)),pt=Math.min(O,(_+Pe)/G);for(let Qe=0;Qe<F;++Qe){let Je=Qe-X,Ye=Math.max(0,Math.ceil(Je/j)),Fe=Math.min(B,(E+Je)/j),ct=0;for(let Et=Ve;Et<pt;++Et){let Zn=Et*G-Pe;for(let tn=Ye;tn<Fe;++tn){let Sn=tn*j-Je,Jn=se*xe+ie*Et+ve*tn,Nn=x*(_-1-Zn)+v*(E-1-Sn)+I*Ie;for(let st=0;st<S;++st){let Tn=y[Jn+de*st],On=b[Nn+st];ct+=Tn*On}}}let Mn=ee*xe+te*Ne+ae*Qe+ne*Ie;g[Mn]=ct}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var wX={kernelName:Ni,backendName:"cpu",kernelFunc:vX};function kX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;ye([a,s],"conv3d");let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Dt(u.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,_=v.values,E=w.computeStrides(a.shape),A=w.computeStrides(s.shape);for(let R=0;R<u.batchSize;++R){let F=R*E[0],S=R*v.strides[0];for(let O=0;O<u.outDepth;++O){let B=S+O*v.strides[1],G=O*u.strideDepth-y;for(let j=0;j<d;++j){let K=G+j*c;if(K<0||K>=u.inDepth)continue;let X=j*A[0],Y=F+K*E[1];for(let ee=0;ee<u.outHeight;++ee){let te=B+ee*v.strides[2],ae=ee*u.strideHeight-x;for(let ne=0;ne<h;++ne){let se=ae+ne*m;if(se<0||se>=u.inHeight)continue;let ie=X+ne*A[1],ve=Y+se*E[2];for(let de=0;de<u.outWidth;++de){let xe=te+de*u.outChannels,Ie=de*u.strideWidth-b;for(let Ne=0;Ne<p;++Ne){let Pe=Ie+Ne*f;if(Pe<0||Pe>=u.inWidth)continue;let Ve=ie+Ne*A[2],pt=ve+Pe*u.inChannels,Qe=Ve;for(let Je=0;Je<u.inChannels;++Je){let Ye=I[pt+Je];for(let Fe=0;Fe<u.outChannels;++Fe)_[xe+Fe]+=Ye*N[Qe+Fe];Qe+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var IX={kernelName:Ti,backendName:"cpu",kernelFunc:kX};function SX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;ye([a,s],"conv3dBackpropFilterV2");let u=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=T.computeConv3DInfo(a.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,m=h.strideWidth,f=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Dt(h.filterShape,"float32"),x=b.values,[v,I,N,_]=b.strides,E=n.data.get(s.dataId).values,[A,R,F,S]=d,O=n.data.get(a.dataId).values,[B,G,j,K]=u,X=h.padInfo.front,Y=h.padInfo.left,ee=h.padInfo.top;for(let te=0;te<f;++te){let ae=Math.max(0,Math.ceil((X-te)/p)),ne=Math.min(h.outDepth,(h.inDepth+X-te)/p),se=te*v;for(let ie=0;ie<g;++ie){let ve=Math.max(0,Math.ceil((ee-ie)/c)),de=Math.min(h.outHeight,(h.inHeight+ee-ie)/c),xe=ie*I+se;for(let Ie=0;Ie<y;++Ie){let Ne=Math.max(0,Math.ceil((Y-Ie)/m)),Pe=Math.min(h.outWidth,(h.inWidth+Y-Ie)/m),Ve=Ie*N+xe;for(let pt=0;pt<h.inChannels;++pt){let Qe=pt*_+Ve;for(let Je=0;Je<h.outChannels;++Je){let Ye=0;for(let Fe=0;Fe<h.batchSize;++Fe){let ct=Fe*B,Mn=Fe*A;for(let Et=ae;Et<ne;++Et){let Zn=(te+Et*p-X)*G+ct,tn=Et*R+Mn;for(let Sn=ve;Sn<de;++Sn){let Jn=(ie+Sn*c-ee)*j+Zn,Nn=Sn*F+tn;for(let st=Ne;st<Pe;++st){let Tn=(Ie+st*m-Y)*K+Jn,On=st*S+Nn;Ye+=O[Tn+pt]*E[On+Je]}}}}x[Qe+Je]=Ye}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var NX={kernelName:Vl,backendName:"cpu",kernelFunc:SX};function TX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;ye([a],"conv3dBackpropInputV2");let u=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=T.computeConv3DInfo(l,s.shape,o,1,i),p=new Dt(h.inShape,"float32"),c=p.values,[m,f,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,I,N]=u,_=n.data.get(s.dataId).values,[E,A,R,F]=d,{batchSize:S,filterDepth:O,filterHeight:B,filterWidth:G,inChannels:j,inDepth:K,inHeight:X,inWidth:Y,outChannels:ee,outDepth:te,outHeight:ae,outWidth:ne,strideDepth:se,strideHeight:ie,strideWidth:ve}=h,de=O-1-h.padInfo.front,xe=B-1-h.padInfo.top,Ie=G-1-h.padInfo.left;for(let Ne=0;Ne<S;++Ne)for(let Pe=0;Pe<j;++Pe)for(let Ve=0;Ve<K;++Ve){let pt=Ve-de,Qe=Math.max(0,Math.ceil(pt/se)),Je=Math.min(te,(O+pt)/se);for(let Ye=0;Ye<X;++Ye){let Fe=Ye-xe,ct=Math.max(0,Math.ceil(Fe/ie)),Mn=Math.min(ae,(B+Fe)/ie);for(let Et=0;Et<Y;++Et){let Zn=Et-Ie,tn=Math.max(0,Math.ceil(Zn/ve)),Sn=Math.min(ne,(G+Zn)/ve),Jn=0;for(let Nn=Qe;Nn<Je;++Nn){let st=Nn*se-pt;for(let Tn=ct;Tn<Mn;++Tn){let On=Tn*ie-Fe;for(let sa=tn;sa<Sn;++sa){let Uo=sa*ve-Zn,Or=x*Ne+v*Nn+I*Tn+N*sa,td=E*(O-1-st)+A*(B-1-On)+R*(G-1-Uo)+F*Pe;for(let pr=0;pr<ee;++pr){let Na=b[Or+pr],Gt=_[td+pr];Jn+=Na*Gt}}}}c[m*Ne+f*Ve+g*Ye+y*Et+Pe]=Jn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var _X={kernelName:Ul,backendName:"cpu",kernelFunc:TX},CX=at(_i,e=>Math.cos(e)),EX={kernelName:_i,backendName:"cpu",kernelFunc:CX},$X=at(Ci,e=>Math.cosh(e)),AX={kernelName:Ci,backendName:"cpu",kernelFunc:$X};function FX(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,p,c]=a.shape,m=s.shape[0],[f,g]=o,y=Le([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,I=w.computeStrides(a.shape),N=w.computeStrides(y.shape);for(let _=0;_<m;_++){let E=_*4,A=b[E],R=b[E+1],F=b[E+2],S=b[E+3],O=x[_];if(O>=d)continue;let B=f>1?(F-A)*(h-1)/(f-1):0,G=g>1?(S-R)*(p-1)/(g-1):0;for(let j=0;j<f;j++){let K=f>1?A*(h-1)+j*B:.5*(A+F)*(h-1);if(K<0||K>h-1){for(let X=0;X<g;X++)for(let Y=0;Y<c;Y++){let ee=Y+X*N[2]+j*N[1]+_*N[0];y.values[ee]=u}continue}if(l==="bilinear"){let X=Math.floor(K),Y=Math.ceil(K),ee=K-X;for(let te=0;te<g;te++){let ae=g>1?R*(p-1)+te*G:.5*(R+S)*(p-1);if(ae<0||ae>p-1){for(let ve=0;ve<c;ve++){let de=ve+te*N[2]+j*N[1]+_*N[0];y.values[de]=u}continue}let ne=Math.floor(ae),se=Math.ceil(ae),ie=ae-ne;for(let ve=0;ve<c;ve++){let de=ve+ne*I[2]+X*I[1]+O*I[0],xe=v[de];de=ve+se*I[2]+X*I[1]+O*I[0];let Ie=v[de];de=ve+ne*I[2]+Y*I[1]+O*I[0];let Ne=v[de];de=ve+se*I[2]+Y*I[1]+O*I[0];let Pe=v[de],Ve=xe+(Ie-xe)*ie,pt=Ne+(Pe-Ne)*ie;de=ve+te*N[2]+j*N[1]+_*N[0],y.values[de]=Ve+(pt-Ve)*ee}}}else for(let X=0;X<g;++X){let Y=g>1?R*(p-1)+X*G:.5*(R+S)*(p-1);if(Y<0||Y>p-1){for(let ae=0;ae<c;ae++){let ne=ae+X*N[2]+j*N[1]+_*N[0];y.values[ne]=u}continue}let ee=Math.round(Y),te=Math.round(K);for(let ae=0;ae<c;ae++){let ne=ae+ee*I[2]+te*I[1]+O*I[0],se=ae+X*N[2]+j*N[1]+_*N[0];y.values[se]=v[ne]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var DX={kernelName:Hl,backendName:"cpu",kernelFunc:FX};function RX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=Dn({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=or(u.dtype,"int32"),p=w.makeOnesTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)p[x]=i?1:c[x];else{let v=f(y,b-1);p[x]=i?c[v]*p[v]:c[x]*p[v]}}let g=n.makeTensorInfo(u.shape,h,p);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Dn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var MX={kernelName:Gl,backendName:"cpu",kernelFunc:RX};function OX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=Dn({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=or(u.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)p[x]=i?0:c[x];else{let v=f(y,b-1);p[x]=i?c[v]+p[v]:c[x]+p[v]}}let g=n.makeTensorInfo(u.shape,h,p);if(l!=null){let y=T.getUndoAxesPermutation(l),b=Dn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}var LX={kernelName:Ei,backendName:"cpu",kernelFunc:OX};function PX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=Pw(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,d)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),d=aC(l,u,i,o);return n.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var zX={kernelName:np,backendName:"cpu",kernelFunc:PX};function BX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],h=l*s,p=u*s,c=d/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*h*p*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let x=Math.floor(b/s),v=b%s;for(let I=0;I<p;++I){let N=Math.floor(I/s),_=I%s,E=(v*s+_)*c;for(let A=0;A<c;++A){let R=A+E+d*(N+u*(x+l*y));f[g++]=m[R]}}}return n.makeTensorInfo([o,h,p,c],a.dtype,f)}var WX={kernelName:jl,backendName:"cpu",kernelFunc:BX};function JC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;ye([a,s],"depthwiseConv2DNative");let d=w.computeStrides(a.shape),h=w.computeStrides(s.shape),p=l;p==null&&(p=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,I=c.outChannels/c.inChannels,N=new Dt(c.outShape,a.dtype),_=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=N.values;for(let R=0;R<c.batchSize;++R){let F=R*d[0],S=R*N.strides[0];for(let O=0;O<c.outHeight;++O){let B=S+O*N.strides[1],G=O*c.strideHeight-v;for(let j=0;j<m;++j){let K=G+j*g;if(K<0||K>=c.inHeight)continue;let X=j*h[0],Y=F+K*d[1];for(let ee=0;ee<c.outWidth;++ee){let te=B+ee*N.strides[2],ae=ee*c.strideWidth-x;for(let ne=0;ne<f;++ne){let se=ae+ne*y;if(se<0||se>=c.inWidth)continue;let ie=X+ne*h[1],ve=Y+se*c.inChannels,de=te,xe=ie;for(let Ie=0;Ie<c.inChannels;++Ie){let Ne=_[ve+Ie];for(let Pe=0;Pe<I;++Pe)A[de+Pe]+=Ne*E[xe+Pe];de+=I,xe+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var VX={kernelName:$i,backendName:"cpu",kernelFunc:JC};function UX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;ye([a,s],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:c,filterHeight:m,filterWidth:f}=h,g=new Dt(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,I=new Dt(a.shape,a.dtype,v),N=n.data.get(s.dataId).values,_=new Dt(s.shape,s.dtype,N);for(let E=0;E<m;++E){let A=Math.max(0,Math.ceil((b-E)/p)),R=Math.min(h.outHeight,(h.inHeight+b-E)/p);for(let F=0;F<f;++F){let S=Math.max(0,Math.ceil((y-F)/c)),O=Math.min(h.outWidth,(h.inWidth+y-F)/c);for(let B=0;B<h.outChannels;++B){let G=Math.trunc(B/x),j=B%x,K=0;for(let X=0;X<h.batchSize;++X)for(let Y=A;Y<R;++Y){let ee=E+Y*p-b;for(let te=S;te<O;++te){let ae=F+te*c-y;K+=I.get(X,ee,ae,G)*_.get(X,Y,te,B)}}g.set(K,E,F,G,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var GX={kernelName:Uc,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;ye([a,s],"depthwiseConv2DNativeBackpropInput");let h=w.computeStrides(a.shape),p=w.computeStrides(s.shape),c=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),m=new Dt(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[v,I,N]=h,_=n.data.get(s.dataId).values,[E,A,R]=p,{batchSize:F,filterHeight:S,filterWidth:O,inChannels:B,inHeight:G,inWidth:j,outChannels:K,outHeight:X,outWidth:Y,strideHeight:ee,strideWidth:te}=c,ae=S-1-c.padInfo.top,ne=O-1-c.padInfo.left,se=K/B;for(let ie=0;ie<F;++ie)for(let ve=0;ve<B;++ve)for(let de=0;de<G;++de){let xe=de-ae,Ie=Math.max(0,Math.ceil(xe/ee)),Ne=Math.min(X,(S+xe)/ee);for(let Pe=0;Pe<j;++Pe){let Ve=Pe-ne,pt=Math.max(0,Math.ceil(Ve/te)),Qe=Math.min(Y,(O+Ve)/te),Je=0;for(let Ye=Ie;Ye<Ne;++Ye){let Fe=Ye*ee-xe;for(let ct=pt;ct<Qe;++ct){let Mn=ct*te-Ve,Et=v*ie+I*Ye+N*ct,Zn=E*(S-1-Fe)+A*(O-1-Mn)+R*ve;for(let tn=0;tn<se;++tn){let Sn=ve*se+tn,Jn=x[Et+Sn],Nn=_[Zn+tn];Je+=Jn*Nn}}}f[g*ie+y*de+b*Pe+ve]=Je}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var jX={kernelName:Gc,backendName:"cpu",kernelFunc:HX};function qX(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Le([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var KX={kernelName:rp,backendName:"cpu",kernelFunc:qX},XX={kernelName:Ai,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,d=r.shape.length,h=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:c,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:I,filterHeight:N,filterWidth:_,dilationHeight:E,dilationWidth:A,outShape:R}=T.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=w.sizeFromShape(R),S=R.length,O=w.getArrayFromDType(r.dtype,F);for(let B=0;B<c;++B)for(let G=0;G<y;++G){let j=G*v-x.top;for(let K=0;K<b;++K){let X=K*I-x.left;for(let Y=0;Y<g;++Y){let ee=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<N;++ae){let ne=j+ae*E;if(ne>=0&&ne<m)for(let se=0;se<_;++se){let ie=X+se*A;if(ie>=0&&ie<f){let ve=w.locToIndex([B,ne,ie,Y],d,w.computeStrides(r.shape)),de=w.locToIndex([ae,se,Y],p,w.computeStrides(a.shape)),xe=u[ve]+h[de];xe>ee&&(ee=xe)}}}let te=w.locToIndex([B,G,K,Y],S,w.computeStrides(R));O[te]=ee}}}return{dataId:l.write(w.toTypedArray(O,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},ZX={kernelName:cl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:_,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${cl}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<p;++S)for(let O=0;O<g;++O){let B=O*x-b.top;for(let G=0;G<y;++G){let j=G*v-b.left;for(let K=0;K<f;++K){let X=Number.MIN_SAFE_INTEGER,Y=0,ee=0;for(let te=0;te<I;++te){let ae=B+te*_;if(ae>=0&&ae<c)for(let ne=0;ne<N;++ne){let se=j+ne*E;if(se>=0&&se<m){let ie=d[S][ae][se][K]+h[te][ne][K];ie>X&&(X=ie,Y=te,ee=ne)}}}F[Y][ee][K]+=R[S][O][G][K]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},JX={kernelName:hl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:N,dilationHeight:_,dilationWidth:E,outShape:A}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${hl}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<p;++S)for(let O=0;O<g;++O){let B=O*x-b.top;for(let G=0;G<y;++G){let j=G*v-b.left;for(let K=0;K<f;++K){let X=Number.MIN_SAFE_INTEGER,Y=B<0?0:B,ee=j<0?0:j;for(let te=0;te<I;++te){let ae=B+te*_;if(ae>=0&&ae<c)for(let ne=0;ne<N;++ne){let se=j+ne*E;if(se>=0&&se<m){let ie=d[S][ae][se][K]+h[te][ne][K];ie>X&&(X=ie,Y=ae,ee=se)}}}F[S][Y][ee][K]+=R[S][O][G][K]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function YX(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=l?.alpha||1,d=o?.contextType||"2d";if(d!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(d,o?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${d} type.`);let[p,c]=a.shape.slice(0,2),m=a.shape.length===2?1:a.shape[2],f=n.data.get(a.dataId).values,g=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(c*p*4);for(let x=0;x<p*c;++x){let v=[0,0,0,255*u];for(let N=0;N<m;N++){let _=f[x*m+N];if(a.dtype==="float32"){if(_<0||_>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_}.`)}else if(a.dtype==="int32"&&(_<0||_>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_}.`);m===1?(v[0]=_*g,v[1]=_*g,v[2]=_*g):v[N]=_*g}let I=x*4;y[I+0]=Math.round(v[0]),y[I+1]=Math.round(v[1]),y[I+2]=Math.round(v[2]),y[I+3]=Math.round(v[3])}s.width=c,s.height=p;let b=new ImageData(y,c,p);return h.putImageData(b,0,0),a}var QX={kernelName:Hc,backendName:"cpu",kernelFunc:YX};function qp(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"sum");let o;a.dtype==="bool"?o=rs({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=ea({inputs:{x:a},backend:n});let l=o.shape.length,u=w.parseAxisParam(s,o.shape),d=T.getAxesPermutation(u,l),h=u,p=o;d!=null&&(p=Dn({inputs:{x:o},backend:n,attrs:{perm:d}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,m]=T.computeOutAndReduceShapes(p.shape,h),f=T.upcastType(p.dtype,"int32"),g=Nc(n,c,f),y=w.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let v=0;v<b.length;++v){let I=v*y,N=0;for(let _=0;_<y;++_)N+=x[I+_];b[v]=N}if(i){let v=T.expandShapeToKeepDim(g.shape,u),I=g;g=gt({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),d!=null&&n.disposeIntermediateTensorInfo(p),g}var e7={kernelName:No,backendName:"cpu",kernelFunc:qp};function t7(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of d[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=Dn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=gt({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),p===null?p=x:(p=qm({inputs:{a:x,b:p},backend:n}),m.push(p))}f<h-1&&(u[f]>=0&&(p=qp({inputs:{x:p},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(p)),c--)}for(let f of m)f!==p&&n.disposeIntermediateTensorInfo(f);return p}var n7={kernelName:jc,backendName:"cpu",kernelFunc:t7};function r7(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ye([r,a],"eluGrad");let s=new Float32Array(w.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=0?s[l]=o[l]:s[l]=o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",s)}var a7={kernelName:ql,backendName:"cpu",kernelFunc:r7},s7=T.ERF_P,i7=T.ERF_A1,o7=T.ERF_A2,l7=T.ERF_A3,u7=T.ERF_A4,d7=T.ERF_A5,p7=at(Ri,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+s7*n);return t*(1-((((d7*r+u7)*r+l7)*r+o7)*r+i7)*r*Math.exp(-n*n))}),h7={kernelName:Ri,backendName:"cpu",kernelFunc:p7};function Cc(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),gt({inputs:{x:a},backend:n,attrs:{shape:o}})}var c7={kernelName:Xl,backendName:"cpu",kernelFunc:Cc},m7=Ct((e,t)=>e/t),Zw=Ut(Fi,m7),qb={kernelName:Fi,backendName:"cpu",kernelFunc:Zw};function YC(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=w.sizeFromShape(u),h=w.getTypedArrayFromDType("float32",d),p=w.getTypedArrayFromDType("float32",d);for(let g=0;g<a;g++){let y=si({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=si({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Wn({inputs:{real:y,imag:b},backend:n}),{real:v,imag:I}=f7(x,t,n),N=T.mergeRealAndImagArrays(v,I);for(let _=0;_<s;_++){let E=T.getComplexWithIndex(N,_);h[g*s+_]=E.real,p[g*s+_]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",p),f=Wn({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function f7(e,t,n){let r=w.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(g7(r)){let o=Kb(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",o.real),d=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),p=ea({inputs:{x:h},backend:n}),c=qb.kernelFunc({inputs:{a:u,b:h},backend:n}),m=qb.kernelFunc({inputs:{a:d,b:p},backend:n}),f=n.data.get(c.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=y7(o,r,t);return T.splitRealAndImagArrays(l)}}function g7(e){return(e&e-1)===0}function Kb(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=n/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],h=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),c=Wn({inputs:{real:h,imag:p},backend:a}),m=T.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=a.makeTensorInfo(y,"float32",f),x=a.makeTensorInfo(y,"float32",g),v=Wn({inputs:{real:b,imag:x},backend:a}),I=Kb(l,u,i,r,a),N=I.real,_=I.imag,E=[N.length],A=a.makeTensorInfo(E,"float32",N),R=a.makeTensorInfo(E,"float32",_),F=Wn({inputs:{real:A,imag:R},backend:a}),S=Kb(f,g,i,r,a),O=S.real,B=S.imag,G=[O.length],j=a.makeTensorInfo(G,"float32",O),K=a.makeTensorInfo(G,"float32",B),X=Wn({inputs:{real:j,imag:K},backend:a}),Y=T.exponents(n,r),ee=[Y.real.length],te=a.makeTensorInfo(ee,"float32",Y.real),ae=a.makeTensorInfo(ee,"float32",Y.imag),ne=Wn({inputs:{real:te,imag:ae},backend:a}),se=qm({inputs:{a:ne,b:X},backend:a}),ie=_l({inputs:{a:F,b:se},backend:a}),ve=qw({inputs:{a:F,b:se},backend:a}),de=ai({inputs:{input:ie},backend:a}),xe=ai({inputs:{input:ve},backend:a}),Ie=Cl({inputs:{input:ie},backend:a}),Ne=Cl({inputs:{input:ve},backend:a}),Pe=El({inputs:[de,xe],backend:a,attrs:{axis:0}}),Ve=El({inputs:[Ie,Ne],backend:a,attrs:{axis:0}}),pt=a.data.get(Pe.dataId).values,Qe=a.data.get(Ve.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(ne),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(ie),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(Ie),a.disposeIntermediateTensorInfo(xe),a.disposeIntermediateTensorInfo(Ne),a.disposeIntermediateTensorInfo(Pe),a.disposeIntermediateTensorInfo(Ve),{real:pt,imag:Qe}}function y7(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,n),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,a)}return r}function b7(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=gt({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=YC(o,!1,n),u=gt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var x7={kernelName:qc,backendName:"cpu",kernelFunc:b7};function Jw(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||w.inferDtype(a),o=w.getArrayFromDType(i,w.sizeFromShape(r));return w7(o,a,i),t.makeTensorInfo(r,i,o)}var v7={kernelName:ap,backendName:"cpu",kernelFunc:Jw};function w7(e,t,n){e.fill(t)}var k7={kernelName:Zl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,d=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let p=h*l*o*u;for(let c=0;c<o;c++){let m=c*(l*u);for(let f=0;f<l;f++){let g=f*u;for(let y=0;y<u;y++){let b=Math.round(l-f-1),x=p+m+g+y,v=d[x];if(b>=0&&b<l){let I=b*u,N=p+m+I+y;v=d[N]}s[x]=v}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function I7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=ZC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let g=f;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=gt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=_l({inputs:{a:f,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else f=_l({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=f;if(d==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=gt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=_c(n,f,c,y,m),n.disposeIntermediateTensorInfo(y)}else f=_c(n,f,c,o,m);n.disposeIntermediateTensorInfo(g)}return f}var S7={kernelName:Ks,backendName:"cpu",kernelFunc:I7};function N7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=JC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let g=f;f=_l({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=f;f=_c(n,f,c,o,m),n.disposeIntermediateTensorInfo(g)}return f}var T7={kernelName:Xs,backendName:"cpu",kernelFunc:N7};function _7(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=w.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,h]=T.prepareAndValidate(r,a);if(u===0)return n.makeTensorInfo(l,r.dtype,[]);let p=n.data.get(a.dataId).values,c=n.bufferSync(r),m=mC(p,c,r.dtype,u,o,d,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,m.values)}var C7={kernelName:Yl,backendName:"cpu",kernelFunc:_7};function E7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ye([a,s],"gatherV2");let l=w.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let v=0;v<u.length;++v){let I=u[v];w.assert(I<=d-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${d-1}]`)}let h=o;o==null&&(h=0);let p=w.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,h),m=gt({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=gt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=n.bufferSync(m),x=fC(b,y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var $7={kernelName:Jl,backendName:"cpu",kernelFunc:E7};function A7(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=gt({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=YC(o,!0,n),u=gt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var F7={kernelName:Kc,backendName:"cpu",kernelFunc:A7},D7=at(Vi,e=>Number.isFinite(e)?1:0,"bool"),R7={kernelName:Vi,backendName:"cpu",kernelFunc:D7},M7=at(Ui,e=>Math.abs(e)===1/0?1:0,"bool"),O7={kernelName:Ui,backendName:"cpu",kernelFunc:M7},L7=at(Gi,e=>Number.isNaN(e)?1:0,"bool"),P7={kernelName:Gi,backendName:"cpu",kernelFunc:L7};function z7(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=vC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var B7={kernelName:nu,backendName:"cpu",kernelFunc:z7},W7=at(qi,e=>Math.log1p(e)),V7={kernelName:qi,backendName:"cpu",kernelFunc:W7},U7=Ct((e,t)=>e&&t),G7=Ut(ru,U7,null,"bool"),H7={kernelName:ru,backendName:"cpu",kernelFunc:G7},j7=at(au,e=>e?0:1,"bool"),q7={kernelName:au,backendName:"cpu",kernelFunc:j7},K7=Ct((e,t)=>e||t),X7=Ut(su,K7,null,"bool"),Z7={kernelName:su,backendName:"cpu",kernelFunc:X7};function J7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;ye(a,"LRN");let u=a.shape[3],d=u-1,h=n.data.get(a.dataId).values,p=w.sizeFromShape(a.shape),c=new Float32Array(p);function m(f){let g=f%u,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,d),x=0;for(;y<=b;y++){let v=h[y];x+=v*v}return x}for(let f=0;f<p;f++){let g=m(f),y=h[f]*Math.pow(i+o*g,-l);c[f]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var Y7={kernelName:Ki,backendName:"cpu",kernelFunc:J7};function Q7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;ye(i,"LRNGrad");let h=w.sizeFromShape(i.shape),p=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let x=b%p,v=b-x+Math.max(0,x-o),I=b-x+Math.min(p,x+o+1),N=0;for(let _=v;_<I;_++)N+=Math.pow(m[_],2);N=u*N+l;for(let _=v;_<I;_++){let E=-2*u*d*m[_]*f[b]/N;b===_&&(E+=Math.pow(N,-d)),E*=c[b],g[_]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var eZ={kernelName:iu,backendName:"cpu",kernelFunc:Q7};function QC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=w.parseAxisParam(s,l),h=d,p=T.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(p!=null){let v=new Array(u);for(let I=0;I<v.length;I++)v[I]=l[p[I]];c=Ww(c,l,a.dtype,p,v),h=T.getInnerMostAxes(h.length,u),l=v}ye(a,"max"),T.assertAxesAreInnerMostDims("max",h,u);let[m,f]=T.computeOutAndReduceShapes(l,h),g=w.sizeFromShape(f),y=kC(c,g,m,a.dtype),b=o.write(y,m,a.dtype),x=m;return i&&(x=T.expandShapeToKeepDim(m,d)),{dataId:b,shape:x,dtype:a.dtype}}var tZ={kernelName:Xi,backendName:"cpu",kernelFunc:QC};function nZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))h=ea({inputs:{x:a},backend:n});else{let p=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),m=Xw(p,a.shape,a.dtype,c,d,"max");h=n.makeTensorInfo(d.outShape,a.dtype,m.values)}return h}var rZ={kernelName:Ji,backendName:"cpu",kernelFunc:nZ};function aZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ye(a,"maxPool3d");let d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,p=XC(h,a.shape,a.dtype,w.computeStrides(a.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var sZ={kernelName:ou,backendName:"cpu",kernelFunc:aZ};function iZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ye([a,s],"maxPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.bufferSync(s),p=K8(h,d),c=d.strideDepth,m=d.strideHeight,f=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,I=d.effectiveFilterWidth,N=x-1-d.padInfo.front,_=I-1-d.padInfo.left,E=v-1-d.padInfo.top,A=Le(s.shape,"float32"),R=n.bufferSync(a);for(let F=0;F<d.batchSize;++F)for(let S=0;S<d.inChannels;++S)for(let O=0;O<d.inDepth;++O)for(let B=0;B<d.inHeight;++B)for(let G=0;G<d.inWidth;++G){let j=O-N,K=B-E,X=G-_,Y=0;for(let ee=0;ee<x;ee+=g){let te=(j+ee)/c;if(!(te<0||te>=d.outDepth||Math.floor(te)!==te))for(let ae=0;ae<v;ae+=y){let ne=(K+ae)/m;if(!(ne<0||ne>=d.outHeight||Math.floor(ne)!==ne))for(let se=0;se<I;se+=b){let ie=(X+se)/f;if(ie<0||ie>=d.outWidth||Math.floor(ie)!==ie)continue;let ve=x*v*I-1-p.get(F,te,ne,ie,S),de=ee*v*I+ae*I+se,xe=ve===de?1:0;if(xe===0)continue;let Ie=R.get(F,te,ne,ie,S);Y+=Ie*xe}}}A.set(Y,F,O,B,G,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var oZ={kernelName:ip,backendName:"cpu",kernelFunc:iZ};function lZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ye([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=T.computePool2DInfo(o.shape,l,u,1,d,h),c=n.data.get(o.dataId).values,m=Le(p.outShape,o.dtype,KC(c,o.shape,o.dtype,p).values),f=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,I=v-1-p.padInfo.left,N=x-1-p.padInfo.top,_=Le(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Le(a.shape,"float32",E);for(let R=0;R<p.batchSize;++R)for(let F=0;F<p.inChannels;++F)for(let S=0;S<p.inHeight;++S)for(let O=0;O<p.inWidth;++O){let B=S-N,G=O-I,j=0;for(let K=0;K<x;K+=y){let X=(B+K)/f;if(!(X<0||X>=p.outHeight||Math.floor(X)!==X))for(let Y=0;Y<v;Y+=b){let ee=(G+Y)/g;if(ee<0||ee>=p.outWidth||Math.floor(ee)!==ee)continue;let te=x*v-1-m.get(R,X,ee,F),ae=K*v+Y,ne=te===ae?1:0;if(ne===0)continue;let se=A.get(R,X,ee,F);j+=se*ne}}_.set(j,R,S,O,F)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var uZ={kernelName:sp,backendName:"cpu",kernelFunc:lZ};function dZ(e,t,n,r,a){let s=w.computeStrides(t),i=Xw(e,t,n,s,a,"max"),o=KC(e,t,n,a,!0,r);return[i.values,o.values]}var pZ={kernelName:op,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ye(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,d=T.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=dZ(u,r.shape,r.dtype,o,d),c=l.write(h,d.outShape,r.dtype),m=l.write(p,d.outShape,r.dtype);return[{dataId:c,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};function hZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],u=w.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=rs({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let c=Zw({inputs:{a:p,b:h},backend:n});d.push(c);let m=qp({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var cZ={kernelName:Yi,backendName:"cpu",kernelFunc:hZ};function mZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"min");let o=w.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),d=a;u!=null&&(d=Dn({inputs:{x:a},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,d.shape.length);let[h,p]=T.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(p),m=w.makeZerosTypedArray(w.sizeFromShape(h),d.dtype),f=n.data.get(d.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let v=0;v<c;++v){let I=f[b+v];(Number.isNaN(I)||I<x)&&(x=I)}m[y]=x}u!=null&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,m);if(i){let y=T.expandShapeToKeepDim(h,o),b=gt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var fZ={kernelName:Qi,backendName:"cpu",kernelFunc:mZ};function gZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ye(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),u=s.map((b,x)=>b[0]+a.shape[x]),d=i==="reflect"?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,c=w.computeStrides(a.shape),m=w.sizeFromShape(o),f=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(a.dtype,m);for(let b=0;b<m;b++){let x=w.indexToLoc(b,f,g);for(let I=0;I<f;I++)x[I]<l[I]?x[I]=l[I]*2-x[I]-d:x[I]>=u[I]&&(x[I]=(u[I]-1)*2-x[I]+d);x=x.map((I,N)=>I-l[N]);let v=w.locToIndex(x,p,c);y[b]=h[v]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var yZ={kernelName:to,backendName:"cpu",kernelFunc:gZ},bZ=Ct((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),xZ=Ut(no,bZ),vZ={kernelName:no,backendName:"cpu",kernelFunc:xZ},wZ=is(Lc());function eE(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],a.shape),u=QC({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=T.expandShapeToKeepDim(u.shape,l),h=gt({inputs:{x:u},backend:n,attrs:{shape:d}}),p=qw({inputs:{a,b:h},backend:n}),c=dC({inputs:{x:p},backend:n}),m=qp({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),f=gt({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Zw({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var kZ={kernelName:To,backendName:"cpu",kernelFunc:eE};function IZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ye(a,"multinomial");let l=o?a:eE({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],c=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let m=0;m<u;++m){let f=m*d,g=new Float32Array(d-1);g[0]=h[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[f+x];let y=wZ.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let v=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(v<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",c)}var SZ={kernelName:lu,backendName:"cpu",kernelFunc:IZ},NZ=ra.nonMaxSuppressionV3Impl;function TZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ye(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=NZ(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var _Z={kernelName:pu,backendName:"cpu",kernelFunc:TZ},CZ=ra.nonMaxSuppressionV4Impl;function EZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;ye(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=CZ(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var $Z={kernelName:hu,backendName:"cpu",kernelFunc:EZ},AZ=ra.nonMaxSuppressionV5Impl;function FZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;ye(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=AZ(d,h,p,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var DZ={kernelName:cu,backendName:"cpu",kernelFunc:FZ};function RZ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;ye(a,"oneHot");let u=w.sizeFromShape(a.shape),d=new Float32Array(u*i);d.fill(l);let h=n.data.get(a.dataId).values;for(let p=0;p<u;++p)h[p]>=0&&h[p]<i&&(d[p*i+h[p]]=o);return n.makeTensorInfo([...a.shape,i],s,d)}var MZ={kernelName:ao,backendName:"cpu",kernelFunc:RZ};function Ec(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=ai({inputs:{input:r},backend:n}),s=Ec({inputs:{x:a},backend:n}),i=Cl({inputs:{input:r},backend:n}),o=Ec({inputs:{x:i},backend:n}),l=Wn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var OZ={kernelName:Fu,backendName:"cpu",kernelFunc:Ec};function tE(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=ai({inputs:{input:r},backend:n}),s=tE({inputs:{x:a},backend:n}),i=Cl({inputs:{input:r},backend:n}),o=Ec({inputs:{x:i},backend:n}),l=Wn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jw({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var LZ={kernelName:mu,backendName:"cpu",kernelFunc:tE};function nE(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Cc({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=Cc({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=El({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var PZ={kernelName:fu,backendName:"cpu",kernelFunc:nE};function zZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ye(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),u=n.data.get(a.dataId).values,d=w.sizeFromShape(a.shape),h=a.shape.length,p=w.computeStrides(a.shape),c=w.sizeFromShape(o),m=o.length,f=w.computeStrides(o),g=w.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<d;y++){let b=w.indexToLoc(y,h,p).map((v,I)=>v+l[I]),x=w.locToIndex(b,m,f);g[x]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var rE={kernelName:so,backendName:"cpu",kernelFunc:zZ},BZ=Ct((e,t)=>Math.pow(e,t)),WZ=Ut(io,BZ),VZ={kernelName:io,backendName:"cpu",kernelFunc:WZ};function UZ(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.data.get(y.dataId).values),u=a.map(y=>y.shape),d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[p,c,m]=CC(l,u,d,s.shape,s.dtype,h,i.shape,o),f=p.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var GZ={kernelName:Zc,backendName:"cpu",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=EC(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),p=n.makeTensorInfo([d.length],r.dtype,d);return[h,p]}var jZ={kernelName:Jc,backendName:"cpu",kernelFunc:HZ};function qZ(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[m,f]=$C(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(m,s.dtype,f)}var KZ={kernelName:Yc,backendName:"cpu",kernelFunc:qZ};function XZ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Vw(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var ZZ={kernelName:lp,backendName:"cpu",kernelFunc:XZ},JZ=at(uo,e=>1/e),YZ={kernelName:uo,backendName:"cpu",kernelFunc:JZ};function QZ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeBilinear");let l=w.computeStrides(a.shape),[u,d]=o,[h,p,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(w.sizeFromShape([h,u,d,m])),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=0,v=y[0]/b[0],I=y[1]/b[1];for(let N=0;N<h;N++)for(let _=0;_<u;_++){let E;i?E=v*(_+.5)-.5:E=v*_;let A=Math.max(0,Math.floor(E)),R=E-A,F=Math.min(p-1,Math.ceil(E)),S=N*l[0]+A*l[1],O=N*l[0]+F*l[1];for(let B=0;B<d;B++){let G;i?G=I*(B+.5)-.5:G=I*B;let j=Math.max(0,Math.floor(G)),K=G-j,X=Math.min(c-1,Math.ceil(G)),Y=S+j*l[2],ee=O+j*l[2],te=S+X*l[2],ae=O+X*l[2];for(let ne=0;ne<m;ne++){let se=f[Y+ne],ie=f[ee+ne],ve=f[te+ne],de=f[ae+ne],xe=se+(ve-se)*K,Ie=ie+(de-ie)*K,Ne=xe+(Ie-xe)*R;g[x++]=Ne}}}return n.makeTensorInfo([h,u,d,m],"float32",g)}var eJ={kernelName:co,backendName:"cpu",kernelFunc:QZ};function tJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeBilinearGrad");let o=w.computeStrides(a.shape),[l,u,d,h]=a.shape,[,p,c]=s.shape,m=new Float32Array(l*u*d*h),f=[i&&p>1?u-1:u,i&&c>1?d-1:d],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let I=0;I<l;I++){let N=I*o[0];for(let _=0;_<p;_++){let E=_*y,A=Math.floor(E),R=Math.min(Math.ceil(E),u-1),F=N+A*o[1],S=N+R*o[1],O=E-A,B=1-O;for(let G=0;G<c;G++){let j=G*b,K=Math.floor(j),X=Math.min(Math.ceil(j),d-1),Y=j-K,ee=1-Y,te=F+K*o[2],ae=F+X*o[2],ne=S+K*o[2],se=S+X*o[2],ie=B*ee,ve=B*Y,de=O*ee,xe=O*Y;for(let Ie=0;Ie<h;Ie++){let Ne=x[v++];m[te+Ie]+=Ne*ie,m[ae+Ie]+=Ne*ve,m[ne+Ie]+=Ne*de,m[se+Ie]+=Ne*xe}}}}return n.makeTensorInfo([l,d,u,h],"float32",m)}var nJ={kernelName:bu,backendName:"cpu",kernelFunc:tJ};function rJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeNearestNeighbor");let l=w.computeStrides(a.shape),[u,d]=o,[h,p,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(h*u*d*m),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=y[0]/b[0],v=y[1]/b[1],I=0;for(let N=0;N<h;N++){let _=N*l[0];for(let E=0;E<u;E++){let A=i?x*(E+.5):x*E,R=Math.min(p-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let F=_+R*l[1];for(let S=0;S<d;S++){let O=i?v*(S+.5):v*S,B=Math.min(c-1,s?Math.round(O):Math.floor(O));i&&(B=Math.max(0,B));let G=F+B*l[2];for(let j=0;j<m;j++){let K=f[G+j];g[I++]=K}}}}return n.makeTensorInfo([h,u,d,m],a.dtype,g)}var aJ={kernelName:ho,backendName:"cpu",kernelFunc:rJ};function sJ(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeNearestNeighborGrad");let o=w.computeStrides(a.shape),l=w.computeStrides(s.shape),[u,d,h,p]=a.shape,[,c,m]=s.shape,f=new Float32Array(u*d*h*p),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&m>1?h-1:h],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],I=1/x,N=1/v,_=Math.ceil(I)*2+2,E=Math.ceil(N)*2+2;for(let A=0;A<u;A++){let R=A*o[0];for(let F=0;F<d;F++){let S=R+F*o[1],O=Math.floor(F*I),B=Math.floor(O-_/2);for(let G=0;G<h;G++){let j=S+G*o[2],K=Math.floor(G*N),X=Math.floor(K-E/2);for(let Y=0;Y<p;Y++){let ee=0;for(let te=0;te<_;te++){let ae=te+B;if(ae<0||ae>=c)continue;let ne=R+ae*l[1],se=ae*x,ie=Math.min(d-1,i?Math.round(se):Math.floor(se));if(F===ie)for(let ve=0;ve<E;ve++){let de=ve+X;if(de<0||de>=m)continue;let xe=ne+de*l[2],Ie=de*v,Ne=Math.min(h-1,i?Math.round(Ie):Math.floor(Ie));G===Ne&&(ee+=g[xe+Y])}}f[j+Y]=ee}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}var iJ={kernelName:yu,backendName:"cpu",kernelFunc:sJ};function oJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ye(a,"reverse");let i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return ea({inputs:{x:a},backend:n});let l=new Dt(a.shape,a.dtype),u=n.bufferSync(a);for(let d=0;d<l.size;d++){let h=l.indexToLoc(d),p=h.slice();o.forEach(c=>p[c]=a.shape[c]-1-p[c]),l.set(u.get(...p),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var lJ={kernelName:fo,backendName:"cpu",kernelFunc:oJ},uJ={kernelName:Du,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,d,h,p]=r.shape,[c,m]=T.getImageCenter(i,d,h),f=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let v=x*h*d*p;for(let I=0;I<d;I++){let N=I*(h*p);for(let _=0;_<h;_++){let E=_*p;for(let A=0;A<p;A++){let R=[u,I,_,A],F=R[2],S=R[1],O=(F-c)*y-(S-m)*g,B=(F-c)*g+(S-m)*y;O=Math.round(O+c),B=Math.round(B+m);let G=s;if(typeof s!="number"&&(A===3?G=f:G=s[A]),O>=0&&O<h&&B>=0&&B<d){let K=B*(h*p),X=O*p,Y=v+K+X+A;G=b[Y]}let j=v+N+E+A;l[j]=G}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dJ=at(go,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),pJ={kernelName:go,backendName:"cpu",kernelFunc:dJ};function hJ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,i),p=!0,c=n.bufferSync(a),m=n.bufferSync(s),f=Ws(c,m,i,h,u,l,o,d,0,p);return n.makeTensorInfo(i,f.dtype,f.values)}var cJ={kernelName:xu,backendName:"cpu",kernelFunc:hJ};function mJ(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function fJ(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function gJ(e,t,n,r,a,s){let i=w.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),u=o*a;for(let d=0;d<a;++d)i[u+d]=s==="left"?mJ(l,t[d+u]):fJ(l,t[d+u])}return i}function yJ(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=gJ(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var bJ={kernelName:wu,backendName:"cpu",kernelFunc:yJ};function xJ(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ye([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=or(a.dtype,s.dtype),h=w.makeZerosTypedArray(w.sizeFromShape(a.shape),d),p=0,c=i===0||i>1||a.shape.length===1?1:w.sizeFromShape(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<c;f++)o[m]===1?h[p++]=l[m]:h[p++]=u[m];return n.makeTensorInfo(a.shape,d,h)}var vJ={kernelName:ku,backendName:"cpu",kernelFunc:xJ},wJ=T.SELU_SCALEALPHA,kJ=T.SELU_SCALE,IJ=at(bo,e=>e>=0?kJ*e:wJ*(Math.exp(e)-1)),SJ={kernelName:bo,backendName:"cpu",kernelFunc:IJ},NJ=at(wo,e=>e<0?-1:e>0?1:0),TJ={kernelName:wo,backendName:"cpu",kernelFunc:NJ},_J=at(xo,e=>Math.sin(e)),CJ={kernelName:xo,backendName:"cpu",kernelFunc:_J},EJ=at(vo,e=>Math.sinh(e)),$J={kernelName:vo,backendName:"cpu",kernelFunc:EJ},AJ=11920928955078125e-23,Bk=Math.log(AJ)+2,FJ=at(Io,e=>{let t=e>-Bk,n=e<Bk,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),DJ={kernelName:Io,backendName:"cpu",kernelFunc:FJ};function RJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ye([a],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=rE.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),c=gt({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Dn({inputs:{x:c},backend:n,attrs:{perm:h}}),f=gt({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}var MJ={kernelName:Su,backendName:"cpu",kernelFunc:RJ};function OJ(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[h,p,c,m,f]=DC(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var LJ={kernelName:up,backendName:"cpu",kernelFunc:OJ};function PJ(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,h]=RC(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var zJ={kernelName:Tu,backendName:"cpu",kernelFunc:PJ};function BJ(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=Uw(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}var WJ={kernelName:dp,backendName:"cpu",kernelFunc:BJ};function VJ(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=Uw(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}var UJ={kernelName:pp,backendName:"cpu",kernelFunc:VJ};function GJ(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=T.calculateShapes(s,a,o),c=!1,m=n.bufferSync(a),f;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=!!n.data.get(i.dataId).values[0];f=Ws(m,g,o,p,d,u,l,h,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Ws(m,g,o,p,d,u,l,h,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Ws(m,g,o,p,d,u,l,h,y,c);break}case"string":{let g=n.bufferSync(s),y=w.decodeString(n.data.get(i.dataId).values[0]);f=Ws(m,g,o,p,d,u,l,h,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}var HJ={kernelName:_u,backendName:"cpu",kernelFunc:GJ};function jJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map(h=>{let p=[...d];p[o]=h;let c=si({inputs:{x:a},backend:n,attrs:{begin:u,size:p}});return u[o]+=h,c})}var qJ={kernelName:Nu,backendName:"cpu",kernelFunc:jJ},KJ={kernelName:hp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ye(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},XJ=at(ds,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),ZJ={kernelName:ds,backendName:"cpu",kernelFunc:XJ};function JJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;ye(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Bt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=gt({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Bt.computeOutShape(b,x,v),_=si({inputs:{x:a},backend:n,attrs:{begin:b,size:N}});I=gt({inputs:{x:_},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(_)}else{let N=n.bufferSync(a),_=LC(c,N,v,b);I=n.makeTensorInfo(m,_.dtype,_.values)}return I}var YJ={kernelName:Cu,backendName:"cpu",kernelFunc:JJ};function QJ(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.data.get(d.dataId).values,c=n.data.get(h.dataId).values,[m,f]=Gw(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var eY={kernelName:mp,backendName:"cpu",kernelFunc:QJ};function tY(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,h]=Hw(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var nY={kernelName:fp,backendName:"cpu",kernelFunc:tY};function rY(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=jw(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var aY={kernelName:gp,backendName:"cpu",kernelFunc:rY},sY=at(Eo,e=>Math.tan(e)),iY={kernelName:Eo,backendName:"cpu",kernelFunc:sY},oY=at($o,e=>Math.tanh(e)),lY={kernelName:$o,backendName:"cpu",kernelFunc:oY};function uY(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=T.calculateShapes(s,a,r.shape),h=!1,p=n.bufferSync(a),c=n.bufferSync(s),m=n.bufferSync(r),f=Ws(p,c,r.shape,d,l,o,i,u,m,h);return n.makeTensorInfo(r.shape,f.dtype,f.values)}var dY={kernelName:vu,backendName:"cpu",kernelFunc:uY};function pY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ye(a,"tile");let i=zC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var hY={kernelName:us,backendName:"cpu",kernelFunc:pY};function cY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ye(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=WC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var mY={kernelName:Eu,backendName:"cpu",kernelFunc:cY};function fY(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=w.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],I=w.computeStrides(g),N=I[0],_=I[1],E=I[2],A=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(g));A.fill(l);let R=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<d;++S){let O=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let B=0;B<m;++B)for(let G=0;G<f;++G)for(let j=0;j<c;++j){let K,X=O[6]*G+O[7]*B+1;if(X===0)continue;let Y=(O[0]*G+O[1]*B+O[2])/X,ee=(O[3]*G+O[4]*B+O[5])/X,te=Wk(Y,p,o),ae=Wk(ee,h,o);switch(i){case"nearest":K=wY(R,h,p,b,x,v,S,ae,te,j,l);break;case"bilinear":K=kY(R,h,p,b,x,v,S,ae,te,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let ne=S*N+B*_+G*E+j;A[ne]=K}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var gY={kernelName:$u,backendName:"cpu",kernelFunc:fY};function Wk(e,t,n){switch(n){case"reflect":return yY(e,t);case"wrap":return bY(e,t);case"nearest":return vY(e,t);case"constant":default:return xY(e,t)}}function yY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}function bY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return w.clamp(0,n,t-1)}function xY(e,t){return e}function vY(e,t){return w.clamp(0,e,t-1)}function xd(e,t,n,r,a,s,i,o,l,u,d){let h=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:d}function wY(e,t,n,r,a,s,i,o,l,u,d){let h=Math.round(o),p=Math.round(l);return xd(e,t,n,r,a,s,i,h,p,u,d)}function kY(e,t,n,r,a,s,i,o,l,u,d){let h=Math.floor(o),p=Math.floor(l),c=h+1,m=p+1,f=(m-l)*xd(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*xd(e,t,n,r,a,s,i,h,m,u,d),g=(m-l)*xd(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*xd(e,t,n,r,a,s,i,c,m,u,d);return(c-o)*f+(o-h)*g}function IY(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ye(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Kw(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var SY={kernelName:yp,backendName:"cpu",kernelFunc:IY};function NY(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let p=new Array(o);for(let c=0;c<p.length;c++){d[s]=c;let m=si({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[c]=gt({inputs:{x:m},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(m)}return p}var TY={kernelName:Au,backendName:"cpu",kernelFunc:NY};function _Y(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ye(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],d=[],h=o-l,p=s;for(let m=0;m<h;++m){let f=Cc({inputs:{input:p},backend:n,attrs:{dim:m+1}});p=f,d.push(f)}for(let m=0;m<i;++m){let f=w.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=lC({inputs:{a:g,b:p},backend:n}),b=rs({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=qm({inputs:{a:b,b:a},backend:n}),v=qp({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),d.push(g),d.push(y),d.push(b),d.push(x),d.push(v)}let c=nE({inputs:u,backend:n,attrs:{axis:0}});return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var CY={kernelName:bp,backendName:"cpu",kernelFunc:_Y},EY=[k8,tK,S8,T8,oK,C8,$8,F8,R8,O8,P8,B8,V8,H8,q8,Z8,Y8,eX,nX,v8,aX,iX,lX,uK,dX,sK,pK,hX,nK,mX,gX,yX,xX,wX,IX,NX,_X,EX,AX,DX,MX,LX,zX,WX,VX,GX,jX,KX,XX,ZX,JX,QX,n7,c8,a7,hK,h7,cK,c7,fK,x7,v7,k7,yK,xK,S7,T7,C7,$7,wK,IK,rK,F7,fX,R7,O7,P7,m8,NK,_K,B7,EK,V7,H7,q7,Z7,Y7,eZ,tZ,AK,rZ,sZ,oZ,uZ,pZ,cZ,fZ,DK,yZ,vZ,SZ,MK,LK,_Z,$Z,DZ,zK,MZ,LZ,PZ,rE,VZ,g8,VK,GZ,jZ,KZ,ZZ,aK,qb,YZ,y8,b8,x8,eJ,nJ,aJ,iJ,lJ,uJ,pJ,JK,cJ,bJ,vJ,SJ,QK,TJ,CJ,$J,e8,kZ,DJ,MJ,LJ,zJ,WJ,UJ,HJ,qJ,r8,KJ,s8,o8,ZJ,YJ,eY,nY,aY,p8,e7,iY,lY,dY,hY,mY,gY,BK,SY,TY,CY,OZ];for(let e of EY)xp(e);var aE={};Ee(aE,{assertNotComplex:()=>Hu,bindCanvasToFramebuffer:()=>BY,bindColorTextureToFramebuffer:()=>tc,bindTextureToProgramUniformSampler:()=>vE,bindTextureUnit:()=>yE,bindVertexBufferToProgramAttribute:()=>Xb,callAndCheck:()=>he,canBeRepresented:()=>iE,createFragmentShader:()=>uE,createFramebuffer:()=>gE,createProgram:()=>dE,createStaticIndexBuffer:()=>cE,createStaticVertexBuffer:()=>hE,createTexture:()=>mE,createVertexShader:()=>lE,getBatchDim:()=>ii,getExtensionOrThrow:()=>vd,getFramebufferErrorMessage:()=>wE,getMaxTexturesInShader:()=>NE,getNumChannels:()=>PY,getProgramUniformLocation:()=>xE,getProgramUniformLocationOrThrow:()=>bE,getRowsCols:()=>oi,getShapeAs3D:()=>kd,getTextureShapeFromLogicalShape:()=>IE,getWebGLDisjointQueryTimerVersion:()=>TE,getWebGLErrorMessage:()=>oE,getWebGLMaxTextureSize:()=>SE,hasExtension:()=>ar,isCapableOfRenderingToFloatTexture:()=>_E,isDownloadFloatTextureEnabled:()=>CE,isReshapeFree:()=>Ud,isWebGLFenceEnabled:()=>EE,isWebGLVersionEnabled:()=>Jb,linkProgram:()=>pE,logShaderSourceAndInfoLog:()=>Qw,resetMaxTextureSize:()=>WY,resetMaxTexturesInShader:()=>VY,unbindColorTextureFromFramebuffer:()=>Zb,unbindTextureUnit:()=>zY,validateFramebuffer:()=>wd,validateProgram:()=>ec,validateTextureSize:()=>fE});var zs={},Gh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sE(e,t){zs[e]=t}function Dr(e,t){if(!(e in zs)||t!=null){let r=AY(e,t);if(r!==null)zs[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=zs[e];return n==null||n.isContextLost()?(delete zs[e],Dr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),zs[e])}function $Y(e){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function AY(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??$Y(e);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete zs[e]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Gh.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Gh)||n.getContext("experimental-webgl",Gh):n.getContext("webgl2",Gh)}var Vd;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Vd||(Vd={}));var rr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(rr||(rr={}));var rn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(rn||(rn={}));function Kp(e,t){return[t,e]}function FY(e,t){return e*t}function Hh(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Gu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function DY(e,t){let[n,r]=Gu(e,t);return n*r*4}function Yw(e,t){let n=e,r,a,s,i,o,l,u,d,h,p;return H().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,d=4,h=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function he(e,t){let n=t();return H().getBool("DEBUG")&&RY(e),n}function RY(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+oE(e,t))}var MY=596e-10,OY=65504;function iE(e){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||MY<Math.abs(e)&&Math.abs(e)<OY)}function oE(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function vd(e,t){return Sa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function lE(e,t){let n=Sa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(he(e,()=>e.shaderSource(n,t)),he(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function uE(e,t){let n=Sa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(he(e,()=>e.shaderSource(n,t)),he(e,()=>e.compileShader(n)),H().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Qw(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var LY=/ERROR: [0-9]+:([0-9]+):/g;function Qw(e,t){let n=LY.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((h,p)=>w.rightPad((p+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function dE(e){return Sa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function pE(e,t){if(he(e,()=>e.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ec(e,t){if(he(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function hE(e,t){let n=Sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),he(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function cE(e,t){let n=Sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),he(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function PY(){return H().getNumber("WEBGL_VERSION")===2?1:4}function mE(e){return Sa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function fE(e,t){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function gE(e){return Sa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Xb(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),he(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),he(e,()=>e.enableVertexAttribArray(o)),!0)}function yE(e,t,n){kE(e,n),he(e,()=>e.activeTexture(e.TEXTURE0+n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function zY(e,t){kE(e,t),he(e,()=>e.activeTexture(e.TEXTURE0+t)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function bE(e,t,n){return Sa(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function xE(e,t,n){return e.getUniformLocation(t,n)}function vE(e,t,n,r){he(e,()=>yE(e,t,r)),he(e,()=>e.uniform1i(n,r))}function BY(e){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),he(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),he(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function tc(e,t,n){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),he(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Zb(e,t){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),he(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function wd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+wE(e,t))}function wE(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Sa(e,t,n){let r=he(e,()=>t());if(r==null)throw new Error(n);return r}function kE(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function ii(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function oi(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function kd(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ii(e),...oi(e)]),t}function IE(e,t=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,l)=>l>=e.length-2?w.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=ii(e),l=2,u=2;e.length&&([l,u]=oi(e)),a=o*(l/2)*(u/2),s=w.sizeToSquarishShape(a).map(d=>d*2)}else s=w.sizeToSquarishShape(a);return s}function jh(e){return e%2===0}function Ud(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||jh(n)&&jh(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&jh(e[0])&&jh(t[0])}var nc,rc;function SE(e){if(nc==null){let t=Dr(e);nc=t.getParameter(t.MAX_TEXTURE_SIZE)}return nc}function WY(){nc=null}function VY(){rc=null}function NE(e){if(rc==null){let t=Dr(e);rc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,rc)}function TE(e){if(e===0)return 0;let t,n=Dr(e);return ar(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:ar(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function ar(e,t){return e.getExtension(t)!=null}function Jb(e){try{if(Dr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _E(e){if(e===0)return!1;let t=Dr(e);if(e===1){if(!ar(t,"OES_texture_float"))return!1}else if(!ar(t,"EXT_color_buffer_float"))return!1;return Yb(t)}function CE(e){if(e===0)return!1;let t=Dr(e);if(e===1){if(!ar(t,"OES_texture_float")||!ar(t,"WEBGL_color_buffer_float"))return!1}else{if(ar(t,"EXT_color_buffer_float"))return Yb(t);let n="EXT_color_buffer_half_float";if(ar(t,n)){let r=t.getExtension(n);return UY(t,r)}return!1}return Yb(t)}function Yb(e){let t=Yw(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function UY(e,t){let n=Yw(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}function EE(e){return e!==2?!1:Dr(e).fenceSync!=null}function Hu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var be=H();be.registerFlag("HAS_WEBGL",()=>be.getNumber("WEBGL_VERSION")>0);be.registerFlag("WEBGL_VERSION",()=>Jb(2)?2:Jb(1)?1:0);be.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);be.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>be.get("WEBGL_VERSION")===2);be.registerFlag("WEBGL_CPU_FORWARD",()=>!0);be.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);be.registerFlag("WEBGL_PACK",()=>be.getBool("HAS_WEBGL"));be.registerFlag("WEBGL_PACK_NORMALIZATION",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_CLIP",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_REDUCE",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_LAZILY_UNPACK",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_CONV_IM2COL",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>SE(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>NE(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=be.getNumber("WEBGL_VERSION");return e===0?0:TE(e)});be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>be.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!kp.isMobile());be.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_E(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>be.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:be.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));be.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>CE(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_FENCE_API_ENABLED",()=>EE(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>be.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);be.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});be.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>kp.isMobile()?1:-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});be.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);be.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);be.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);be.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);be.registerFlag("WEBGL_EXP_CONV",()=>!1);be.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>be.getBool("IS_TEST"));be.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);be.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);be.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);be.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function In(){let e,t,n,r,a,s,i,o,l,u;return H().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Po(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Km(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function GY(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function HY(e,t,n="index"){let r=e.map((s,i)=>i),a=GY(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function e0(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function t0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var $E=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:AE}=T;function jY(e,t,n){let r=[];if(e.forEach(p=>{let c=w.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=n0(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(p=>qY(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=In(),l=ZY(o),u,d,h=QY(o);return t.isPacked?(u=KY(t.logicalShape,i,n.enableShapeUniforms),d=YY(o)):(u=XY(t.logicalShape,i,n.enableShapeUniforms),d=JY(o)),n.packedInputs&&(h+=r9),[h,l,d,a,u,s,n.userCode].join(`
`)}function ju(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return f9(e,t);case 1:return y9(e,t);case 2:return x9(e,t);case 3:return w9(e,t);case 4:return I9(e,t);case 5:return S9(e);case 6:return N9(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function FE(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return m9(e);case 1:return g9(e,t);case 2:return b9(e,t);case 3:return v9(e,t);default:return k9(e,t)}}function qY(e,t,n=!1,r){let a="";n?a+=FE(e,r):a+=ju(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=T9(e,t):a+=_9(e,t)),a}function KY(e,t,n){switch(e.length){case 0:return DE();case 1:return a9(e,t,n);case 2:return h9(e,t,n);case 3:return i9(e,t,n);default:return l9(e,t,n)}}function XY(e,t,n){switch(e.length){case 0:return DE();case 1:return s9(e,t,n);case 2:return c9(e,t,n);case 3:return o9(e,t,n);case 4:return u9(e,t,n);case 5:return d9(e,t);case 6:return p9(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function ZY(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function JY(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function YY(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function QY(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${e9}
    ${t9}
    ${n9}
  `}var e9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,t9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,n9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,r9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function DE(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function a9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function s9(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function i9(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function o9(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Km(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Po(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function l9(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function u9(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Km(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Po(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function d9(e,t){let n=Po(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function p9(e,t){let n=Po(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function h9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function c9(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function zo(e){return`offset${e}`}function m9(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=In();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function f9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=zo(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function g9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=In();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function y9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${qu(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=zo(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function b9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=In();if(s!=null&&w.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function x9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),l=i;if(l.length<n.length){let p=Ku(e,l),c=["row","col"];return`
      ${ju(p,t)}
      float ${a}(int row, int col) {
        return ${a}(${Xu(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${qu(e)}
      }
    `;let u=s[0],d=s[1],h=zo(r);return d===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${r}, uv);
  }
`}function v9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let p=n.slice(1),c=[1,2],m=Ku(e,p),f=["b","row","col"];return`
        ${FE(m,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Xu(f,c)});
        }
      `}let o=In();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2),h=d*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${d}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function w9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=w.squeezeShape(n),u=o;if(u.length<n.length){let f=Ku(e,u),g=["row","col","depth"];return`
        ${ju(f,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Xu(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${qu(e)}
      }
    `;let d=e.shapeInfo.texShape,h=d[0],p=d[1],c=e.shapeInfo.flatOffset;if(p===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;let m=zo(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function k9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=In();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let f=2;f<i-1;f++)c=`int b${f}, `+c,p*=s[i-f-1],m=`b${f} * ${p} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}function I9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(n);if(l.length<n.length){let b=Ku(e,l),x=["row","col","depth","depth2"];return`
      ${ju(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Xu(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${qu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${m}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&d==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=zo(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${f}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function S9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){let f=Ku(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${ju(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Xu(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${qu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];if(c===o&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=zo(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function N9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=w.squeezeShape(t);if(a.length<t.length){let g=Ku(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${ju(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Xu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${qu(e)}
      }
    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],m=p[1];if(m===d&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=zo(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function qu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function T9(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=AE(e.shapeInfo.logicalShape,t.logicalShape),l=dt(i),u=i-s,d,h=["x","y","z","w","u","v"];s===0?d="":i<2&&o.length>=1?d="coords = 0;":d=o.map(g=>`coords.${h[g+u]} = 0;`).join(`
`);let p="";i<2&&s>0?p="coords":p=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+u]}`).join(", ");let c="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,f=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${r}(${p});
      ${c}
    }
  `}function _9(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=dt(l),d=AE(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,p,c=["x","y","z","w","u","v"];o===0?p="":l<2&&d.length>=1?p="coords = 0;":p=d.map(f=>`coords.${c[f+h]} = 0;`).join(`
`);let m="";return l<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${r}(${m});
    }
  `}function dt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function n0(e,t,n){let{newShape:r,keptDims:a}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Ku(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Xu(e,t){return t.map(n=>e[n]).join(", ")}function C9(e,t,n,r){let a=n.map((d,h)=>{let p={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(p.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:p}}),s=a.map(d=>d.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=jY(a,i,t),l=uE(e.gl,o),u=e.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},RE(e,t,u)))}function RE(e,t,n){let r=[],a=[],s,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h of t.variableNames){let p={name:h,uniform:e.getUniformLocation(n,h,d),offset:e.getUniformLocation(n,`offset${h}`,d)};t.enableShapeUniforms&&(p.shape=e.getUniformLocation(n,`${h}Shape`,d),p.texShape=e.getUniformLocation(n,`${h}TexShape`,d)),r.push(p)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",d),o=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let h of t.customUniforms)a.push(e.getUniformLocation(n,h.name,d));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function Vk(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function E9(e,t,n,r,a){t.program.enableShapeUniforms||(Vk(t.inShapeInfos,n),Vk([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),H().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let u=n[l],{uniform:d,offset:h,shape:p,texShape:c}=t.variablesLocations[l];if(p){let{uniformShape:m}=n0(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(c&&e.gl.uniform2i(c,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(d,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}continue}u.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,d,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],d=t.customUniformLocations[l],h=a[l];if(u.type==="float")e.gl.uniform1fv(d,h);else if(u.type==="vec2")e.gl.uniform2fv(d,h);else if(u.type==="vec3")e.gl.uniform3fv(d,h);else if(u.type==="vec4")e.gl.uniform4fv(d,h);else if(u.type==="int")e.gl.uniform1iv(d,h);else if(u.type==="ivec2")e.gl.uniform2iv(d,h);else if(u.type==="ivec3")e.gl.uniform3iv(d,h);else if(u.type==="ivec4")e.gl.uniform4iv(d,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}e.executeProgram()}function $9(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:h}=n0(e.packedInputs,i.shape,l),p="",c="",m="";if(d.length===1&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${I[0]>1}_${I[1]>1}`}else if(d.length===2&&!e.packedInputs)c=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!e.packedInputs){let I=w.computeStrides(d);m=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let f=i.shape.length,g=d.length===2&&w.arraysEqual(i.shape,l),y=w.sizeFromShape(i.shape)===1,b=T.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&w.arraysEqual(l,n.texData.texShape),v=e.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${f}_${x}_${u?h:""}_${d.length}_${y}_${b}_${g}_${p}_${c}_${m}_${v}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${H().getNumber("WEBGL_VERSION")}`,s}function hn(e){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var A9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Vd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Km(["r","c","d"],e):Po(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},F9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Vd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Km(["r","c","d"],e):Po(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},D9=class{constructor(e){this.variableNames=["A"],this.outTexUsage=rr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${$E}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},R9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=rr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${$E}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},M9={R:0,G:1,B:2,A:3},Uk=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=In();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${M9[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?t0():e0(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},O9=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?t0():e0(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},ME={};Ee(ME,{bindVertexProgramAttributeStreams:()=>GE,createBufferFromOutputTexture:()=>qE,createFloat16MatrixTexture:()=>BE,createFloat16PackedMatrixTexture:()=>UE,createFloat32MatrixTexture:()=>zE,createIndexBuffer:()=>PE,createPackedMatrixTexture:()=>VE,createUnsignedBytesMatrixTexture:()=>WE,createVertexBuffer:()=>LE,createVertexShader:()=>OE,downloadByteEncodedFloatMatrixFromOutputTexture:()=>XE,downloadFloat32MatrixFromBuffer:()=>KE,downloadMatrixFromPackedOutputTexture:()=>JE,downloadPackedMatrixFromBuffer:()=>ZE,getInternalFormatForFloat16MatrixTexture:()=>a0,getInternalFormatForFloat16PackedMatrixTexture:()=>o0,getInternalFormatForFloat32MatrixTexture:()=>r0,getInternalFormatForPackedMatrixTexture:()=>i0,getInternalFormatForUnsignedBytesMatrixTexture:()=>s0,uploadDenseMatrixToTexture:()=>HE,uploadPixelDataToTexture:()=>jE});function OE(e){let t=In(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return lE(e,n)}function LE(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return hE(e,t)}function PE(e){let t=new Uint16Array([0,1,2,2,1,3]);return cE(e,t)}function Xp(e,t,n,r,a,s){fE(t,n);let i=mE(e),o=e.TEXTURE_2D;return he(e,()=>e.bindTexture(o,i)),he(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),he(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),he(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),he(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),H().getNumber("WEBGL_VERSION")===1?he(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):he(e,()=>e.texStorage2D(o,1,r,t,n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function r0(e){return e.internalFormatFloat}function zE(e,t,n,r){let[a,s]=Kp(t,n);return Xp(e,a,s,r0(r),r.textureFormatFloat,e.FLOAT)}function a0(e){return e.internalFormatHalfFloat}function BE(e,t,n,r){let[a,s]=Kp(t,n);return Xp(e,a,s,a0(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function s0(e){return e.downloadTextureFormat}function WE(e,t,n,r){let[a,s]=Kp(t,n);return Xp(e,a,s,s0(r),e.RGBA,e.UNSIGNED_BYTE)}function i0(e){return e.internalFormatPackedFloat}function VE(e,t,n,r){let[a,s]=Gu(t,n);return Xp(e,a,s,i0(r),e.RGBA,e.FLOAT)}function o0(e){return e.internalFormatPackedHalfFloat}function UE(e,t,n,r){let[a,s]=Gu(t,n);return Xp(e,a,s,o0(r),e.RGBA,r.textureTypeHalfFloat)}function GE(e,t,n){return he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Xb(e,t,"clipSpacePos",n,3,20,0)&&Xb(e,t,"uv",n,2,20,12)}function HE(e,t,n,r,a,s){he(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),H().getNumber("WEBGL_VERSION")===2?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function jE(e,t,n){he(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):H().getNumber("WEBGL_VERSION")===2?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function qE(e,t,n,r){let a=e.createBuffer();he(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return he(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),he(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),he(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function KE(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function XE(e,t,n,r){let[a,s]=Kp(t,n),i=4,o=new Uint8Array(FY(t*n,i));return he(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function ZE(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(DY(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function JE(e,t,n){let r=new Float32Array(t*n*4);return he(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var ac=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,sE(t,e)):this.gl=Dr(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>he(a,()=>a.createVertexArray()),this.bindVertexArray=s=>he(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>he(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>he(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>he(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>he(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>he(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>he(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=vd(this.gl,a),ar(this.gl,s))this.textureHalfFloatExtension=vd(this.gl,s);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ar(this.gl,r))this.colorBufferHalfFloatExtension=vd(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ar(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(ar(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=LE(this.gl),this.indexBuffer=PE(this.gl),this.framebuffer=gE(this.gl),this.textureConfig=Yw(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;he(e,()=>e.finish()),he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),he(e,()=>e.deleteFramebuffer(this.framebuffer)),he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),he(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),zE(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),BE(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),WE(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jE(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),HE(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),UE(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),VE(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Zb(this.gl,this.framebuffer),this.outputTexture=null),he(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>XE(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ZE(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return KE(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=qE(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(H().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>JE(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=OE(t));let n=dE(t);he(t,()=>t.attachShader(n,this.vertexShader)),he(t,()=>t.attachShader(n,e)),pE(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ec(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),GE(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(he(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&ec(this.gl,this.program),he(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?bE(this.gl,e,t):xE(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),he(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vE(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Gu(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ec(this.gl,this.program),wd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}he(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),he(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=vd(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(e){return D(this,null,function*(){return yield w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=L9(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in H().platform&&(n=H().platform.setTimeoutCustom.bind(H().platform)),w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),tc(this.gl,e,this.framebuffer),this.debug&&wd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(tc(this.gl,this.outputTexture,this.framebuffer),this.debug&&wd(this.gl)):Zb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;tc(r,e,this.framebuffer),this.debug&&wd(r),this.outputTexture=e,he(r,()=>r.viewport(0,0,t,n)),he(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),he(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function L9(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:P9,bincountImpl:YE,bincountReduceImpl:z9,bitwiseAndImpl:B9,castImpl:W9,ceilImpl:V9,concatImpl:U9,equalImpl:G9,expImpl:H9,expm1Impl:j9,floorImpl:q9,gatherNdImpl:K9,gatherV2Impl:X9,greaterImpl:Z9,greaterEqualImpl:J9,lessImpl:Y9,lessEqualImpl:Q9,linSpaceImpl:eQ,logImpl:tQ,maxImpl:nQ,maximumImpl:rQ,minimumImpl:aQ,multiplyImpl:sQ,negImpl:iQ,notEqualImpl:oQ,prodImpl:lQ,raggedGatherImpl:uQ,raggedRangeImpl:dQ,raggedTensorToTensorImpl:pQ,rangeImpl:hQ,rsqrtImpl:cQ,scatterImpl:mQ,sigmoidImpl:fQ,simpleAbsImpl:QE,sliceImpl:gQ,sparseFillEmptyRowsImpl:yQ,sparseReshapeImpl:bQ,sparseSegmentReductionImpl:e$,sqrtImpl:xQ,staticRegexReplaceImpl:vQ,stridedSliceImpl:wQ,stringNGramsImpl:kQ,stringSplitImpl:IQ,stringToHashBucketFastImpl:SQ,subImpl:NQ,tileImpl:TQ,topKImpl:_Q,transposeImpl:l0,uniqueImpl:CQ}=Ow;function t$(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function fn(e,t){return t===1?[e]:t$(e,t)}function EQ(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var $Q=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=hn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=fn("rc",this.rank),n=dt(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},n$=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${AQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?t0():e0(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function AQ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?HY(["r","c","d"],"inputShape"):Po(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var FQ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=Hk(t,n),a=jk(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Gk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return r===rn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===rn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===rn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===rn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===rn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=Hk(n,r),s=jk(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Gk(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=H().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function DQ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Gk(e,t,n,r,a){let s=RQ(t,r),i;if(a){let[l,u]=Gu(e[0],e[1]);i=l*u}else{let[l,u]=Kp(e[0],e[1]);i=l*u}let o=DQ(n,s);return i*o}function RQ(e,t){switch(e){case rn.PACKED_2X2_FLOAT32:return i0(t);case rn.PACKED_2X2_FLOAT16:return o0(t);case rn.UNPACKED_FLOAT32:return r0(t);case rn.UNPACKED_FLOAT16:return a0(t);case rn.PACKED_4X1_UNSIGNED_BYTE:return s0(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function MQ(e){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?rn.PACKED_2X2_FLOAT32:rn.UNPACKED_FLOAT32:e?rn.PACKED_2X2_FLOAT16:rn.UNPACKED_FLOAT16}function Hk(e,t){if(e===rr.UPLOAD)return rn.PACKED_2X2_FLOAT32;if(e===rr.RENDER||e==null)return MQ(t);if(e===rr.DOWNLOAD||e===rr.PIXELS)return rn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function jk(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var qr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},wr="if (isnan(x)) return x;",OQ="return x;",qk="return abs(x);",LQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",PQ=wr+`
  return (x < 0.0) ? 0.0 : x;
`,zQ=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Oa="return x;",BQ="return 1.0 / (1.0 + exp(-1.0 * x));",WQ="return x;",VQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,UQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HQ="return 1.0 / (1.0 + exp(-1.0 * x));",Wa=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},jQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let t=e.length,n=fn("rc",t),r=dt(t),a=EQ(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},qQ=ra.whereImpl,KQ=1e-7,XQ=1e-4,Qy={};function ZQ(e){return e in Qy||(Qy[e]={}),Qy[e]}var JQ=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),YQ=600;function QQ(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*YQ/1024/1024}var r$=(()=>{let e=class a$ extends Zd{nextDataId(){return a$.nextDataId++}constructor(n){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let r;if(n!=null){if(n instanceof ac)r=n;else{let a=Dr(H().getNumber("WEBGL_VERSION"),n);r=new ac(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let a=Dr(H().getNumber("WEBGL_VERSION"));r=new ac(a),this.binaryCache=ZQ(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=r,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new FQ(this.gpgpu),this.numMBBeforeWarning=QQ(),this.texData=new Pc(this,mr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(n,r,a,s,i,o){let l=this.makeTensorInfo(r,a),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:n,texShape:[s,i]},u.texShape=[s,i];let d=kd(r),h=new Uk(d,!1,o),p=this.runWebGLProgram(h,[l],a,[[s,i]]);return p.shape=r,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(n,r,a){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(n),a==="complex64"&&n!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:r,dtype:a,values:n,usage:rr.UPLOAD,refCount:1}),s}refCount(n){return this.texData.has(n)?this.texData.get(n).refCount:0}incRef(n){let r=this.texData.get(n);r.refCount++}decRef(n){if(this.texData.has(n)){let r=this.texData.get(n);r.refCount--}}move(n,r,a,s,i){if(H().getBool("DEBUG")&&this.checkNumericalProblems(r),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(n,{shape:a,dtype:s,values:r,usage:rr.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(n){this.disposeData(n.dataId)}readSync(n){let r=this.texData.get(n),{values:a,dtype:s,complexTensorInfos:i,slice:o,shape:l,isPacked:u}=r;if(o!=null){let c;u?c=new Wa(l,Oa):c=new qr(l,Oa);let m=this.runWebGLProgram(c,[{dataId:n,shape:l,dtype:s}],s),f=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(a!=null)return this.convertAndCacheOnCPU(n);if(s==="string")return a;let d=this.activeTimers!=null,h;d&&(h=w.now());let p;if(s==="complex64"){let c=this.readSync(i.real.dataId),m=this.readSync(i.imag.dataId);p=T.mergeRealAndImagArrays(c,m)}else p=this.getValuesFromTexture(n);return d&&(this.downloadWaitMs+=w.now()-h),this.convertAndCacheOnCPU(n,p)}read(n){return D(this,null,function*(){if(this.pendingRead.has(n)){let f=this.pendingRead.get(n);return new Promise(g=>f.push(g))}let r=this.texData.get(n),{values:a,shape:s,slice:i,dtype:o,complexTensorInfos:l,isPacked:u}=r;if(i!=null){let f;u?f=new Wa(s,Oa):f=new qr(s,Oa);let g=this.runWebGLProgram(f,[{dataId:n,shape:s,dtype:o}],o),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(a!=null)return this.convertAndCacheOnCPU(n);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d=null,h;if(o!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(n);let f=this.texData.get(h.dataId);d=this.gpgpu.createBufferFromTexture(f.texture.texture,...Hh(s))}this.pendingRead.set(n,[]),o!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let p;if(o==="complex64"){let f=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),g=f[0],y=f[1];p=T.mergeRealAndImagArrays(g,y)}else if(d==null)p=this.getValuesFromTexture(n);else{let f=w.sizeFromShape(s);p=this.gpgpu.downloadFloat32MatrixFromBuffer(d,f)}if(h!=null&&this.disposeIntermediateTensorInfo(h),d!=null){let f=this.gpgpu.gl;he(f,()=>f.deleteBuffer(d))}let c=this.convertAndCacheOnCPU(n,p),m=this.pendingRead.get(n);return this.pendingRead.delete(n),m.forEach(f=>f(c)),this.pendingDisposal.has(n)&&(this.pendingDisposal.delete(n),this.disposeData(n)&&mr().removeDataId(n,this),this.pendingDeletes--),c})}readToGPU(n,r={}){let a=this.texData.get(n),{values:s,shape:i,slice:o,dtype:l,isPacked:u,texture:d}=a;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let m;u?m=new Wa(i,Oa):m=new qr(i,Oa);let f=this.runWebGLProgram(m,[{dataId:n,shape:i,dtype:l}],l),g=this.readToGPU(f,r);return this.disposeIntermediateTensorInfo(f),g}if(d==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let h=this.decode(n,r.customTexShape),p=mr().makeTensorFromTensorInfo(h),c=this.texData.get(h.dataId);return Object.assign({tensorRef:p},c.texture)}bufferSync(n){let r=this.readSync(n.dataId);if(n.dtype==="string")try{let a=r.map(s=>w.decodeString(s));return Le(n.shape,n.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(n.shape,n.dtype,r)}checkNumericalProblems(n){if(n!=null)for(let r=0;r<n.length;r++){let a=n[r];if(!iE(a))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(n){let{shape:r,dtype:a,isPacked:s}=this.texData.get(n),i=w.sizeFromShape(r);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(n),m=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(m.texture.texture,...Hh(r)).subarray(0,i);return this.disposeIntermediateTensorInfo(c),f}let o=H().getBool("WEBGL_PACK")&&s===!0,l=o?kd(r):r,u=o?new R9(l):new D9(l),d=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:n}],"float32"),h=this.texData.get(d.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(d),p}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(n){let r=this.activeTimers,a=[],s=!1;this.programTimersStack==null?(this.programTimersStack=a,s=!0):this.activeTimers.push(a),this.activeTimers=a,n();let i=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=r,s&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return D(this,null,function*(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(i);l.kernelMs=w.sum(u),l.getExtraProfileInfo=()=>u.map((d,h)=>({name:o[h],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(n){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),n):(n.endMs=w.now(),n)}getQueryTime(n){return D(this,null,function*(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(n);let r=n;return r.endMs-r.startMs})}disposeData(n,r=!1){if(this.pendingDisposal.has(n))return!1;if(!this.texData.has(n))return!0;if(r?this.texData.get(n).refCount=0:this.texData.get(n).refCount--,!r&&this.texData.get(n).refCount>0)return!1;if(this.pendingRead.has(n))return this.pendingDisposal.add(n),this.pendingDeletes++,!1;this.releaseGPUData(n);let{complexTensorInfos:a}=this.texData.get(n);return a!=null&&(this.disposeData(a.real.dataId,r),this.disposeData(a.imag.dataId,r)),this.texData.delete(n),!0}releaseGPUData(n){let{texture:r,dtype:a,texShape:s,usage:i,isPacked:o,slice:l}=this.texData.get(n),u=l&&l.origDataId||n,d=this.dataRefCount.get(u);d>1?this.dataRefCount.set(u,d-1):(this.dataRefCount.delete(u),r!=null&&(this.numBytesInGPU-=this.computeBytes(s,a),this.textureManager.releaseTexture(r,s,i,o)));let h=this.texData.get(n);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(n){return this.uploadToGPU(n),this.texData.get(n).texture.texture}getDataInfo(n){return this.texData.get(n)}shouldExecuteOnCPU(n,r=JQ){return H().getBool("WEBGL_CPU_FORWARD")&&n.every(a=>this.texData.get(a.dataId).texture==null&&w.sizeFromShape(a.shape)<r)}getGPGPUContext(){return this.gpgpu}where(n){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let r=n.dataSync();return qQ(n.shape,r)}packedUnaryOp(n,r,a){let s=new Wa(n.shape,r),i=this.compileAndRun(s,[n],a);return mr().makeTensorFromTensorInfo(i)}abs(n){if(this.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=QE(this.texData.get(n.dataId).values);return this.makeOutput(n.shape,n.dtype,s)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(n,qk,n.dtype);let r=new qr(n.shape,qk),a=this.compileAndRun(r,[n]);return mr().makeTensorFromTensorInfo(a)}makeTensorInfo(n,r,a){let s;if(r==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let i=a.map(o=>w.encodeString(o));s=this.write(i,n,r)}else s=this.write(a,n,r);return this.texData.get(s).usage=null,{dataId:s,shape:n,dtype:r}}makeOutput(n,r,a){return mr().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,a),this)}unpackTensor(n){let r=new jQ(n.shape);return this.runWebGLProgram(r,[n],n.dtype)}packTensor(n){let r=new $Q(n.shape);return this.runWebGLProgram(r,[n],n.dtype,null,!0)}packedReshape(n,r){let a=[ii(n.shape),...oi(n.shape)],s={dtype:n.dtype,shape:a,dataId:n.dataId},i=[ii(r),...oi(r)],o=new n$(i,a),l=!0,u=[a],d=this.runWebGLProgram(o,[s],n.dtype,u,l);return{dataId:d.dataId,shape:r,dtype:d.dtype}}decode(n,r){let a=this.texData.get(n),{isPacked:s,shape:i,dtype:o}=a;if(r!=null){let c=w.sizeFromShape(i),m=r[0]*r[1]*4;w.assert(c<=m,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=kd(i),u;s?u=new F9(l):u=new A9(l);let d=!0,h=[r??Hh(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:o,dataId:n}],o,h,d,r);return{dtype:o,shape:i,dataId:p.dataId}}runWebGLProgram(n,r,a,s,i=!1,o){let l=this.makeTensorInfo(n.outputShape,a),u=this.texData.get(l.dataId);if(n.packedOutput&&(u.isPacked=!0),n.outPackingScheme===Vd.DENSE){let b=o??Hh(n.outputShape);u.texShape=b.map(x=>x*2)}if(n.outTexUsage!=null&&(u.usage=n.outTexUsage),w.sizeFromShape(l.shape)===0)return u.values=w.getTypedArrayFromDType(l.dtype,0),l;let d=[],h=r.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!n.packedInputs&&w.sizeFromShape(b.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};n.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!n.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),d.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!Ud(x.shape,b.shape)){let v=b,I=b.shape;b.shape=x.shape,b=this.packedReshape(b,I),d.push(b),x=this.texData.get(b.dataId),v.shape=I}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(l.dataId);let p={shape:l.shape,texData:u,isUniform:!1},c=$9(n,h,p),m=this.getAndSaveBinary(c,()=>C9(this.gpgpu,n,h,p)),f=this.activeTimers!=null,g;f&&(g=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||E9(this.gpgpu,m,h,p,s),d.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(g=this.endTimer(g),this.activeTimers.push({name:n.constructor.name,query:this.getQueryTime(g)}));let y=H().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){let b=w.now();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){let b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(n,r,a,s,i=!1){return a=a||r[0].dtype,this.runWebGLProgram(n,r,a,s,i)}getAndSaveBinary(n,r){return n in this.binaryCache||(this.binaryCache[n]=r()),this.binaryCache[n]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){let n=H().getBool("DEBUG");H().set("DEBUG",!1);let r=this.abs(we(1e-8)).dataSync()[0];if(H().set("DEBUG",n),r>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?KQ:XQ}uploadToGPU(n){let r=this.texData.get(n),{shape:a,dtype:s,values:i,texture:o,usage:l,isPacked:u}=r;if(o!=null)return;let d=this.activeTimers!=null,h;d&&(h=w.now());let p=r.texShape;if(p==null&&(p=IE(a,u),r.texShape=p),i!=null){let c=kd(a),m,f=p[1],g=p[0],y=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!y)&&([f,g]=Gu(p[0],p[1])),u?m=new O9(c,y):m=new Uk(c,y);let b=y?[g,f]:p,x=this.makeTensorInfo(b,s),v=this.texData.get(x.dataId);y?v.usage=rr.PIXELS:v.usage=rr.UPLOAD,v.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,g,i);let I=[[g,f]],N=this.runWebGLProgram(m,[x],s,I,!0),_=this.texData.get(N.dataId);r.texShape=_.texShape,r.isPacked=_.isPacked,r.usage=_.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(r.texture=_.texture,r.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(x),d&&(this.uploadWaitMs+=w.now()-h)}else{let c=this.acquireTexture(p,l,s,u);r.texture=c}}convertAndCacheOnCPU(n,r){let a=this.texData.get(n),{dtype:s}=a;return r!=null&&(a.values=eee(r,s)),a.values}acquireTexture(n,r,a,s){if(this.numBytesInGPU+=this.computeBytes(n,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(n,r,s)}computeBytes(n,r){return n[0]*n[1]*w.bytesPerElement(r)}checkCompileCompletion(){for(let[,n]of Object.entries(this.binaryCache))this.checkCompletion_(n)}checkCompileCompletionAsync(){return D(this,null,function*(){let n=[];if(this.gpgpu.parallelCompilationExtension){for(let[,r]of Object.entries(this.binaryCache))n.push(this.checkCompletionAsync_(r));return Promise.all(n)}else{for(let[,r]of Object.entries(this.binaryCache)){let a=new Promise(s=>{try{this.checkCompletion_(r),s(!0)}catch(i){throw i}});n.push(a)}return Promise.all(n)}})}checkCompletionAsync_(n){return D(this,null,function*(){return this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(n):(yield Wv(),this.checkCompletionAsync_(n))})}checkCompletion_(n){if(this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(n.webGLProgram)),this.gpgpu.gl.getShaderParameter(n.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Qw(n.source,this.gpgpu.gl.getShaderInfoLog(n.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let n of Object.values(this.binaryCache)){this.gpgpu.buildVao(n.webGLProgram);let{variablesLocations:r,customUniformLocations:a,infLoc:s,nanLoc:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=RE(this.gpgpu,n.program,n.webGLProgram);n.variablesLocations=r,n.customUniformLocations=a,n.infLoc=s,n.nanLoc=i,n.outShapeLocation=o,n.outShapeStridesLocation=l,n.outTexShapeLocation=u}}createTensorFromGPUData(n,r,a){n.channels=n.channels||"RGBA";let{texture:s,height:i,width:o,channels:l}=n,u=mr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let d=u.writeTexture(s,r,a,i,o,l);return mr().makeTensorFromDataId(d,r,a,u)}};return e.nextDataId=0,e})();function eee(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var tee="4.21.0";function s$(){H().set("WEBGL_FORCE_F16_TEXTURES",!0)}kp.isBrowser()&&nm("webgl",()=>new r$,2);var nee={forceHalfFloat:s$},u0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,li=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Bo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Zu=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=hn(a);let s="";if(r)if(a===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${dt(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=fn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Kn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var ree={kernelName:Wi,backendName:"webgl",kernelFunc:Kn};function bs(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Kn({inputs:{x:r},backend:n}),l=Kn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var aee={kernelName:Wc,backendName:"webgl",kernelFunc:bs},i$="return (a < 0.) ? b * a : a;",o$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function see(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zu(o$,a.shape,i.shape):new li(i$,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var iee={kernelName:Hi,backendName:"webgl",kernelFunc:see},l$="return (a < 0.) ? b * a : a;",u$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function oee(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zu(u$,r.shape,a.shape):new li(l$,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var lee={kernelName:oo,backendName:"webgl",kernelFunc:oee},Ju="if (isnan(x)) return x;";function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let h=o.texData.get(i.dataId),p=n(h.values,l);return o.makeTensorInfo(i.shape,l,p)}let u=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,d;return u?d=new Wa(i.shape,t):d=new qr(i.shape,e),o.runWebGLProgram(d,[i],l)}}function on({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(r&&l.dtype==="complex64"){let m=d.texData.get(l.dataId),f=d.texData.get(u.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[v,I]=x,N={dataId:v.dataId,dtype:v.dtype,shape:l.shape},_={dataId:I.dataId,dtype:I.dtype,shape:u.shape},E=new li(e,l.shape,u.shape);return d.runWebGLProgram(E,[N,_],or(v.dtype,I.dtype))}),b=bs({inputs:{real:g,imag:y},backend:d});return d.disposeIntermediateTensorInfo(g),d.disposeIntermediateTensorInfo(y),b}let h=s||or(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([l,u]))&&a!=null){let m=d.texData.get(l.dataId).values,f=d.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(m):m,y=l.dtype==="string"?T.fromUint8ToStringArray(f):f,[b,x]=a(l.shape,u.shape,g,y,h),v=d.makeTensorInfo(x,h),I=d.texData.get(v.dataId);return I.values=b,v}let p=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return p?c=new Zu(t,l.shape,u.shape,n):c=new li(e,l.shape,u.shape),d.runWebGLProgram(c,[l,u],h)}}function Gd(e,t=!1){if(e==="linear")return t?WQ:OQ;if(e==="relu")return t?UQ:PQ;if(e==="elu")return t?VQ:LQ;if(e==="relu6")return t?GQ:zQ;if(e==="prelu")return t?u$:l$;if(e==="leakyrelu")return t?o$:i$;if(e==="sigmoid")return t?HQ:BQ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var d$=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=hn(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${m[0]});
          result += (${c[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Kk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Xk=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Zk="return a * b;";function d0(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=T.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),u=new Xk(Kk.REAL,r.shape,a.shape),d=new Xk(Kk.IMAG,r.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],p=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(d,h,"float32"),m=bs({inputs:{real:p,imag:c},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),m}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[u,d]=sQ(r.shape,a.shape,o.values,l.values,s),h=n.makeTensorInfo(d,s),p=n.texData.get(h.dataId);return p.values=u,h}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Zu(Zk,r.shape,a.shape):i=new li(Zk,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var uee={kernelName:ro,backendName:"webgl",kernelFunc:d0};function dee(e,t,n){let r=[ii(e.shape),...oi(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ii(t),...oi(t)],i=new n$(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function pe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=w.sizeFromShape(a.shape),l=w.inferFromImplicitShape(s,o),u=w.sizeFromShape(l);w.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let d=i.texData.get(a.dataId);return d.isPacked&&!Ud(a.shape,l)&&!(d.texture!==null&&Ud(d.shape,l))?dee(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var pee={kernelName:gu,backendName:"webgl",kernelFunc:pe},Jk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let d=1/t;l=`sumValue += dot(values * ${w.isInt(d)?d.toPrecision(2):d}, ones);`}let u="";a%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},hee=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,d=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function cee(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Wo(e,t,n,r){let a=cee(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:u}=a[i],d,h;n==="mean"?d=i===0?new Jk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Jk({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):d=new hee({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(d,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var mee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=dt(this.rank),a=fee(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function fee(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var gee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=dt(this.rank),a=t$("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Xm(e,t,n){let r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gee(e.shape,t):new mee(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function yee(e,t,n,r){let a=t,s=e.shape.length,i=w.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,d=e;u&&(d=Xm(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=T.computeOutAndReduceShapes(d.shape,o),c=h;n&&(c=T.expandShapeToKeepDim(h,i));let m=w.sizeFromShape(p),f=w.sizeFromShape(e.shape)/m,g=pe({inputs:{x:d},attrs:{shape:[f,m]},backend:r}),y=tm(e.dtype),b=Wo(g,y,"sum",r),x=pe({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(d),x}function Zm(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return yee(a,s,i,n)}var bee={kernelName:No,backendName:"webgl",kernelFunc:Zm};function bn(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=a.shape[s[d]];let u;if(i.shouldExecuteOnCPU([a])){let d=i.texData.get(a.dataId).values,h=l0(d,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype);let p=i.texData.get(u.dataId);p.values=h}else u=Xm(a,s,i);return u}var xee={kernelName:ca,backendName:"webgl",kernelFunc:bn},p$=1e3;function $c({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[d-1]:t.shape[d-2],c=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[d-2]:t.shape[d-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(f),b=w.sizeFromShape(g),x=Ru.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);w.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,h,c]:[y,c,h],I=r?[b,m,p]:[b,p,m],N=pe({inputs:{x:e},backend:a,attrs:{shape:v}}),_=pe({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[N,_],A=Math.max(y,b),R=n?N.shape[1]:N.shape[2],F=s!=null,S=i!=null,O=l==="leakyrelu",B=l!=null?Gd(l,!0):null,G=F||S||O||B!=null,j;if((c===1||m===1)&&R>p$&&G===!1){let X=N,Y=_;n&&(X=bn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),E.push(X)),r&&(Y=bn({inputs:{x:_},backend:a,attrs:{perm:[0,2,1]}}),E.push(Y));let ee=m!==1,te=m===1,ae=X;ee&&(ae=pe({inputs:{x:X},backend:a,attrs:{shape:[A,R,1]}}),E.push(ae));let ne=m===1?2:1,se=Y;te&&(se=pe({inputs:{x:Y},backend:a,attrs:{shape:[A,1,R]}}),E.push(se));let ie=d0({inputs:{a:ae,b:se},backend:a});j=Zm({inputs:{x:ie},backend:a,attrs:{axis:ne,keepDims:!0}}),E.push(ie)}else{let X=or(e.dtype,t.dtype),Y=new d$(v,I,[A,c,m],n,r,F,B,S,O),ee=[N,_];if(s!=null&&ee.push(s),S&&ee.push(i),O){let te=a.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ee.push(te),E.push(te)}j=a.runWebGLProgram(Y,ee,X)}let K=pe({inputs:{x:j},backend:a,attrs:{shape:x}});E.push(j);for(let X of E)a.disposeIntermediateTensorInfo(X);return K}function vee(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return $c({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}var wee={kernelName:qs,backendName:"webgl",kernelFunc:vee},Yk="return abs(x);";function kee(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=QE(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Wa(r.shape,Yk):a=new qr(r.shape,Yk),n.runWebGLProgram(a,[r],r.dtype)}var Iee={kernelName:Fl,backendName:"webgl",kernelFunc:kee},See=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Nee=Ke({opSnippet:See}),Tee={kernelName:hi,backendName:"webgl",kernelFunc:Nee},_ee=wr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Cee=Ke({opSnippet:_ee}),Eee={kernelName:ci,backendName:"webgl",kernelFunc:Cee},Qk="return a + b;",$ee=on({opSnippet:Qk,packedOpSnippet:Qk,supportsComplex:!0,cpuKernelImpl:P9}),Aee={kernelName:os,backendName:"webgl",kernelFunc:$ee},Fee=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},Dee=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function sc(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return Kn({inputs:{x:r[0]},backend:n});if(r.length>H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=sc({inputs:r.slice(0,o),backend:n}),u=sc({inputs:r.slice(o),backend:n});return sc({inputs:[l,u],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>or(o,l)),s=r.map(o=>o.shape),i=H().getBool("WEBGL_PACK")?new Dee(r[0].shape,s):new Fee(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var Ree={kernelName:mi,backendName:"webgl",kernelFunc:sc};function Mee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=bn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Wo(f,f.dtype,"all",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var Oee={kernelName:Dl,backendName:"webgl",kernelFunc:Mee};function Lee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=bn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Wo(f,f.dtype,"any",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var Pee={kernelName:Rl,backendName:"webgl",kernelFunc:Lee},zee=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Bee=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=dt(o),u=fn("coords",o),d,h;if(s===1){h=o+1;let _=dt(h);d=`
        ${_} sourceLocR = ${_}(${u.join()}, 0);
        ++${u[o-1]};
        ${_} sourceLocG = ${_}(${u.join()}, 0);
        ++${u[o-2]};
        ${_} sourceLocA = ${_}(${u.join()}, 0);
        --${u[o-1]};
        ${_} sourceLocB = ${_}(${u.join()}, 0);
        --${u[o-2]};`}else h=o,d=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let p=["x","y","z","w","u","v"].slice(0,h),c="."+p[h-1],m=p.map(_=>"int "+_),f=fn("sourceLocR",h-1).concat("inIdx.r"),g=fn("sourceLocG",h-1).concat("inIdx.g"),y=fn("sourceLocB",h-1).concat("inIdx.b"),b=fn("sourceLocA",h-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function h$(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new zee(o,n,r==null),u=[t];r!=null&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(d.shape[1]===1)return d;let h=h$(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function c$(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new Bee(a,i,n,r==null),l=r==null?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let d=c$(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}return u}function m$(e,t,n,r){let a=[n];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,d]=T.computeOutAndReduceShapes(l.shape,a),h=w.sizeFromShape(d),p=pe({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(p);let c=h$(e,p,r);s.push(c);let m=pe({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}return c$(e,t,r)}function Wee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=m$(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),d}var Vee={kernelName:Ml,backendName:"webgl",kernelFunc:Wee};function Uee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=m$(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),d}var Gee={kernelName:Ol,backendName:"webgl",kernelFunc:Uee},Hee=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,jee=Ke({opSnippet:Hee}),qee={kernelName:fi,backendName:"webgl",kernelFunc:jee},Kee=wr+"return log(x + sqrt(x * x + 1.0));",Xee=Ke({opSnippet:Kee}),Zee={kernelName:gi,backendName:"webgl",kernelFunc:Xee},Jee=wr+`
  return atan(x);
`,Yee=Ke({opSnippet:Jee}),Qee={kernelName:yi,backendName:"webgl",kernelFunc:Yee},ete=u0+`
  return atan(a, b);
`,tte=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bo+`
  return result;
`,nte=on({opSnippet:ete,packedOpSnippet:tte}),rte={kernelName:xi,backendName:"webgl",kernelFunc:nte},ate=wr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ste=Ke({opSnippet:ate}),ite={kernelName:bi,backendName:"webgl",kernelFunc:ste},Hd=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let _=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let v=Math.floor(s/4)*4,I=s%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${x});
      }
    `}},p0=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let N=Math.floor(s/4)*4,_=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function ote(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Hu(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Kn({inputs:{x:a},backend:n});let h=new Hd(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var lte={kernelName:vi,backendName:"webgl",kernelFunc:ote};function ute(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,d,o,l,u),p=new p0(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}var dte={kernelName:Ll,backendName:"webgl",kernelFunc:ute},pte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},hte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,m=h-1-e.padInfo.top,f=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function cte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,h,u,d),c=new hte(p);return n.runWebGLProgram(c,[a],i.dtype)}var mte={kernelName:Qd,backendName:"webgl",kernelFunc:cte};function fte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Hu([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=T.computePool2DInfo(i.shape,o,l,1,u),h=new pte(d);return n.runWebGLProgram(h,[a],i.dtype)}var gte={kernelName:Yd,backendName:"webgl",kernelFunc:fte};function yte(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return $c({a,b:s,transposeA:i,transposeB:o,backend:n})}var bte={kernelName:wi,backendName:"webgl",kernelFunc:yte},xte=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},vte=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},wte=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;w.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[r,a,s],d=null;i!=null&&(d=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));let p=H().getBool("WEBGL_PACK_NORMALIZATION")?new vte(r.shape,a.shape,s.shape,d,h,l):new xte(r.shape,a.shape,s.shape,d,h,l);return t.runWebGLProgram(p,u,u[0].dtype)},kte={kernelName:zi,backendName:"webgl",kernelFunc:wte},Ite=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=dt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Ste(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Qb[i]} = start[${i}] + coords.${Qb[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Qb=["x","y","z","w","u","v"];function Ste(e){if(e===1)return"sourceLoc";if(e<=6)return Qb.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Nte=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=dt(this.rank),n=fn("coords",this.rank),r=fn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${r[d]} = ${n[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function Tte(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Bt.computeFlatOffset(t,w.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function Yu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Bt.parseSliceParams(a,s,i);if(Bt.assertParamsValid(a,o,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=n.texData.get(a.dataId),p=gQ(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,p)}let{isPacked:u}=n.texData.get(a.dataId),d=Bt.isSliceContinous(a.shape,o,l);if(u||!d){let h=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nte(l):new Ite(l),p=[o];return n.runWebGLProgram(h,[a],a.dtype,p)}return n.uploadToGPU(a.dataId),Tte(a,o,l,n)}var _te={kernelName:Iu,backendName:"webgl",kernelFunc:Yu},Cte=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;w.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=[],m=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),f=bn({inputs:{x:m},backend:n,attrs:{perm:u}}),g=pe({inputs:{x:f},backend:n,attrs:{shape:d}}),y=Yu({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(m),c.push(f),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},Ete={kernelName:Pl,backendName:"webgl",kernelFunc:Cte};function $te(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=YE(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var Ate={kernelName:zl,backendName:"webgl",kernelFunc:$te},Fte=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Dte=`
  return float(int(a.r) & int(b.r));
`;function Rte(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=H().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||i===1){let l=n.texData.get(r.dataId).values,u=n.texData.get(a.dataId).values,[d,h]=B9(r.shape,a.shape,l,u,r.dtype),p=n.makeTensorInfo(h,r.dtype),c=n.texData.get(p.dataId);return c.values=d,p}let o;return s?o=new Zu(Fte,r.shape,a.shape,!1):o=new li(Dte,r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}var Mte={kernelName:Bl,backendName:"webgl",kernelFunc:Rte};function Ote(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var Lte={kernelName:ep,backendName:"webgl",kernelFunc:Ote},Pte="return float(a != b);",f$=on({opSnippet:Pte,cpuKernelImpl:oQ,dtype:"bool"}),zte={kernelName:du,backendName:"webgl",kernelFunc:f$};function Zp(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.real},backend:n})}var Bte={kernelName:Qc,backendName:"webgl",kernelFunc:Zp},Wte="return float(int(x));";function Vte(e,t){let n=new qr(e.shape,Wte),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function ex(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Kn({inputs:{x:a},backend:n});let i=It(a.shape),o=ex({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=bs({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=Zp({inputs:{input:a},backend:n}),o=ex({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(a.dtype,s)){let i=Kn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,u]=W9(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}if(s==="int32")return Vte(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=f$({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var Ute={kernelName:ki,backendName:"webgl",kernelFunc:ex},eI="return ceil(x);",Gte=Ke({opSnippet:eI,packedOpSnippet:eI,cpuKernelImpl:V9}),Hte={kernelName:Ii,backendName:"webgl",kernelFunc:Gte},jte=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},qte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Kte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;H().getBool("WEBGL_PACK_CLIP")?o=new qte(a.shape):o=new jte(a.shape);let l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}var Xte={kernelName:ls,backendName:"webgl",kernelFunc:Kte},Zte=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function tI(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Jte(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Zte(r.shape),i=[tI(r,a.complexTensorInfos.real),tI(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var Yte={kernelName:tp,backendName:"webgl",kernelFunc:Jte},Qte=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},ene=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=dt(r),s=fn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let l=i[t],u=i.slice(-2),d=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];h+=`
        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${qh(i,l,f)}),
            vec2(${qh(u,l,f)}));
        }`}let p=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${p}(${qh(i,l,c)}),
          vec2(${qh(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function qh(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function Jm(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Kn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var tne={kernelName:Xc,backendName:"webgl",kernelFunc:Jm};function Id(e,t,n){let r=e[0].dtype;if(r==="complex64"){let c=e.map(b=>Zp({inputs:{input:b},backend:n})),m=e.map(b=>Jm({inputs:{input:b},backend:n})),f=Id(c,t,n),g=Id(m,t,n),y=bs({inputs:{real:f,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),m.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let c=e.map(v=>{let I=[-1,w.sizeFromShape(v.shape.slice(t))];return pe({inputs:{x:v},backend:n,attrs:{shape:I}})}),m=c.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),f=T.computeOutShape(c.map(v=>v.shape),1),g=c[0].shape[0]===1,y=U9(m,f,r,g),b=T.computeOutShape(e.map(v=>v.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}let s=e.filter(c=>w.sizeFromShape(c.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new qr(e[0].shape,Oa):new Wa(e[0].shape,Oa);return n.runWebGLProgram(c,e,r)}let o=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let f=0;f<s.length;f+=o){let g=s.slice(f,f+o);c.push(Id(g,t,n))}let m=Id(c,t,n);for(let f of c)n.disposeIntermediateTensorInfo(f);return m}if(i){let c=new ene(s.map(m=>m.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:l,outShape:u}=nne(s,t,n),d=new Qte(l.map(c=>c.shape)),h=n.runWebGLProgram(d,l,r);l.forEach(c=>n.disposeIntermediateTensorInfo(c));let p=pe({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function nne(e,t,n){let r=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>pe({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function g$(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(u=>u.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(u=>u.shape),s);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>w.sizeFromShape(u.shape)>0);return l.length===1?Kn({inputs:{x:l[0]},backend:n}):Id(l,s,n)}var rne={kernelName:Wl,backendName:"webgl",kernelFunc:g$},y$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",v="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}},ane=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},b$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hn(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<u;f++)h+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<u;f++)h+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(d+1)/2;f++){let g=f*2;if(h+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){let y=s%2===0?w.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(s%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",c="";n&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:p=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${c}
         setOutput(result);
       }
     `}},sne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let{dataFormat:n}=t,r=In(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function Ac(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function x$({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=r.texData.get(e.dataId),d=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,c=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[];if(s!=null){let b=Ac(s.shape,c);b!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=Ac(a.shape,c);b!=null&&(a=pe({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((h===1||p===1)&&d>p$)&&u.isPacked&&c&&u.texture!=null&&l[2]%2!==0&&w.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},v=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Ud(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let I=pe({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let N=$c({a:x,b:I,backend:r,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),_=r.texData.get(N.dataId);w.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=v,_.shape=n.outShape,g=Kn({inputs:{x:N},backend:r}),g.shape=n.outShape,y.push(N)}else{let b=n.outHeight*n.outWidth,x=pe({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),v=pe({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=$c({a:c?x:v,b:c?v:x,transposeA:!c,transposeB:f,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=pe({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(v),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function v$({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:h,outHeight:p,dataFormat:c}=n,m=c==="channelsLast",f=l*u*d,g=p*h,y=[n.batchSize,f,g],b=!0,x=!1,v=[];if(s!=null){let X=Ac(s.shape,m);X!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:X}}),v.push(s))}if(a!=null){let X=Ac(a.shape,m);X!=null&&(a=pe({inputs:{x:a},backend:r,attrs:{shape:X}}),v.push(a))}let I=pe({inputs:{x:t},backend:r,attrs:{shape:[1,f,w.sizeFromShape(t.shape)/f]}});v.push(I);let N=new sne(y,n),_=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[e],"float32",_),A=pe({inputs:{x:E},backend:r,attrs:{shape:y}});v.push(E),v.push(A);let R=a!=null,F=s!=null,S=o==="leakyrelu",O=o?Gd(o,!0):null,B=new d$(m?A.shape:I.shape,m?I.shape:A.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,R,O,F,S),G=m?[A,I]:[I,A];if(a&&G.push(a),F&&G.push(s),S){let X=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));G.push(X),v.push(X)}let j=r.runWebGLProgram(B,G,"float32"),K=pe({inputs:{x:j},backend:r,attrs:{shape:n.outShape}});v.push(j);for(let X of v)r.disposeIntermediateTensorInfo(X);return K}function ine(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r,h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))c=x$({x:a,filter:s,convInfo:p,backend:n});else if(p.strideWidth<=2&&h==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let f=new b$(p),g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];c=n.runWebGLProgram(f,[a,s],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))c=v$({x:a,filter:s,convInfo:p,backend:n});else{let f=new y$(p);c=n.runWebGLProgram(f,[a,s],"float32")}let m=pe({inputs:{x:c},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(c),m}var one={kernelName:Si,backendName:"webgl",kernelFunc:ine},lne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},une=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},dne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),c=new lne(p);return n.runWebGLProgram(c,[a,s],"float32")}var cne={kernelName:Vc,backendName:"webgl",kernelFunc:hne},mne=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=hn(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function fne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=T.convertConv2DDataFormat(u),p=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h);if(H().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){let c=[[p.strideHeight,p.strideWidth]],m=new mne(p);return n.runWebGLProgram(m,[a,s],"float32",c)}else{let c=new une(p);return n.runWebGLProgram(c,[a,s],"float32")}}var gne={kernelName:Ni,backendName:"webgl",kernelFunc:fne};function yne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new ane(u);return n.runWebGLProgram(d,[a,s],"float32")}var bne={kernelName:Ti,backendName:"webgl",kernelFunc:yne};function xne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=T.computeConv3DInfo(a.shape,l,i,1,o),d=new dne(u);return n.runWebGLProgram(d,[a,s],"float32")}var vne={kernelName:Vl,backendName:"webgl",kernelFunc:xne};function wne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=T.computeConv3DInfo(l,s.shape,o,1,i),d=new pne(u);return n.runWebGLProgram(d,[a,s],"float32")}var kne={kernelName:Ul,backendName:"webgl",kernelFunc:wne},Ine=Ju+`
  return cos(x);
`,Sne=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Bo}
  return result;
`,Nne=Ke({opSnippet:Ine,packedOpSnippet:Sne}),Tne={kernelName:_i,backendName:"webgl",kernelFunc:Nne},_ne=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Cne=Ke({opSnippet:_ne}),Ene={kernelName:Ci,backendName:"webgl",kernelFunc:Cne},$ne=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,h]=n;this.outputShape=[u,d,h,l];let p=r==="bilinear"?1:0,[c,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Ane=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new $ne(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")},Fne={kernelName:Hl,backendName:"webgl",kernelFunc:Ane},jd;(function(e){e.Prod="*",e.Sum="+"})(jd||(jd={}));var nI=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===jd.Prod?"1.0":"0.0",i=n?s:`getX(${rI(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?`end != ${o-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${dt(a)} coords = getOutputCoords();
        int end = ${aI(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${aI(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${rI(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function rI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function aI(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function w$(e,t,n,r,a,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=bn({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let d=l.shape[u],h=Kn({inputs:{x:l},backend:n});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){let c=new nI(e,l.shape,!1,s),m=[[p]],f=h;h=n.runWebGLProgram(c,[h],h.dtype,m),n.disposeIntermediateTensorInfo(f)}if(a){let p=new nI(e,l.shape,a,s),c=h;h=n.runWebGLProgram(p,[h],h.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let p=T.getUndoAxesPermutation(o),c=bn({inputs:{x:h},backend:n,attrs:{perm:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),c}return h}function Dne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return w$(jd.Prod,a,n,s,i,o)}var Rne={kernelName:Gl,backendName:"webgl",kernelFunc:Dne};function Mne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return w$(jd.Sum,a,n,s,i,o)}var One={kernelName:Ei,backendName:"webgl",kernelFunc:Mne};function Lne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=YE(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,d)}else if(a.shape.length===2){let l=n.bufferSync(a),u=n.bufferSync(s),d=z9(l,u,i,o);return n.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var Pne={kernelName:np,backendName:"webgl",kernelFunc:Lne},zne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Bne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],d=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,p=u*s,c=d/(s*s),m=i==="NHWC"?[o,h,p,c]:[o,c,h,p],f=new zne(m,s,i);return n.runWebGLProgram(f,[a],a.dtype)}var Wne={kernelName:jl,backendName:"webgl",kernelFunc:Bne},k$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}},I$=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<d;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<d)){let b=i%2===0?w.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<d&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<d&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<d&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let c="",m="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,m="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${m}
        setOutput(result);
      }
    `}};function Vne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;d==null&&(d=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=T.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),p;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?p=new I$(h):p=new k$(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}var Une={kernelName:$i,backendName:"webgl",kernelFunc:Vne},Gne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Hne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=T.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new Gne(h);return n.runWebGLProgram(p,[a,s],"float32")}var qne={kernelName:Uc,backendName:"webgl",kernelFunc:jne};function Kne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new Hne(h);return n.runWebGLProgram(p,[a,s],"float32")}var Xne={kernelName:Gc,backendName:"webgl",kernelFunc:Kne},Zne=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Jne(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=pe({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Zne(s),l=n.runWebGLProgram(o,[i],i.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var Yne={kernelName:rp,backendName:"webgl",kernelFunc:Jne},Qne=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function ere(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),d,h=new Qne(u);d=n.runWebGLProgram(h,[a,s],"float32");let p=pe({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}var tre={kernelName:Ai,backendName:"webgl",kernelFunc:ere};function nre(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,m=[];for(let f=0;f<h;++f){for(let g of d[f]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=bn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=pe({inputs:{x},backend:n,attrs:{shape:v}}),m.push(x)),p===null?p=x:(p=d0({inputs:{a:x,b:p},backend:n}),m.push(p))}f<h-1&&(u[f]>=0&&(p=Zm({inputs:{x:p},backend:n,attrs:{axis:u[f]-(i.length-c),keepDims:!1}}),m.push(p)),c--)}for(let f of m)f!==p&&n.disposeIntermediateTensorInfo(f);return p}var rre={kernelName:jc,backendName:"webgl",kernelFunc:nre},are="return (x >= 0.0) ? x : (exp(x) - 1.0);",sre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ire=Ke({opSnippet:are,packedOpSnippet:sre}),ore={kernelName:Di,backendName:"webgl",kernelFunc:ire},lre="return (b >= 0.0) ? a : a * (b + 1.0);",ure=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,dre=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zu(ure,r.shape,a.shape):new li(lre,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},pre={kernelName:ql,backendName:"webgl",kernelFunc:dre},hre=`
  return vec4(equal(a, b));
`,cre="return float(a == b);",mre=on({opSnippet:cre,packedOpSnippet:hre,dtype:"bool",cpuKernelImpl:G9}),fre={kernelName:Kl,backendName:"webgl",kernelFunc:mre},gre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,yre=Ke({opSnippet:gre}),bre={kernelName:Ri,backendName:"webgl",kernelFunc:yre},xre=Ju+`
  return exp(x);
`,vre=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,S$=Ke({opSnippet:xre,packedOpSnippet:vre,cpuKernelImpl:H9,dtype:"float32"}),wre={kernelName:Mi,backendName:"webgl",kernelFunc:S$};function tx(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),pe({inputs:{x:s},backend:r,attrs:{shape:o}})}var kre={kernelName:Xl,backendName:"webgl",kernelFunc:tx},sI="return exp(x) - 1.0;",Ire=Ke({opSnippet:sI,packedOpSnippet:sI,cpuKernelImpl:j9}),Sre={kernelName:Oi,backendName:"webgl",kernelFunc:Ire},iI=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function N$(e,t,n){let r=n.texData.get(e.dataId),a=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=pe({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new iI("real",l,t),d=new iI("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(d,h,"float32"),m=bs({inputs:{real:p,imag:c},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c);let f=pe({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function Nre(e){let{inputs:t,backend:n}=e,{input:r}=t;return N$(r,!1,n)}var Tre={kernelName:qc,backendName:"webgl",kernelFunc:Nre},_re=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Jp(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||w.inferDtype(a),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new _re(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var Cre={kernelName:ap,backendName:"webgl",kernelFunc:Jp},Ere=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},$re={kernelName:Zl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new Ere(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},oI="return floor(x);",Are=Ke({opSnippet:oI,packedOpSnippet:oI,cpuKernelImpl:q9}),Fre={kernelName:Li,backendName:"webgl",kernelFunc:Are},Dre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Rre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Mre=on({opSnippet:Dre,packedOpSnippet:Rre,dtype:"int32"}),Ore={kernelName:Pi,backendName:"webgl",kernelFunc:Mre},Lre=class{constructor(e){this.variableNames=["A"];let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Pre=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},zre={kernelName:uc,backendName:"webgl",kernelFunc:Bre},tl,eb=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Bre(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],h=[u,l,s];if(o||i){let f=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(tl==null||f!==eb)&&(eb=f,tl=document.createElement("canvas").getContext("2d",{willReadFrequently:eb})),tl.canvas.width=l,tl.canvas.height=u,tl.drawImage(a,0,0,l,u),a=tl.canvas}let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=rr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let c=H().getBool("WEBGL_PACK")?new Pre(h):new Lre(h),m=n.runWebGLProgram(c,[p],"int32");return n.disposeData(p.dataId),m}function Wre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=r,f=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(a.shape,s.shape,l,h,u,p,!1,f),y,b=[],x=i!=null,v=o!=null,I=c==="leakyrelu",N=()=>{let E=[a,s],A=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let S=pe({inputs:{x:R},backend:n,attrs:{shape:[R.shape[0],1,1]}});return b.push(S),S}return R};if(x&&E.push(A(i,d)),v&&E.push(A(o,d)),I){let R=n.makeTensorInfo([],"float32",w.createScalarValue(m,"float32"));E.push(R),b.push(R)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=x$({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&f==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let E=c?Gd(c,!0):null,A=new b$(g,x,E,v,I),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=N();y=n.runWebGLProgram(A,F,"float32",R)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=v$({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let E=c?Gd(c,!1):null,A=new y$(g,x,E,v,I),R=N();y=n.runWebGLProgram(A,R,"float32")}let _=pe({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),_}var Vre={kernelName:Ks,backendName:"webgl",kernelFunc:Wre};function Ure(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,m=[],f=d;f==null&&(f=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=p?Gd(p,y):null,x=[a,s],v=i!=null,I=o!=null,N=p==="leakyrelu";if(v&&x.push(i),I&&x.push(o),N){let R=n.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(R),m.push(R)}let _;y?_=new I$(g,v,b,I,N):_=new k$(g,v,b,I,N);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(_,x,"float32",E);return m.forEach(R=>n.disposeIntermediateTensorInfo(R)),A}var Gre={kernelName:Xs,backendName:"webgl",kernelFunc:Ure},Hre=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=dt(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function jre(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,h]=T.prepareAndValidate(r,a),p=pe({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=pe({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=K9(y,b,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let m=new Hre(i,h,[u,d],r.shape),f=n.runWebGLProgram(m,[c,p],c.dtype),g=pe({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}var qre={kernelName:Yl,backendName:"webgl",kernelFunc:jre},Kre=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=dt(this.rank),r=Xre(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Xre(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function T$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0];if(H().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let v=0;v<b.length;++v){let I=b[v];w.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=w.sizeFromShape(s.shape),h=[],p=pe({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=pe({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(p),v=X9(x,b,m);return h.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}let f=new Kre(p.shape,m),g=n.runWebGLProgram(f,[p,c],p.dtype);h.push(g);let y=pe({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Zre={kernelName:Jl,backendName:"webgl",kernelFunc:T$},Jre="return float(a > b);",Yre=`
  return vec4(greaterThan(a, b));
`,Qre=on({opSnippet:Jre,packedOpSnippet:Yre,cpuKernelImpl:Z9,dtype:"bool"}),eae={kernelName:Ql,backendName:"webgl",kernelFunc:Qre},tae="return float(a >= b);",nae=`
  return vec4(greaterThanEqual(a, b));
`,rae=on({opSnippet:tae,packedOpSnippet:nae,dtype:"bool",cpuKernelImpl:J9}),aae={kernelName:Bi,backendName:"webgl",kernelFunc:rae};function sae(e){let{inputs:t,backend:n}=e,{input:r}=t;return N$(r,!0,n)}var iae={kernelName:Kc,backendName:"webgl",kernelFunc:sae},oae="return float(!isnan(x) && !isinf(x));",lae=Ke({opSnippet:oae,dtype:"bool"}),uae={kernelName:Vi,backendName:"webgl",kernelFunc:lae},dae="return float(isinf(x));",pae=Ke({opSnippet:dae,dtype:"bool"}),hae={kernelName:Ui,backendName:"webgl",kernelFunc:pae},cae="return float(isnan(x));",mae=Ke({opSnippet:cae,dtype:"bool"}),fae={kernelName:Gi,backendName:"webgl",kernelFunc:mae},gae="return float(a < b);",yae=`
  return vec4(lessThan(a, b));
`,bae=on({opSnippet:gae,packedOpSnippet:yae,cpuKernelImpl:Y9,dtype:"bool"}),xae={kernelName:eu,backendName:"webgl",kernelFunc:bae},vae="return float(a <= b);",wae=`
  return vec4(lessThanEqual(a, b));
`,kae=on({opSnippet:vae,packedOpSnippet:wae,cpuKernelImpl:Q9,dtype:"bool"}),Iae={kernelName:tu,backendName:"webgl",kernelFunc:kae};function Sae(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=eQ(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var Nae={kernelName:nu,backendName:"webgl",kernelFunc:Sae},Tae=Ju+`
  return x < 0.0 ? 0./0. : log(x);
`,_ae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Cae=Ke({opSnippet:Tae,packedOpSnippet:_ae,cpuKernelImpl:tQ}),Eae={kernelName:ji,backendName:"webgl",kernelFunc:Cae},$ae=Ju+`
  return log(1.0 + x);
`,Aae=Ke({opSnippet:$ae}),Fae={kernelName:qi,backendName:"webgl",kernelFunc:Aae},Dae="return float(a >= 1.0 && b >= 1.0);",Rae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Mae=on({opSnippet:Dae,packedOpSnippet:Rae,dtype:"bool"}),Oae={kernelName:ru,backendName:"webgl",kernelFunc:Mae},Lae="return float(!(x >= 1.0));",Pae=Ke({opSnippet:Lae}),zae={kernelName:au,backendName:"webgl",kernelFunc:Pae},Bae="return float(a >= 1.0 || b >= 1.0);",Wae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Vae=on({opSnippet:Bae,packedOpSnippet:Wae,dtype:"bool"}),Uae={kernelName:su,backendName:"webgl",kernelFunc:Vae},Gae=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},Hae=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},jae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=H().getBool("WEBGL_PACK_NORMALIZATION")?new Hae(a.shape,s,i,o,l):new Gae(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},qae={kernelName:Ki,backendName:"webgl",kernelFunc:jae},Kae=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Xae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new Kae(a.shape,o,l,u,d);return n.runWebGLProgram(h,[a,s,i],a.dtype)},Zae={kernelName:iu,backendName:"webgl",kernelFunc:Xae};function Jae(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=pe({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Wo(i,e.dtype,"max",r),l=pe({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function _$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=d!=null,p=n.shouldExecuteOnCPU([a]),c=a;if(h){if(p){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let N=0;N<x.length;N++)x[N]=a.shape[d[N]];let v=l0(b,a.shape,a.dtype,d,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=v}else c=Xm(a,d,n);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[m,f]=T.computeOutAndReduceShapes(c.shape,u),g=m;i&&(g=T.expandShapeToKeepDim(m,l));let y;if(p){let b=n.texData.get(c.dataId).values,x=nQ(b,w.sizeFromShape(f),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let v=n.texData.get(y.dataId);v.values=x}else y=Jae(c,f,g,n);return h&&n.disposeIntermediateTensorInfo(c),y}var Yae={kernelName:Xi,backendName:"webgl",kernelFunc:_$},Qae=u0+`
  return max(a, b);
`,ese=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bo+`
  return result;
`,tse=on({opSnippet:Qae,packedOpSnippet:ese,cpuKernelImpl:rQ}),nse={kernelName:Zi,backendName:"webgl",kernelFunc:tse};function rse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Hu(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&w.arraysEqual(d.inShape,d.outShape))return Kn({inputs:{x:a},backend:n});let h=new Hd(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var ase={kernelName:Ji,backendName:"webgl",kernelFunc:rse};function sse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,d,o,u,l),p=new p0(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}var ise={kernelName:ou,backendName:"webgl",kernelFunc:sse},ose=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},lse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function use(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,h,u,d),c=new p0(p,"max",!0),m=n.runWebGLProgram(c,[i],i.dtype),f=new lse(p),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var dse={kernelName:ip,backendName:"webgl",kernelFunc:use};function pse(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Hu([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=T.computePool2DInfo(o.shape,l,u,1,d,h),c=!0,m=new Hd(p,"max",c),f=n.runWebGLProgram(m,[o],o.dtype),g=new ose(p),y=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var hse={kernelName:sp,backendName:"webgl",kernelFunc:pse};function cse(e,t,n,r){let a=new Hd(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new Hd(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var mse={kernelName:op,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,a,s,u,i),[h,p]=cse(r,o,d,l);return[h,p]}};function fse(e,t,n,r){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=pe({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Wo(i,"float32","mean",r),l=pe({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var gse={kernelName:Yi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=w.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),h=d!=null,p=i.shouldExecuteOnCPU([r]),c=[],m=r;if(h){if(p){let x=i.texData.get(m.dataId).values,v=new Array(o);for(let _=0;_<v.length;_++)v[_]=r.shape[d[_]];let I=l0(x,r.shape,r.dtype,d,v);m=i.makeTensorInfo(v,r.dtype);let N=i.texData.get(m.dataId);N.values=I}else m=Xm(r,d,i);c.push(m),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[f,g]=T.computeOutAndReduceShapes(m.shape,u),y=f;a&&(y=T.expandShapeToKeepDim(f,l));let b=fse(m,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function yse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,d=T.getAxesPermutation(u,o),h=a;d!=null&&(h=bn({inputs:{x:a},backend:n,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[p,c]=T.computeOutAndReduceShapes(h.shape,u),m=w.sizeFromShape(c),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=Wo(f,f.dtype,"min",n),y;if(i){let b=T.expandShapeToKeepDim(p,l);y=pe({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=pe({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),d!=null&&n.disposeIntermediateTensorInfo(h),y}var bse={kernelName:Qi,backendName:"webgl",kernelFunc:yse},xse=u0+`
  return min(a, b);
`,vse=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bo+`
  return result;
`,wse=on({opSnippet:xse,packedOpSnippet:vse,cpuKernelImpl:aQ}),kse={kernelName:eo,backendName:"webgl",kernelFunc:wse},Ise=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);let r=e.length,a=dt(r),s=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Sse=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,m)=>c[0]+e[m]+c[1]);let r=e.length,a=dt(r),s=t.map(c=>c[0]).join(","),i=t.map((c,m)=>c[0]+e[m]).join(","),o=fn("rc",r),l=fn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=n==="reflect"?0:1,p="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${o[r-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},Nse=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sse(r.shape,a,s):new Ise(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},Tse={kernelName:to,backendName:"webgl",kernelFunc:Nse},_se=`if (b == 0.0) return NAN;
  return mod(a, b);`,Cse=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Bo+`
  return result;
`,Ese=on({opSnippet:_se,packedOpSnippet:Cse}),$se={kernelName:no,backendName:"webgl",kernelFunc:Ese},Ase=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Fse=`
if (a == b) {
  return 1.0;
};
return a / b;`,Dse=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,C$=on({opSnippet:Fse,packedOpSnippet:Dse,checkOutOfBounds:!0}),Rse={kernelName:Fi,backendName:"webgl",kernelFunc:C$},lI="return a - b;",E$=on({opSnippet:lI,packedOpSnippet:lI,supportsComplex:!0,cpuKernelImpl:NQ}),Mse={kernelName:Co,backendName:"webgl",kernelFunc:E$};function $$(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=w.parseAxisParam([s],a.shape),o=_$({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=pe({inputs:{x:o},backend:n,attrs:{shape:l}}),d=E$({inputs:{a,b:u},backend:n}),h=S$({inputs:{x:d},backend:n}),p=Zm({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=pe({inputs:{x:p},backend:n,attrs:{shape:l}}),m=C$({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),m}var Ose={kernelName:To,backendName:"webgl",kernelFunc:$$};function Lse(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:$$({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new Ase(u,d,s),p=[[i]],c=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),c}var Pse={kernelName:lu,backendName:"webgl",kernelFunc:Lse},zse=wr+`
  return -x;
`,Bse=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Wse(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=iQ(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Wa(r.shape,Bse):a=new qr(r.shape,zse),n.runWebGLProgram(a,[r],r.dtype)}var Vse={kernelName:uu,backendName:"webgl",kernelFunc:Wse},Use=ra.nonMaxSuppressionV3Impl;function Gse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Use(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Hse={kernelName:pu,backendName:"webgl",kernelFunc:Gse},jse=ra.nonMaxSuppressionV4Impl;function qse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=jse(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Kse={kernelName:hu,backendName:"webgl",kernelFunc:qse},Xse=ra.nonMaxSuppressionV5Impl;function Zse(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=Xse(d,h,p,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Jse={kernelName:cu,backendName:"webgl",kernelFunc:Zse},Yse=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Qse=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=w.sizeFromShape(a.shape),d=new Yse(u,i,o,l),h=pe({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);let c=[...a.shape,i],m=pe({inputs:{x:p},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),m},eie={kernelName:ao,backendName:"webgl",kernelFunc:Qse};function Fc(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=Zp({inputs:{input:r},backend:n}),s=Fc({inputs:{x:a},backend:n}),i=Jm({inputs:{input:r},backend:n}),o=Fc({inputs:{x:i},backend:n}),l=bs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jp({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var tie={kernelName:Fu,backendName:"webgl",kernelFunc:Fc};function A$(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=Zp({inputs:{input:r},backend:n}),s=A$({inputs:{x:a},backend:n}),i=Jm({inputs:{input:r},backend:n}),o=Fc({inputs:{x:i},backend:n}),l=bs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Jp({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var nie={kernelName:mu,backendName:"webgl",kernelFunc:A$};function rie(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return tx({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=tx({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=g$({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var aie={kernelName:fu,backendName:"webgl",kernelFunc:rie},sie=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,a=dt(r),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},iie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let r=e.length,a=dt(r),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=fn("rc",r),l=fn("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let m=0,f=r===1?2:4;m<f;m++)c+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${d});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},F$=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(w.sizeFromShape(a.shape)===0){let u=s.map((d,h)=>d[0]+a.shape[h]+d[1]);return Jp({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}let o=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iie(a.shape,s,i):new sie(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},oie={kernelName:so,backendName:"webgl",kernelFunc:F$},lie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,uie=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Bo+`
  return result;
`,die=on({opSnippet:lie,packedOpSnippet:uie}),pie={kernelName:io,backendName:"webgl",kernelFunc:die};function hie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=w.parseAxisParam(s,a.shape),d=u,h=T.getAxesPermutation(d,o),p=a;h!=null&&(p=bn({inputs:{x:a},backend:n,attrs:{perm:h}}),d=T.getInnerMostAxes(d.length,o),l.push(p)),T.assertAxesAreInnerMostDims("prod",d,o);let c;if(n.shouldExecuteOnCPU([p])){let m=n.texData.get(p.dataId).values,{outVals:f,outShape:g,outDtype:y}=lQ(p.shape,p.dtype,m,d);c=n.makeTensorInfo(g,y,f)}else{let[m,f]=T.computeOutAndReduceShapes(p.shape,d),g=w.sizeFromShape(f),y=pe({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),b=tm(a.dtype),x=Wo(y,b,"prod",n);c=pe({inputs:{x},backend:n,attrs:{shape:m}}),l.push(y),l.push(x)}if(i){l.push(c);let m=T.expandShapeToKeepDim(c.shape,u);c=pe({inputs:{x:c},backend:n,attrs:{shape:m}})}return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var cie={kernelName:lo,backendName:"webgl",kernelFunc:hie};function mie(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),u=a.map(y=>y.shape),d=n.readSync(s.dataId),h=n.readSync(i.dataId),[p,c,m]=uQ(l,u,d,s.shape,s.dtype,h,i.shape,o),f=p.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var fie={kernelName:Zc,backendName:"webgl",kernelFunc:mie};function gie(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=dQ(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),p=n.makeTensorInfo([d.length],r.dtype,d);return[h,p]}var yie={kernelName:Jc,backendName:"webgl",kernelFunc:gie};function bie(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[m,f]=pQ(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(m,s.dtype,f)}var xie={kernelName:Yc,backendName:"webgl",kernelFunc:bie},D$=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=hQ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},vie={kernelName:lp,backendName:"webgl",kernelFunc:D$},wie="return 1.0 / x;",kie=Ke({opSnippet:wie}),Iie={kernelName:uo,backendName:"webgl",kernelFunc:kie},Sie=wr+`
  return (x < 0.0) ? 0.0 : x;
`,Nie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tie=Ke({opSnippet:Sie,packedOpSnippet:Nie}),_ie={kernelName:po,backendName:"webgl",kernelFunc:Tie},Cie=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Eie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$ie=Ke({opSnippet:Cie,packedOpSnippet:Eie}),Aie={kernelName:mo,backendName:"webgl",kernelFunc:$ie},Fie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Die=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Rie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Die(a.shape,l,u,s,i):new Fie(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}var Mie={kernelName:co,backendName:"webgl",kernelFunc:Rie},Oie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Lie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Oie(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Pie={kernelName:bu,backendName:"webgl",kernelFunc:Lie},zie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",p;a?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Bie=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",p;a?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Wie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Bie(a.shape,l,u,s,i):new zie(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}var Vie={kernelName:ho,backendName:"webgl",kernelFunc:Wie},Uie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Gie(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Uie(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Hie={kernelName:yu,backendName:"webgl",kernelFunc:Gie},jie=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=dt(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},qie=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=fn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=dt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${u(r.slice())};
            if(${a}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",h(c)}function u(c){return c[n-2]="("+c[n-2]+" + 1)",h(c)}function d(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",h(c)}function h(c){let m=e.map((y,b)=>p(b,c)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function p(c,m){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${m[c]} - 1`:`${m[c]}`}}};function Kie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Kn({inputs:{x:a},backend:n});let l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qie(a.shape,o):new jie(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var Xie={kernelName:fo,backendName:"webgl",kernelFunc:Kie},Zie=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Jie={kernelName:Du,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new Zie(r.shape,s),[u,d]=T.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,d,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},Yie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Qie=Ke({opSnippet:Yie}),eoe={kernelName:go,backendName:"webgl",kernelFunc:Qie},toe="return inversesqrt(x);",noe=Ke({opSnippet:toe,cpuKernelImpl:cQ}),roe={kernelName:yo,backendName:"webgl",kernelFunc:noe},h0=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=dt(a.length),u=dt(s.length),d="";n===1?d="i":n===2&&(d="i, j");let h=`getIndices(${d})`,p="";r===1?p="i":r===2&&(p="i, coords[1]");let c=`getUpdates(${p})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},aoe=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=dt(a.length),u=dt(s.length),d="";n===1?d="i":n===2&&(d="i, j");let h=`getIndices(${d})`,p="";r===1?p="i":r===2&&(p="i, coords[1]");let c=`getUpdates(${p})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}};function soe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(s,a,i),p=[h/u,u];if(h===0)return n.makeTensorInfo(i,a.dtype);let c=pe({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=pe({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;H().getBool("WEBGL_PACK")?g=new aoe(l,o,c.shape.length,m.shape.length,d,p):g=new h0(l,o,c.shape.length,m.shape.length,d,p);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=pe({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var ioe={kernelName:xu,backendName:"webgl",kernelFunc:soe},ooe=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function loe(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new ooe(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var uoe={kernelName:wu,backendName:"webgl",kernelFunc:loe},doe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);r=o.join(),a=l.join()}let s=dt(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function poe(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new doe(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],or(a.dtype,s.dtype))}var hoe={kernelName:ku,backendName:"webgl",kernelFunc:poe},coe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,moe=Ke({opSnippet:coe}),foe={kernelName:bo,backendName:"webgl",kernelFunc:moe},goe=Ju+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,yoe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,boe=Ke({opSnippet:goe,packedOpSnippet:yoe,cpuKernelImpl:fQ}),xoe={kernelName:ko,backendName:"webgl",kernelFunc:boe},voe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,woe=Ke({opSnippet:voe}),koe={kernelName:wo,backendName:"webgl",kernelFunc:woe},Ioe=Ju+`
  return sin(x);
`,Soe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Bo}
  return result;
`,Noe=Ke({opSnippet:Ioe,packedOpSnippet:Soe}),Toe={kernelName:xo,backendName:"webgl",kernelFunc:Noe},_oe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Coe=Ke({opSnippet:_oe}),Eoe={kernelName:vo,backendName:"webgl",kernelFunc:Coe},$oe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Aoe=Ke({opSnippet:$oe}),Foe={kernelName:Io,backendName:"webgl",kernelFunc:Aoe},Doe=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;w.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],d=F$({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(d.shape,s,o,!1),p=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(d.shape,s,o,!1),m=pe({inputs:{x:d},backend:n,attrs:{shape:h}}),f=bn({inputs:{x:m},backend:n,attrs:{perm:p}}),g=pe({inputs:{x:f},backend:n,attrs:{shape:c}});return u.push(d),u.push(m),u.push(f),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Roe={kernelName:Su,backendName:"webgl",kernelFunc:Doe};function Moe(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[h,p,c,m,f]=yQ(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var Ooe={kernelName:up,backendName:"webgl",kernelFunc:Moe};function Loe(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,h]=bQ(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var Poe={kernelName:Tu,backendName:"webgl",kernelFunc:Loe};function zoe(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=e$(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}var Boe={kernelName:dp,backendName:"webgl",kernelFunc:zoe};function Woe(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=e$(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}var Voe={kernelName:pp,backendName:"webgl",kernelFunc:Woe};function Uoe(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=w.decodeString(n.readSync(i.dataId)[0]),v=mQ(y,b,o,p,d,u,l,h,x,c);return n.makeTensorInfo(o,v.dtype,v.values)}let m=new h0(u,l,a.shape.length,s.shape.length,h,[p,1],c),f=n.runWebGLProgram(m,[s,a,i],s.dtype),g=pe({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}var Goe={kernelName:_u,backendName:"webgl",kernelFunc:Uoe};function Hoe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map(p=>{let c=[...h];c[o]=p;let m=Yu({inputs:{x:a},backend:n,attrs:{begin:d,size:c}});return d[o]+=p,m})}var joe={kernelName:Nu,backendName:"webgl",kernelFunc:Hoe},uI="return sqrt(x);",qoe=Ke({opSnippet:uI,packedOpSnippet:uI,cpuKernelImpl:xQ}),Koe={kernelName:So,backendName:"webgl",kernelFunc:qoe},Xoe="return x * x;",Zoe=Ke({opSnippet:Xoe}),Joe={kernelName:hp,backendName:"webgl",kernelFunc:Zoe},dI="return (a - b) * (a - b);",Yoe=on({opSnippet:dI,packedOpSnippet:dI}),Qoe={kernelName:_o,backendName:"webgl",kernelFunc:Yoe};function ele(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=T.fromUint8ToStringArray(s),o=vQ(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var tle={kernelName:cp,backendName:"webgl",kernelFunc:ele};function nle({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=wr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new qr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var rle={kernelName:ds,backendName:"webgl",kernelFunc:nle},ale=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=dt(n.length),s=dt(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((l,u)=>(o++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function sle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Bt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=pe({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let _=Bt.computeOutShape(b,x,v),E=Yu({inputs:{x:a},backend:n,attrs:{begin:b,size:_}});I=pe({inputs:{x:E},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let _=n.readSync(a.dataId),E=Le(a.shape,a.dtype,_),A=wQ(c,E,v,b);I=n.makeTensorInfo(m,a.dtype,A.values)}else{let _=new ale(b,v,c);I=n.runWebGLProgram(_,[a],a.dtype)}let N=pe({inputs:{x:I},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(I),N}var ile={kernelName:Cu,backendName:"webgl",kernelFunc:sle};function ole(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[m,f]=kQ(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}var lle={kernelName:mp,backendName:"webgl",kernelFunc:ole};function ule(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,h]=IQ(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var dle={kernelName:fp,backendName:"webgl",kernelFunc:ule};function ple(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=SQ(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var hle={kernelName:gp,backendName:"webgl",kernelFunc:ple},cle="return tan(x);",mle=Ke({opSnippet:cle}),fle={kernelName:Eo,backendName:"webgl",kernelFunc:mle},gle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,yle=Ke({opSnippet:gle}),ble={kernelName:$o,backendName:"webgl",kernelFunc:yle};function xle(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=T.calculateShapes(i,s,a.shape),p=[h/u,u];if(h===0)return n.makeTensorInfo(a.shape,s.dtype);let c=pe({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=pe({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=pe({inputs:{x:a},backend:n,attrs:{shape:p}}),g=new h0(l,o,c.shape.length,m.shape.length,d,p,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=pe({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}var vle={kernelName:vu,backendName:"webgl",kernelFunc:xle},wle=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=dt(this.rank),a=kle(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function kle(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function R$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>w.decodeString(h)):o,u=Le(a.shape,a.dtype,l),d=TQ(u,s);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new wle(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var Ile={kernelName:us,backendName:"webgl",kernelFunc:R$},Sle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Nle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function As(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function pI(e){let t=1;for(;t<e;)t*=2;return t}function Tle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let A=n.readSync(a.dataId),[R,F]=_Q(A,u,a.dtype,s,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(d===1)return[a,Jp({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),p=h!==null&&h.isPacked,c=p?n.unpackTensor(a):a,m=w.sizeFromShape(u)/d,f=pe({inputs:{x:c},attrs:{shape:[m,d]},backend:n});p&&As(n,c);let g=pI(s),y=pI(d),b=null,x=()=>b===null?[f,f]:[f,b],v=(A,R,F)=>{let S=x(),O=new Sle(F),B=[[d],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[R]],G=b;b=n.runWebGLProgram(O,S,"int32",B),As(n,G)};for(let A=1;A<g;A*=2){let R=A*2;for(let F=A;F>=1;F/=2)v(R,F,[m,y])}for(let A=y;A>g;A/=2){let R=x(),F=new Nle([m,A/2]),S=[[d],[b===null?1:0],[g]],O=b;b=n.runWebGLProgram(F,R,"int32",S),As(n,O);let B=g/2,G=B*2;for(let j=B;j>=1;j/=2)v(G,j,b.shape)}let I=b;b=Yu({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),As(n,I);let N=T$({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});As(n,f);let _=u.slice(0,-1);_.push(s),I=b,b=pe({inputs:{x:b},attrs:{shape:_},backend:n}),As(n,I);let E=N;return N=pe({inputs:{x:N},attrs:{shape:_},backend:n}),As(n,E),[N,b]}var _le={kernelName:Eu,backendName:"webgl",kernelFunc:Tle},Cle=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Ele(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=new Cle(h,p,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var $le={kernelName:$u,backendName:"webgl",kernelFunc:Ele};function Ale(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Hu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=CQ(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var Fle={kernelName:yp,backendName:"webgl",kernelFunc:Ale};function Dle(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let f=0;f<o;f++)f!==s&&(u[d++]=i.shape[f]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let m=new Array(l);for(let f=0;f<m.length;f++){p[s]=f;let g=Yu({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),y=pe({inputs:{x:g},backend:n,attrs:{shape:u}});m[f]=y,h.push(g)}return h.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Rle={kernelName:Au,backendName:"webgl",kernelFunc:Dle},Mle=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=Math.floor(n/4)*4,d=n%4,h=`
        sumValue += dot(values, segFilter);
    `,p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Ole(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=T.getAxesPermutation([u],o),h=a;d!=null&&(h=bn({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(h),u=T.getInnerMostAxes(1,o)[0]);let p=T.segment_util.computeOutShape(h.shape,u,i),c=w.sizeFromShape([h.shape[u]]),m=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(m);let f=tm(a.dtype),g=(v,I,N,_,E)=>{let A=v.shape[0],R=v.shape[1],F=T.segment_util.segOpComputeOptimalWindowSize(R,E),S={windowSize:F,inSize:R,batchSize:A,numSegments:E},O=new Mle(S,I),B=n.compileAndRun(O,[v,N],_);if(l.push(B),B.shape[1]===E)return B;let G=D$({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=R$({inputs:{x:G},backend:n,attrs:{reps:[R/F]}});return l.push(G),l.push(j),g(B,I,j,_,E)},y=g(m,"unsortedSegmentSum",s,f,i),b=pe({inputs:{x:y},backend:n,attrs:{shape:p}}),x=b;if(d!=null){l.push(b);let v=T.getUndoAxesPermutation(d);x=bn({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}var Lle={kernelName:bp,backendName:"webgl",kernelFunc:Ole},Ple=[wee,Iee,Tee,Eee,Aee,Ree,Oee,Pee,Vee,Gee,qee,Zee,Qee,rte,ite,lte,dte,mte,gte,bte,kte,Ete,Ate,Mte,Lte,Ute,Hte,Xte,aee,Yte,rne,one,cne,gne,bne,vne,kne,Tne,Ene,Fne,Rne,One,Pne,Wne,Une,qne,Xne,Yne,tre,rre,ore,pre,fre,bre,wre,kre,Sre,Tre,Cre,$re,Fre,Ore,zre,Vre,Gre,qre,Zre,eae,aae,ree,iae,tne,uae,hae,fae,iee,xae,Iae,Nae,Eae,Fae,Oae,zae,Uae,qae,Zae,Yae,nse,ase,ise,dse,hse,mse,gse,bse,kse,Tse,$se,Pse,uee,Vse,Hse,Kse,Jse,zte,eie,nie,aie,oie,pie,lee,cie,fie,yie,xie,vie,Bte,Rse,Iie,_ie,Aie,pee,Mie,Pie,Vie,Hie,Xie,Jie,eoe,roe,ioe,uoe,hoe,foe,xoe,koe,Toe,Eoe,_te,Ose,Foe,Roe,Ooe,Poe,Boe,Voe,Goe,joe,Koe,Joe,Qoe,tle,rle,ile,lle,dle,hle,Mse,bee,fle,ble,vle,Ile,_le,$le,xee,Fle,Rle,Lle,tie];for(let e of Ple)xp(e);var Ze;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Ze||(Ze={}));var qd;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(qd||(qd={}));var M$;function zle(e){M$=e.wasm.cwrap(qs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ble(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);m=E.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=qd[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(v.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer),_=new Uint8Array(new Int32Array(s.shape).buffer);return M$(p,N,a.shape.length,c,_,s.shape.length,l,u,g,m,f,h||0,I),v}var Wle={kernelName:qs,backendName:"wasm",setupFunc:zle,kernelFunc:Ble};function je(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),d=i.dataIdMap.get(u.dataId).id;return w.sizeFromShape(u.shape)===0||n(l,Ze[o.dtype],d),u}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Vle=je(Fl),Ule=je(hi),Gle=je(ci);function Lt(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:d}=l,h=o.dataIdMap.get(u.dataId).id,p=o.dataIdMap.get(d.dataId).id,c=n??u.dtype,m=T.assertAndGetBroadcastShape(u.shape,d.shape),f=o.makeOutput(m,c);if(w.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(d.shape).buffer),b=o.dataIdMap.get(f.dataId).id;return r(h,g,u.shape.length,p,y,d.shape.length,Ze[u.dtype],b),f}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Hle=!0,jle=Lt(os,Hle),O$;function qle(e){O$=e.wasm.cwrap(mi,null,["array","number","number","number"])}function Kle(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return O$(s,a.length,Ze[r.dtype],i),r}var Xle={kernelName:mi,backendName:"wasm",setupFunc:qle,kernelFunc:Kle};function Ym(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return gn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Zle={kernelName:Wi,backendName:"wasm",kernelFunc:Ym},L$;function Jle(e){L$=e.wasm.cwrap(ca,null,["number","array","number","number","number","array","number"])}function as(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=Qle(t.x.shape,r.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=Yle(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let m=Ym({inputs:t,backend:n});return m.shape=o,m}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return L$(d,c,l.shape.length,Ze[l.dtype],h,p,s.length),u}function Yle(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function Qle(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var eue={kernelName:ca,backendName:"wasm",kernelFunc:as,setupFunc:Jle};function xs(e,t,n){let r=e.shape,a=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,a),l=null,u=!1;if(o!=null){let d=new Array(a);for(let p=0;p<d.length;p++)d[p]=r[o[p]];i=T.getInnerMostAxes(i.length,a),l=as({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var P$;function tue(e){P$=e.wasm.cwrap(Dl,null,["number, number, number"])}function nue(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=xs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;P$(o,g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var rue={kernelName:Dl,backendName:"wasm",setupFunc:tue,kernelFunc:nue},z$;function aue(e){z$=e.wasm.cwrap(Rl,null,["number, number, number"])}function sue(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=xs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;z$(o,g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var iue={kernelName:Rl,backendName:"wasm",setupFunc:aue,kernelFunc:sue};function B$(e){let t;function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:l}=o,{x:u}=i,d=s.dataIdMap.get(u.dataId).id,h=d,p=u,{transposed:c,axes:m,inputWasTransposed:f}=xs(u,l,s);if(f){let I=s.dataIdMap.get(c.dataId).id;I!==d&&(p=c,h=I)}let g=p.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=w.sizeFromShape(y.shape),v=p.shape[m[0]];return t(h,Ze[p.dtype],x,v,b),f&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var oue=B$(Ml),lue=B$(Ol),uue=je(fi),due=je(gi),pue=je(yi),hue=Lt(xi,!1),cue=je(bi),W$;function mue(e){W$=e.wasm.cwrap(vi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fue(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=T.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,m=d.padInfo.right,f=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,b=d.strideWidth,x=d.inChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(d.dilationWidth!==1||d.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let v=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(v.dataId).id;return W$(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,m,f,g,y,b,x,I),v}var gue={kernelName:vi,backendName:"wasm",setupFunc:mue,kernelFunc:fue},V$;function yue(e){V$=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function bue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return V$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var xue={kernelName:Ll,backendName:"wasm",setupFunc:yue,kernelFunc:bue},U$;function vue(e){U$=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wue(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return U$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),h}var kue={kernelName:Qd,backendName:"wasm",setupFunc:vue,kernelFunc:wue},G$;function Iue(e){G$=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Sue(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=T.computePool2DInfo(s.shape,i,o,1,l),d=n.makeOutput(s.shape,s.dtype);return G$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}var Nue={kernelName:Yd,backendName:"wasm",setupFunc:Iue,kernelFunc:Sue};function An(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Tue={kernelName:gu,backendName:"wasm",kernelFunc:An},H$;function _ue(e){H$=e.wasm.cwrap(wi,null,["number","array","number","number","array","number","number","number","number"])}function Cue(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=w.sizeFromShape(m),y=w.sizeFromShape(f),b=Ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],v=o?[y,c,h]:[y,h,c],I=An({inputs:{x:a},backend:n,attrs:{shape:x}}),N=An({inputs:{x:s},backend:n,attrs:{shape:v}}),_=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(N.dataId).id,A=i?I.shape[2]:I.shape[1],R=o?N.shape[1]:N.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,R],I.dtype),O=n.dataIdMap.get(S.dataId).id,B=new Uint8Array(new Int32Array(I.shape).buffer),G=new Uint8Array(new Int32Array(N.shape).buffer);return H$(_,B,I.shape.length,E,G,N.shape.length,i,o,O),n.disposeData(I.dataId),n.disposeData(N.dataId),S.shape=b,S}var Eue={kernelName:wi,backendName:"wasm",setupFunc:_ue,kernelFunc:Cue};function ui(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Bt.parseSliceParams(t,n,r),o=Bt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=w.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let m=Bt.computeFlatOffset(s,d);return t.dtype==="string"?h.stringBytes=l.slice(m,m+w.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(m,m+w.sizeFromShape(i))),u}if(t.dtype==="string"){let m=Tc(l,s,i,t.shape,t.dtype);return h.stringBytes=m,u}let p=a.typedArrayFromHeap(u),c=t.shape.length;if(c===2)$ue(l,d[0],p,s,i);else if(c===3)Aue(l,d[0],d[1],p,s,i);else if(c===4)Fue(l,d[0],d[1],d[2],p,s,i);else{let m=Tc(l,s,i,t.shape,t.dtype);p.set(m)}return u}function $ue(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let d=u*t+o;n.set(e.subarray(d,d+a[1]),s),s+=a[1]}}function Aue(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let p=o;p<d;p++)for(let c=l;c<h;c++){let m=p*t+c*n+u;r.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function Fue(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],m=s[3];for(let f=l;f<h;f++)for(let g=u;g<p;g++)for(let y=d;y<c;y++){let b=f*t+g*n+y*r+m;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var Due={kernelName:Iu,backendName:"wasm",kernelFunc:ui};function Rue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),c=An({inputs:{x:a},backend:n,attrs:{shape:l}}),m=as({inputs:{x:c},backend:n,attrs:{perm:u}}),f=An({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ui({inputs:{x:f},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}var Mue={kernelName:Pl,backendName:"wasm",kernelFunc:Rue},j$;function Oue(e){j$=e.wasm.cwrap(zl,null,["number","number","boolean","number","number","number"])}function Lue(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=s.shape.reduce((h,p)=>h*p,1)!==0,l=a.shape.length===1?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return j$(d(a),i,o,d(s),Ze[s.dtype],d(u)),u}var Pue={kernelName:zl,backendName:"wasm",setupFunc:Oue,kernelFunc:Lue},zue=!0,Bue=Lt(Bl,zue);function Wue(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var Vue={kernelName:ep,backendName:"wasm",kernelFunc:Wue};function vs(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Uue={kernelName:ki,backendName:"wasm",kernelFunc:vs},Gue=je(Ii),q$;function Hue(e){q$=e.wasm.cwrap(ls,null,["number","number","number","number"])}function jue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return q$(o,s,i,u),l}var que={kernelName:ls,backendName:"wasm",setupFunc:Hue,kernelFunc:jue};function K$(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);T.assertParamsConsistent(a,r);let s=T.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return Ym({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let v=[-1,w.sizeFromShape(x.shape.slice(r))];return An({inputs:{x},backend:n,attrs:{shape:v}})}),m=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(c.map(x=>x.shape),1);let f=c[0].shape[0]===1,g=zw(m,s,t[0].dtype,f),y=T.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=w.sizeFromShape(i[0].shape.slice(0,r)),u=0,d=i.map(c=>{let m=w.sizeFromShape(c.shape.slice(r));return u+=m,m}),h=i.map(c=>n.typedArrayFromHeap(c)),p=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let m=c*u;for(let f=0;f<h.length;f++){let g=d[f],y=c*g,b=h[f].subarray(y,y+g);p.set(b,m),m+=g}}return o}var Kue={kernelName:Wl,backendName:"wasm",kernelFunc:K$},X$;function Xue(e){X$=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=T.convertConv2DDataFormat(p),m=T.computeConv2DInfo(a.shape,s.shape,l,u,d,h,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,I=m.dilationHeight,N=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,R=m.outChannels,F=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(m.outShape,"float32"),O=r.dataIdMap.get(S.dataId).id;return X$(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,v,F,I,N,_,E,A,R,O),S}var Jue={kernelName:Si,backendName:"wasm",setupFunc:Xue,kernelFunc:Zue},Z$;function Yue(e){Z$=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Que(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=1,p=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(d,s.shape,i,h,o,u,!1,p),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:I,outWidth:N,strideHeight:_,strideWidth:E}=c,A=f-1-c.padInfo.top,R=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=w.computeStrides(c.inShape),O=w.computeStrides(a.shape),[B,G,j]=w.computeStrides(s.shape),K=S[0],X=F?S[1]:S[2],Y=F?S[2]:1,ee=F?1:S[1],te=O[0],ae=F?O[1]:O[2],ne=F?O[2]:1,se=F?1:O[1],ie=t.makeOutput(c.inShape,"float32"),ve=t.dataIdMap.get(ie.dataId).id,de=t.dataIdMap.get(a.dataId).id,xe=t.dataIdMap.get(s.dataId).id;return Z$(de,xe,m,f,g,b,x,y,I,N,v,_,E,A,R,B,G,j,K,X,Y,ee,te,ae,ne,se,ve),ie}var ede={kernelName:Ni,backendName:"wasm",setupFunc:Yue,kernelFunc:Que},J$;function tde(e){J$=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),d=n.makeOutput(u.outShape,a.dtype);return J$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var rde={kernelName:Ti,backendName:"wasm",setupFunc:tde,kernelFunc:nde},Y$;function ade(e){Y$=e.wasm.cwrap(Vl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(a.shape,l,i,1,o),d=n.makeOutput(u.filterShape,s.dtype);return Y$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var ide={kernelName:Vl,backendName:"wasm",setupFunc:ade,kernelFunc:sde},Q$;function ode(e){Q$=e.wasm.cwrap(Ul,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lde(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=T.computeConv3DInfo(l,s.shape,o,1,i),d=n.makeOutput(u.inShape,a.dtype);return Q$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}var ude={kernelName:Ul,backendName:"wasm",setupFunc:ode,kernelFunc:lde},dde=je(_i),pde=je(Ci),nx;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(nx||(nx={}));var eA;function hde(e){eA=e.wasm.cwrap(Hl,null,["number","number","number","number","array","number","number","number","number","number"])}function cde(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,d=l.shape[0],[h,p]=i,c=[d,h,p,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=vs({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return eA(g,y,b,d,I,h,p,nx[a],s,v),f!=null&&t.disposeData(f.dataId),x}var mde={kernelName:Hl,backendName:"wasm",setupFunc:hde,kernelFunc:cde},tA;function fde(e){tA=e.wasm.cwrap(Gl,null,["number","number","number","number","number","number"])}function gde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=a;u!==null&&(d=as({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],m=n.dataIdMap.get(d.dataId).id,f=n.dataIdMap.get(p.dataId).id;tA(m,i?1:0,o?1:0,c,f,Ze[a.dtype]);let g=p;if(u!==null){let y=T.getUndoAxesPermutation(u);g=as({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}var yde={kernelName:Gl,backendName:"wasm",setupFunc:fde,kernelFunc:gde},nA;function bde(e){nA=e.wasm.cwrap(Ei,null,["number","number","number","number","number","number"])}function xde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=a;u!==null&&(d=as({inputs:{x:a},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],m=n.dataIdMap.get(d.dataId).id,f=n.dataIdMap.get(p.dataId).id;nA(m,i?1:0,o?1:0,c,f,Ze[a.dtype]);let g=p;if(u!==null){let y=T.getUndoAxesPermutation(u);g=as({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}var vde={kernelName:Ei,backendName:"wasm",setupFunc:bde,kernelFunc:xde},rA;function wde(e){rA=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function kde(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=s.shape.reduce((p,c)=>p*c,1)!==0,u=a.shape.length===1?[i]:[a.shape[0],i],d=t.makeOutput(u,s.dtype);function h(p){return t.dataIdMap.get(p.dataId).id}return rA(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),Ze[s.dtype],o,h(d)),d}var Ide={kernelName:np,backendName:"wasm",setupFunc:wde,kernelFunc:kde},aA;function Sde(e){aA=e.wasm.cwrap(jl,null,["number","number","number","array","number","array","array","number","number"])}function Nde(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],d=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,p=u*s,c=d/(s*s),m=i==="NHWC"?[o,h,p,c]:[o,c,h,p],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return aA(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,m.length,v),f}var Tde={kernelName:jl,backendName:"wasm",setupFunc:Sde,kernelFunc:Nde},sA;function _de(e){sA=e.wasm.cwrap($i,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Cde(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=u??[1,1],c=T.computeConv2DInfo(a.shape,s.shape,l,p,d,h,!0),m=c.filterHeight,f=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,I=c.dilationWidth,N=c.strideHeight,_=c.strideWidth,E=c.inChannels,A=c.outChannels,R=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return sA(i,a.shape[0],a.shape[1],a.shape[2],o,m,f,g,y,b,x,R,v,I,N,_,E,A,S),F}var Ede={kernelName:$i,backendName:"wasm",setupFunc:_de,kernelFunc:Cde},iA;function $de(e){iA=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function Ade(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return iA(n.dataIdMap.get(r.dataId).id,Ze[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var Fde={kernelName:rp,backendName:"wasm",setupFunc:$de,kernelFunc:Ade},oA;function Dde(e){oA=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Rde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),d=n.makeOutput(u.outShape,a.dtype);return oA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,Ze[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}var Mde={kernelName:Ai,backendName:"wasm",setupFunc:Dde,kernelFunc:Rde},lA;function Ode(e){lA=e.wasm.cwrap(cl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Lde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return lA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Ze[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}var Pde={kernelName:cl,backendName:"wasm",setupFunc:Ode,kernelFunc:Lde},uA;function zde(e){uA=e.wasm.cwrap(hl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bde(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=T.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return uA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Ze[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}var Wde={kernelName:hl,backendName:"wasm",setupFunc:zde,kernelFunc:Bde},Vde=je(Di),dA;function Ude(e){dA=e.wasm.cwrap(ql,null,["number","number","number"])}function Gde(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return dA(i(a),i(r),i(s)),s}var Hde={kernelName:ql,backendName:"wasm",setupFunc:Ude,kernelFunc:Gde},jde=!1,qde=Lt(Kl,jde,"bool"),Kde=je(Ri),Xde=je(Mi,"float32");function rx(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),An({inputs:{x:a},backend:r,attrs:{shape:o}})}var Zde={kernelName:Xl,backendName:"wasm",kernelFunc:rx},Jde=je(Oi,"float32");function pA(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||w.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var Yde={kernelName:ap,backendName:"wasm",kernelFunc:pA},hA;function Qde(e){hA=e.wasm.cwrap(Zl,null,["number","number","number","number","number","number"])}function epe(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return hA(s,o,l,u,d,i),a}var tpe={kernelName:Zl,backendName:"wasm",kernelFunc:epe,setupFunc:Qde},npe=je(Li),rpe=!1,ape=Lt(Pi,rpe),cA;function spe(e){cA=e.wasm.cwrap(zi,null,["number","number","number","number","number","number","number"])}function ipe(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,m=u!=null?t.dataIdMap.get(u.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return cA(d,h,p,c,m,a,g),f}var ope={kernelName:zi,backendName:"wasm",setupFunc:spe,kernelFunc:ipe},mA;function lpe(e){mA=e.wasm.cwrap(Ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function upe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=qd[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ne=r.dataIdMap.get(i.dataId);if(ne.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ne.shape}) does not match the number of output channels (${x})`);v=ne.id}let I=f.filterHeight,N=f.filterWidth,_=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,O=f.strideHeight,B=f.strideWidth,G=f.inChannels,j=f.padInfo.type==="SAME"?1:0,K=f.batchSize,X=f.inHeight,Y=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),te=r.dataIdMap.get(ee.dataId).id,ae=o==null?0:r.dataIdMap.get(o.dataId).id;return mA(y,K,X,Y,b,I,N,v,_,E,A,R,j,F,S,O,B,G,x,g,ae,m||0,te),ee}var dpe={kernelName:Ks,backendName:"wasm",setupFunc:lpe,kernelFunc:upe},fA;function ppe(e){fA=e.wasm.cwrap(Xs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hpe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:m}=n,f=T.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=qd[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(i!=null){let ne=r.dataIdMap.get(i.dataId);if(ne.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ne.shape}) does not match the number of output channels (${x})`);v=ne.id}let I=f.filterHeight,N=f.filterWidth,_=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,O=f.strideHeight,B=f.strideWidth,G=f.inChannels,j=f.padInfo.type==="SAME"?1:0,K=f.batchSize,X=f.inHeight,Y=f.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),te=r.dataIdMap.get(ee.dataId).id,ae=o==null?0:r.dataIdMap.get(o.dataId).id;return fA(y,K,X,Y,b,I,N,v,_,E,A,R,j,F,S,O,B,G,x,g,ae,m||0,te),ee}var cpe={kernelName:Xs,backendName:"wasm",setupFunc:ppe,kernelFunc:hpe},gA;function mpe(e){gA=e.wasm.cwrap(Yl,null,["number","number","number","number","number","number","array","number"])}function fpe(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Bv.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(i===0)return u;let d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(u.dataId).id;return gA(p,Ze[r.dtype],c,i,h,o,m,f),u}var gpe={kernelName:Yl,backendName:"wasm",setupFunc:mpe,kernelFunc:fpe},yA;function ype(e){yA=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function bpe(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let _=0;_<u.length;++_){let E=u[_];w.assert(E<=d-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${d-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=An({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),m=An({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),f=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(f,a.dtype);if(w.sizeFromShape(a.shape)===0)return g;let y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(m.dataId).id,v=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),N=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer);return yA(b,Ze[a.dtype],I,y,x,h.batchSize,N,v),t.disposeData(p.dataId),t.disposeData(m.dataId),g.shape=h.outputShape,g}var xpe={kernelName:Jl,backendName:"wasm",setupFunc:ype,kernelFunc:bpe},vpe=!1,wpe=Lt(Ql,vpe,"bool"),kpe=!1,Ipe=Lt(Bi,kpe,"bool"),Spe=je(Vi,"bool"),Npe=je(Ui,"bool"),Tpe=je(Gi,"bool"),bA;function _pe(e){bA=e.wasm.cwrap(Hi,null,["number","number","number","number"])}function Cpe(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;bA(a,Ze[t.dtype],n,i)}return s}var Epe={kernelName:Hi,backendName:"wasm",setupFunc:_pe,kernelFunc:Cpe},$pe=!1,Ape=Lt(eu,$pe,"bool"),Fpe=!1,Dpe=Lt(tu,Fpe,"bool"),xA;function Rpe(e){xA=e.wasm.cwrap(nu,null,["number","number","number","number"])}function Mpe(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return xA(n.dataIdMap.get(o.dataId).id,r,a,i),o}var Ope={kernelName:nu,backendName:"wasm",setupFunc:Rpe,kernelFunc:Mpe},Lpe=je(ji),Ppe=je(qi),zpe=!1,Bpe=Lt(ru,zpe,"bool"),Wpe=je(au),Vpe=!1,Upe=Lt(su,Vpe,"bool"),Gpe=!1,Hpe=Lt(RI,Gpe,"bool"),vA;function jpe(e){vA=e.wasm.cwrap(Ki,null,["number","number","number","number","number","number","number"])}function qpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return vA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}var Kpe={kernelName:Ki,backendName:"wasm",setupFunc:jpe,kernelFunc:qpe},wA;function Xpe(e){wA=e.wasm.cwrap(iu,null,["number","number","number","number","number","number","number","number","number"])}function Zpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return wA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,d),h}var Jpe={kernelName:iu,backendName:"wasm",setupFunc:Xpe,kernelFunc:Zpe},kA;function Ype(e){kA=e.wasm.cwrap(Xi,null,["number","number","number","number"])}function Qpe(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=xs(i,a,t);if(p){let b=t.dataIdMap.get(u.dataId).id;l=u,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",d,c);let[m,f]=T.computeOutAndReduceShapes(l.shape,d),g=w.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;kA(o,Ze[i.dtype],g,b)}if(p&&t.disposeData(u.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var ehe={kernelName:Xi,backendName:"wasm",setupFunc:Ype,kernelFunc:Qpe},the=!1,nhe=Lt(Zi,the),IA;function rhe(e){IA=e.wasm.cwrap(Ji,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ahe(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;w.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=T.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,m=d.padInfo.right,f=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,b=d.dilationWidth,x=d.strideHeight,v=d.strideWidth,I=d.inChannels,N=d.outChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(d.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return IA(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,m,f,g,y,b,x,v,I,N,E),_}var she={kernelName:Ji,backendName:"wasm",setupFunc:rhe,kernelFunc:ahe},SA;function ihe(e){SA=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ohe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return SA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var lhe={kernelName:ou,backendName:"wasm",setupFunc:ihe,kernelFunc:ohe},NA;function uhe(e){NA=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dhe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return NA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}var phe={kernelName:ip,backendName:"wasm",setupFunc:uhe,kernelFunc:dhe},TA;function hhe(e){TA=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function che(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=T.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return TA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),h}var mhe={kernelName:sp,backendName:"wasm",setupFunc:hhe,kernelFunc:che},_A;function fhe(e){_A=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ghe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;w.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(d.outShape,a.dtype),p=n.makeOutput(d.outShape,"int32");return _A(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(p.dataId).id,Ze[a.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[h,p]}var yhe={kernelName:op,backendName:"wasm",setupFunc:fhe,kernelFunc:ghe},CA;function bhe(e){CA=e.wasm.cwrap(Yi,null,["number, number, number"])}function xhe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=xs(i,a,t),m=h;if(c){let v=t.dataIdMap.get(d.dataId).id;v!==o&&(u=d,l=v,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=vs({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;CA(l,y,v)}if(c&&t.disposeData(d.dataId),s){let v=T.expandShapeToKeepDim(x.shape,p);x.shape=v}return u.dtype!=="float32"&&t.disposeData(b.dataId),x}var vhe={kernelName:Yi,backendName:"wasm",setupFunc:bhe,kernelFunc:xhe},EA;function whe(e){EA=e.wasm.cwrap(Qi,null,["number","number","number","number"])}function khe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=xs(i,a,t);if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x)}let m=u.shape.length;T.assertAxesAreInnerMostDims("min",h,m);let[f,g]=T.computeOutAndReduceShapes(u.shape,h),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;EA(l,Ze[i.dtype],y,x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var Ihe={kernelName:Qi,backendName:"wasm",setupFunc:whe,kernelFunc:khe},She=!1,Nhe=Lt(eo,She),ax;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(ax||(ax={}));var $A;function The(e){$A=e.wasm.cwrap(to,null,["number","array","number","number","array","array","number","number"])}function _he(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),h=r.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return $A(i,u,t.shape.length,Ze[t.dtype],p,c,ax[a],l),o}var Che={kernelName:to,backendName:"wasm",kernelFunc:_he,setupFunc:The},AA;function Ehe(e){AA=e.wasm.cwrap(To,null,["number","number","number","number"])}function FA(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(s.shape)===0||AA(a,i,o,l),s}var $he={kernelName:To,backendName:"wasm",setupFunc:Ehe,kernelFunc:FA},DA;function Ahe(e){DA=e.wasm.cwrap(lu,null,["number","number","number","number","number","number"])}function Fhe(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:FA({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,d]=l.shape,h=n.makeOutput([u,s],"int32");return DA(n.dataIdMap.get(l.dataId).id,u,d,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}var Dhe={kernelName:lu,backendName:"wasm",setupFunc:Ahe,kernelFunc:Fhe},Rhe=Lt(no,!0),Mhe=!0,Ohe=Lt(ro,Mhe),Lhe=je(uu);function c0(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var RA;function Phe(e){RA=e.wasm.cwrap(pu,"number",["number","number","number","number","number"])}function zhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=RA(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=c0(t,h);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([c],"int32",p)}var Bhe={kernelName:pu,backendName:"wasm",setupFunc:Phe,kernelFunc:zhe},MA;function Whe(e){MA=e.wasm.cwrap(hu,"number",["number","number","number","number","number","bool"])}function Vhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=MA(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=c0(t,p);t.wasm._free(f);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var Uhe={kernelName:hu,backendName:"wasm",setupFunc:Whe,kernelFunc:Vhe},OA;function Ghe(e){OA=e.wasm.cwrap(cu,"number",["number","number","number","number","number","number"])}function Hhe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=OA(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=c0(t,p);t.wasm._free(g);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([m],"float32",f);return[y,b]}var jhe={kernelName:cu,backendName:"wasm",setupFunc:Ghe,kernelFunc:Hhe},qhe=!1,Khe=Lt(du,qhe,"bool"),LA;function Xhe(e){LA=e.wasm.cwrap(ao,null,["number","number","number","number","number"])}function Zhe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),d=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return LA(h,i,o,l,d),u}var Jhe={kernelName:ao,backendName:"wasm",setupFunc:Xhe,kernelFunc:Zhe};function Yhe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var Qhe={kernelName:mu,backendName:"wasm",kernelFunc:Yhe};function ece(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return rx({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{w.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let h=rx({inputs:{input:d},backend:n,attrs:{dim:a}});return o.push(h),h}),u=K$({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(d=>n.disposeData(d.dataId)),u}var tce={kernelName:fu,backendName:"wasm",kernelFunc:ece},PA;function nce(e){PA=e.wasm.cwrap(so,null,["number","array","number","number","array","array","number","number"])}function rce(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]);if(w.sizeFromShape(t.shape)===0)return pA({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),h=r.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return PA(i,u,t.shape.length,Ze[t.dtype],p,c,a,l),o}var zA={kernelName:so,backendName:"wasm",kernelFunc:rce,setupFunc:nce},ace=!1,sce=Lt(io,ace),BA;function ice(e){BA=e.wasm.cwrap(oo,null,["number","number","number"])}function oce(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;l.dtype!=="float32"&&(u=vs({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return BA(o,i,h),l.dtype!=="float32"&&n.disposeData(u.dataId),d}var lce={kernelName:oo,backendName:"wasm",setupFunc:ice,kernelFunc:oce},WA;function uce(e){WA=e.wasm.cwrap(lo,null,["number","number","number","number"])}function dce(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=xs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;WA(l,y,Ze[b.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var pce={kernelName:lo,backendName:"wasm",setupFunc:uce,kernelFunc:dce},hce=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Vw(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},cce={kernelName:lp,backendName:"wasm",kernelFunc:hce},mce=!0,fce=Lt(Fi,mce),gce=je(uo),yce=je(po),bce=je(mo),VA;function xce(e){VA=e.wasm.cwrap(co,null,["number","number","number","number","number","number","number","number","number","number"])}function vce(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,h,p,c]=a.shape,m=[d,l,u,c],f=t.dataIdMap.get(a.dataId),g;f.dtype!=="float32"&&(g=vs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return VA(y,d,h,p,c,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var wce={kernelName:co,backendName:"wasm",setupFunc:xce,kernelFunc:vce},UA;function kce(e){UA=e.wasm.cwrap(bu,null,["number","number","number","array","array","boolean"])}function Ice(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=vs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),UA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var Sce={kernelName:bu,backendName:"wasm",setupFunc:kce,kernelFunc:Ice},GA;function Nce(e){GA=e.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number"])}function Tce(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,h,p,c]=a.shape,m=[d,l,u,c],f=t.makeOutput(m,"float32");if(w.sizeFromShape(a.shape)===0)return f;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=vs({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return GA(b,d,h,p,c,l,u,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),f}var _ce={kernelName:ho,backendName:"wasm",setupFunc:Nce,kernelFunc:Tce},HA;function Cce(e){HA=e.wasm.cwrap(yu,null,["number","number","number","array","array","boolean"])}function Ece(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId),u;return l.dtype!=="float32"&&(u=vs({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),HA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),u!=null&&n.disposeData(u.dataId),o}var $ce={kernelName:yu,backendName:"wasm",setupFunc:Cce,kernelFunc:Ece},jA;function Ace(e){jA=e.wasm.cwrap(fo,null,["number","array","number","array","number","number"])}function Fce(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=w.parseAxisParam(s,a.shape);if(a.shape.length===0)return Ym({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);jA(l,d,i.length,h,a.shape.length,u);let p=An({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p}var Dce={kernelName:fo,backendName:"wasm",kernelFunc:Fce,setupFunc:Ace},qA;function Rce(e){qA=e.wasm.cwrap(Du,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Mce(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,m]=a.shape,[f,g]=T.getImageCenter(o,p,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return qA(u,h,p,c,m,s,f,g,v,x.length,d),l}var Oce={kernelName:Du,backendName:"wasm",kernelFunc:Mce,setupFunc:Rce},Lce=je(go),Pce=je(yo),KA;function zce(e){KA=e.wasm.cwrap(xu,null,["number","number","number","number","number","number","array","number","number"])}function Bce(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=Tm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return KA(c,m,Ze[s.dtype],l,u,d,f,p,g),o}var Wce={kernelName:xu,backendName:"wasm",setupFunc:zce,kernelFunc:Bce},XA;function Vce(e){XA=e.wasm.cwrap(wu,null,["number","number","number","number","number","number","bool","number"])}function Uce(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(u){return n.dataIdMap.get(u.dataId).id}return XA(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],Ze[a.dtype],i==="left",l(o)),o}var Gce={kernelName:wu,backendName:"wasm",setupFunc:Vce,kernelFunc:Uce},ZA;function Hce(e){ZA=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function jce(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=a.shape.length,c=h===0||h>1||p===1?1:w.sizeFromShape(a.shape.slice(1));return ZA(i,o,l,c,d),u}var qce={kernelName:ku,backendName:"wasm",kernelFunc:jce,setupFunc:Hce},Kce=je(bo),JA;function Xce(e){JA=e.wasm.cwrap(ko,null,["number","number"])}function Zce(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return w.sizeFromShape(a.shape)===0||JA(r,s),a}var Jce={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Xce,kernelFunc:Zce},Yce=je(wo),Qce=je(xo),eme=je(vo),tme=je(Io);function nme(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=zA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),c=An({inputs:{x:u},backend:n,attrs:{shape:d}}),m=as({inputs:{x:c},backend:n,attrs:{perm:h}}),f=An({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}var rme={kernelName:Su,backendName:"wasm",kernelFunc:nme},YA;function ame(e){YA=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function sme(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,m=t.makeOutput(d,r.dtype),f=t.dataIdMap.get(m.dataId).id,g=t.makeOutput(d.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([u],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(v.dataId).id,N=t.makeOutput([4],"int32"),_=t.dataIdMap.get(N.dataId).id,E=YA(h,p,Ze[a.dtype],o,u,l,c,f,y,x,I,_),A=t.readSync(N.dataId),R;switch(A[0]){case 1:{R=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{R=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:R=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:R=""}if(t.disposeData(N.dataId),R)throw t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(R);let F=m,S=g;return E!==d[0]&&(F=ui({inputs:{x:m},attrs:{begin:0,size:[E,l]},backend:t}),S=ui({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(m.dataId),t.disposeData(g.dataId)),[F,S,b,v]}var ime={kernelName:up,backendName:"wasm",setupFunc:ame,kernelFunc:sme},QA;function ome(e){QA=e.wasm.cwrap(Tu,null,["number","number","number","number","number","number","number"])}function lme(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=w.sizeFromShape(s.shape),h=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([d],s.dtype),m=t.dataIdMap.get(c.dataId).id,f=t.makeOutput([3],"int32"),g=t.dataIdMap.get(f.dataId).id;QA(i,o,l,u,p,m,g);let y=t.readSync(f.dataId),b;switch(y[0]){case 0:{b=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMultipleErrorMessage(x,v);break}case 4:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMismatchErrorMessage(x,v);break}default:b=""}if(t.disposeData(f.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}var ume={kernelName:Tu,backendName:"wasm",setupFunc:ome,kernelFunc:lme},eF;function tF(e){eF=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function nF(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(d,a.dtype),f=n.dataIdMap.get(m.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;eF(h,Ze[a.dtype],a.shape[0],p,c,f,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function dme(e){return nF(e,!0)}var pme={kernelName:dp,backendName:"wasm",setupFunc:tF,kernelFunc:dme};function hme(e){return nF(e,!1)}var cme={kernelName:pp,backendName:"wasm",setupFunc:tF,kernelFunc:hme},rF;function mme(e){rF=e.wasm.cwrap(_u,null,["number","number","number","number","number","number","number","number","array","number","number"])}function fme(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(w.sizeFromShape(o)===0)return l;let{sliceRank:u,numUpdates:d,sliceSize:h,strides:p,outputSize:c}=T.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(l.dataId).id;return rF(m,f,s.shape.length,g,Ze[i.dtype],u,d,h,y,c,b),l}var gme={kernelName:_u,backendName:"wasm",setupFunc:mme,kernelFunc:fme};function yme(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map(h=>{let p=[...d];p[o]=h;let c=ui({inputs:{x:a},attrs:{begin:u,size:p},backend:r});return u[o]+=h,c})}var bme={kernelName:Nu,backendName:"wasm",kernelFunc:yme},xme=je(So),vme=je(hp),wme=!0,kme=Lt(_o,wme),aF;function Ime(e){aF=e.wasm.cwrap(ds,null,["number","number","number","number"])}function Sme(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return aF(i,a,Ze[s.dtype],l),o}var Nme={kernelName:ds,backendName:"wasm",setupFunc:Ime,kernelFunc:Sme},sF;function Tme(e){sF=e.wasm.cwrap(Cu,null,["number","array","number","array","array","array","array","array","number","number"])}function _me(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Bt.sliceInfo(a.shape,s,i,o,l,u,d,h,p),I;if(f)I=An({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Bt.computeOutShape(b,x,v),_=ui({inputs:{x:a},backend:t,attrs:{begin:b,size:N}});I=An({inputs:{x:_},backend:t,attrs:{shape:m}}),t.disposeData(_.dataId)}else{let N=t.makeOutput(c,"float32"),_=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(v).buffer),S=new Uint8Array(new Int32Array(c).buffer),O=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),B=t.dataIdMap.get(N.dataId).id;sF(_,E,a.shape.length,A,R,F,S,O,c.length,B),I=An({inputs:{x:N},backend:t,attrs:{shape:m}}),t.disposeData(N.dataId)}return I}var Cme={kernelName:Cu,backendName:"wasm",setupFunc:Tme,kernelFunc:_me};function Eme(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:h}=r,p=t.readSync(a.dataId),c=t.readSync(s.dataId),[m,f]=Gw(p,c,i,o,l,u,d,h),g=t.makeOutput([m.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=m;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(f),[g,b]}var $me={kernelName:mp,backendName:"wasm",kernelFunc:Eme};function Ame(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,d,h]=Hw(o,l[0],i),p=d.length,c=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(c).set(u);let m=t.makeOutput([p],"string"),f=t.dataIdMap.get(m.dataId);f.stringBytes=d;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,m,g]}var Fme={kernelName:fp,backendName:"wasm",kernelFunc:Ame};function Dme(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=jw(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Rme={kernelName:gp,backendName:"wasm",kernelFunc:Dme},Mme=!0,Ome=Lt(Co,Mme),iF;function Lme(e){iF=e.wasm.cwrap(No,null,["number","number","number","number"])}function Pme(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=xs(i,a,t),m=h;if(c){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,m=T.getInnerMostAxes(m.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",m,u.shape.length);let[f,g]=T.computeOutAndReduceShapes(u.shape,m),y=w.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;iF(l,y,Ze[b.dtype],x)}if(c&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(b.shape,p);b.shape=x}return b}var zme={kernelName:No,backendName:"wasm",setupFunc:Lme,kernelFunc:Pme},Bme=je(Eo),Wme=je($o),oF;function Vme(e){oF=e.wasm.cwrap(vu,null,["number","number","number","number","number","number","array","number","number","number"])}function Ume(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=Tm.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return oF(c,m,Ze[i.dtype],l,u,d,g,p,y,f),o}var Gme={kernelName:vu,backendName:"wasm",setupFunc:Vme,kernelFunc:Ume},lF;function Hme(e){lF=e.wasm.cwrap(us,null,["number","array","number","array","number","number"])}function jme(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let p=0;p<o.length;p++)o[p]=a.shape[p]*i[p];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return lF(s,l,a.shape.length,u,o.length,Ze[d.dtype],h),d}var qme={kernelName:us,backendName:"wasm",setupFunc:Hme,kernelFunc:jme},uF;function Kme(e){uF=e.wasm.cwrap(Eu,null,["number","array","number","number","number","bool","number","number"])}var Xme=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),d=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),p=t.dataIdMap.get(h.dataId).id;return uF(i,o,r.shape.length,Ze[r.dtype],a,s,d,p),[u,h]},Zme={kernelName:Eu,backendName:"wasm",setupFunc:Kme,kernelFunc:Xme},dF;function Jme(e){dF=e.wasm.cwrap($u,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Yme(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[m,f]=u??[h,p],g=[d,m,f,c],y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,N=t.dataIdMap.get(s.dataId).id,_=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return dF(I,N,s.shape[0]>1,d,m,f,c,p,h,y,a.shape.length-1,b,g.length-1,_,E,l,v),x}var Qme={kernelName:$u,backendName:"wasm",setupFunc:Jme,kernelFunc:Yme};function efe(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=Kw(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}var tfe={kernelName:yp,backendName:"wasm",kernelFunc:efe};function nfe(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let c=0;c<d.length;c++)h[s]=c,d[c]=ui({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map(({dataId:c,dtype:m})=>({dataId:c,dtype:m,shape:l}))}var rfe={kernelName:Au,backendName:"wasm",kernelFunc:nfe};function afe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var sfe={kernelName:Fu,backendName:"wasm",kernelFunc:afe},ife=[Wle,Vle,Ule,Gle,jle,Xle,rue,iue,oue,lue,uue,due,pue,hue,cue,gue,Nue,xue,kue,Eue,Mue,Pue,Bue,Vue,Uue,Gue,que,Kue,Jue,ede,rde,ide,ude,dde,pde,mde,yde,vde,Ide,Tde,Ede,Fde,Mde,Pde,Wde,Vde,Hde,qde,Kde,Xde,Zde,Jde,Yde,tpe,npe,ape,ope,dpe,cpe,gpe,xpe,wpe,Ipe,Zle,Spe,Npe,Tpe,Epe,Ape,Dpe,Ope,Ppe,Lpe,Bpe,Wpe,Upe,Hpe,Kpe,Jpe,ehe,nhe,she,lhe,phe,mhe,yhe,vhe,Ihe,Nhe,Che,Dhe,Rhe,Ohe,Lhe,Bhe,Uhe,jhe,Khe,Jhe,Qhe,tce,zA,sce,lce,pce,cce,fce,gce,yce,bce,Tue,wce,Sce,_ce,$ce,Dce,Oce,Lce,Pce,Wce,Gce,qce,Kce,Jce,Yce,Qce,eme,Due,$he,tme,rme,ime,ume,pme,cme,gme,bme,xme,vme,kme,Nme,Cme,$me,Fme,Rme,Ome,zme,Bme,Wme,Gme,qme,Zme,Qme,eue,tfe,rfe,sfe];for(let e of ife)xp(e);var sx=H();sx.registerFlag("WASM_HAS_SIMD_SUPPORT",()=>D(void 0,null,function*(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}}));sx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",()=>D(void 0,null,function*(){if(sx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}}));var hI=is(pR()),ofe=is(hR()),cI=is(cR()),mI=hI.default||hI,lfe=cI.default||cI,pF=class extends Zd{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(hF),ix=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Pc(this,mr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}time(e){return D(this,null,function*(){let t=w.now();return e(),{kernelMs:w.now()-t}})}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}read(e){return D(this,null,function*(){return this.readSync(e)})}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(s);let o=w.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return pfe(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(n==null)a=this.write(r??null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function ufe(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function fI(e,t,n){if(Dc!=null)return Dc;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),_d!=null&&_d[r]!=null?_d[r]:n+r}function dfe(){return D(this,null,function*(){let[e,t]=yield Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=ofe.wasmWorkerContents.replace(/\n/g,"\\n"),d=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(d)}return o.endsWith(".wasm")?fI(e,t,Sd??l):l+o},m0&&(a.instantiateWasm=ufe(fI(e,t,Sd??"")));let s=!1;a.onAbort=()=>{s||Cd||(Cd=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Dc==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+mI.toString()],{type:"text/javascript"}),i=mI(a)):i=lfe(a),i.then(o=>{s=!0,Cd=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})}).catch(r)})})}function pfe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var hfe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Dc=null,Sd=null,_d={},Cd=!1,m0=!1;function cfe(e,t=!1){if(kx("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Cd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Dc=e,m0=t}function mfe(e,t=!1){if(Cd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Sd=e;else{_d=e;let n=hfe.filter(r=>_d[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}m0=t}var hF=-1,ix=-1;function ffe(e){hF=e}function gfe(){if(ix===-1)throw new Error("WASM backend not initialized.");return ix}var yfe="4.21.0",bfe=2;nm("wasm",()=>D(void 0,null,function*(){let{wasm:e}=yield dfe();return new pF(e)}),bfe);var gI="4.21.0",xfe="4.21.0",vfe="4.21.0",wfe="4.21.0",kfe="4.21.0",Ife={tfjs:gI,"tfjs-core":gI,"tfjs-converter":xfe,"tfjs-backend-cpu":vfe,"tfjs-backend-webgl":wfe,"tfjs-backend-wasm":kfe},Qu={};px(Qu,{AnchorPosition:()=>_F,DrawBox:()=>$F,DrawBoxOptions:()=>EF,DrawFaceLandmarks:()=>HF,DrawFaceLandmarksOptions:()=>GF,DrawTextField:()=>w0,DrawTextFieldOptions:()=>v0,drawContour:()=>Ra,drawDetections:()=>Ofe,drawFaceExpressions:()=>Xfe,drawFaceLandmarks:()=>Jfe});function Ra(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var Sfe={};px(Sfe,{computeReshapedDimensions:()=>gF,getCenterPoint:()=>g0,isDimensions:()=>lx,isEven:()=>ox,isFloat:()=>fF,isTensor:()=>ed,isTensor1D:()=>Nfe,isTensor2D:()=>mF,isTensor3D:()=>Yp,isTensor4D:()=>fa,isValidNumber:()=>js,isValidProbablitiy:()=>Tfe,range:()=>$l,round:()=>f0});var Hs=class cF{constructor(t,n){if(!js(t)||!js(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new cF(1/this.width,1/this.height)}};function ed(e,t){return e instanceof Re&&e.shape.length===t}function Nfe(e){return ed(e,1)}function mF(e){return ed(e,2)}function Yp(e){return ed(e,3)}function fa(e){return ed(e,4)}function fF(e){return e%1!==0}function ox(e){return e%2===0}function f0(e,t=2){let n=10**t;return Math.floor(e*n)/n}function lx(e){return e&&e.width&&e.height}function gF({width:e,height:t},n){let r=n/Math.max(t,e);return new Hs(Math.round(e*r),Math.round(t*r))}function g0(e){return e.reduce((t,n)=>t.add(n),new it(0,0)).div(new it(e.length,e.length))}function $l(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function js(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function Tfe(e){return js(e)&&e>=0&&e<=1}var it=class Rs{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Rs(this.x+t.x,this.y+t.y)}sub(t){return new Rs(this.x-t.x,this.y-t.y)}mul(t){return new Rs(this.x*t.x,this.y*t.y)}div(t){return new Rs(this.x/t.x,this.y/t.y)}abs(){return new Rs(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Rs(Math.floor(this.x),Math.floor(this.y))}},di=class Nr{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(js)}static assertIsValidBox(t,n,r=!1){if(!Nr.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(js),s=[r.x,r.y,r.width,r.height].every(js);if(!s&&!a)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];Nr.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new it(this.left,this.top)}get topRight(){return new it(this.right,this.top)}get bottomLeft(){return new it(this.left,this.bottom)}get bottomRight(){return new it(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.round(s));return new Nr({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(s=>Math.floor(s));return new Nr({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new Nr({x:t,y:n,width:r,height:a})}rescale(t){let n=lx(t)?t.width:t,r=lx(t)?t.height:t;return new Nr({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new Nr({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=s-o,d=i-l,h=Math.min(u,t-o),p=Math.min(d,n-l);return new Nr({x:o,y:l,width:h,height:p}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new Nr({x:s,y:i,width:r,height:a})}padAtBorders(t,n){let r=this.width+1,a=this.height+1,s=1,i=1,o=r,l=a,u=this.left,d=this.top,h=this.right,p=this.bottom;return h>n&&(o=-h+n+r,h=n),p>t&&(l=-p+t+a,p=t),u<1&&(l=2-u,u=1),d<1&&(l=2-d,d=1),{dy:i,edy:l,dx:s,edx:o,y:d,ey:p,x:u,ex:h,w:r,h:a}}calibrate(t){return new Nr({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},yF=class extends di{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},bF=class xF{constructor(t,n,r,a,s){this._imageDims=new Hs(s.width,s.height),this._score=t,this._classScore=n,this._className=r,this._box=new di(a).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new di(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new xF(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},br=class vF extends bF{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new vF(r,a,s)}};function _fe(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Cfe(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new yF(r,a,s,i)}function Efe(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let u=0;u<o.length;u++){let d=o[u],h=e[i],p=e[d];l.push(_fe(h,p,r))}a=a.filter((u,d)=>l[d]<=n)}return s}function Qp(e,t){return V(()=>{let[n,r,a]=t,s=Un([...e.shape.slice(0,3),1],n,"float32"),i=Un([...e.shape.slice(0,3),1],r,"float32"),o=Un([...e.shape.slice(0,3),1],a,"float32"),l=lt([s,i,o],3);return ce(e,l)})}function $fe(e,t=!1){return V(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=h=>{let p=e.shape.slice();return p[i]=h,Un(p,0,"float32")},l=o(s),u=a-l.shape[i],d=[t&&u?o(u):null,e,l].filter(h=>!!h).map(h=>le(h,"float32"));return lt(d,i)})}function tb(e){return 1/(1+Math.exp(-e))}var wF=class extends di{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},Afe=.5,Ffe=.43,Dfe=.45,Kd=class{constructor(e,t,n=new it(0,0)){let{width:r,height:a}=t;this._imgDims=new Hs(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new it(r,a)).add(n))}get shift(){return new it(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new it(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new it(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof br?e.box.floor():new di(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}=tr({useDlibAlignment:!1,minBoxPadding:.2},t);return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=d=>r.sub(d).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/Dfe),o=g0(e),l=Math.floor(Math.max(0,o.x-Afe*i)),u=Math.floor(Math.max(0,o.y-Ffe*i));return new wF(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=Cfe(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var kF=class extends Kd{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(g0)}};function Xd(e){return e.detection instanceof br}function Rc(e,t){return _s(tr({},e),{detection:t})}function IF(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function y0(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function SF(e){let t="";if(!e&&y0())try{e=UD("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function NF(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=SF();return tr({Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i},o)}function TF(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Ht;function Rfe(){if(!Ht)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Ht}function ux(e){Ht=e}function b0(){return TF()?ux(IF()):y0()?ux(NF()):null}function Mfe(e){if(Ht||b0(),!Ht)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Ht.Canvas,Image:n=Ht.Image}=e;Ht.Canvas=t,Ht.Image=n,Ht.createCanvasElement=e.createCanvasElement||(()=>new t),Ht.createImageElement=e.createImageElement||(()=>new n),Ht.ImageData=e.ImageData||Ht.ImageData,Ht.Video=e.Video||Ht.Video,Ht.fetch=e.fetch||Ht.fetch,Ht.readFile=e.readFile||Ht.readFile}var Rn={getEnv:Rfe,setEnv:ux,initialize:b0,createBrowserEnv:IF,createFileSystem:SF,createNodejsEnv:NF,monkeyPatch:Mfe,isBrowser:TF,isNodejs:y0};b0();function x0(e){return!Rn.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function ss(e){let{Canvas:t,CanvasRenderingContext2D:n}=Rn.getEnv();if(e instanceof n)return e;let r=x0(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var _F=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(_F||{}),v0=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},w0=class CF{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof CF?t.text:t,this.anchor=n,this.options=new v0(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,a)=>r<a?a:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,a=r==="BOTTOM_RIGHT"||r==="TOP_RIGHT",s=r==="BOTTOM_LEFT"||r==="BOTTOM_RIGHT",i=this.measureWidth(t),o=this.measureHeight(),l=a?this.anchor.x-i:this.anchor.x,u=s?this.anchor.y-o:this.anchor.y;if(n){let{width:d,height:h}=n,p=Math.max(Math.min(l,d-i),0),c=Math.max(Math.min(u,h-o),0);return{x:p,y:c}}return{x:l,y:u}}draw(t){let n=x0(t),r=ss(n),{backgroundColor:a,fontColor:s,fontSize:i,fontStyle:o,padding:l}=this.options;r.font=`${i}px ${o}`;let u=this.measureWidth(r),d=this.measureHeight();r.fillStyle=a;let h=this.getUpperLeft(r,n);r.fillRect(h.x,h.y,u,d),r.fillStyle=s,this.text.forEach((p,c)=>{let m=l+h.x,f=l+h.y+(c+1)*i;r.fillText(p,m,f)})}},EF=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new v0(tr(tr({},s),a))}},$F=class{constructor(e,t={}){this.box=new di(e),this.options=new EF(t)}draw(e){let t=ss(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new w0([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Ofe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof br?n.score:Xd(n)?n.detection.score:void 0,a=n instanceof br?n.box:Xd(n)?n.detection.box:new di(n),s=r?`${f0(r)}`:void 0;new $F(a,{label:s}).draw(e)})}function AF(e){let{Image:t,Video:n}=Rn.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Lfe(e){return new Promise((t,n)=>{if(e instanceof Rn.getEnv().Canvas||AF(e)){t(null);return}function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function k0(e){let{Image:t,Video:n}=Rn.getEnv();return e instanceof t?new Hs(e.naturalWidth,e.naturalHeight):e instanceof n?new Hs(e.videoWidth,e.videoHeight):new Hs(e.width,e.height)}function Mc({width:e,height:t}){let{createCanvasElement:n}=Rn.getEnv(),r=n();return r.width=e,r.height=t,r}function FF(e,t){let{ImageData:n}=Rn.getEnv();if(!(e instanceof n)&&!AF(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||k0(e),s=Mc({width:r,height:a});return e instanceof n?ss(s).putImageData(e,0,0):ss(s).drawImage(e,0,0,r,a),s}function Pfe(e,t){return D(this,null,function*(){let n=t||Rn.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(fa(e)?1:0),i=V(()=>e.as3D(r,a,s).toInt());return yield Pp.toPixels(i,n),i.dispose(),n})}function yI(e){let{Image:t,Canvas:n,Video:r}=Rn.getEnv();return e instanceof t||e instanceof n||e instanceof r}function zfe(e,t,n=!1){let{Image:r,Canvas:a}=Rn.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Mc({width:1,height:1});let s=k0(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=Mc({width:t,height:t}),d=e instanceof a?e:FF(e),h=Math.abs(o-l)/2,p=n&&o<l?h:0,c=n&&l<o?h:0;return d.width>0&&d.height>0&&ss(u).drawImage(d,p,c,o,l),u}var Oc=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(Yp(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(fa(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof Rn.getEnv().Canvas?n:FF(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return $l(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return gF({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,V(()=>{let n=$l(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof Re){let s=fa(a)?a:Xt(a);return s=$fe(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=nr.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof Rn.getEnv().Canvas)return Pp.fromPixels(zfe(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Rt(n.map(r=>le(r,"float32"))).as4D(this.batchSize,e,e,3)})}};function xn(e){return D(this,null,function*(){if(e instanceof Oc)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(x0);return r.forEach((a,s)=>{if(!yI(a)&&!Yp(a)&&!fa(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(fa(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),yield Promise.all(r.map(a=>yI(a)&&Lfe(a))),new Oc(r,Array.isArray(e))})}function I0(e,t){return D(this,null,function*(){let{Canvas:n}=Rn.getEnv(),r=e;if(!(e instanceof n)){let s=yield xn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:yield Pfe(i)}let a=ss(r);return t.map(s=>s instanceof br?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let u=Mc({width:o,height:l});return o>0&&l>0&&ss(u).putImageData(a.getImageData(s,i,o,l),0,0),u})})}function S0(e,t){return D(this,null,function*(){if(!Yp(e)&&!fa(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(fa(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return V(()=>{let[n,r,a]=e.shape.slice(fa(e)?1:0);return t.map(s=>s instanceof br?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>Bu(e.as3D(n,r,a),[i,s,0],[l,o,a]))})})}function Bfe(e,t){return D(this,null,function*(){let{fetch:n}=Rn.getEnv(),r=yield n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r})}function Wfe(e){return D(this,null,function*(){return(yield Bfe(e)).json()})}function DF(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}function Vfe(e,t){return D(this,null,function*(){let{manifestUri:n,modelBaseUri:r}=DF(e,t),a=yield Wfe(n);return an.loadWeights(a,r)})}function RF(e,t,n=!1){let{width:r,height:a}=n?k0(t):t;return e.width=r,e.height=a,{width:r,height:a}}var ws=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Zs)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Zs))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=gn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}load(e){return D(this,null,function*(){if(e instanceof Float32Array){this.extractWeights(e);return}yield this.loadFromUri(e)})}loadFromUri(e){return D(this,null,function*(){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=yield Vfe(e,this.getDefaultModelName());this.loadFromWeightMap(t)})}loadFromDisk(e){return D(this,null,function*(){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=Rn.getEnv(),{manifestUri:n,modelBaseUri:r}=DF(e,this.getDefaultModelName()),a=l=>Promise.all(l.map(u=>t(u).then(d=>typeof d=="string"?Buffer.from(d):d.buffer))),s=an.weightsLoaderFactory(a),i=JSON.parse((yield t(n)).toString()),o=yield s(i,r);this.loadFromWeightMap(o)})}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Re))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function sr(e,t,n){return V(()=>{let r=zu(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=J(r,t.bias),r})}function nb(e,t,n=!1){return V(()=>{let r=nt(n?J(yn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):sr(e,t.conv0,[2,2])),a=sr(r,t.conv1,[1,1]),s=nt(J(r,a)),i=sr(s,t.conv2,[1,1]);return nt(J(r,J(a,i)))})}function Kh(e,t,n=!1,r=!0){return V(()=>{let a=nt(n?J(yn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):sr(e,t.conv0,r?[2,2]:[1,1])),s=sr(a,t.conv1,[1,1]),i=nt(J(a,s)),o=sr(i,t.conv2,[1,1]),l=nt(J(a,J(s,o))),u=sr(l,t.conv3,[1,1]);return nt(J(a,J(s,J(o,u))))})}function Ed(e,t,n="same",r=!1){return V(()=>{let a=J(yn(e,t.filters,[1,1],n),t.bias);return r?nt(a):a})}function ks(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function N0(e,t){return(n,r,a,s)=>{let i=Ya(e(n*r*a*a),[a,a,n,r]),o=et(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function MF(e,t){return(n,r,a)=>{let s=Xr(e(n*r),[n,r]),i=et(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var OF=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function T0(e,t){return(n,r,a)=>{let s=Ya(e(9*n),[3,3,n,1]),i=Ya(e(n*r),[1,1,n,r]),o=et(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new OF(s,i,o)}}function _0(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new OF(n,r,a)}}function Vo(e,t){return(n,r,a)=>{let s=e[n];if(!ed(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function Is(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function LF(e,t){let n=N0(e,t),r=T0(e,t);function a(i,o,l,u=!1){let d=u?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),h=r(o,o,`${l}/conv1`),p=r(o,o,`${l}/conv2`);return{conv0:d,conv1:h,conv2:p}}function s(i,o,l,u=!1){let{conv0:d,conv1:h,conv2:p}=a(i,o,l,u),c=r(o,o,`${l}/conv3`);return{conv0:d,conv1:h,conv2:p,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Ufe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Is(e),{extractDenseBlock4Params:a}=LF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function PF(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function zF(e,t){let n=Vo(e,t),r=PF(n),a=_0(n);function s(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),d=a(`${o}/conv1`),h=a(`${o}/conv2`);return{conv0:u,conv1:d,conv2:h}}function i(o,l=!1){let u=l?r(`${o}/conv0`):a(`${o}/conv0`),d=a(`${o}/conv1`),h=a(`${o}/conv2`),p=a(`${o}/conv3`);return{conv0:u,conv1:d,conv2:h,conv3:p}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Gfe(e){let t=[],{extractDenseBlock4Params:n}=zF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ks(e,t),{params:r,paramMappings:t}}var BF=class extends ws{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return V(()=>{let n=le(e.toBatchTensor(112,!0),"float32"),r=Qp(n,[122.782,117.001,104.298]).div(255),a=Kh(r,t.dense0,!0);return a=Kh(a,t.dense1),a=Kh(a,t.dense2),a=Kh(a,t.dense3),a=va(a,[7,7],[2,2],"valid"),a})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Gfe(e)}extractParams(e){return Ufe(e)}};function dx(e,t){return V(()=>J(Me(e,t.weights),t.bias))}function Hfe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=Is(e),i=MF(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function jfe(e){let t=[],n=Vo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return ks(e,t),{params:a,paramMappings:t}}function WF(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var VF=class extends ws{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return V(()=>{let n=e instanceof Oc?this.faceFeatureExtractor.forwardInput(e):e;return dx(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Hfe(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=WF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),jfe(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},bI=["neutral","happy","sad","angry","fearful","disgusted","surprised"],C0=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);bI.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return bI.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},qfe=class extends VF{constructor(e=new BF){super("FaceExpressionNet",e)}forwardInput(e){return V(()=>ms(this.runNet(e)))}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}predictExpressions(e){return D(this,null,function*(){let t=yield xn(e),n=yield this.forwardInput(t),r=yield Promise.all(Tt(n).map(s=>D(this,null,function*(){let i=s.dataSync();return s.dispose(),i})));n.dispose();let a=r.map(s=>new C0(s));return t.isBatchInput?a:a[0]})}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Kfe(e){return e.expressions instanceof C0}function UF(e,t){return _s(tr({},e),{expressions:t})}function Xfe(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof C0?a:Kfe(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=Xd(a)?a.detection.box.bottomLeft:r||new it(0,0);new w0(i.map(l=>`${l.expression} (${f0(l.probability)})`),o).draw(e)})}function E0(e){return Xd(e)&&e.landmarks instanceof Kd&&e.unshiftedLandmarks instanceof Kd&&e.alignedRect instanceof br}function Zfe(e){let t=l=>l*180/Math.PI,n=(l,u)=>Math.sqrt((l.x-u.x)**2+(l.y-u.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(l,u,d)=>{let h=Math.floor(l.x-u.x),p=Math.floor(u.x-d.x);return h-p},s=(l,u)=>{let d=Math.hypot(u.x-l.x,u.y-l.y),h=u.y-l.y,p=Math.asin(h/d),c=t(p),m=Math.floor(90-c),f=u.x-l.x<0?-1:1;return m*f},i=(l,u,d)=>{let h=n(l,d),p=new it((l.x+d.x)/2,(l.y+d.y)/2),c=n(u,p),m=Math.atan(c/h),f=Math.floor(t(m)),g=p.y-u.y<0?-1:1;return f*g};if(!e||!e.positions||e.positions.length!==68)return r;let o=e.positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function $0(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new br(e.detection.score,a.rescale(s.reverse()),s),o=Zfe(t);return _s(tr({},e),{landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o})}var GF=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},HF=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new GF(t)}draw(e){let t=ss(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof kF&&(t.strokeStyle=s,t.lineWidth=a,Ra(t,this.faceLandmarks.getJawOutline()),Ra(t,this.faceLandmarks.getLeftEyeBrow()),Ra(t,this.faceLandmarks.getRightEyeBrow()),Ra(t,this.faceLandmarks.getNose()),Ra(t,this.faceLandmarks.getLeftEye(),!0),Ra(t,this.faceLandmarks.getRightEye(),!0),Ra(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let l=u=>{t.beginPath(),t.arc(u.x,u.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(l)}}};function Jfe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Kd?n:E0(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new HF(r).draw(e)})}function Yfe(e,t){let n=N0(e,t),r=T0(e,t);function a(i,o,l){let u=r(i,o,`${l}/separable_conv0`),d=r(o,o,`${l}/separable_conv1`),h=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:u,separable_conv1:d,expansion_conv:h}}function s(i,o){let l=r(i,i,`${o}/separable_conv0`),u=r(i,i,`${o}/separable_conv1`),d=r(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:d}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Qfe(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=Is(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Yfe(r,n),u=s(3,32,3,"entry_flow/conv_in"),d=o(32,64,"entry_flow/reduction_block_0"),h=o(64,128,"entry_flow/reduction_block_1"),p={conv_in:u,reduction_block_0:d,reduction_block_1:h},c={};$l(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:p,middle_flow:c,exit_flow:g}}}function ege(e,t){let n=Vo(e,t),r=PF(n),a=_0(n);function s(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),d=r(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:u,expansion_conv:d}}function i(o){let l=a(`${o}/separable_conv0`),u=a(`${o}/separable_conv1`),d=a(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:u,separable_conv2:d}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function tge(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=ege(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),d={conv_in:o,reduction_block_0:l,reduction_block_1:u},h={};$l(t,0,1).forEach(f=>{h[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let p=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),m={reduction_block:p,separable_conv:c};return ks(e,n),{params:{entry_flow:d,middle_flow:h,exit_flow:m},paramMappings:n}}function jF(e,t,n){return J(yn(e,t.filters,n,"same"),t.bias)}function rb(e,t,n=!0){let r=n?nt(e):e;return r=sr(r,t.separable_conv0,[1,1]),r=sr(nt(r),t.separable_conv1,[1,1]),r=jt(r,[3,3],[2,2],"same"),r=J(r,jF(e,t.expansion_conv,[2,2])),r}function nge(e,t){let n=sr(nt(e),t.separable_conv0,[1,1]);return n=sr(nt(n),t.separable_conv1,[1,1]),n=sr(nt(n),t.separable_conv2,[1,1]),n=J(n,e),n}var rge=class extends ws{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return V(()=>{let n=le(e.toBatchTensor(112,!0),"float32"),r=Qp(n,[122.782,117.001,104.298]).div(255),a=nt(jF(r,t.entry_flow.conv_in,[2,2]));return a=rb(a,t.entry_flow.reduction_block_0,!1),a=rb(a,t.entry_flow.reduction_block_1),$l(this._numMainBlocks,0,1).forEach(s=>{a=nge(a,t.middle_flow[`main_block_${s}`])}),a=rb(a,t.exit_flow.reduction_block),a=nt(sr(a,t.exit_flow.separable_conv,[1,1])),a})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return tge(e,this._numMainBlocks)}extractParams(e){return Qfe(e,this._numMainBlocks)}};function age(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Is(e),a=MF(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function sge(e){let t=[],n=Vo(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ks(e,t),{params:a,paramMappings:t}}var ige=(e=>(e.FEMALE="female",e.MALE="male",e))(ige||{}),oge=class extends ws{constructor(e=new rge(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return V(()=>{let n=e instanceof Oc?this.faceFeatureExtractor.forwardInput(e):e,r=va(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=dx(r,t.fc.age).as1D(),s=dx(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return V(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:ms(n)}})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}predictAgeAndGender(e){return D(this,null,function*(){let t=yield xn(e),n=yield this.forwardInput(t),r=Tt(n.age),a=Tt(n.gender),s=r.map((o,l)=>({ageTensor:o,genderTensor:a[l]})),i=yield Promise.all(s.map(u=>D(this,[u],function*({ageTensor:o,genderTensor:l}){let d=o.dataSync()[0],h=l.dataSync()[0],p=h>.5,c=p?"male":"female",m=p?h:1-h;return o.dispose(),l.dispose(),{age:d,gender:c,genderProbability:m}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]})}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return age(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=WF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),sge(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},qF=class extends VF{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return V(()=>{let s=(u,d)=>Rt([Un([68],u,"float32"),Un([68],d,"float32")],1).as2D(1,136).as1D(),i=(u,d)=>{let{width:h,height:p}=r[u];return d(h,p)?Math.abs(h-p)/2:0},o=u=>i(u,(d,h)=>d<h),l=u=>i(u,(d,h)=>h<d);return e.mul(Un([a,136],t,"float32")).sub(Rt(Array.from(Array(a),(u,d)=>s(o(d),l(d))))).div(Rt(Array.from(Array(a),(u,d)=>s(r[d].width,r[d].height))))})}forwardInput(e){return V(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}detectLandmarks(e){return D(this,null,function*(){let t=yield xn(e),n=V(()=>Tt(this.forwardInput(t))),r=yield Promise.all(n.map((a,s)=>D(this,null,function*(){let i=Array.from(a.dataSync()),o=i.filter((u,d)=>ox(d)),l=i.filter((u,d)=>!ox(d));return new kF(Array(68).fill(0).map((u,d)=>new it(o[d],l[d])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})})));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]})}getClassifierChannelsOut(){return 136}},lge=class extends qF{constructor(e=new BF){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function uge(e){let t=[],{extractDenseBlock3Params:n}=zF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ks(e,t),{params:r,paramMappings:t}}function dge(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Is(e),{extractDenseBlock3Params:a}=LF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var pge=class extends ws{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return V(()=>{let n=le(e.toBatchTensor(112,!0),"float32"),r=Qp(n,[122.782,117.001,104.298]).div(255),a=nb(r,t.dense0,!0);return a=nb(a,t.dense1),a=nb(a,t.dense2),a=va(a,[14,14],[2,2],"valid"),a})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return uge(e)}extractParams(e){return dge(e)}},hge=class extends qF{constructor(e=new pge){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function cge(e,t){return J(z(e,t.weights),t.biases)}function A0(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=yn(e,s,n,a);return o=J(o,i),o=cge(o,t.scale),r?nt(o):o}function mge(e,t){return A0(e,t,[1,1],!0)}function KF(e,t){return A0(e,t,[1,1],!1)}function XF(e,t){return A0(e,t,[2,2],!0,"valid")}function fge(e,t){function n(o,l,u){let d=e(o),h=d.length/(l*u*u);if(fF(h))throw new Error(`depth has to be an integer: ${h}, weights.length: ${d.length}, numFilters: ${l}, filterSize: ${u}`);return V(()=>Oe(Ya(d,[l,h,u,u]),[2,3,1,0]))}function r(o,l,u,d){let h=n(o,l,u),p=et(e(l));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/bias`}),{filters:h,bias:p}}function a(o,l){let u=et(e(o)),d=et(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:u,biases:d}}function s(o,l,u,d){let h=r(o,l,u,`${d}/conv`),p=a(l,`${d}/scale`);return{conv:h,scale:p}}function i(o,l,u,d,h=!1){let p=s((h?.5:1)*o,l,u,`${d}/conv1`),c=s(o,l,u,`${d}/conv2`);return{conv1:p,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function gge(e){let{extractWeights:t,getRemainingWeights:n}=Is(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=fge(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),d=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),p=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),I=V(()=>Oe(Xr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:d,conv64_1:h,conv64_2:p,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:I},paramMappings:r}}function yge(e,t){let n=Vo(e,t);function r(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),u=r(i);return{conv:{filters:o,bias:l},scale:u}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function bge(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=yge(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),d=r("conv64_2"),h=r("conv64_3"),p=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!mF(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:d,conv64_3:h,conv128_down:p,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ks(e,t),{params:v,paramMappings:t}}function zr(e,t){let n=mge(e,t.conv1);return n=KF(n,t.conv2),n=J(n,e),n=nt(n),n}function Xh(e,t){let n=XF(e,t.conv1);n=KF(n,t.conv2);let r=va(e,2,2,"valid"),a=It(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=It(i);n=lt([n,o],1);let l=[...n.shape];l[2]=1;let u=It(l);n=lt([n,u],2)}return r=s?lt([r,a],3):r,n=J(r,n),n=nt(n),n}var xge=class extends ws{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return V(()=>{let n=le(e.toBatchTensor(150,!0),"float32"),r=Qp(n,[122.782,117.001,104.298]).div(255),a=XF(r,t.conv32_down);a=jt(a,3,2,"valid"),a=zr(a,t.conv32_1),a=zr(a,t.conv32_2),a=zr(a,t.conv32_3),a=Xh(a,t.conv64_down),a=zr(a,t.conv64_1),a=zr(a,t.conv64_2),a=zr(a,t.conv64_3),a=Xh(a,t.conv128_down),a=zr(a,t.conv128_1),a=zr(a,t.conv128_2),a=Xh(a,t.conv256_down),a=zr(a,t.conv256_1),a=zr(a,t.conv256_2),a=Xh(a,t.conv256_down_out);let s=a.mean([1,2]);return Me(s,t.fc)})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}computeFaceDescriptor(e){return D(this,null,function*(){var t;if((t=e?.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=yield xn(e),r=V(()=>Tt(this.forwardInput(n))),a=yield Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]})}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return bge(e)}extractParams(e){return gge(e)}};function ZF(e,t){return _s(tr({},e),{descriptor:t})}function JF(e,t){return _s(tr({},e),{age:t})}function YF(e,t,n){return _s(tr({},e),{gender:t,genderProbability:n})}function vge(e,t){function n(l,u){let d=Ya(e(9*l),[3,3,l,1]),h=et(e(l)),p=et(e(l)),c=et(e(l)),m=et(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:d,batch_norm_scale:h,batch_norm_offset:p,batch_norm_mean:c,batch_norm_variance:m}}function r(l,u,d,h,p){let c=Ya(e(l*u*d*d),[d,d,l,u]),m=et(e(u));return t.push({paramPath:`${h}/filters`},{paramPath:`${h}/${p?"batch_norm_offset":"bias"}`}),{filters:c,bias:m}}function a(l,u,d,h){let{filters:p,bias:c}=r(l,u,d,h,!0);return{filters:p,batch_norm_offset:c}}function s(l,u,d){let h=n(l,`${d}/depthwise_conv`),p=a(l,u,1,`${d}/pointwise_conv`);return{depthwise_conv:h,pointwise_conv:p}}function i(){let l=a(3,32,3,"mobilenetv1/conv_0"),u=s(32,64,"mobilenetv1/conv_1"),d=s(64,128,"mobilenetv1/conv_2"),h=s(128,128,"mobilenetv1/conv_3"),p=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:u,conv_2:d,conv_3:h,conv_4:p,conv_5:c,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:I}}function o(){let l=a(1024,256,1,"prediction_layer/conv_0"),u=a(256,512,3,"prediction_layer/conv_1"),d=a(512,128,1,"prediction_layer/conv_2"),h=a(128,256,3,"prediction_layer/conv_3"),p=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),m=a(256,64,1,"prediction_layer/conv_6"),f=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),N=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),_=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:u,conv_2:d,conv_3:h,conv_4:p,conv_5:c,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:I},box_predictor_3:{box_encoding_predictor:N,class_predictor:_},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function wge(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Is(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=vge(n,t),i=a(),o=s(),l={extra_dim:Nm(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function kge(e,t){let n=Vo(e,t);function r(u,d,h){let p=n(`${u}/Conv2d_${d}_pointwise/weights`,4,`${h}/filters`),c=n(`${u}/Conv2d_${d}_pointwise/convolution_bn_offset`,1,`${h}/batch_norm_offset`);return{filters:p,batch_norm_offset:c}}function a(u){let d=`mobilenetv1/conv_${u}`,h=`MobilenetV1/Conv2d_${u}_depthwise`,p=`${d}/depthwise_conv`,c=`${d}/pointwise_conv`,m=n(`${h}/depthwise_weights`,4,`${p}/filters`),f=n(`${h}/BatchNorm/gamma`,1,`${p}/batch_norm_scale`),g=n(`${h}/BatchNorm/beta`,1,`${p}/batch_norm_offset`),y=n(`${h}/BatchNorm/moving_mean`,1,`${p}/batch_norm_mean`),b=n(`${h}/BatchNorm/moving_variance`,1,`${p}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",u,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(u,d){let h=n(`${u}/weights`,4,`${d}/filters`),p=n(`${u}/biases`,1,`${d}/bias`);return{filters:h,bias:p}}function o(u){let d=i(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),h=i(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`);return{box_encoding_predictor:d,class_predictor:h}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function Ige(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=kge(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Yp(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ks(e,t),{params:s,paramMappings:t}}function Vr(e,t,n){return V(()=>{let r=yn(e,t.filters,n,"same");return r=J(r,t.batch_norm_offset),un(r,0,6)})}var Sge=.0010000000474974513;function Nge(e,t,n){return V(()=>{let r=Fo(e,t.filters,n,"same");return r=Ao(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Sge),un(r,0,6)})}function Tge(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function _ge(e,t){return V(()=>{let n,r=Vr(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=Tge(i);r=Nge(r,a.depthwise_conv,o),r=Vr(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function Cge(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),d=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),p=(i-a)*(o-s),c=(d-l)*(h-u);if(p<=0||c<=0)return 0;let m=Math.max(a,l),f=Math.max(s,u),g=Math.min(i,d),y=Math.min(o,h),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(p+c-b)}function Ege(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((d,h)=>({score:d,boxIndex:h})).filter(d=>d.score>a).sort((d,h)=>h.score-d.score),l=d=>d<=r?1:0,u=[];return o.forEach(d=>{if(u.length>=i)return;let h=d.score;for(let p=u.length-1;p>=0;--p){let c=Cge(e,d.boxIndex,u[p]);if(c!==0&&(d.score*=l(c),d.score<=a))break}h===d.score&&u.push(d.boxIndex)}),u}function $ge(e){let t=Tt(Oe(e,[1,0])),n=[ce(t[2],t[0]),ce(t[3],t[1])],r=[J(t[0],me(n[0],2)),J(t[1],me(n[1],2))];return{sizes:n,centers:r}}function Age(e,t){let{sizes:n,centers:r}=$ge(e),a=Tt(Oe(t,[1,0])),s=me(z(dn(me(a[2],5)),n[0]),2),i=J(z(me(a[0],10),n[0]),r[0]),o=me(z(dn(me(a[3],5)),n[1]),2),l=J(z(me(a[1],10),n[1]),r[1]);return Oe(Rt([ce(i,s),ce(l,o),J(i,s),J(l,o)]),[1,0])}function Fge(e,t,n){return V(()=>{let r=e.shape[0],a=Age(W(Vn(n.extra_dim,[r,1,1]),[-1,4]),W(e,[-1,4]));a=W(a,[r,a.shape[0]/r,4]);let s=gr(Ge(t,[0,0,1],[-1,-1,-1])),i=Ge(s,[0,0,0],[-1,-1,1]);i=W(i,[r,i.shape[1]]);let o=Tt(a),l=Tt(i);return{boxes:o,scores:l}})}function nl(e,t){return V(()=>{let n=e.shape[0],r=W(Ed(e,t.box_encoding_predictor),[n,-1,1,4]),a=W(Ed(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Dge(e,t,n){return V(()=>{let r=Vr(e,n.conv_0,[1,1]),a=Vr(r,n.conv_1,[2,2]),s=Vr(a,n.conv_2,[1,1]),i=Vr(s,n.conv_3,[2,2]),o=Vr(i,n.conv_4,[1,1]),l=Vr(o,n.conv_5,[2,2]),u=Vr(l,n.conv_6,[1,1]),d=Vr(u,n.conv_7,[2,2]),h=nl(t,n.box_predictor_0),p=nl(e,n.box_predictor_1),c=nl(a,n.box_predictor_2),m=nl(i,n.box_predictor_3),f=nl(l,n.box_predictor_4),g=nl(d,n.box_predictor_5),y=lt([h.boxPredictionEncoding,p.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=lt([h.classPrediction,p.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Qm=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Rge=class extends ws{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return V(()=>{let n=le(e.toBatchTensor(512,!1),"float32"),r=ce(me(n,127.5),1),a=_ge(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Dge(a.out,a.conv11,t.prediction_layer);return Fge(s,i,t.output_layer)})}forward(e){return D(this,null,function*(){return this.forwardInput(yield xn(e))})}locateFaces(n){return D(this,arguments,function*(e,t={}){let{maxResults:r,minConfidence:a}=new Qm(t),s=yield xn(e),{boxes:i,scores:o}=this.forwardInput(s),l=i[0],u=o[0];for(let b=1;b<i.length;b++)i[b].dispose(),o[b].dispose();let d=Array.from(u.dataSync()),h=Ege(l,d,r,.5,a),p=s.getReshapedInputDimensions(0),c=s.inputSize,m=c/p.width,f=c/p.height,g=l.arraySync(),y=h.map(b=>{let[x,v]=[Math.max(0,g[b][0]),Math.min(1,g[b][2])].map(_=>_*f),[I,N]=[Math.max(0,g[b][1]),Math.min(1,g[b][3])].map(_=>_*m);return new br(d[b],new wF(I,x,N-I,v-x),{height:s.getInputHeight(0),width:s.getInputWidth(0)})});return l.dispose(),u.dispose(),y})}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Ige(e)}extractParams(e){return wge(e)}};var Mge=.4,Oge=[new it(.738768,.874946),new it(2.42204,2.65704),new it(4.30971,7.04493),new it(10.246,4.59428),new it(12.6868,11.8741)],Lge=[new it(1.603231,2.094468),new it(6.041143,7.080126),new it(2.882459,3.518061),new it(4.266906,5.178857),new it(9.041765,10.66308)],Pge=[117.001,114.697,97.404],zge="tiny_yolov2_model",Bge="tiny_yolov2_separable_conv_model",Zh=e=>typeof e=="number";function Wge(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Zh(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Zh(t.x)&&Zh(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Zh)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function F0(e){return V(()=>{let t=z(e,we(.10000000149011612));return J(nt(ce(e,t)),t)})}function $a(e,t){return V(()=>{let n=Rr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=yn(n,t.conv.filters,[1,1],"valid"),n=ce(n,t.bn.sub),n=z(n,t.bn.truediv),n=J(n,t.conv.bias),F0(n)})}function Aa(e,t){return V(()=>{let n=Rr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=zu(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=J(n,t.bias),F0(n)})}function Vge(e,t){let n=N0(e,t);function r(i,o){let l=et(e(i)),u=et(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:u}}function a(i,o,l){let u=n(i,o,3,`${l}/conv`),d=r(o,`${l}/bn`);return{conv:u,bn:d}}let s=T0(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Uge(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=Is(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:u}=Vge(a,i),d;if(t.withSeparableConvs){let[h,p,c,m,f,g,y,b,x]=r,v=t.isFirstLayerConv2d?o(h,p,3,"conv0"):u(h,p,"conv0"),I=u(p,c,"conv1"),N=u(c,m,"conv2"),_=u(m,f,"conv3"),E=u(f,g,"conv4"),A=u(g,y,"conv5"),R=b?u(y,b,"conv6"):void 0,F=x?u(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");d={conv0:v,conv1:I,conv2:N,conv3:_,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}else{let[h,p,c,m,f,g,y,b,x]=r,v=l(h,p,"conv0"),I=l(p,c,"conv1"),N=l(c,m,"conv2"),_=l(m,f,"conv3"),E=l(f,g,"conv4"),A=l(g,y,"conv5"),R=l(y,b,"conv6"),F=l(b,x,"conv7"),S=o(x,5*n,1,"conv8");d={conv0:v,conv1:I,conv2:N,conv3:_,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:d,paramMappings:i}}function Gge(e,t){let n=Vo(e,t);function r(o){let l=n(`${o}/sub`,1),u=n(`${o}/truediv`,1);return{sub:l,truediv:u}}function a(o){let l=n(`${o}/filters`,4),u=n(`${o}/bias`,1);return{filters:l,bias:u}}function s(o){let l=a(`${o}/conv`),u=r(`${o}/bn`);return{conv:l,bn:u}}let i=_0(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Hge(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=Gge(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ks(e,n),{params:i,paramMappings:n}}var D0=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},jge=(()=>{let e=class QF extends ws{constructor(n){super("TinyYolov2"),Wge(n),this._config=n}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(n,r){let a=$a(n,r.conv0);return a=jt(a,[2,2],[2,2],"same"),a=$a(a,r.conv1),a=jt(a,[2,2],[2,2],"same"),a=$a(a,r.conv2),a=jt(a,[2,2],[2,2],"same"),a=$a(a,r.conv3),a=jt(a,[2,2],[2,2],"same"),a=$a(a,r.conv4),a=jt(a,[2,2],[2,2],"same"),a=$a(a,r.conv5),a=jt(a,[2,2],[1,1],"same"),a=$a(a,r.conv6),a=$a(a,r.conv7),Ed(a,r.conv8,"valid",!1)}runMobilenet(n,r){let a=this.config.isFirstLayerConv2d?F0(Ed(n,r.conv0,"valid",!1)):Aa(n,r.conv0);return a=jt(a,[2,2],[2,2],"same"),a=Aa(a,r.conv1),a=jt(a,[2,2],[2,2],"same"),a=Aa(a,r.conv2),a=jt(a,[2,2],[2,2],"same"),a=Aa(a,r.conv3),a=jt(a,[2,2],[2,2],"same"),a=Aa(a,r.conv4),a=jt(a,[2,2],[2,2],"same"),a=Aa(a,r.conv5),a=jt(a,[2,2],[1,1],"same"),a=r.conv6?Aa(a,r.conv6):a,a=r.conv7?Aa(a,r.conv7):a,Ed(a,r.conv8,"valid",!1)}forwardInput(n,r){let{params:a}=this;if(!a)throw new Error("TinyYolov2 - load model before inference");return V(()=>{let s=le(n.toBatchTensor(r,!1),"float32");return s=this.config.meanRgb?Qp(s,this.config.meanRgb):s,s=s.div(255),this.config.withSeparableConvs?this.runMobilenet(s,a):this.runTinyYolov2(s,a)})}forward(n,r){return D(this,null,function*(){return this.forwardInput(yield xn(n),r)})}detect(a){return D(this,arguments,function*(n,r={}){let{inputSize:s,scoreThreshold:i}=new D0(r),o=yield xn(n),l=yield this.forwardInput(o,s),u=V(()=>Tt(l)[0].expandDims()),d={width:o.getInputWidth(0),height:o.getInputHeight(0)},h=yield this.extractBoxes(u,o.getReshapedInputDimensions(0),i);l.dispose(),u.dispose();let p=h.map(g=>g.box),c=h.map(g=>g.score),m=h.map(g=>g.classScore),f=h.map(g=>this.config.classes[g.label]);return Efe(p.map(g=>g.rescale(s)),c,this.config.iouThreshold,!0).map(g=>new bF(c[g],m[g],f[g],p[g],d))})}getDefaultModelName(){return""}extractParamsFromWeightMap(n){return Hge(n,this.config)}extractParams(n){let r=this.config.filterSizes||QF.DEFAULT_FILTER_SIZES,a=r?r.length:void 0;if(a!==7&&a!==8&&a!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${a} filterSizes in config`);return Uge(n,this.config,this.boxEncodingSize,r)}extractBoxes(n,r,a){return D(this,null,function*(){let{width:s,height:i}=r,o=Math.max(s,i),l=o/s,u=o/i,d=n.shape[1],h=this.config.anchors.length,[p,c,m]=V(()=>{let b=n.reshape([d,d,h,this.boxEncodingSize]),x=b.slice([0,0,0,0],[d,d,h,4]),v=b.slice([0,0,0,4],[d,d,h,1]),I=this.withClassScores?ms(b.slice([0,0,0,5],[d,d,h,this.config.classes.length]),3):we(0);return[x,v,I]}),f=[],g=yield c.array(),y=yield p.array();for(let b=0;b<d;b++)for(let x=0;x<d;x++)for(let v=0;v<h;v++){let I=tb(g[b][x][v][0]);if(!a||I>a){let N=(x+tb(y[b][x][v][0]))/d*l,_=(b+tb(y[b][x][v][1]))/d*u,E=Math.exp(y[b][x][v][2])*this.config.anchors[v].x/d*l,A=Math.exp(y[b][x][v][3])*this.config.anchors[v].y/d*u,R=N-E/2,F=_-A/2,S={row:b,col:x,anchor:v},{classScore:O,label:B}=this.withClassScores?yield this.extractPredictedClass(m,S):{classScore:1,label:0};f.push(tr({box:new yF(R,F,R+E,F+A),score:I,classScore:I*O,label:B},S))}}return p.dispose(),c.dispose(),m.dispose(),f})}extractPredictedClass(n,r){return D(this,null,function*(){let{row:a,col:s,anchor:i}=r,o=yield n.array();return Array(this.config.classes.length).fill(0).map((l,u)=>o[a][s][i][u]).map((l,u)=>({classScore:l,label:u})).reduce((l,u)=>l.classScore>u.classScore?l:u)})}};return e.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024],e})(),eD=jge,qge=class extends eD{constructor(e=!0){let t=tr({withSeparableConvs:e,iouThreshold:Mge,classes:["face"]},e?{anchors:Lge,meanRgb:Pge}:{anchors:Oge,withClassScores:!0});super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}locateFaces(e,t){return D(this,null,function*(){return(yield this.detect(e,t)).map(n=>new br(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))})}getDefaultModelName(){return this.withSeparableConvs?Bge:zge}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var ef=class extends D0{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},eh=class{then(e){return D(this,null,function*(){return e(yield this.run())})}run(){return D(this,null,function*(){throw new Error("ComposableTask - run is not implemented")})}};function tf(e,t,n,r,a=({alignedRect:s})=>s){return D(this,null,function*(){let s=e.map(l=>E0(l)?a(l):l.detection),i=r||(t instanceof Re?yield S0(t,s):yield I0(t,s)),o=yield n(i);return i.forEach(l=>l instanceof Re&&l.dispose()),o})}function R0(e,t,n,r,a){return D(this,null,function*(){return tf([e],t,s=>D(this,null,function*(){return n(s[0])}),r,a)})}var Kge=.4,Xge=[new it(1.603231,2.094468),new it(6.041143,7.080126),new it(2.882459,3.518061),new it(4.266906,5.178857),new it(9.041765,10.66308)],Zge=[117.001,114.697,97.404],Jge=class extends eD{constructor(){let e={withSeparableConvs:!0,iouThreshold:Kge,classes:["face"],anchors:Xge,meanRgb:Zge,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}locateFaces(e,t){return D(this,null,function*(){return(yield this.detect(e,t)).map(n=>new br(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))})}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},sn={ssdMobilenetv1:new Rge,tinyFaceDetector:new Jge,tinyYolov2:new qge,faceLandmark68Net:new lge,faceLandmark68TinyNet:new hge,faceRecognitionNet:new xge,faceExpressionNet:new qfe,ageGenderNet:new oge};var tD=class extends eh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},M0=class extends tD{run(){return D(this,null,function*(){let e=yield this.parentTask,t=yield tf(e,this.input,n=>D(this,null,function*(){return Promise.all(n.map(r=>sn.faceExpressionNet.predictExpressions(r)))}),this.extractedFaces);return e.map((n,r)=>UF(n,t[r]))})}withAgeAndGender(){return new z0(this,this.input)}},O0=class extends tD{run(){return D(this,null,function*(){let e=yield this.parentTask;if(!e)return;let t=yield R0(e,this.input,n=>sn.faceExpressionNet.predictExpressions(n),this.extractedFaces);return UF(e,t)})}withAgeAndGender(){return new B0(this,this.input)}},L0=class extends M0{withAgeAndGender(){return new W0(this,this.input)}withFaceDescriptors(){return new U0(this,this.input)}},P0=class extends O0{withAgeAndGender(){return new V0(this,this.input)}withFaceDescriptor(){return new G0(this,this.input)}},nD=class extends eh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},z0=class extends nD{run(){return D(this,null,function*(){let e=yield this.parentTask,t=yield tf(e,this.input,n=>D(this,null,function*(){return Promise.all(n.map(r=>sn.ageGenderNet.predictAgeAndGender(r)))}),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return JF(YF(n,s,i),a)})})}withFaceExpressions(){return new M0(this,this.input)}},B0=class extends nD{run(){return D(this,null,function*(){let e=yield this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=yield R0(e,this.input,a=>sn.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return JF(YF(e,n,r),t)})}withFaceExpressions(){return new O0(this,this.input)}},W0=class extends z0{withFaceExpressions(){return new L0(this,this.input)}withFaceDescriptors(){return new U0(this,this.input)}},V0=class extends B0{withFaceExpressions(){return new P0(this,this.input)}withFaceDescriptor(){return new G0(this,this.input)}},rD=class extends eh{constructor(e,t){super(),this.parentTask=e,this.input=t}},U0=class extends rD{run(){return D(this,null,function*(){let e=yield this.parentTask;return(yield tf(e,this.input,t=>Promise.all(t.map(n=>sn.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>ZF(e[n],t))})}withFaceExpressions(){return new L0(this,this.input)}withAgeAndGender(){return new W0(this,this.input)}},G0=class extends rD{run(){return D(this,null,function*(){let e=yield this.parentTask;if(!e)return;let t=yield R0(e,this.input,n=>sn.faceRecognitionNet.computeFaceDescriptor(n),null,n=>n.landmarks.align(null,{useDlibAlignment:!0}));return ZF(e,t)})}withFaceExpressions(){return new P0(this,this.input)}withAgeAndGender(){return new V0(this,this.input)}},aD=class extends eh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?sn.faceLandmark68TinyNet:sn.faceLandmark68Net}},Yge=class extends aD{run(){return D(this,null,function*(){let e=yield this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof Re?yield S0(this.input,t):yield I0(this.input,t),r=yield Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof Re&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>$0(a,r[s]))})}withFaceExpressions(){return new L0(this,this.input)}withAgeAndGender(){return new W0(this,this.input)}withFaceDescriptors(){return new U0(this,this.input)}},Qge=class extends aD{run(){return D(this,null,function*(){let e=yield this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Re?yield S0(this.input,[t]):yield I0(this.input,[t]),r=yield this.landmarkNet.detectLandmarks(n[0]);return n.forEach(a=>a instanceof Re&&a.dispose()),$0(e,r)})}withFaceExpressions(){return new P0(this,this.input)}withAgeAndGender(){return new V0(this,this.input)}withFaceDescriptor(){return new G0(this,this.input)}},sD=class extends eh{constructor(e,t=new Qm){super(),this.input=e,this.options=t}},eye=class extends sD{run(){return D(this,null,function*(){let{input:e,options:t}=this,n;if(t instanceof ef)n=sn.tinyFaceDetector.locateFaces(e,t);else if(t instanceof Qm)n=sn.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof D0)n=sn.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n})}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>Rc({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Yge(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new M0(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new z0(this.runAndExtendWithFaceDetections(),this.input)}},tye=class extends sD{run(){return D(this,null,function*(){let e=yield new eye(this.input,this.options),t=e[0];return e.forEach(n=>{n.score>t.score&&(t=n)}),t})}runAndExtendWithFaceDetection(){return new Promise(e=>D(this,null,function*(){let t=yield this.run();e(t?Rc({},t):void 0)}))}withFaceLandmarks(e=!1){return new Qge(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new O0(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new B0(this.runAndExtendWithFaceDetection(),this.input)}};function H0(e,t=new Qm){return new tye(e,t)}function j0(e,t){let{width:n,height:r}=new Hs(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>j0(a,{width:n,height:r}));if(E0(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return $0(Rc(e,a),s)}return Xd(e)?Rc(e,e.detection.forSize(n,r)):e instanceof Kd||e instanceof br?e.forSize(n,r):e}var rye=["determinateSpinner"];function aye(e,t){if(e&1&&(Oy(),Lr(0,"svg",11),Qo(1,"circle",12),Pr()),e&2){let n=k1();Jo("viewBox",n._viewBox()),kr(),Es("stroke-dasharray",n._strokeCircumference(),"px")("stroke-dashoffset",n._strokeCircumference()/2,"px")("stroke-width",n._circleStrokeWidth(),"%"),Jo("r",n._circleRadius())}}var sye=new l1("mat-progress-spinner-default-options",{providedIn:"root",factory:iye});function iye(){return{diameter:iD}}var iD=100,oye=10,oD=(()=>{class e{_elementRef=Eh(h1);_noopAnimations;get color(){return this._color||this._defaultColor}set color(n){this._color=n}_color;_defaultColor="primary";_determinateCircle;constructor(){let n=Eh(c1,{optional:!0}),r=Eh(sye);this._noopAnimations=n==="NoopAnimations"&&!!r&&!r._forceAnimations,this.mode=this._elementRef.nativeElement.nodeName.toLowerCase()==="mat-spinner"?"indeterminate":"determinate",r&&(r.color&&(this.color=this._defaultColor=r.color),r.diameter&&(this.diameter=r.diameter),r.strokeWidth&&(this.strokeWidth=r.strokeWidth))}mode;get value(){return this.mode==="determinate"?this._value:0}set value(n){this._value=Math.max(0,Math.min(100,n||0))}_value=0;get diameter(){return this._diameter}set diameter(n){this._diameter=n||0}_diameter=iD;get strokeWidth(){return this._strokeWidth??this.diameter/10}set strokeWidth(n){this._strokeWidth=n||0}_strokeWidth;_circleRadius(){return(this.diameter-oye)/2}_viewBox(){let n=this._circleRadius()*2+this.strokeWidth;return`0 0 ${n} ${n}`}_strokeCircumference(){return 2*Math.PI*this._circleRadius()}_strokeDashOffset(){return this.mode==="determinate"?this._strokeCircumference()*(100-this._value)/100:null}_circleStrokeWidth(){return this.strokeWidth/this.diameter*100}static \u0275fac=function(r){return new(r||e)};static \u0275cmp=$h({type:e,selectors:[["mat-progress-spinner"],["mat-spinner"]],viewQuery:function(r,a){if(r&1&&I1(rye,5),r&2){let s;S1(s=N1())&&(a._determinateCircle=s.first)}},hostAttrs:["role","progressbar","tabindex","-1",1,"mat-mdc-progress-spinner","mdc-circular-progress"],hostVars:18,hostBindings:function(r,a){r&2&&(Jo("aria-valuemin",0)("aria-valuemax",100)("aria-valuenow",a.mode==="determinate"?a.value:null)("mode",a.mode),b1("mat-"+a.color),Es("width",a.diameter,"px")("height",a.diameter,"px")("--mdc-circular-progress-size",a.diameter+"px")("--mdc-circular-progress-active-indicator-width",a.diameter+"px"),y1("_mat-animation-noopable",a._noopAnimations)("mdc-circular-progress--indeterminate",a.mode==="indeterminate"))},inputs:{color:"color",mode:"mode",value:[2,"value","value",Dh],diameter:[2,"diameter","diameter",Dh],strokeWidth:[2,"strokeWidth","strokeWidth",Dh]},exportAs:["matProgressSpinner"],features:[g1],decls:14,vars:11,consts:[["circle",""],["determinateSpinner",""],["aria-hidden","true",1,"mdc-circular-progress__determinate-container"],["xmlns","http://www.w3.org/2000/svg","focusable","false",1,"mdc-circular-progress__determinate-circle-graphic"],["cx","50%","cy","50%",1,"mdc-circular-progress__determinate-circle"],["aria-hidden","true",1,"mdc-circular-progress__indeterminate-container"],[1,"mdc-circular-progress__spinner-layer"],[1,"mdc-circular-progress__circle-clipper","mdc-circular-progress__circle-left"],[3,"ngTemplateOutlet"],[1,"mdc-circular-progress__gap-patch"],[1,"mdc-circular-progress__circle-clipper","mdc-circular-progress__circle-right"],["xmlns","http://www.w3.org/2000/svg","focusable","false",1,"mdc-circular-progress__indeterminate-circle-graphic"],["cx","50%","cy","50%"]],template:function(r,a){if(r&1&&(Ah(0,aye,2,8,"ng-template",null,0,C1),Lr(2,"div",2,1),Oy(),Lr(4,"svg",3),Qo(5,"circle",4),Pr()(),p1(),Lr(6,"div",5)(7,"div",6)(8,"div",7),Fh(9,8),Pr(),Lr(10,"div",9),Fh(11,8),Pr(),Lr(12,"div",10),Fh(13,8),Pr()()()),r&2){let s=_1(1);kr(4),Jo("viewBox",a._viewBox()),kr(),Es("stroke-dasharray",a._strokeCircumference(),"px")("stroke-dashoffset",a._strokeDashOffset(),"px")("stroke-width",a._circleStrokeWidth(),"%"),Jo("r",a._circleRadius()),kr(4),Yo("ngTemplateOutlet",s),kr(2),Yo("ngTemplateOutlet",s),kr(2),Yo("ngTemplateOutlet",s)}},dependencies:[E1],styles:[".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}"],encapsulation:2,changeDetection:0})}return e})();var lD=(()=>{class e{static \u0275fac=function(r){return new(r||e)};static \u0275mod=f1({type:e});static \u0275inj=o1({imports:[$1]})}return e})();var uye=["video"],dye=["canvas"];function pye(e,t){e&1&&(Lr(0,"div",2),Qo(1,"mat-spinner"),Pr())}var ake=(()=>{class e{constructor(){this.video=Ly("video"),this.canvas=Ly("canvas"),this.detectionTimer=Ea(0),this.drawDetection=Ea(!1),this.width=Ea(0),this.height=Ea(0),this.missingLimit=Ea(10),this.enableFaceAndGender=Ea(!1),this.enableLandmarks=Ea(!1),this.detectionReady=ud(),this.detectionChanges=ud(),this.firstDetection=ud(),this.detectionFace=ud(),this.loading=m1(!1),this.faceDetected=!1,this.faceMissingDetection=0,this.firstDetectionHappen=!1,this.faceDetectionReady=!1}ngOnDestroy(){this.stream&&this.stream.getTracks().forEach(n=>n.stop())}ngAfterViewInit(){this.run()}run(){return D(this,null,function*(){this.loading.set(!0),this.stream=yield navigator.mediaDevices.getUserMedia({video:{}}),this.video().nativeElement.srcObject=this.stream;let n="/assets/weights/";document.location.hostname.includes("github.io")&&(n="/try-not-to-laugh"+n);let r=[sn.tinyFaceDetector.loadFromUri(n),sn.faceRecognitionNet.loadFromUri(n),sn.faceExpressionNet.loadFromUri(n)];this.enableFaceAndGender()&&r.push(sn.ageGenderNet.loadFromUri(n)),this.enableLandmarks()&&r.push(sn.faceLandmark68Net.loadFromUri(n)),yield Promise.all(r),this.loading.set(!1)})}onPlay(){return D(this,null,function*(){let n=this.video().nativeElement;if(n.paused||n.ended||!sn.tinyFaceDetector.params||this.loading()){clearTimeout(this.timer),this.timer=setTimeout(()=>this.onPlay(),this.detectionTimer());return}this.faceDetectionReady||(this.faceDetectionReady=!0,this.detectionReady.emit(this.faceDetectionReady));let r,a=this.enableLandmarks();a?r=H0(n,new ef).withFaceLandmarks():r=H0(n,new ef);let s,i=this.enableFaceAndGender();i?s=r.withFaceExpressions().withAgeAndGender():s=r.withFaceExpressions();let o=yield s;if(o?(this.firstDetectionHappen||(this.firstDetectionHappen=!0,this.firstDetection.emit(!0)),this.faceMissingDetection=0):this.firstDetectionHappen&&this.faceMissingDetection++,this.drawDetection()){let u=this.canvas().nativeElement;if(o){u.style.display="block";let d=n.getBoundingClientRect(),h=RF(u,d,!0),p;try{if(h&&h.height>0&&h.width>0)p=j0(o,h);else return}catch{return}if(Qu.drawDetections(u,p),Qu.drawFaceExpressions(u,p,.05),a&&Qu.drawFaceLandmarks(u,p),i){let{age:c,gender:m,genderProbability:f}=p;new Qu.DrawTextField([`${Math.round(c)} years`,`${m} (${Math.round(f*100)} %)`],o.detection.box.bottomLeft).draw(u)}}else u.style.display="none"}this.detectionChanges.emit(o?.expressions);let l=this.faceMissingDetection<this.missingLimit();this.firstDetectionHappen||(l=!1),this.faceDetected!==l&&(this.faceDetected=l,this.detectionFace.emit(this.faceDetected)),clearTimeout(this.timer),this.timer=setTimeout(()=>this.onPlay(),this.detectionTimer())})}pauseVideo(){this.video().nativeElement.pause()}playVideo(){this.video().nativeElement.play()}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275cmp=$h({type:e,selectors:[["app-camera-detection"]],viewQuery:function(r,a){r&1&&(Py(a.video,uye,5),Py(a.canvas,dye,5)),r&2&&T1(2)},inputs:{detectionTimer:[1,"detectionTimer"],drawDetection:[1,"drawDetection"],width:[1,"width"],height:[1,"height"],missingLimit:[1,"missingLimit"],enableFaceAndGender:[1,"enableFaceAndGender"],enableLandmarks:[1,"enableLandmarks"]},outputs:{detectionReady:"detectionReady",detectionChanges:"detectionChanges",firstDetection:"firstDetection",detectionFace:"detectionFace"},decls:6,vars:9,consts:[["video",""],["canvas",""],[1,"spinner"],[1,"video-container"],["autoplay","","muted","","playsinline","",3,"loadedmetadata","height","width"]],template:function(r,a){if(r&1){let s=v1();Ah(0,pye,2,0,"div",2),Lr(1,"div",3)(2,"video",4,0),w1("loadedmetadata",function(){return u1(s),d1(a.onPlay())}),Pr(),Qo(4,"canvas",null,1),Pr()}r&2&&(x1(a.loading()?0:-1),kr(),Es("display",a.loading()?"none":"flex"),kr(),Yo("height",a.height())("width",a.width()),kr(2),Es("width",a.width(),"px")("height",a.height(),"px"))},dependencies:[lD,oD],styles:["[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%}.spinner[_ngcontent-%COMP%]{display:flex;flex:1 1 auto;align-items:center;justify-content:center}.video-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1 1 auto;position:relative}.video-container[_ngcontent-%COMP%]   video[_ngcontent-%COMP%], .video-container[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0}"],changeDetection:0})}}return e})();export{cye as a,ake as b};
